{"version":3,"file":"content.js","mappings":"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","sources":["webpack://confluence-mermaid-ai-chat/./src/shared/constants.js","webpack://confluence-mermaid-ai-chat/./src/shared/api.js","webpack://confluence-mermaid-ai-chat/./src/content/content.js"],"sourcesContent":["// Constants for Mermaid AI Chat Extension\n\n// API Configuration\nconst isLocal = true; // Set to false for production\nconst rootUrl = isLocal\n  ? \"http://localhost:5001\"\n  : \"https://gendoc.thangnotes.dev\";\n\nexport const API_URLS = {\n  EDIT_DIAGRAM: `${rootUrl}/api/edit-diagram`,\n  EDIT_TEXT: `${rootUrl}/api/edit-text`,\n};\n\n// Extension Configuration\nexport const EXTENSION_CONFIG = {\n  NAME: \"Confluence Mermaid AI Chat\",\n  VERSION: \"1.0.0\",\n  DEBUG: true,\n};\n\n// Mermaid Diagram Types\nexport const MERMAID_TYPES = {\n  FLOWCHART: \"flowchart\",\n  SEQUENCE: \"sequence\",\n  CLASS: \"class\",\n  STATE: \"state\",\n  ER: \"er\",\n  JOURNEY: \"journey\",\n  GANTT: \"gantt\",\n  PIE: \"pie\",\n  GITGRAPH: \"gitgraph\",\n  MINDMAP: \"mindmap\",\n  TIMELINE: \"timeline\",\n  SANKEY: \"sankey\",\n};\n\n// UI Configuration\nexport const UI_CONFIG = {\n  POPUP_WIDTH: 400,\n  POPUP_HEIGHT: 400,\n  MAX_MESSAGE_LENGTH: 1000,\n  MAX_DIAGRAM_LENGTH: 10000,\n  ANIMATION_DURATION: 300,\n};\n\n// Error Messages\nexport const ERROR_MESSAGES = {\n  NO_DIAGRAM: \"No Mermaid diagram found\",\n  INVALID_DIAGRAM: \"Invalid diagram content\",\n  EMPTY_PROMPT: \"Please enter a prompt\",\n  PROMPT_TOO_SHORT: \"Prompt is too short (minimum 3 characters)\",\n  PROMPT_TOO_LONG: \"Prompt is too long (max 1,000 characters)\",\n  DIAGRAM_TOO_LONG: \"Diagram content is too long (max 10,000 characters)\",\n  API_ERROR: \"Failed to connect to AI service\",\n  NETWORK_ERROR: \"Network connection error\",\n  TIMEOUT_ERROR: \"Request timeout\",\n};\n\n// Success Messages\nexport const SUCCESS_MESSAGES = {\n  DIAGRAM_UPDATED: \"✅ Diagram updated successfully!\",\n  CHAT_READY: \"🤖 AI Chat is ready\",\n  EXTENSION_LOADED: \"✅ Mermaid AI Chat extension loaded\",\n};\n\n// CSS Classes\nexport const CSS_CLASSES = {\n  POPUP: \"mermaid-ai-chat-popup\",\n  HEADER: \"mermaid-ai-chat-header\",\n  BODY: \"mermaid-ai-chat-body\",\n  MESSAGES: \"mermaid-ai-chat-messages\",\n  MESSAGE: \"mermaid-ai-chat-message\",\n  INPUT: \"mermaid-ai-chat-input\",\n  SEND_BUTTON: \"mermaid-ai-chat-send\",\n  CLOSE_BUTTON: \"mermaid-ai-chat-close\",\n};\n\n// Mermaid Detection Selectors\nexport const MERMAID_SELECTORS = [\n  \".mermaid\",\n  \".mermaid-diagram\",\n  \"svg[id*='mermaid']\",\n  \"ac\\\\:structured-macro[ac\\\\:name='mermaid']\",\n  \".mermaid-wrapper\",\n  \".diagram-container\",\n  \"script[type='text/mermaid']\",\n  \"pre code.language-mermaid\",\n  \"code.mermaid\",\n];\n\n// Mermaid Keywords for Detection\nexport const MERMAID_KEYWORDS = [\n  \"graph\",\n  \"flowchart\",\n  \"sequenceDiagram\",\n  \"classDiagram\",\n  \"stateDiagram\",\n  \"erDiagram\",\n  \"journey\",\n  \"gantt\",\n  \"pie\",\n  \"gitgraph\",\n  \"mindmap\",\n  \"timeline\",\n  \"sankey\",\n];\n\n// Default Diagram Template\nexport const DEFAULT_DIAGRAM = `graph TD\n    A[Current Diagram] --> B[AI Enhanced]\n    B --> C[Updated Diagram]\n    C --> D[Better Visualization]`;\n\n// API Request Timeout (in milliseconds)\nexport const API_TIMEOUT = 30000; // 30 seconds\n\n// Debug Configuration\nexport const DEBUG_CONFIG = {\n  LOG_API_REQUESTS: true,\n  LOG_DIAGRAM_DETECTION: true,\n  LOG_USER_INTERACTIONS: true,\n  LOG_ERROR_DETAILS: true,\n};\n","// API Client for Mermaid AI Chat\nimport { API_URLS } from \"./constants.js\";\n\nexport class ApiClient {\n  /**\n   * Make HTTP request to API\n   * @param {string} url - API endpoint URL\n   * @param {Object} options - Request options\n   * @returns {Promise<Object>} API response\n   */\n  static async request(url, options = {}) {\n    const defaultOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const config = { ...defaultOptions, ...options };\n\n    try {\n      console.log(`📡 Making ${config.method} request to:`, url);\n      console.log(\"📤 Request config:\", config);\n\n      const response = await fetch(url, config);\n      \n      console.log(`📡 Response status: ${response.status} ${response.statusText}`);\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📥 Response data:\", data);\n\n      return {\n        success: true,\n        data: data,\n        status: response.status,\n      };\n    } catch (error) {\n      console.error(\"❌ API request failed:\", error);\n      return {\n        success: false,\n        error: error.message,\n        status: error.status || 0,\n      };\n    }\n  }\n\n  /**\n   * Edit Mermaid diagram using AI\n   * @param {Object} payload - Edit payload\n   * @returns {Promise<Object>} Edit response\n   */\n  static async editDiagram(payload) {\n    console.log(\"📤 Sending diagram edit request:\", payload);\n\n    // Prepare the payload for the AI API\n    const apiPayload = {\n      diagram_content: payload.diagram_content,\n      user_prompt: payload.user_prompt,\n      context: payload.context || \"mermaid_diagram_editing\",\n      // Add any additional context that might be helpful\n      diagram_type: this.detectDiagramType(payload.diagram_content),\n      timestamp: new Date().toISOString(),\n    };\n\n    return await this.request(API_URLS.EDIT_DIAGRAM, {\n      method: \"POST\",\n      body: JSON.stringify(apiPayload),\n    });\n  }\n\n  /**\n   * Detect the type of Mermaid diagram\n   * @param {string} content - Mermaid diagram content\n   * @returns {string} Diagram type\n   */\n  static detectDiagramType(content) {\n    if (!content || typeof content !== \"string\") {\n      return \"unknown\";\n    }\n\n    const trimmedContent = content.trim().toLowerCase();\n\n    const diagramTypes = {\n      graph: \"flowchart\",\n      flowchart: \"flowchart\",\n      sequencediagram: \"sequence\",\n      classdiagram: \"class\",\n      statediagram: \"state\",\n      erdiagram: \"er\",\n      journey: \"journey\",\n      gantt: \"gantt\",\n      pie: \"pie\",\n      gitgraph: \"gitgraph\",\n      mindmap: \"mindmap\",\n      timeline: \"timeline\",\n      sankey: \"sankey\",\n    };\n\n    for (const [keyword, type] of Object.entries(diagramTypes)) {\n      if (trimmedContent.startsWith(keyword)) {\n        return type;\n      }\n    }\n\n    return \"flowchart\"; // Default to flowchart\n  }\n\n  /**\n   * Validate diagram content before sending to API\n   * @param {string} content - Diagram content\n   * @returns {Object} Validation result\n   */\n  static validateDiagramContent(content) {\n    if (!content || typeof content !== \"string\") {\n      return {\n        isValid: false,\n        error: \"Diagram content is required\",\n      };\n    }\n\n    const trimmedContent = content.trim();\n    if (trimmedContent.length === 0) {\n      return {\n        isValid: false,\n        error: \"Diagram content cannot be empty\",\n      };\n    }\n\n    if (trimmedContent.length > 10000) {\n      return {\n        isValid: false,\n        error: \"Diagram content is too long (max 10,000 characters)\",\n      };\n    }\n\n    return {\n      isValid: true,\n      error: null,\n    };\n  }\n\n  /**\n   * Validate user prompt before sending to API\n   * @param {string} prompt - User prompt\n   * @returns {Object} Validation result\n   */\n  static validateUserPrompt(prompt) {\n    if (!prompt || typeof prompt !== \"string\") {\n      return {\n        isValid: false,\n        error: \"Please enter a prompt\",\n      };\n    }\n\n    const trimmedPrompt = prompt.trim();\n    if (trimmedPrompt.length === 0) {\n      return {\n        isValid: false,\n        error: \"Please enter a prompt\",\n      };\n    }\n\n    if (trimmedPrompt.length < 3) {\n      return {\n        isValid: false,\n        error: \"Prompt is too short (minimum 3 characters)\",\n      };\n    }\n\n    if (trimmedPrompt.length > 1000) {\n      return {\n        isValid: false,\n        error: \"Prompt is too long (max 1,000 characters)\",\n      };\n    }\n\n    return {\n      isValid: true,\n      error: null,\n    };\n  }\n\n  /**\n   * Enhanced error handling for API responses\n   * @param {Object} response - API response\n   * @returns {string} User-friendly error message\n   */\n  static getErrorMessage(response) {\n    if (response.success) {\n      return null;\n    }\n\n    const error = response.error || \"Unknown error occurred\";\n\n    // Map common errors to user-friendly messages\n    const errorMappings = {\n      \"HTTP 401\": \"🔐 Authentication required. Please check your API key.\",\n      \"HTTP 403\": \"🚫 Access denied. Please check your permissions.\",\n      \"HTTP 404\": \"🔍 Service not found. Please check the API endpoint.\",\n      \"HTTP 429\": \"⏰ Too many requests. Please wait a moment and try again.\",\n      \"HTTP 500\": \"🔧 Server error. Please try again later.\",\n      \"Network Error\":\n        \"🌐 Network connection error. Please check your internet connection.\",\n      Timeout: \"⏱️ Request timeout. Please try again.\",\n    };\n\n    for (const [key, message] of Object.entries(errorMappings)) {\n      if (error.includes(key)) {\n        return message;\n      }\n    }\n\n    return `❌ ${error}`;\n  }\n}\n","// Confluence Mermaid AI Chat Content Script\nimport { ApiClient } from \"../shared/api.js\";\n\nclass MermaidAIChat {\n  constructor($) {\n    this.$ = $ || window.jQuery || window.$; // jQuery instance từ AJS hoặc fallback\n    this.isPopupOpen = false;\n    this.currentMermaidContent = \"\";\n    this.currentMermaidElement = null;\n\n    // Lưu element và tọa độ được click\n    this.lastClickedElement = null;\n    this.lastClickPosition = { x: 0, y: 0 };\n\n    console.log(\"🚀 Mermaid AI Chat initializing with AJS/jQuery:\", !!this.$);\n    this.init();\n  }\n\n  async init() {\n    console.log(\"🚀 AJS: Mermaid AI Chat initializing...\");\n\n    // Check if already injected\n    if (document.getElementById(\"mermaid-ai-chat-root\")) {\n      console.log(\"🔍 AJS: Mermaid AI Chat already injected, skipping...\");\n      return;\n    }\n\n    // Create popup UI first\n    this.createPopupUI();\n\n    // Setup detection - AJS.toInit đảm bảo DOM ready\n    this.setupMermaidDetection();\n\n    // Setup page change detection để handle SPA navigation\n    this.setupConfluencePageChangeDetection();\n\n    console.log(\"✅ AJS: Mermaid AI Chat ready\");\n  }\n\n  setupMermaidDetection() {\n    console.log(\"🔍 SIMPLE: Setting up iframe click detection...\");\n\n    // Chỉ setup iframe event listeners\n    this.setupIframeEventListeners();\n\n    // Setup MutationObserver để detect iframe mới (chỉ observe DOM cha)\n    this.setupMutationObserver();\n\n    console.log(\"✅ SIMPLE: Setup completed\");\n  }\n\n  setupIframeEventListeners() {\n    console.log(\"🔍 IFRAME: Setting up iframe event listeners...\");\n    this.refreshIframeListeners();\n  }\n\n  refreshIframeListeners() {\n    // Tìm tất cả iframes hiện tại\n    const iframes = document.querySelectorAll(\"iframe\");\n    console.log(\"🔍 IFRAME REFRESH: Found\", iframes.length, \"iframes\");\n\n    if (iframes.length === 0) {\n      console.log(\"⚠️ IFRAME REFRESH: No iframes found on page\");\n      console.log(\n        \"⚠️ IFRAME REFRESH: Document ready state:\",\n        document.readyState\n      );\n\n      // Try again after a delay\n      setTimeout(() => {\n        console.log(\"🔍 IFRAME REFRESH: Retrying iframe search after delay...\");\n        const retryIframes = document.querySelectorAll(\"iframe\");\n        console.log(\n          \"🔍 IFRAME REFRESH: Retry found\",\n          retryIframes.length,\n          \"iframes\"\n        );\n        if (retryIframes.length > 0) {\n          retryIframes.forEach((iframe, index) => {\n            console.log(\n              `🔍 IFRAME REFRESH RETRY ${index}: Processing iframe:`,\n              iframe.src || iframe.id || \"no-src\"\n            );\n            this.attachIframeListeners(iframe, `refresh-retry-${index}`);\n          });\n        }\n      }, 1000);\n    } else {\n      iframes.forEach((iframe, index) => {\n        console.log(\n          `🔍 IFRAME REFRESH ${index}: Processing iframe:`,\n          iframe.src || iframe.id || \"no-src\"\n        );\n        this.attachIframeListeners(iframe, `refresh-${index}`);\n      });\n    }\n  }\n\n  attachIframeListeners(iframe, index) {\n    try {\n      // Kiểm tra nếu iframe đã có listener để tránh duplicate\n      if (iframe.dataset.mermaidListenerAttached === \"true\") {\n        console.log(\n          `⚠️ IFRAME ${index}: Listener already attached, skipping...`\n        );\n        return;\n      }\n\n      // Đánh dấu iframe đã có listener\n      iframe.dataset.mermaidListenerAttached = \"true\";\n\n      // Đợi iframe load xong\n      const loadHandler = () => {\n        console.log(\n          `🔍 IFRAME ${index}: Iframe loaded, attaching listeners...`\n        );\n        try {\n          const iframeDoc =\n            iframe.contentDocument || iframe.contentWindow.document;\n\n          if (!iframeDoc) {\n            console.log(\n              `⚠️ IFRAME ${index}: Cannot access iframe document (cross-origin?)`\n            );\n            return;\n          }\n\n          console.log(\n            `✅ IFRAME ${index}: Iframe document accessible, adding click listeners...`\n          );\n\n          // Click handler: Lưu element và tọa độ nếu là ảnh\n          const clickHandler = (event) => {\n            console.log(`🖱️ IFRAME ${index} CLICK: Element clicked:`, {\n              tag: event.target.tagName,\n              classes: event.target.className,\n              id: event.target.id,\n              src: event.target.src || \"N/A\",\n              alt: event.target.alt || \"N/A\",\n              element: event.target,\n            });\n\n            // Nếu click vào ảnh (IMG hoặc SVG) thì lưu lại\n            if (\n              event.target.tagName === \"IMG\" ||\n              event.target.tagName === \"SVG\"\n            ) {\n              console.log(\n                `🎯 SAVING: Image clicked - saving element and position`\n              );\n\n              // Lưu element\n              this.lastClickedElement = event.target;\n\n              // Lưu tọa độ click\n              this.lastClickPosition = {\n                x: event.clientX,\n                y: event.clientY,\n              };\n\n              console.log(`🎯 SAVED: Element:`, this.lastClickedElement);\n              console.log(`🎯 SAVED: Position:`, this.lastClickPosition);\n            }\n          };\n\n          // Remove existing listener nếu có\n          if (iframeDoc.mermaidClickHandler) {\n            iframeDoc.removeEventListener(\n              \"click\",\n              iframeDoc.mermaidClickHandler,\n              true\n            );\n          }\n\n          // Add new listener\n          const boundClickHandler = clickHandler.bind(this);\n          iframeDoc.addEventListener(\"click\", boundClickHandler, true);\n\n          // Store reference để có thể remove sau này\n          iframeDoc.mermaidClickHandler = boundClickHandler;\n        } catch (e) {\n          console.log(\n            `❌ IFRAME ${index}: Error accessing iframe content:`,\n            e.message\n          );\n        }\n      };\n\n      // Remove existing load listener nếu có\n      if (iframe.mermaidLoadHandler) {\n        iframe.removeEventListener(\"load\", iframe.mermaidLoadHandler);\n      }\n\n      // Add load listener\n      iframe.addEventListener(\"load\", loadHandler);\n      iframe.mermaidLoadHandler = loadHandler;\n\n      // Nếu iframe đã load rồi thì gọi handler ngay\n      if (\n        iframe.contentDocument &&\n        iframe.contentDocument.readyState === \"complete\"\n      ) {\n        loadHandler();\n      }\n    } catch (e) {\n      console.log(\n        `❌ IFRAME ${index}: Error setting up iframe listener:`,\n        e.message\n      );\n    }\n  }\n\n  setupMutationObserver() {\n    console.log(\n      \"🔍 MUTATION: Setting up observer to track ALL DOM changes in parent...\"\n    );\n\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation, mutationIndex) => {\n        console.log(`🔍 MUTATION ${mutationIndex}: Type: ${mutation.type}`);\n        if (mutation.type === \"childList\") {\n          // Log ADDED nodes\n          if (mutation.addedNodes.length > 0) {\n            console.log(\n              `➕ MUTATION ${mutationIndex}: ${mutation.addedNodes.length} nodes ADDED:`\n            );\n            mutation.addedNodes.forEach((node, nodeIndex) => {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                console.log(`➕ Added ${nodeIndex}: ${node.tagName}`, {\n                  tag: node.tagName,\n                  classes: node.className || \"N/A\",\n                  id: node.id || \"N/A\",\n                  textContent: node.textContent?.substring(0, 50) || \"N/A\",\n                  element: node,\n                });\n\n                // Nếu là iframe thì attach listeners\n                if (node.tagName === \"IFRAME\") {\n                  console.log(\n                    \"🎯 MUTATION: IFRAME detected, attaching listeners...\"\n                  );\n                  this.attachIframeListeners(node, \"new\");\n                }\n\n                this.injectAIButton();\n              } else if (node.nodeType === Node.TEXT_NODE) {\n                console.log(`➕ Added ${nodeIndex}: TEXT_NODE`, {\n                  content: node.textContent?.substring(0, 50) || \"N/A\",\n                });\n              }\n            });\n          }\n        }\n      });\n    });\n\n    // Observe DOM cha với tất cả types\n    observer.observe(document.body, {\n      childList: true,\n      subtree: false,\n    });\n  }\n\n  setupConfluencePageChangeDetection() {\n    console.log(\n      \"🔍 PAGE CHANGE: Setting up Confluence page change detection...\"\n    );\n\n    // Method 1: Listen for Confluence-specific events\n    if (window.AJS && AJS.bind) {\n      // Editor events\n      AJS.bind(\"init.rte\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Confluence RTE initialized - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n\n      AJS.bind(\"rte-ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Confluence RTE ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n\n      // Page events\n      AJS.bind(\"page.edit.ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Page edit ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1500);\n      });\n\n      AJS.bind(\"page.view.ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Page view ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n    }\n\n    // Method 2: Watch for URL changes (SPA navigation)\n    let currentUrl = window.location.href;\n    const checkUrlChange = () => {\n      if (window.location.href !== currentUrl) {\n        console.log(\n          \"🔄 PAGE CHANGE: URL changed from\",\n          currentUrl,\n          \"to\",\n          window.location.href\n        );\n        currentUrl = window.location.href;\n\n        // Re-setup after URL change\n        setTimeout(() => {\n          console.log(\n            \"🔄 PAGE CHANGE: Re-setting up iframe listeners after URL change\"\n          );\n          this.setupIframeEventListeners();\n        }, 2000);\n      }\n    };\n\n    setInterval(checkUrlChange, 1000);\n\n    console.log(\n      \"✅ PAGE CHANGE: Confluence page change detection setup completed\"\n    );\n  }\n\n  injectAIButton() {\n    var panel = document.getElementById(\"property-panel\");\n    if (!panel) return;\n\n    var buttonContainer = panel.querySelector(\".panel-buttons\");\n    if (!buttonContainer) return;\n\n    // Kiểm tra nếu nút AI đã có\n    if (\n      buttonContainer.querySelector(\n        \".macro-placeholder-property-panel-ai-button\"\n      )\n    )\n      return;\n\n    console.log(\"✨ Thêm nút AI vào property panel...\");\n\n    // Tạo thẻ <a> mới\n    var aiButton = document.createElement(\"a\");\n    aiButton.href = \"#\";\n    aiButton.className =\n      \"aui-button macro-placeholder-property-panel-ai-button\";\n    aiButton.setAttribute(\"tabindex\", \"0\");\n    aiButton.setAttribute(\"role\", \"button\");\n    aiButton.setAttribute(\"aria-label\", \"AI\");\n    aiButton.style.marginRight = \"4px\";\n\n    // Icon + Text\n    aiButton.innerHTML = `<span class=\"icon\"></span><span class=\"panel-button-text\">AI</span>`;\n\n    // Thêm sự kiện click\n    aiButton.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      console.log(\"🤖 AI Button clicked - checking saved element...\");\n\n      // DEBUG: Kiểm tra context và values\n      console.log(\"🔍 DEBUG AI BUTTON: this:\", this);\n      console.log(\n        \"🔍 DEBUG AI BUTTON: this.lastClickedElement:\",\n        this.lastClickedElement\n      );\n      console.log(\n        \"🔍 DEBUG AI BUTTON: this.lastClickPosition:\",\n        this.lastClickPosition\n      );\n      console.log(\n        \"🔍 DEBUG AI BUTTON: typeof this.lastClickedElement:\",\n        typeof this.lastClickedElement\n      );\n      console.log(\n        \"🔍 DEBUG AI BUTTON: Boolean check:\",\n        !!(this.lastClickedElement && this.lastClickPosition)\n      );\n\n      if (this.lastClickedElement && this.lastClickPosition) {\n        console.log(\n          \"🤖 Found saved element - showing chat popup at position:\",\n          this.lastClickPosition\n        );\n        console.log(\"🤖 Saved element:\", this.lastClickedElement);\n\n        // Gọi showChatPopup với tọa độ đã lưu\n        this.showChatPopup(this.lastClickPosition.x, this.lastClickPosition.y);\n      } else {\n        console.log(\n          \"⚠️ No saved element found - please click on an image first\"\n        );\n        console.log(\n          \"⚠️ DEBUG: lastClickedElement is:\",\n          this.lastClickedElement\n        );\n        console.log(\"⚠️ DEBUG: lastClickPosition is:\", this.lastClickPosition);\n        alert(\"⚠️ Vui lòng click vào một hình ảnh trước khi sử dụng AI Chat!\");\n      }\n    });\n\n    // Chèn vào trước nút Remove\n    var removeButton = buttonContainer.querySelector(\n      \".macro-placeholder-property-panel-remove-button\"\n    );\n    if (removeButton) {\n      buttonContainer.insertBefore(aiButton, removeButton);\n    } else {\n      buttonContainer.appendChild(aiButton);\n    }\n\n    console.log(\"✅ Đã chèn nút AI thành công.\");\n  }\n\n  createPopupUI() {\n    const root = document.createElement(\"div\");\n    root.id = \"mermaid-ai-chat-root\";\n    root.innerHTML = `\n      <div id=\"mermaid-ai-chat-popup\" class=\"mermaid-ai-chat-popup\" style=\"display: none;\">\n        <div class=\"mermaid-ai-chat-header\">\n          <h3>🤖 Chat with AI about this Mermaid diagram</h3>\n          <button class=\"mermaid-ai-chat-close\">&times;</button>\n        </div>\n        <div class=\"mermaid-ai-chat-body\">\n          <div class=\"mermaid-ai-chat-messages\" id=\"mermaid-ai-chat-messages\">\n            <div class=\"mermaid-ai-chat-message system\">\n              <div class=\"message-content\">\n                <p>👋 Hi! I can help you modify this Mermaid diagram. What would you like to change?</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"mermaid-ai-chat-input-container\">\n            <textarea\n              id=\"mermaid-ai-chat-input\"\n              class=\"mermaid-ai-chat-input\"\n              placeholder=\"Describe how you want to modify the diagram...\"\n              rows=\"3\"\n            ></textarea>\n            <button id=\"mermaid-ai-chat-send\" class=\"mermaid-ai-chat-send\">\n              📤 Send\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n\n    document.body.appendChild(root);\n    this.bindPopupEvents();\n  }\n\n  bindPopupEvents() {\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    const header = popup.querySelector(\".mermaid-ai-chat-header\");\n    const closeBtn = popup.querySelector(\".mermaid-ai-chat-close\");\n    const sendBtn = document.getElementById(\"mermaid-ai-chat-send\");\n    const input = document.getElementById(\"mermaid-ai-chat-input\");\n\n    // Make popup draggable\n    this.makeDraggable(popup, header);\n\n    // Close popup\n    closeBtn.addEventListener(\"click\", () => {\n      this.hideChatPopup();\n    });\n\n    // Send message\n    sendBtn.addEventListener(\"click\", () => {\n      this.sendMessage();\n    });\n\n    // Send on Enter (Ctrl+Enter for new line)\n    input.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" && !e.ctrlKey && !e.shiftKey) {\n        e.preventDefault();\n        this.sendMessage();\n      }\n    });\n\n    // Click outside to close - with proper event handling\n    setTimeout(() => {\n      const handleClickOutside = (e) => {\n        // Skip if popup is not open\n        if (!this.isPopupOpen) return;\n\n        // Skip if clicking on AI button (to prevent immediate close)\n        if (e.target.closest(\".macro-placeholder-property-panel-ai-button\")) {\n          return;\n        }\n\n        // Skip if clicking inside popup\n        if (popup.contains(e.target)) {\n          return;\n        }\n\n        console.log(\"🖱️ Click outside popup detected, closing...\");\n        this.hideChatPopup();\n      };\n\n      document.addEventListener(\"click\", handleClickOutside, true);\n    }, 300); // Delay to prevent immediate close after opening\n  }\n\n  makeDraggable(popup, dragHandle) {\n    let isDragging = false;\n    let dragStartX = 0;\n    let dragStartY = 0;\n    let popupStartX = 0;\n    let popupStartY = 0;\n\n    console.log(\"🎯 DRAG: Setting up draggable popup...\");\n\n    // Style the drag handle\n    dragHandle.style.cursor = \"move\";\n    dragHandle.style.userSelect = \"none\";\n\n    const startDrag = (e) => {\n      // Don't drag if clicking on close button\n      if (e.target.classList.contains(\"mermaid-ai-chat-close\")) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation(); // Prevent event bubbling\n\n      isDragging = true;\n\n      // Get mouse position\n      dragStartX = e.clientX;\n      dragStartY = e.clientY;\n\n      // Get popup current position (from style, not getBoundingClientRect)\n      popupStartX = parseInt(popup.style.left) || 0;\n      popupStartY = parseInt(popup.style.top) || 0;\n\n      console.log(\"🎯 DRAG: Started\", {\n        mouseX: dragStartX,\n        mouseY: dragStartY,\n        popupX: popupStartX,\n        popupY: popupStartY,\n      });\n\n      // Add global event listeners\n      document.addEventListener(\"mousemove\", onDrag, true);\n      document.addEventListener(\"mouseup\", stopDrag, true);\n\n      // Prevent text selection during drag\n      document.body.style.userSelect = \"none\";\n    };\n\n    const onDrag = (e) => {\n      if (!isDragging) return;\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      // Calculate mouse movement\n      const deltaX = e.clientX - dragStartX;\n      const deltaY = e.clientY - dragStartY;\n\n      // Calculate new popup position\n      let newX = popupStartX + deltaX;\n      let newY = popupStartY + deltaY;\n\n      // Constrain to viewport (with some padding)\n      const padding = 10;\n      const maxX = window.innerWidth - 400 - padding; // 400 is popup width\n      const maxY = window.innerHeight - 300 - padding; // estimated popup height\n\n      newX = Math.max(padding, Math.min(newX, maxX));\n      newY = Math.max(padding, Math.min(newY, maxY));\n\n      // Apply position\n      popup.style.left = newX + \"px\";\n      popup.style.top = newY + \"px\";\n    };\n\n    const stopDrag = (e) => {\n      if (!isDragging) return;\n\n      console.log(\"🎯 DRAG: Stopped\");\n      isDragging = false;\n\n      // Remove global event listeners\n      document.removeEventListener(\"mousemove\", onDrag, true);\n      document.removeEventListener(\"mouseup\", stopDrag, true);\n\n      // Restore text selection\n      document.body.style.userSelect = \"\";\n\n      e.stopPropagation(); // Prevent click outside from firing\n    };\n\n    // Attach drag to header\n    dragHandle.addEventListener(\"mousedown\", startDrag);\n\n    console.log(\"✅ DRAG: Setup completed\");\n  }\n\n  showChatPopup(x, y) {\n    console.log(\"🎉 STEP 8: showChatPopup called with coordinates:\", { x, y });\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    console.log(\"🎉 STEP 8.1: Found popup element:\", popup);\n\n    if (!popup) {\n      console.error(\"❌ STEP 8.1: Popup element not found!\");\n      return;\n    }\n\n    const leftPos = Math.min(x, window.innerWidth - 400);\n    const topPos = Math.min(y, window.innerHeight - 300);\n\n    console.log(\"🎉 STEP 8.2: Setting popup position:\", { leftPos, topPos });\n    console.log(\"🎉 STEP 8.2: Window dimensions:\", {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n\n    popup.style.display = \"block\";\n    popup.style.left = leftPos + \"px\";\n    popup.style.top = topPos + \"px\";\n\n    console.log(\"🎉 STEP 8.3: Popup styles applied:\", {\n      display: popup.style.display,\n      left: popup.style.left,\n      top: popup.style.top,\n    });\n\n    this.isPopupOpen = true;\n    console.log(\"🎉 STEP 8.4: isPopupOpen set to:\", this.isPopupOpen);\n\n    // Focus input\n    setTimeout(() => {\n      const input = document.getElementById(\"mermaid-ai-chat-input\");\n      console.log(\"🎉 STEP 8.5: Focusing input element:\", input);\n      if (input) {\n        input.focus();\n        console.log(\"✅ STEP 8.5: Input focused successfully\");\n      } else {\n        console.error(\"❌ STEP 8.5: Input element not found!\");\n      }\n    }, 100);\n\n    console.log(\"✅ STEP 8: showChatPopup completed\");\n  }\n\n  hideChatPopup() {\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    popup.style.display = \"none\";\n    this.isPopupOpen = false;\n\n    // Clear messages except system message\n    const messagesContainer = document.getElementById(\n      \"mermaid-ai-chat-messages\"\n    );\n    const systemMessage = messagesContainer.querySelector(\".system\");\n    messagesContainer.innerHTML = \"\";\n    messagesContainer.appendChild(systemMessage);\n\n    // Clear input\n    document.getElementById(\"mermaid-ai-chat-input\").value = \"\";\n\n    console.log(\"✅ Chat popup closed\");\n  }\n\n  async sendMessage() {\n    const input = document.getElementById(\"mermaid-ai-chat-input\");\n    const message = input.value.trim();\n\n    // Validate user prompt\n    const promptValidation = ApiClient.validateUserPrompt(message);\n    if (!promptValidation.isValid) {\n      this.addMessage(\"assistant\", `⚠️ ${promptValidation.error}`);\n      return;\n    }\n\n    // Validate diagram content\n    const diagramValidation = ApiClient.validateDiagramContent(\n      this.currentMermaidContent\n    );\n    if (!diagramValidation.isValid) {\n      this.addMessage(\"assistant\", `⚠️ ${diagramValidation.error}`);\n      return;\n    }\n\n    // Add user message to chat\n    this.addMessage(\"user\", message);\n\n    // Clear input\n    input.value = \"\";\n\n    // Show loading\n    const loadingId = this.addMessage(\"assistant\", \"🤔 Thinking...\");\n\n    try {\n      // Call AI API\n      const response = await this.callAI(message);\n\n      // Remove loading message\n      this.removeMessage(loadingId);\n\n      // Add AI response\n      this.addMessage(\"assistant\", response);\n    } catch (error) {\n      console.error(\"❌ AI API error:\", error);\n\n      // Remove loading message\n      this.removeMessage(loadingId);\n\n      // Get user-friendly error message\n      const errorMessage = ApiClient.getErrorMessage({\n        success: false,\n        error: error.message,\n      });\n      this.addMessage(\"assistant\", errorMessage);\n    }\n  }\n\n  addMessage(type, content) {\n    const messagesContainer = document.getElementById(\n      \"mermaid-ai-chat-messages\"\n    );\n    const messageId = \"msg-\" + Date.now();\n\n    const messageDiv = document.createElement(\"div\");\n    messageDiv.className = `mermaid-ai-chat-message ${type}`;\n    messageDiv.id = messageId;\n    messageDiv.innerHTML = `\n      <div class=\"message-content\">\n        <p>${content}</p>\n      </div>\n    `;\n\n    messagesContainer.appendChild(messageDiv);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n    return messageId;\n  }\n\n  removeMessage(messageId) {\n    const message = document.getElementById(messageId);\n    if (message) {\n      message.remove();\n    }\n  }\n\n  async callAI(userPrompt) {\n    // Prepare payload similar to the original extension\n    const payload = {\n      diagram_content: this.currentMermaidContent,\n      user_prompt: userPrompt,\n      context: \"mermaid_diagram_editing\",\n    };\n\n    console.log(\"📤 Sending AI request:\", payload);\n\n    // Use the API client from shared module\n    const response = await ApiClient.editDiagram(payload);\n\n    if (response.success) {\n      return (\n        response.data.result ||\n        response.data.response ||\n        \"✅ Diagram updated successfully!\"\n      );\n    } else {\n      throw new Error(response.error || \"Unknown error occurred\");\n    }\n  }\n}\n\n// Method 1: AJS.toInit (preferred for Confluence)\nif (window.AJS && AJS.toInit) {\n  console.log(\"🚀 AJS: Using AJS.toInit for initialization...\");\n  AJS.toInit(function ($) {\n    console.log(\"🚀 AJS: AJS.toInit callback fired with jQuery:\", !!$);\n    new MermaidAIChat($);\n  });\n}\n// Method 2: jQuery ready (if AJS not available but jQuery is)\nelse if (window.jQuery) {\n  console.log(\"🚀 JQUERY: Using jQuery ready for initialization...\");\n  jQuery(document).ready(function ($) {\n    console.log(\"🚀 JQUERY: jQuery ready fired\");\n    new MermaidAIChat($);\n  });\n}\n// Method 3: Native fallback\nelse {\n  console.log(\"🚀 NATIVE: Using native DOMContentLoaded fallback...\");\n  if (document.readyState === \"loading\") {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      console.log(\"🚀 NATIVE: DOMContentLoaded fired\");\n      new MermaidAIChat(null);\n    });\n  } else {\n    console.log(\"🚀 NATIVE: Document already loaded\");\n    new MermaidAIChat(null);\n  }\n}\n"],"names":["rootUrl","API_URLS","EDIT_DIAGRAM","EDIT_TEXT","ApiClient","request","url","options","config","method","headers","console","log","response","fetch","status","statusText","ok","Error","data","json","success","error","message","editDiagram","payload","apiPayload","diagram_content","user_prompt","context","diagram_type","this","detectDiagramType","timestamp","Date","toISOString","body","JSON","stringify","content","trimmedContent","trim","toLowerCase","diagramTypes","graph","flowchart","sequencediagram","classdiagram","statediagram","erdiagram","journey","gantt","pie","gitgraph","mindmap","timeline","sankey","keyword","type","Object","entries","startsWith","validateDiagramContent","isValid","length","validateUserPrompt","prompt","trimmedPrompt","getErrorMessage","errorMappings","Timeout","key","includes","MermaidAIChat","constructor","$","window","jQuery","isPopupOpen","currentMermaidContent","currentMermaidElement","lastClickedElement","lastClickPosition","x","y","init","document","getElementById","createPopupUI","setupMermaidDetection","setupConfluencePageChangeDetection","setupIframeEventListeners","setupMutationObserver","refreshIframeListeners","iframes","querySelectorAll","readyState","setTimeout","retryIframes","forEach","iframe","index","src","id","attachIframeListeners","dataset","mermaidListenerAttached","loadHandler","iframeDoc","contentDocument","contentWindow","clickHandler","event","tag","target","tagName","classes","className","alt","element","clientX","clientY","mermaidClickHandler","removeEventListener","boundClickHandler","bind","addEventListener","e","mermaidLoadHandler","MutationObserver","mutations","mutation","mutationIndex","addedNodes","node","nodeIndex","_node$textContent","nodeType","Node","ELEMENT_NODE","textContent","substring","injectAIButton","TEXT_NODE","_node$textContent2","observe","childList","subtree","AJS","currentUrl","location","href","setInterval","checkUrlChange","panel","buttonContainer","querySelector","aiButton","createElement","setAttribute","style","marginRight","innerHTML","preventDefault","showChatPopup","alert","removeButton","insertBefore","appendChild","root","bindPopupEvents","popup","header","closeBtn","sendBtn","input","makeDraggable","hideChatPopup","sendMessage","ctrlKey","shiftKey","closest","contains","dragHandle","isDragging","dragStartX","dragStartY","popupStartX","popupStartY","cursor","userSelect","onDrag","stopPropagation","deltaX","deltaY","newX","newY","maxX","innerWidth","maxY","innerHeight","Math","max","min","left","top","stopDrag","classList","parseInt","mouseX","mouseY","popupX","popupY","leftPos","topPos","width","height","display","focus","messagesContainer","systemMessage","value","promptValidation","addMessage","diagramValidation","loadingId","callAI","removeMessage","errorMessage","messageId","now","messageDiv","scrollTop","scrollHeight","remove","userPrompt","result","toInit","ready"],"sourceRoot":""}