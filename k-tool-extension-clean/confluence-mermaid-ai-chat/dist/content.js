const e="http://localhost:5001",t={EDIT_DIAGRAM:`${e}/api/edit-diagram`,EDIT_TEXT:`${e}/api/edit-text`};class n{static async request(e,t={}){const n={method:"GET",headers:{"Content-Type":"application/json"},...t};try{console.log(`üì° Making ${n.method} request to:`,e),console.log("üì§ Request config:",n);const t=await fetch(e,n);if(console.log(`üì° Response status: ${t.status} ${t.statusText}`),!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`);const o=await t.json();return console.log("üì• Response data:",o),{success:!0,data:o,status:t.status}}catch(e){return console.error("‚ùå API request failed:",e),{success:!1,error:e.message,status:e.status||0}}}static async editDiagram(e){console.log("üì§ Sending diagram edit request:",e);const n={diagram_content:e.diagram_content,user_prompt:e.user_prompt,context:e.context||"mermaid_diagram_editing",diagram_type:this.detectDiagramType(e.diagram_content),timestamp:(new Date).toISOString()};return await this.request(t.EDIT_DIAGRAM,{method:"POST",body:JSON.stringify(n)})}static detectDiagramType(e){if(!e||"string"!=typeof e)return"unknown";const t=e.trim().toLowerCase(),n={graph:"flowchart",flowchart:"flowchart",sequencediagram:"sequence",classdiagram:"class",statediagram:"state",erdiagram:"er",journey:"journey",gantt:"gantt",pie:"pie",gitgraph:"gitgraph",mindmap:"mindmap",timeline:"timeline",sankey:"sankey"};for(const[e,o]of Object.entries(n))if(t.startsWith(e))return o;return"flowchart"}static validateDiagramContent(e){if(!e||"string"!=typeof e)return{isValid:!1,error:"Diagram content is required"};const t=e.trim();return 0===t.length?{isValid:!1,error:"Diagram content cannot be empty"}:t.length>1e4?{isValid:!1,error:"Diagram content is too long (max 10,000 characters)"}:{isValid:!0,error:null}}static validateUserPrompt(e){if(!e||"string"!=typeof e)return{isValid:!1,error:"Please enter a prompt"};const t=e.trim();return 0===t.length?{isValid:!1,error:"Please enter a prompt"}:t.length<3?{isValid:!1,error:"Prompt is too short (minimum 3 characters)"}:t.length>1e3?{isValid:!1,error:"Prompt is too long (max 1,000 characters)"}:{isValid:!0,error:null}}static getErrorMessage(e){if(e.success)return null;const t=e.error||"Unknown error occurred",n={"HTTP 401":"üîê Authentication required. Please check your API key.","HTTP 403":"üö´ Access denied. Please check your permissions.","HTTP 404":"üîç Service not found. Please check the API endpoint.","HTTP 429":"‚è∞ Too many requests. Please wait a moment and try again.","HTTP 500":"üîß Server error. Please try again later.","Network Error":"üåê Network connection error. Please check your internet connection.",Timeout:"‚è±Ô∏è Request timeout. Please try again."};for(const[e,o]of Object.entries(n))if(t.includes(e))return o;return`‚ùå ${t}`}}class o{constructor(e){this.$=e||window.jQuery||window.$,this.isPopupOpen=!1,this.currentMermaidContent="",this.currentMermaidElement=null,this.lastClickedElement=null,this.lastClickPosition={x:0,y:0},console.log("üöÄ Mermaid AI Chat initializing with AJS/jQuery:",!!this.$),this.init()}async init(){console.log("üöÄ AJS: Mermaid AI Chat initializing..."),document.getElementById("mermaid-ai-chat-root")?console.log("üîç AJS: Mermaid AI Chat already injected, skipping..."):(this.createPopupUI(),this.setupMermaidDetection(),this.setupConfluencePageChangeDetection(),console.log("‚úÖ AJS: Mermaid AI Chat ready"))}setupMermaidDetection(){console.log("üîç SIMPLE: Setting up iframe click detection..."),this.setupIframeEventListeners(),this.setupMutationObserver(),console.log("‚úÖ SIMPLE: Setup completed")}setupIframeEventListeners(){console.log("üîç IFRAME: Setting up iframe event listeners..."),this.refreshIframeListeners()}refreshIframeListeners(){const e=document.querySelectorAll("iframe");console.log("üîç IFRAME REFRESH: Found",e.length,"iframes"),0===e.length?(console.log("‚ö†Ô∏è IFRAME REFRESH: No iframes found on page"),console.log("‚ö†Ô∏è IFRAME REFRESH: Document ready state:",document.readyState),setTimeout(()=>{console.log("üîç IFRAME REFRESH: Retrying iframe search after delay...");const e=document.querySelectorAll("iframe");console.log("üîç IFRAME REFRESH: Retry found",e.length,"iframes"),e.length>0&&e.forEach((e,t)=>{console.log(`üîç IFRAME REFRESH RETRY ${t}: Processing iframe:`,e.src||e.id||"no-src"),this.attachIframeListeners(e,`refresh-retry-${t}`)})},1e3)):e.forEach((e,t)=>{console.log(`üîç IFRAME REFRESH ${t}: Processing iframe:`,e.src||e.id||"no-src"),this.attachIframeListeners(e,`refresh-${t}`)})}attachIframeListeners(e,t){try{if("true"===e.dataset.mermaidListenerAttached)return void console.log(`‚ö†Ô∏è IFRAME ${t}: Listener already attached, skipping...`);e.dataset.mermaidListenerAttached="true";const n=()=>{console.log(`üîç IFRAME ${t}: Iframe loaded, attaching listeners...`);try{const n=e.contentDocument||e.contentWindow.document;if(!n)return void console.log(`‚ö†Ô∏è IFRAME ${t}: Cannot access iframe document (cross-origin?)`);console.log(`‚úÖ IFRAME ${t}: Iframe document accessible, adding click listeners...`);const o=e=>{console.log(`üñ±Ô∏è IFRAME ${t} CLICK: Element clicked:`,{tag:e.target.tagName,classes:e.target.className,id:e.target.id,src:e.target.src||"N/A",alt:e.target.alt||"N/A",element:e.target}),"IMG"!==e.target.tagName&&"SVG"!==e.target.tagName||(console.log("üéØ SAVING: Image clicked - saving element and position"),this.lastClickedElement=e.target,this.lastClickPosition={x:e.clientX,y:e.clientY},console.log("üéØ SAVED: Element:",this.lastClickedElement),console.log("üéØ SAVED: Position:",this.lastClickPosition))};n.mermaidClickHandler&&n.removeEventListener("click",n.mermaidClickHandler,!0);const s=o.bind(this);n.addEventListener("click",s,!0),n.mermaidClickHandler=s}catch(e){console.log(`‚ùå IFRAME ${t}: Error accessing iframe content:`,e.message)}};e.mermaidLoadHandler&&e.removeEventListener("load",e.mermaidLoadHandler),e.addEventListener("load",n),e.mermaidLoadHandler=n,e.contentDocument&&"complete"===e.contentDocument.readyState&&n()}catch(e){console.log(`‚ùå IFRAME ${t}: Error setting up iframe listener:`,e.message)}}setupMutationObserver(){console.log("üîç MUTATION: Setting up observer to track ALL DOM changes in parent..."),new MutationObserver(e=>{e.forEach((e,t)=>{console.log(`üîç MUTATION ${t}: Type: ${e.type}`),"childList"===e.type&&e.addedNodes.length>0&&(console.log(`‚ûï MUTATION ${t}: ${e.addedNodes.length} nodes ADDED:`),e.addedNodes.forEach((e,t)=>{var n;if(e.nodeType===Node.ELEMENT_NODE)console.log(`‚ûï Added ${t}: ${e.tagName}`,{tag:e.tagName,classes:e.className||"N/A",id:e.id||"N/A",textContent:(null===(n=e.textContent)||void 0===n?void 0:n.substring(0,50))||"N/A",element:e}),"IFRAME"===e.tagName&&(console.log("üéØ MUTATION: IFRAME detected, attaching listeners..."),this.attachIframeListeners(e,"new")),this.injectAIButton();else if(e.nodeType===Node.TEXT_NODE){var o;console.log(`‚ûï Added ${t}: TEXT_NODE`,{content:(null===(o=e.textContent)||void 0===o?void 0:o.substring(0,50))||"N/A"})}}))})}).observe(document.body,{childList:!0,subtree:!1})}setupConfluencePageChangeDetection(){console.log("üîç PAGE CHANGE: Setting up Confluence page change detection..."),window.AJS&&AJS.bind&&(AJS.bind("init.rte",()=>{console.log("üîÑ PAGE CHANGE: Confluence RTE initialized - re-setting up iframe listeners"),setTimeout(()=>this.setupIframeEventListeners(),1e3)}),AJS.bind("rte-ready",()=>{console.log("üîÑ PAGE CHANGE: Confluence RTE ready - re-setting up iframe listeners"),setTimeout(()=>this.setupIframeEventListeners(),1e3)}),AJS.bind("page.edit.ready",()=>{console.log("üîÑ PAGE CHANGE: Page edit ready - re-setting up iframe listeners"),setTimeout(()=>this.setupIframeEventListeners(),1500)}),AJS.bind("page.view.ready",()=>{console.log("üîÑ PAGE CHANGE: Page view ready - re-setting up iframe listeners"),setTimeout(()=>this.setupIframeEventListeners(),1e3)}));let e=window.location.href;setInterval(()=>{window.location.href!==e&&(console.log("üîÑ PAGE CHANGE: URL changed from",e,"to",window.location.href),e=window.location.href,setTimeout(()=>{console.log("üîÑ PAGE CHANGE: Re-setting up iframe listeners after URL change"),this.setupIframeEventListeners()},2e3))},1e3),console.log("‚úÖ PAGE CHANGE: Confluence page change detection setup completed")}injectAIButton(){var e=document.getElementById("property-panel");if(e){var t=e.querySelector(".panel-buttons");if(t&&!t.querySelector(".macro-placeholder-property-panel-ai-button")){console.log("‚ú® Th√™m n√∫t AI v√†o property panel...");var n=document.createElement("a");n.href="#",n.className="aui-button macro-placeholder-property-panel-ai-button",n.setAttribute("tabindex","0"),n.setAttribute("role","button"),n.setAttribute("aria-label","AI"),n.style.marginRight="4px",n.innerHTML='<span class="icon"></span><span class="panel-button-text">AI</span>',n.addEventListener("click",e=>{e.preventDefault(),console.log("ü§ñ AI Button clicked - checking saved element..."),console.log("üîç DEBUG AI BUTTON: this:",this),console.log("üîç DEBUG AI BUTTON: this.lastClickedElement:",this.lastClickedElement),console.log("üîç DEBUG AI BUTTON: this.lastClickPosition:",this.lastClickPosition),console.log("üîç DEBUG AI BUTTON: typeof this.lastClickedElement:",typeof this.lastClickedElement),console.log("üîç DEBUG AI BUTTON: Boolean check:",!(!this.lastClickedElement||!this.lastClickPosition)),this.lastClickedElement&&this.lastClickPosition?(console.log("ü§ñ Found saved element - showing chat popup at position:",this.lastClickPosition),console.log("ü§ñ Saved element:",this.lastClickedElement),this.showChatPopup(this.lastClickPosition.x,this.lastClickPosition.y)):(console.log("‚ö†Ô∏è No saved element found - please click on an image first"),console.log("‚ö†Ô∏è DEBUG: lastClickedElement is:",this.lastClickedElement),console.log("‚ö†Ô∏è DEBUG: lastClickPosition is:",this.lastClickPosition),alert("‚ö†Ô∏è Vui l√≤ng click v√†o m·ªôt h√¨nh ·∫£nh tr∆∞·ªõc khi s·ª≠ d·ª•ng AI Chat!"))});var o=t.querySelector(".macro-placeholder-property-panel-remove-button");o?t.insertBefore(n,o):t.appendChild(n),console.log("‚úÖ ƒê√£ ch√®n n√∫t AI th√†nh c√¥ng.")}}}createPopupUI(){const e=document.createElement("div");e.id="mermaid-ai-chat-root",e.innerHTML='\n      <div id="mermaid-ai-chat-popup" class="mermaid-ai-chat-popup" style="display: none;">\n        <div class="mermaid-ai-chat-header">\n          <h3>ü§ñ Chat with AI about this Mermaid diagram</h3>\n          <button class="mermaid-ai-chat-close">&times;</button>\n        </div>\n        <div class="mermaid-ai-chat-body">\n          <div class="mermaid-ai-chat-messages" id="mermaid-ai-chat-messages">\n            <div class="mermaid-ai-chat-message system">\n              <div class="message-content">\n                <p>üëã Hi! I can help you modify this Mermaid diagram. What would you like to change?</p>\n              </div>\n            </div>\n          </div>\n          <div class="mermaid-ai-chat-input-container">\n            <textarea\n              id="mermaid-ai-chat-input"\n              class="mermaid-ai-chat-input"\n              placeholder="Describe how you want to modify the diagram..."\n              rows="3"\n            ></textarea>\n            <button id="mermaid-ai-chat-send" class="mermaid-ai-chat-send">\n              üì§ Send\n            </button>\n          </div>\n        </div>\n      </div>\n    ',document.body.appendChild(e),this.bindPopupEvents()}bindPopupEvents(){const e=document.getElementById("mermaid-ai-chat-popup"),t=e.querySelector(".mermaid-ai-chat-header"),n=e.querySelector(".mermaid-ai-chat-close"),o=document.getElementById("mermaid-ai-chat-send"),s=document.getElementById("mermaid-ai-chat-input");this.makeDraggable(e,t),n.addEventListener("click",()=>{this.hideChatPopup()}),o.addEventListener("click",()=>{this.sendMessage()}),s.addEventListener("keydown",e=>{"Enter"!==e.key||e.ctrlKey||e.shiftKey||(e.preventDefault(),this.sendMessage())}),setTimeout(()=>{document.addEventListener("click",t=>{this.isPopupOpen&&(t.target.closest(".macro-placeholder-property-panel-ai-button")||e.contains(t.target)||(console.log("üñ±Ô∏è Click outside popup detected, closing..."),this.hideChatPopup()))},!0)},300)}makeDraggable(e,t){let n=!1,o=0,s=0,i=0,a=0;console.log("üéØ DRAG: Setting up draggable popup..."),t.style.cursor="move",t.style.userSelect="none";const r=t=>{if(!n)return;t.preventDefault(),t.stopPropagation();const r=t.clientX-o,l=t.clientY-s;let c=i+r,d=a+l;const m=window.innerWidth-400-10,u=window.innerHeight-300-10;c=Math.max(10,Math.min(c,m)),d=Math.max(10,Math.min(d,u)),e.style.left=c+"px",e.style.top=d+"px"},l=e=>{n&&(console.log("üéØ DRAG: Stopped"),n=!1,document.removeEventListener("mousemove",r,!0),document.removeEventListener("mouseup",l,!0),document.body.style.userSelect="",e.stopPropagation())};t.addEventListener("mousedown",t=>{t.target.classList.contains("mermaid-ai-chat-close")||(t.preventDefault(),t.stopPropagation(),n=!0,o=t.clientX,s=t.clientY,i=parseInt(e.style.left)||0,a=parseInt(e.style.top)||0,console.log("üéØ DRAG: Started",{mouseX:o,mouseY:s,popupX:i,popupY:a}),document.addEventListener("mousemove",r,!0),document.addEventListener("mouseup",l,!0),document.body.style.userSelect="none")}),console.log("‚úÖ DRAG: Setup completed")}showChatPopup(e,t){console.log("üéâ STEP 8: showChatPopup called with coordinates:",{x:e,y:t});const n=document.getElementById("mermaid-ai-chat-popup");if(console.log("üéâ STEP 8.1: Found popup element:",n),!n)return void console.error("‚ùå STEP 8.1: Popup element not found!");const o=Math.min(e,window.innerWidth-400),s=Math.min(t,window.innerHeight-300);console.log("üéâ STEP 8.2: Setting popup position:",{leftPos:o,topPos:s}),console.log("üéâ STEP 8.2: Window dimensions:",{width:window.innerWidth,height:window.innerHeight}),n.style.display="block",n.style.left=o+"px",n.style.top=s+"px",console.log("üéâ STEP 8.3: Popup styles applied:",{display:n.style.display,left:n.style.left,top:n.style.top}),this.isPopupOpen=!0,console.log("üéâ STEP 8.4: isPopupOpen set to:",this.isPopupOpen),setTimeout(()=>{const e=document.getElementById("mermaid-ai-chat-input");console.log("üéâ STEP 8.5: Focusing input element:",e),e?(e.focus(),console.log("‚úÖ STEP 8.5: Input focused successfully")):console.error("‚ùå STEP 8.5: Input element not found!")},100),console.log("‚úÖ STEP 8: showChatPopup completed")}hideChatPopup(){document.getElementById("mermaid-ai-chat-popup").style.display="none",this.isPopupOpen=!1;const e=document.getElementById("mermaid-ai-chat-messages"),t=e.querySelector(".system");e.innerHTML="",e.appendChild(t),document.getElementById("mermaid-ai-chat-input").value="",console.log("‚úÖ Chat popup closed")}async sendMessage(){const e=document.getElementById("mermaid-ai-chat-input"),t=e.value.trim(),o=n.validateUserPrompt(t);if(!o.isValid)return void this.addMessage("assistant",`‚ö†Ô∏è ${o.error}`);const s=n.validateDiagramContent(this.currentMermaidContent);if(!s.isValid)return void this.addMessage("assistant",`‚ö†Ô∏è ${s.error}`);this.addMessage("user",t),e.value="";const i=this.addMessage("assistant","ü§î Thinking...");try{const e=await this.callAI(t);this.removeMessage(i),this.addMessage("assistant",e)}catch(e){console.error("‚ùå AI API error:",e),this.removeMessage(i);const t=n.getErrorMessage({success:!1,error:e.message});this.addMessage("assistant",t)}}addMessage(e,t){const n=document.getElementById("mermaid-ai-chat-messages"),o="msg-"+Date.now(),s=document.createElement("div");return s.className=`mermaid-ai-chat-message ${e}`,s.id=o,s.innerHTML=`\n      <div class="message-content">\n        <p>${t}</p>\n      </div>\n    `,n.appendChild(s),n.scrollTop=n.scrollHeight,o}removeMessage(e){const t=document.getElementById(e);t&&t.remove()}async callAI(e){const t={diagram_content:this.currentMermaidContent,user_prompt:e,context:"mermaid_diagram_editing"};console.log("üì§ Sending AI request:",t);const o=await n.editDiagram(t);if(o.success)return o.data.result||o.data.response||"‚úÖ Diagram updated successfully!";throw new Error(o.error||"Unknown error occurred")}}window.AJS&&AJS.toInit?(console.log("üöÄ AJS: Using AJS.toInit for initialization..."),AJS.toInit(function(e){console.log("üöÄ AJS: AJS.toInit callback fired with jQuery:",!!e),new o(e)})):window.jQuery?(console.log("üöÄ JQUERY: Using jQuery ready for initialization..."),jQuery(document).ready(function(e){console.log("üöÄ JQUERY: jQuery ready fired"),new o(e)})):(console.log("üöÄ NATIVE: Using native DOMContentLoaded fallback..."),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{console.log("üöÄ NATIVE: DOMContentLoaded fired"),new o(null)}):(console.log("üöÄ NATIVE: Document already loaded"),new o(null)));
//# sourceMappingURL=content.js.map