var __webpack_modules__={126:(e,t,n)=>{n.d(t,{O:()=>r,T:()=>i});var o=n(599);class r{static async request(e,t={}){try{const n=await fetch(e,{headers:{"Content-Type":"application/json",...t.headers},...t});if(!n.ok)throw new Error(`HTTP ${n.status}: ${n.statusText}`);return{success:!0,data:await n.json()}}catch(e){return console.error("API request failed:",e),{success:!1,error:e.message}}}static async generateDocument(e){return await this.request(o.yl.GEN_DOC,{method:"POST",body:JSON.stringify(e)})}static async checkStatus(e){return await this.request(`${o.yl.GEN_DOC_STATUS}?job_id=${e}`)}static async getResult(e){return await this.request(`${o.yl.GEN_DOC_RESULT}?job_id=${e}`)}static async editText(e){return await this.request(o.yl.EDIT_TEXT,{method:"POST",body:JSON.stringify(e)})}}class i{static extractPageId(e){const t=[/\/pages\/(\d+)/,/pageId=(\d+)/,/\/(\d+)$/];for(const n of t){const t=e.match(n);if(t)return t[1]}return null}static getCurrentSpaceKey(){const e=document.querySelector('meta[name="ajs-space-key"]');if(e)return e.content;const t=document.querySelector("[data-space-key]");if(t)return t.dataset.spaceKey;const n=window.location.pathname.match(/\/spaces\/([^\/]+)/);return n?n[1]:null}static async fetchPageContent(e){try{var t,n,o,r;console.log("üîç Fetching Confluence content for pageId:",e);const i=`/rest/api/content/${e}?expand=body.storage,body.view`,a=await fetch(i,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"}});if(!a.ok){const e=await a.text();throw console.error("‚ùå API Error:",a.status,e),new Error(`HTTP ${a.status}: ${a.statusText}`)}const s=await a.json();return console.log("üìÑ Content data received:",{id:s.id,title:s.title,hasStorage:!(null===(t=s.body)||void 0===t||null===(t=t.storage)||void 0===t||!t.value),hasView:!(null===(n=s.body)||void 0===n||null===(n=n.view)||void 0===n||!n.value)}),{title:s.title,content:(null===(o=s.body)||void 0===o||null===(o=o.view)||void 0===o?void 0:o.value)||"",storageFormat:(null===(r=s.body)||void 0===r||null===(r=r.storage)||void 0===r?void 0:r.value)||""}}catch(e){throw console.error("‚ùå Error fetching Confluence content:",e),e}}static async cloneTemplateForGeneration(e){try{var t,n;if(console.log("üîç Cloning template from URL:",e),!e||!e.trim())throw console.error("‚ùå Empty URL provided"),new Error("URL template kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");const o=this.extractPageIdFromUrl(e);if(!o)throw console.error("‚ùå No pageId found in URL"),new Error("URL kh√¥ng ch·ª©a pageId h·ª£p l·ªá. Vui l√≤ng ki·ªÉm tra l·∫°i URL template.");console.log("üìã Fetching template pageId:",o);const r=`/rest/api/content/${o}?expand=body.storage`,i=await fetch(r,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"}});if(!i.ok){const e=await i.text();throw console.error("‚ùå API Error:",i.status,e),new Error(`HTTP ${i.status}: ${i.statusText}`)}const a=await i.json();if(console.log("üìÑ Template data received:",{id:a.id,title:a.title,hasStorage:!(null===(t=a.body)||void 0===t||null===(t=t.storage)||void 0===t||!t.value)}),null===(n=a.body)||void 0===n||null===(n=n.storage)||void 0===n||!n.value)throw console.error("‚ùå No storage content found in response"),new Error("Template kh√¥ng c√≥ n·ªôi dung storage format");const s=a.body.storage.value;console.log("üìÑ Original storage format length:",s.length);const{templateStructure:l,analysisInfo:d}=this.extractTemplateStructure(s),c={title:a.title,originalStorageFormat:s,templateStructure:l,analysisInfo:d};return console.log("‚úÖ Template cloned successfully:",{title:c.title,originalLength:s.length,structureLength:l.length,analysis:d}),c}catch(e){throw console.error("‚ùå Error cloning template:",e),e}}static extractTemplateStructure(e){let t=0,n=0,o=0;console.log("üîç Extracting template structure...");let r=e;[/(<<.*?>>)/g,/(\{\{.*?\}\})/g,/(&lt;&lt;.*?&gt;&gt;)/g,/(\u003c\u003c.*?\u003e\u003e)/g].forEach((e,t)=>{const n=[...r.matchAll(e)];console.log(`üéØ Placeholder pattern ${t+1} found ${n.length} matches`),o+=n.length}),t=(e.match(/<p[^>]*>\s*<\/p>/g)||[]).length,n=(e.match(/<td[^>]*>\s*<\/td>/g)||[]).length;const i={emptyParagraphs:t,emptyTableCells:n,placeholders:o,totalLength:e.length};return{templateStructure:r,analysisInfo:i}}static extractPageIdFromUrl(e){const t=[/\/pages\/(\d+)/,/pageId=(\d+)/,/\/(\d+)$/,/viewpage\.action\?pageId=(\d+)/];for(const n of t){const t=e.match(n);if(t)return t[1]}return null}static extractPlaceholders(e){console.log("üîç Analyzing content for placeholders..."),console.log("üìÑ Content length:",e.length),console.log("üìÑ Content preview (first 500 chars):",e.substring(0,500));const t=e.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&").replace(/&quot;/g,'"').replace(/&#39;/g,"'"),n=[/<<([^>]+)>>/g,/&lt;&lt;([^&]+)&gt;&gt;/g];let o=[];[e,t].forEach((e,t)=>{console.log(`üîç Testing on ${0===t?"original":"decoded"} content...`),n.forEach((t,n)=>{const r=[...e.matchAll(t)];console.log(`üéØ Pattern ${n+1} found ${r.length} matches:`,r.map(e=>e[0])),1===n?o.push(...r.map(e=>`<<${e[1]}>>`)):o.push(...r.map(e=>e[0]))})});const r=[...new Set(o)];return console.log("üéØ Unique placeholders found:",r),r}static async extractImagesFromHtml(e){const t=[];try{const n=(new DOMParser).parseFromString(e,"text/html").querySelectorAll("img");for(const e of Array.from(n)){const n=e.getAttribute("src");let o;if(n){let r=n;if(n.startsWith("data:image"))o=e.getAttribute("alt")?e.getAttribute("alt")+".png":`image_${Date.now()}.png`;else{const{base64:e,filename:t}=await this.urlToBase64(n);if(!e)continue;r=e,o=t}t.push({src:r,alt:e.getAttribute("alt")||void 0,filename:o})}}}catch(e){console.warn("extractImagesFromHtml error:",e)}return t}static async urlToBase64(e){try{const t=await fetch(e);if(!t.ok)return{base64:null,filename:this.getFilenameFromUrl(e)};const n=await t.blob(),o=this.getFilenameFromUrl(e);return await new Promise((e,t)=>{const r=new FileReader;r.onloadend=()=>e({base64:r.result,filename:o}),r.onerror=t,r.readAsDataURL(n)})}catch(t){return console.warn("urlToBase64 error:",t),{base64:null,filename:this.getFilenameFromUrl(e)}}}static getFilenameFromUrl(e){try{const t=new URL(e).pathname;return t.substring(t.lastIndexOf("/")+1)||`image_${Date.now()}`}catch{return`image_${Date.now()}`}}static async createPage(e,t,n,o=null){try{const r={type:"page",title:e,space:{key:n},body:{storage:{value:t,representation:"storage"}}};o&&(r.ancestors=[{id:o}]);const i=await fetch("/rest/api/content",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!i.ok)throw new Error(`Failed to create page: ${i.statusText}`);return await i.json()}catch(e){throw console.error("Error creating page:",e),e}}}},141:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>ConfluenceEditor});class ConfluenceEditor{constructor(){this.isEditorOpen=!1,this.currentContent=null,this.originalContent=null,this.mermaidDiagrams=[],this.editorContainer=null,this.textEditor=null,this.previewContainer=null,this.isPreviewMode=!1,this.autoSaveTimer=null,this.isModified=!1,this.currentZoom=1,this.dragOffset={x:0,y:0}}openEditor(e,t={}){this.isEditorOpen&&this.closeEditor(),console.log("üìù Opening Confluence Editor with content:",e),this.currentContent=e,this.originalContent=JSON.parse(JSON.stringify(e)),this.isEditorOpen=!0,this.extractMermaidDiagrams(),this.createEditorUI(t),this.initializeContentTab()}createEditorUI(e={}){const t=document.createElement("div");t.className="confluence-editor-overlay",t.innerHTML='\n      <div class="confluence-editor-container">\n        <div class="confluence-editor-header">\n          <h2 class="confluence-editor-title">\n            üìù Ch·ªânh s·ª≠a n·ªôi dung Confluence\n          </h2>\n          <div class="confluence-editor-actions">\n            <button class="editor-btn editor-btn-primary" id="editor-save-btn">\n              ÔøΩ L∆∞u thay ƒë·ªïi\n            </button>\n            <button class="editor-btn editor-btn-secondary" id="editor-close-btn">\n              ‚úï ƒê√≥ng\n            </button>\n          </div>\n        </div>\n\n        <div class="confluence-editor-tabs">\n          <button class="confluence-editor-tab active" id="content-tab">\n            üìù Ch·ªânh s·ª≠a n·ªôi dung\n          </button>\n          <button class="confluence-editor-tab" id="mermaid-tab">\n            üìä Ch·ªânh s·ª≠a Mermaid\n          </button>\n        </div>\n\n        <div class="confluence-editor-body">\n          \x3c!-- Content Tab --\x3e\n          <div class="tab-content active" id="content-tab-content">\n            <div class="content-editor-layout">\n              \x3c!-- Raw XHTML Editor (Left) --\x3e\n              <div class="content-editor-pane">\n                <div class="content-editor-header">\n                  üìù Raw XHTML Content\n                </div>\n                <div class="content-editor-body">\n                  <textarea class="raw-content-editor" id="raw-content-editor" placeholder="Raw XHTML content will appear here..."></textarea>\n                </div>\n              </div>\n\n              \x3c!-- Preview Pane (Right) --\x3e\n              <div class="content-preview-pane">\n                <div class="content-editor-header">\n                  üëÅÔ∏è Live Preview\n                </div>\n                <div class="content-editor-body">\n                  <div class="content-preview" id="content-preview">\n                    \x3c!-- Preview content will be rendered here --\x3e\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          \x3c!-- Mermaid Tab --\x3e\n          <div class="tab-content" id="mermaid-tab-content">\n            <div class="mermaid-editor-layout">\n              \x3c!-- Mermaid Code Editor (Left) --\x3e\n              <div class="mermaid-code-pane">\n                <div class="mermaid-editor-header">\n                  ÔøΩ Mermaid Code\n                  <select id="mermaid-selector" class="mermaid-selector">\n                    <option value="">Select diagram...</option>\n                  </select>\n                </div>\n                <div class="mermaid-editor-body">\n                  <textarea class="mermaid-code-editor" id="mermaid-code-editor" placeholder="Select a Mermaid diagram to edit..."></textarea>\n                </div>\n              </div>\n\n              \x3c!-- Mermaid Preview (Center) --\x3e\n              <div class="mermaid-preview-pane">\n                <div class="mermaid-editor-header">\n                  üìä Diagram Preview\n                  <div class="mermaid-zoom-controls">\n                    <button class="zoom-btn" id="zoom-out" title="Zoom Out">‚àí</button>\n                    <div class="zoom-level" id="zoom-level">100%</div>\n                    <button class="zoom-btn" id="zoom-in" title="Zoom In">+</button>\n                    <button class="zoom-btn" id="zoom-reset" title="Reset Zoom">‚åÇ</button>\n                  </div>\n                </div>\n                <div class="mermaid-editor-body">\n                  <div class="mermaid-preview" id="mermaid-preview">\n                    <div class="mermaid-placeholder">\n                      Select a diagram to preview\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              \x3c!-- AI Chat (Right) --\x3e\n              <div class="mermaid-ai-pane">\n                <div class="mermaid-editor-header">\n                  ü§ñ AI Assistant\n                </div>\n                <div class="mermaid-editor-body">\n                  <div class="ai-chat-container">\n                    <div class="ai-chat-messages" id="ai-chat-messages">\n                      <div class="ai-message">\n                        <div class="ai-avatar">ü§ñ</div>\n                        <div class="ai-text">Hi! I can help you edit Mermaid diagrams. Select a diagram and ask me to modify it.</div>\n                      </div>\n                    </div>\n                    <div class="ai-chat-input">\n                      <input type="text" id="ai-prompt-input" placeholder="Describe how you want to modify the diagram..." />\n                      <button id="ai-send-btn" class="ai-send-btn">Send</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',document.body.appendChild(t),this.editorContainer=t,this.bindEditorEvents()}bindEditorEvents(){if(!this.editorContainer)return;this.editorContainer.querySelector("#editor-close-btn").addEventListener("click",()=>this.closeEditor()),this.editorContainer.querySelector("#editor-save-btn").addEventListener("click",()=>this.saveChanges());const e=this.editorContainer.querySelector("#content-tab"),t=this.editorContainer.querySelector("#mermaid-tab");e&&e.addEventListener("click",()=>this.switchTab("content")),t&&t.addEventListener("click",()=>this.switchTab("mermaid"));const n=this.editorContainer.querySelector("#raw-content-editor");n&&n.addEventListener("input",()=>this.updateContentPreview());const o=this.editorContainer.querySelector("#mermaid-selector"),r=this.editorContainer.querySelector("#mermaid-code-editor"),i=this.editorContainer.querySelector("#ai-send-btn"),a=this.editorContainer.querySelector("#ai-prompt-input");o&&o.addEventListener("change",e=>this.selectMermaidDiagram(e.target.value)),r&&r.addEventListener("input",()=>this.updateMermaidPreview()),i&&i.addEventListener("click",()=>this.sendAIPrompt()),a&&a.addEventListener("keypress",e=>{"Enter"===e.key&&this.sendAIPrompt()});const s=this.editorContainer.querySelector("#zoom-in"),l=this.editorContainer.querySelector("#zoom-out"),d=this.editorContainer.querySelector("#zoom-reset");s&&s.addEventListener("click",()=>this.zoomIn()),l&&l.addEventListener("click",()=>this.zoomOut()),d&&d.addEventListener("click",()=>this.resetZoom());const c=this.editorContainer.querySelector("#mermaid-preview");c&&c.addEventListener("wheel",e=>this.handleWheel(e)),this.editorContainer.addEventListener("click",e=>{e.target===this.editorContainer&&this.closeEditor()});const m=e=>{"Escape"===e.key&&(this.closeEditor(),document.removeEventListener("keydown",m))};document.addEventListener("keydown",m)}switchTab(e){this.editorContainer.querySelectorAll(".confluence-editor-tab").forEach(e=>e.classList.remove("active"));const t=this.editorContainer.querySelector(`#${e}-tab`);t&&t.classList.add("active"),this.editorContainer.querySelectorAll(".tab-content").forEach(e=>e.classList.remove("active"));const n=this.editorContainer.querySelector(`#${e}-tab-content`);n&&n.classList.add("active"),"content"===e?this.initializeContentTab():"mermaid"===e&&this.initializeMermaidTab(),console.log(`Switched to ${e} tab`)}initializeContentTab(){const e=this.editorContainer.querySelector("#raw-content-editor");if(e&&this.currentContent){let t=this.currentContent.full_storage_format||this.currentContent.content||"";t=t.replace(/^```xml\s*\n?/gm,""),t=t.replace(/\n?```\s*$/gm,""),t=this.formatXHTML(t),e.value=t,this.updateContentPreview()}}initializeMermaidTab(){this.extractMermaidDiagrams(),this.populateMermaidSelector()}formatXHTML(e,t="    "){const n="xml-root-fragment",o=`<${n}>${e}</${n}>`,r=(new DOMParser).parseFromString(o,"text/xml");if(r.getElementsByTagName("parsererror").length>0)return console.error("L·ªói ph√¢n t√≠ch c√∫ ph√°p XML/XHTML. Tr·∫£ v·ªÅ chu·ªói g·ªëc."),e;let i="";const a=r.documentElement;function s(e,n){switch(e.nodeType){case Node.ELEMENT_NODE:const o=e.nodeName;let r=`<${o}`;if(e.attributes&&e.attributes.length>0)for(let t of e.attributes)r+=` ${t.name}="${t.value}"`;if(r+=">",Array.from(e.childNodes).some(e=>e.nodeType!==Node.TEXT_NODE||e.textContent.trim().length>0)){i+=`${n}${r}\n`;const a=n+t;Array.from(e.childNodes).forEach(e=>s(e,a)),i+=`${n}</${o}>\n`}else i+=`${n}${r.replace(">","/>")}\n`;break;case Node.TEXT_NODE:const a=e.textContent.trim();a.length>0&&(i+=`${n}${a}\n`);break;case Node.COMMENT_NODE:i+=`${n}\n`;break;case Node.CDATA_SECTION_NODE:i+=`${n}<![CDATA[${e.textContent}]]>\n`}}return Array.from(a.childNodes).forEach(e=>s(e,"")),i.trim()}isSelfClosingTag(e){return["br","hr","img","input","meta","link","source","track","wbr"].some(t=>e.startsWith(`<${t}`))}updateContentPreview(){const e=this.editorContainer.querySelector("#raw-content-editor"),t=this.editorContainer.querySelector("#content-preview");if(!e||!t)return;const n=e.value;this.currentContent&&(this.currentContent.full_storage_format=n,this.originalContent&&n!==this.originalContent.full_storage_format&&(this.isModified=!0,this.updateSaveButtonState())),this.renderContentPreview(n,t)}renderContentPreview(e,t){let n=e.replace(/<h1>/g,"<h1 style='color: #333; margin: 24px 0 16px 0; font-size: 1.8rem; border-bottom: 2px solid #e1e5e9; padding-bottom: 8px;'>").replace(/<h2>/g,"<h2 style='color: #555; margin: 20px 0 12px 0; font-size: 1.4rem;'>").replace(/<h3>/g,"<h3 style='color: #666; margin: 16px 0 8px 0; font-size: 1.2rem;'>").replace(/<p>/g,"<p style='margin: 12px 0; line-height: 1.6; color: #333;'>").replace(/<ul>/g,"<ul style='margin: 12px 0; padding-left: 24px;'>").replace(/<li>/g,"<li style='margin: 4px 0; line-height: 1.5;'>").replace(/<table>/g,"<table style='border-collapse: collapse; width: 100%; margin: 20px 0; box-shadow: 0 1px 3px rgba(0,0,0,0.1);'>").replace(/<th>/g,"<th style='border: 1px solid #ddd; padding: 12px; background: #f8f9fa; font-weight: 600; text-align: left;'>").replace(/<td>/g,"<td style='border: 1px solid #ddd; padding: 12px; vertical-align: top;'>").replace(/<strong>/g,"<strong style='color: #2c3e50;'>").replace(/<code>/g,"<code style='background: #f1f3f4; padding: 2px 4px; border-radius: 3px; font-family: monospace; font-size: 0.9em;'>");t.innerHTML=n,this.renderMermaidDiagramsInPreview()}async loadMermaidScript(){if(window.mermaid)return console.log("‚ö° Mermaid already loaded"),window.mermaid;const res=await fetch(chrome.runtime.getURL("lib/mermaid.min.js")),text=await res.text();return eval(text),console.log("‚úÖ Mermaid loaded dynamically"),window.mermaid}async initializeMermaidInPreview(){try{await this.loadMermaidScript(),console.log("üé® Initializing Mermaid diagrams in preview..."),window.mermaid.initialize({startOnLoad:!1,theme:"default",securityLevel:"loose",fontFamily:"Arial, sans-serif",htmlLabels:!0,flowchart:{htmlLabels:!0},deterministicIds:!0,deterministicIDSeed:"mermaid-diagram-preview"}),window.mermaid.setConfig&&window.mermaid.setConfig({securityLevel:"loose",theme:"default"});const e=this.editorContainer.querySelector("#content-preview");if(!e)return;e.querySelectorAll('ac\\:structured-macro[ac\\:name="mermaid"]').forEach((e,t)=>{const n=e.querySelector('ac\\:parameter[ac\\:name="code"]');if(!n)return void console.warn("‚ö†Ô∏è Mermaid macro found but no code parameter");const o=(n.textContent||n.innerText).trim();if(console.log("üîç Found Confluence Mermaid diagram:",o.substring(0,50)+"..."),o){const n=document.createElement("div");n.className="mermaid-diagram",n.id=`preview-mermaid-${t}`,n.style.cssText="margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;",e.parentNode.replaceChild(n,e);try{const e=`preview-mermaid-svg-${t}`,r=document.createElement("div");if(r.style.position="absolute",r.style.left="-9999px",r.style.top="-9999px",document.body.appendChild(r),!window.mermaid.render||"function"!=typeof window.mermaid.render)throw new Error("Mermaid render function not available");try{const t=window.mermaid.render(e,o);t&&"function"==typeof t.then?t.then(e=>{let t;document.body.contains(r)&&document.body.removeChild(r),t="string"==typeof e?e:e&&e.svg?e.svg:String(e),n.innerHTML=t,console.log("‚úÖ Preview Mermaid diagram rendered successfully (promise API)")}).catch(e=>{document.body.contains(r)&&document.body.removeChild(r),console.error("‚ùå Preview Mermaid render error (promise API):",e),this.showMermaidError(n,o,e)}):"string"==typeof t?(document.body.contains(r)&&document.body.removeChild(r),n.innerHTML=t,console.log("‚úÖ Preview Mermaid diagram rendered successfully (sync API)")):window.mermaid.render(e,o,e=>{document.body.contains(r)&&document.body.removeChild(r),n.innerHTML=e,console.log("‚úÖ Preview Mermaid diagram rendered successfully (callback API)")})}catch(e){throw document.body.contains(r)&&document.body.removeChild(r),e}}catch(e){console.error("‚ùå Preview Mermaid render error:",e),this.showMermaidError(n,o,e)}}})}catch(e){console.error("‚ùå Failed to initialize Mermaid in preview:",e)}}showMermaidError(e,t,n){e.innerHTML=`\n      <div style="color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;">\n        <div style="font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;">\n          <span style="margin-right: 8px;">‚ö†Ô∏è</span>\n          Mermaid Render Error\n        </div>\n        <div style="font-size: 12px; color: #721c24; margin-bottom: 10px;">\n          ${n.message||"Unknown error occurred"}\n        </div>\n        <details style="margin-top: 10px;">\n          <summary style="cursor: pointer; font-size: 12px; color: #495057;">Show diagram code</summary>\n          <pre style="margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;">${t}</pre>\n        </details>\n      </div>\n    `}renderMermaidDiagramsInPreview(){setTimeout(()=>{this.initializeMermaidInPreview()},100)}populateMermaidSelector(){var e;const t=this.editorContainer.querySelector("#mermaid-selector");t?(t.innerHTML='<option value="">üìä Select diagram to edit...</option>',this.mermaidDiagramsMap&&this.mermaidDiagramsMap.size>0&&this.mermaidDiagramsMap.forEach((e,n)=>{const o=document.createElement("option");o.value=n,o.textContent=`${e.title} (${e.type})`,t.appendChild(o)}),t.removeEventListener("change",this.handleMermaidSelectorChange),this.handleMermaidSelectorChange=e=>{const t=e.target.value;console.log(`üéØ Selected diagram: ${t}`),this.selectMermaidDiagram(t)},t.addEventListener("change",this.handleMermaidSelectorChange),console.log(`‚úÖ Populated ${(null===(e=this.mermaidDiagramsMap)||void 0===e?void 0:e.size)||0} diagrams in selector`)):console.error("‚ùå Mermaid selector not found")}selectMermaidDiagram(e){if(!e)return void this.clearMermaidEditor();const t=this.mermaidDiagramsMap.get(e);if(!t)return void console.error(`‚ùå Diagram not found in map: ${e}`);const n=this.mermaidDiagrams.find(t=>t.id===e);if(!n)return void console.error(`‚ùå Diagram not found in array: ${e}`);const o=this.editorContainer.querySelector("#mermaid-code-editor");o&&(o.value=t.content,this.currentSelectedDiagram=n,this.currentSelectedDiagramId=e,this.updateMermaidPreview(),o.removeEventListener("input",this.handleMermaidCodeChange),this.handleMermaidCodeChange=()=>{this.currentSelectedDiagram&&this.currentSelectedDiagramId&&(this.currentSelectedDiagram.code=o.value,this.mermaidDiagramsMap.get(this.currentSelectedDiagramId).content=o.value,this.updateMermaidPreview(),this.isModified=!0,this.updateSaveButtonState(),console.log(`üìù Updated diagram ${this.currentSelectedDiagramId}`))},o.addEventListener("input",this.handleMermaidCodeChange)),console.log(`‚úÖ Selected diagram: ${e} (${t.type})`)}clearMermaidEditor(){const e=this.editorContainer.querySelector("#mermaid-code-editor"),t=this.editorContainer.querySelector("#mermaid-preview");e&&(e.value=""),t&&(t.innerHTML='<div class="mermaid-placeholder">Select a diagram to preview</div>'),this.currentSelectedDiagram=null}updateMermaidPreview(){const e=this.editorContainer.querySelector("#mermaid-code-editor"),t=this.editorContainer.querySelector("#mermaid-preview");if(!e||!t)return;const n=e.value.trim();n?(this.currentSelectedDiagram&&(this.currentSelectedDiagram.code=n),t.innerHTML=`<div class="mermaid">${n}</div>`,window.mermaid&&(window.mermaid.init(void 0,t.querySelector(".mermaid")),setTimeout(()=>{this.updateZoom()},100))):t.innerHTML='<div class="mermaid-placeholder">Enter Mermaid code to preview</div>'}sendAIPrompt(){const e=this.editorContainer.querySelector("#ai-prompt-input"),t=this.editorContainer.querySelector("#ai-chat-messages");if(!e||!t)return;const n=e.value.trim();n&&(this.addAIMessage("user",n),e.value="",setTimeout(()=>{this.addAIMessage("ai","AI integration coming soon! I will help you modify Mermaid diagrams based on your prompts.")},1e3))}addAIMessage(e,t){const n=this.editorContainer.querySelector("#ai-chat-messages");if(!n)return;const o=document.createElement("div");o.className="ai-message";const r="user"===e?"üë§":"ü§ñ",i="user"===e?"#e5e7eb":"#3b82f6";o.innerHTML=`\n      <div class="ai-avatar" style="background: ${i};">${r}</div>\n      <div class="ai-text">${t}</div>\n    `,n.appendChild(o),n.scrollTop=n.scrollHeight}extractMermaidDiagrams(){var e;if(this.mermaidDiagrams=[],this.mermaidDiagramsMap=new Map,null===(e=this.currentContent)||void 0===e||!e.full_storage_format)return;const t=this.currentContent.full_storage_format,n=/<ac:structured-macro[^>]*ac:name="(mermaid|code)"[^>]*>([\s\S]*?)<\/ac:structured-macro>/gi;let o,r=0;for(;null!==(o=n.exec(t));){const e=o[1],t=o[2],n=t.match(/<ac:parameter[^>]*ac:name="code">([\s\S]*?)<\/ac:parameter>/);if(!n)continue;const i=n[1].trim();if(!i)continue;if("code"===e){const e=t.match(/<ac:parameter[^>]*ac:name="language">([\s\S]*?)<\/ac:parameter>/);if(!e||"mermaid"!==e[1].trim())continue}const a=this.detectMermaidType?this.detectMermaidType(i):"graph",s=`mermaid-diagram-${r}`,l={id:s,code:i,originalCode:i,originalMatch:o[0],index:r,type:a,title:`${a.charAt(0).toUpperCase()+a.slice(1)} Diagram ${r+1}`};this.mermaidDiagrams.push(l),this.mermaidDiagramsMap.set(s,{content:i,type:a,index:r,title:l.title}),console.log(`‚úÖ Extracted diagram ${r}:`,{type:a,code:i.substring(0,50)+"..."}),r++}console.log("üé® Extracted Mermaid diagrams:",this.mermaidDiagrams)}detectMermaidType(e){const t=e.trim().split("\n")[0].toLowerCase();return t.includes("graph")?"graph":t.includes("flowchart")?"flowchart":t.includes("sequencediagram")?"sequence":t.includes("classDiagram")?"class":t.includes("stateDiagram")?"state":t.includes("erDiagram")?"er":t.includes("gantt")?"gantt":t.includes("pie")?"pie":"graph"}editMermaidDiagram(e){const t=this.mermaidDiagrams.find(t=>t.id===e);if(!t)return;console.log("‚úèÔ∏è Editing Mermaid diagram:",e);const n=prompt("Edit Mermaid code:",t.code);n&&n!==t.code&&(t.code=n,this.currentContent.full_storage_format=this.currentContent.full_storage_format.replace(t.originalMatch,t.originalMatch.replace(t.originalCode,n)),this.updateStatus("ƒê√£ c·∫≠p nh·∫≠t diagram"))}updateStatus(e){var t;const n=null===(t=this.editorContainer)||void 0===t?void 0:t.querySelector("#editor-status");n&&(n.textContent=e,setTimeout(()=>{n.textContent="S·∫µn s√†ng"},3e3))}saveChanges(){console.log("üíæ Saving changes...");try{this.syncContentFromRawEditor(),this.syncMermaidChangesToContent(),this.onSave&&this.onSave(this.currentContent),this.isModified=!1,this.updateSaveButtonState(),this.updateStatus("ƒê√£ l∆∞u thay ƒë·ªïi"),console.log("‚úÖ Changes saved successfully"),setTimeout(()=>{this.closeEditor()},1e3)}catch(e){console.error("‚ùå Error saving changes:",e),this.updateStatus("L·ªói khi l∆∞u thay ƒë·ªïi")}}syncContentFromRawEditor(){const e=this.editorContainer.querySelector("#raw-content-editor");e&&e.value&&(this.currentContent.full_storage_format=e.value,console.log("üìù Synced content from raw editor"))}syncMermaidChangesToContent(){if(!this.mermaidDiagrams||0===this.mermaidDiagrams.length)return;let e=this.currentContent.full_storage_format||this.currentContent.content||"";this.mermaidDiagrams.forEach(t=>{if(t.originalCode!==t.code){const n=new RegExp(`(<ac:plain-text-body><\\!\\[CDATA\\[\\s*)(${this.escapeRegex(t.originalCode)})(\\s*\\]\\]></ac:plain-text-body>)`,"g");e=e.replace(n,`$1${t.code}$3`),console.log(`üìä Updated diagram ${t.id} in content`)}}),this.currentContent.full_storage_format=e,this.currentContent.content&&(this.currentContent.content=e),console.log("üìä Synced all Mermaid changes to content")}escapeRegex(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}updateSaveButtonState(){const e=this.editorContainer.querySelector("#editor-save-btn");e&&(this.isModified?(e.innerHTML="üíæ L∆∞u thay ƒë·ªïi *",e.style.background="#28a745",e.title="C√≥ thay ƒë·ªïi ch∆∞a l∆∞u"):(e.innerHTML="üíæ L∆∞u thay ƒë·ªïi",e.style.background="#007bff",e.title="L∆∞u thay ƒë·ªïi"))}zoomIn(){this.currentZoom=Math.min(1.2*this.currentZoom,3),this.updateZoom()}zoomOut(){this.currentZoom=Math.max(this.currentZoom/1.2,.3),this.updateZoom()}resetZoom(){this.currentZoom=1,this.dragOffset={x:0,y:0},this.updateZoom()}updateZoom(){const e=this.editorContainer.querySelector("#mermaid-preview"),t=this.editorContainer.querySelector("#zoom-level");if(e){const t=e.querySelector(".mermaid, svg");t&&(t.style.transform=`scale(${this.currentZoom}) translate(${this.dragOffset.x}px, ${this.dragOffset.y}px)`,t.style.transformOrigin="center center",t.style.transition="transform 0.2s ease")}t&&(t.textContent=`${Math.round(100*this.currentZoom)}%`)}handleWheel(e){e.preventDefault(),e.deltaY<0?this.zoomIn():this.zoomOut()}closeEditor(){this.editorContainer&&(this.editorContainer.remove(),this.editorContainer=null),this.isEditorOpen=!1,this.currentContent=null,this.originalContent=null,this.mermaidDiagrams=[],this.isModified=!1,this.currentZoom=1,this.dragOffset={x:0,y:0},console.log("üìù Confluence Editor closed")}setSaveCallback(e){this.onSave=e}isOpen(){return this.isEditorOpen}getCurrentContent(){if(this.textEditor){const e=this.textEditor.getValue();this.currentContent&&(this.currentContent.full_storage_format=e)}return this.currentContent}}},371:(e,t,n)=>{n.d(t,{h:()=>r});var o=n(599);class r{static async getSettings(){try{return(await chrome.storage.sync.get([o.qF]))[o.qF]||o.a$}catch(e){return console.error("Error loading settings:",e),o.a$}}static async saveSettings(e){try{return await chrome.storage.sync.set({[o.qF]:e}),!0}catch(e){return console.error("Error saving settings:",e),!1}}static async updateSetting(e,t){try{const n={...await this.getSettings(),[e]:t};return await this.saveSettings(n)}catch(e){return console.error("Error updating setting:",e),!1}}static async resetSettings(){try{return await chrome.storage.sync.remove([o.qF]),!0}catch(e){return console.error("Error resetting settings:",e),!1}}static validateSettings(e){var t,n,o,r;const i={};if(null!==(t=e.apiKey)&&void 0!==t&&t.trim()||(i.apiKey="API Key l√† b·∫Øt bu·ªôc"),null!==(n=e.urlTemplate)&&void 0!==n&&n.trim()){const t=this.validateConfluencePageLink(e.urlTemplate);t.valid||(i.urlTemplate=t.error||"URL Template kh√¥ng h·ª£p l·ªá.")}else i.urlTemplate="URL Template l√† b·∫Øt bu·ªôc";return null!==(o=e.documentUrl)&&void 0!==o&&o.trim()?this.isValidUrl(e.documentUrl)||(i.documentUrl="URL kh√¥ng h·ª£p l·ªá"):i.documentUrl="URL th∆∞ m·ª•c l∆∞u t√†i li·ªáu l√† b·∫Øt bu·ªôc",null!==(r=e.databaseUrl)&&void 0!==r&&r.trim()?this.isValidUrl(e.databaseUrl)||(i.databaseUrl="URL kh√¥ng h·ª£p l·ªá"):i.databaseUrl="URL th∆∞ m·ª•c database l√† b·∫Øt bu·ªôc",{isValid:0===Object.keys(i).length,errors:i}}static isValidUrl(e){try{return new URL(e),!0}catch{return!1}}static validateConfluencePageLink(e){const t={valid:!1,error:null,pageId:null};if(!e||"string"!=typeof e||!e.trim())return t.error="URL l√† b·∫Øt bu·ªôc",t;let n;try{n=new URL(e.trim())}catch{return t.error="URL kh√¥ng h·ª£p l·ªá",t}const o=n.searchParams.get("pageId");if(o&&/^\d+$/.test(o))return t.valid=!0,t.pageId=o,t;const r=n.pathname.split("/"),i=r.indexOf("pages");if(i>=0&&r.length>i+1){const e=r[i+1];if(/^\d+$/.test(e))return t.valid=!0,t.pageId=e,t}return t.error="Kh√¥ng t√¨m th·∫•y pageId trong URL",t}}},599:(e,t,n)=>{n.d(t,{Wx:()=>s,a$:()=>a,qF:()=>o,yl:()=>i});const o="extensionSettings",r="http://localhost:5001",i={GEN_DOC:`${r}/api/generate-full-confluence-doc`,GEN_DOC_STATUS:`${r}/api/generate-status`,GEN_DOC_RESULT:`${r}/api/generate-result`,EDIT_DIAGRAM:`${r}/api/edit-diagram`,EDIT_TEXT:`${r}/api/edit-text`},a={apiKey:"",urlTemplate:"",customPrompt:"",documentUrl:"",databaseUrl:"",instructionUrl:"",isEnabled:!0,selectedModel:"sonar-pro"},s=[{id:"fetch",label:"L·∫•y n·ªôi dung BA",status:"pending"},{id:"clone",label:"Clone template",status:"pending"},{id:"analyze",label:"Ph√¢n t√≠ch placeholders",status:"pending"},{id:"generate",label:"AI sinh t√†i li·ªáu",status:"pending"},{id:"complete",label:"Ho√†n th√†nh",status:"pending"}]}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var __webpack_exports__={},_shared_api_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(126),_shared_constants_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(599),_shared_storage_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(371),_confluenceEditor_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(141);class KToolContent{constructor(){this.settings={},this.isModalOpen=!1,this.currentTab="generate",this.generationJob=null,this.progressSteps=[..._shared_constants_js__WEBPACK_IMPORTED_MODULE_1__.Wx],this.confluenceEditor=null,this.init()}async init(){if(console.log("üöÄ K-Tool Content Script initializing..."),document.getElementById("ktool-root"))console.log("üîç K-Tool already injected, skipping...");else{await this.loadSettings(),this.injectUI(),this.bindEvents();try{console.log("üîß Initializing ConfluenceEditor..."),this.confluenceEditor=new _confluenceEditor_js__WEBPACK_IMPORTED_MODULE_3__.m,console.log("‚úÖ ConfluenceEditor initialized:",this.confluenceEditor)}catch(e){console.error("‚ùå Error initializing ConfluenceEditor:",e),this.confluenceEditor=null}window.ktoolContent=this,console.log("‚úÖ K-Tool Content Script ready")}}async loadSettings(){try{this.settings=await _shared_storage_js__WEBPACK_IMPORTED_MODULE_2__.h.getSettings(),console.log("‚öôÔ∏è Settings loaded:",this.settings)}catch(e){console.error("‚ùå Error loading settings:",e)}}injectUI(){const e=document.createElement("div");e.id="ktool-root",document.body.appendChild(e);const t=this.createBubble();e.appendChild(t);const n=this.createModal();e.appendChild(n)}createBubble(){const e=document.createElement("div");return e.className="ktool-bubble "+(this.settings.isEnabled?"":"disabled"),e.innerHTML=`\n      <div class="ktool-bubble-icon">K</div>\n      <div class="ktool-tooltip">\n        ${this.settings.isEnabled?"üöÄ K-Tool Document Generator<br/>Click ƒë·ªÉ m·ªü c√¥ng c·ª• sinh t√†i li·ªáu":"‚ö†Ô∏è K-Tool ƒë√£ t·∫Øt<br/>Vui l√≤ng b·∫≠t trong settings"}\n      </div>\n    `,e.addEventListener("click",()=>{this.settings.isEnabled?this.openModal():this.showNotification("K-Tool ƒë√£ t·∫Øt. Vui l√≤ng b·∫≠t trong extension settings.","warning")}),e}createModal(){const e=document.createElement("div");return e.className="ktool-modal-overlay",e.innerHTML=`\n      <div class="ktool-modal">\n        <div class="ktool-modal-header">\n          <h2 class="ktool-modal-title">K-Tool Document Generator</h2>\n          <button class="ktool-modal-close" type="button">&times;</button>\n        </div>\n        <div class="ktool-modal-body">\n          <div class="ktool-tabs">\n            <button class="ktool-tab active" data-tab="generate">üìÑ Sinh t√†i li·ªáu</button>\n            <button class="ktool-tab" data-tab="preview">üëÅÔ∏è Preview</button>\n            <button class="ktool-tab" data-tab="settings">‚öôÔ∏è Settings</button>\n          </div>\n          \n          \x3c!-- Generate Tab --\x3e\n          <div class="ktool-tab-content active" data-tab="generate">\n            ${this.createGenerateTab()}\n          </div>\n          \n          \x3c!-- Preview Tab --\x3e\n          <div class="ktool-tab-content" data-tab="preview" id="previewTab">\n            ${this.createPreviewTab()}\n          </div>\n          \n          \x3c!-- Settings Tab --\x3e\n          <div class="ktool-tab-content" data-tab="settings">\n            ${this.createSettingsTab()}\n          </div>\n        </div>\n      </div>\n    `,e}createGenerateTab(){return`\n      <div class="ktool-form">\n        <div class="ktool-form-group">\n          <label class="ktool-form-label">URL t√†i li·ªáu BA *</label>\n          <input \n            type="url" \n            class="ktool-form-input" \n            id="baDocUrl" \n            placeholder="https://confluence.com/pages/123456"\n            value="${window.location.href}"\n          >\n        </div>\n        \n        <div class="ktool-form-group">\n          <label class="ktool-form-label">Ghi ch√∫ th√™m (t√πy ch·ªçn)</label>\n          <textarea \n            class="ktool-form-textarea" \n            id="additionalNotes" \n            placeholder="Th√™m ghi ch√∫ ho·∫∑c y√™u c·∫ßu ƒë·∫∑c bi·ªát..."\n            rows="3"\n          ></textarea>\n        </div>\n        \n        <div style="display: flex; gap: 12px; margin-top: 20px;">\n          <button class="ktool-btn ktool-btn-primary" id="generateBtn">\n            üîß T·∫°o t√†i li·ªáu\n          </button>\n          <button class="ktool-btn ktool-btn-secondary" id="resetBtn">\n            üîÑ Reset\n          </button>\n        </div>\n      </div>\n      \n      \x3c!-- Progress Section --\x3e\n      <div class="ktool-progress" id="progressSection" style="display: none;">\n        <h3 style="margin: 0 0 16px 0; font-size: 16px;">Ti·∫øn tr√¨nh sinh t√†i li·ªáu:</h3>\n        <div id="progressSteps"></div>\n      </div>\n    `}createPreviewTab(){return'\n      <div class="ktool-form">\n        <div style="text-align: center; padding: 40px; color: #6c757d;">\n          <div style="font-size: 48px; margin-bottom: 16px;">üìÑ</div>\n          <h3 style="margin: 0 0 8px 0;">Ch∆∞a c√≥ n·ªôi dung ƒë·ªÉ preview</h3>\n          <p style="margin: 0;">Vui l√≤ng sinh t√†i li·ªáu tr∆∞·ªõc khi preview.</p>\n        </div>\n      </div>\n    '}createSettingsTab(){return'\n      <div class="ktool-form">\n        <div style="text-align: center; padding: 40px; color: #6c757d;">\n          <div style="font-size: 48px; margin-bottom: 16px;">‚öôÔ∏è</div>\n          <h3 style="margin: 0 0 8px 0;">C√†i ƒë·∫∑t Extension</h3>\n          <p style="margin: 0 0 16px 0;">Click v√†o icon extension tr√™n toolbar ƒë·ªÉ c√†i ƒë·∫∑t.</p>\n          <button class="ktool-btn ktool-btn-primary" onclick="chrome.runtime.openOptionsPage?.() || alert(\'Vui l√≤ng click v√†o icon K-Tool tr√™n toolbar ƒë·ªÉ c√†i ƒë·∫∑t\')">\n            üîß M·ªü Settings\n          </button>\n        </div>\n      </div>\n    '}bindEvents(){const e=document.querySelector(".ktool-modal-overlay");e.querySelector(".ktool-modal-close").addEventListener("click",()=>{this.closeModal()}),e.addEventListener("click",t=>{t.target===e&&this.closeModal()}),e.querySelectorAll(".ktool-tab").forEach(e=>{e.addEventListener("click",()=>{this.switchTab(e.dataset.tab)})}),e.querySelector("#generateBtn").addEventListener("click",()=>{this.handleGenerate()}),e.querySelector("#resetBtn").addEventListener("click",()=>{this.handleReset()}),chrome.runtime.onMessage.addListener((e,t,n)=>{"settingsChanged"===e.action&&(this.settings=e.settings,this.updateBubbleState())}),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.isModalOpen&&this.closeModal(),!e.ctrlKey&&!e.metaKey||"k"!==e.key||this.isModalOpen||(e.preventDefault(),this.settings.isEnabled&&this.openModal())})}openModal(){const e=document.querySelector(".ktool-modal-overlay");e.classList.add("show"),this.isModalOpen=!0,setTimeout(()=>{const t=e.querySelector(".ktool-form-input");t&&t.focus()},300)}closeModal(){document.querySelector(".ktool-modal-overlay").classList.remove("show"),this.isModalOpen=!1}switchTab(e){document.querySelectorAll(".ktool-tab").forEach(t=>{t.classList.toggle("active",t.dataset.tab===e)}),document.querySelectorAll(".ktool-tab-content").forEach(t=>{t.classList.toggle("active",t.dataset.tab===e)}),this.currentTab=e}updateBubbleState(){const e=document.querySelector(".ktool-bubble"),t=e.querySelector(".ktool-tooltip");this.settings.isEnabled?(e.classList.remove("disabled"),t.innerHTML="üöÄ K-Tool Document Generator<br/>Click ƒë·ªÉ m·ªü c√¥ng c·ª• sinh t√†i li·ªáu"):(e.classList.add("disabled"),t.innerHTML="‚ö†Ô∏è K-Tool ƒë√£ t·∫Øt<br/>Vui l√≤ng b·∫≠t trong settings")}async handleGenerate(){const e=document.getElementById("baDocUrl").value.trim(),t=document.getElementById("additionalNotes").value.trim();if(e){if(!_shared_storage_js__WEBPACK_IMPORTED_MODULE_2__.h.validateSettings(this.settings).isValid)return this.showNotification("Vui l√≤ng c·∫•u h√¨nh ƒë·∫ßy ƒë·ªß settings tr∆∞·ªõc khi sinh t√†i li·ªáu!","error"),void this.switchTab("settings");try{this.showProgress(),this.updateProgress(0,"active");const n=_shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.extractPageId(e);if(!n)throw new Error("‚ùå URL kh√¥ng h·ª£p l·ªá! Vui l√≤ng ki·ªÉm tra l·∫°i URL Confluence page.");console.log("üîç Fetching content for pageId:",n);const o=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.fetchPageContent(n);if(!o)throw new Error("‚ùå Kh√¥ng th·ªÉ l·∫•y n·ªôi dung t√†i li·ªáu BA!");const r=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.extractImagesFromHtml(o.content);if(console.log("üñºÔ∏è Extracted images (all base64):",r),this.updateProgress(0,"completed"),this.updateProgress(1,"active"),!this.settings.urlTemplate)throw new Error("‚ö†Ô∏è Vui l√≤ng setting template c·ªßa t√†i li·ªáu!");console.log("üîÑ Cloning template from:",this.settings.urlTemplate);const i=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.cloneTemplateForGeneration(this.settings.urlTemplate);if(!i)throw new Error("‚ùå Kh√¥ng th·ªÉ clone template! Vui l√≤ng ki·ªÉm tra URL template trong Settings.");console.log("‚úÖ Template cloned successfully:",i.title),this.updateProgress(1,"completed"),this.updateProgress(2,"active");const a=_shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.extractPlaceholders(i.originalStorageFormat);if(console.log("üîç Found placeholders <<>>:",a),0===a.length)throw new Error("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y placeholder n√†o c√≥ d·∫°ng <<T√™n>>. Vui l√≤ng ki·ªÉm tra template!");this.updateProgress(2,"completed"),this.updateProgress(3,"active");let s="";if(this.settings.instructionUrl){const e=_shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.extractPageId(this.settings.instructionUrl);if(e){console.log("üîç Fetching instruction content for pageId:",e);const t=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.fetchPageContent(e);s=(null==t?void 0:t.content)||""}else console.warn("‚ö†Ô∏è Invalid instruction URL:",this.settings.instructionUrl)}const l={ba_content:o.content,template_structure:i.templateStructure,original_storage_format:i.originalStorageFormat,instructions:s,additional_prompt:this.settings.customPrompt||"",placeholders:a,selectedModel:this.settings.selectedModel,images:r,additional_notes:t};console.log("üì§ Sending payload for placeholder filling:",{ba_content_length:l.ba_content.length,template_structure_length:l.template_structure.length,original_format_length:l.original_storage_format.length,placeholders_found:a.length,placeholders_list:a});const d=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.O.generateDocument(l),c=d.data.job_id;if(!c)throw new Error(d.error||"Kh√¥ng nh·∫≠n ƒë∆∞·ª£c job_id t·ª´ server!");this.currentJobId=c,await this.pollGenerationResult(c,l)}catch(e){console.error("‚ùå Generation error:",e),this.showNotification(`L·ªói sinh t√†i li·ªáu: ${e.message}`,"error"),this.hideProgress()}}else this.showNotification("Vui l√≤ng nh·∫≠p URL t√†i li·ªáu BA!","error")}async pollGenerationResult(e,t){let n=0;const o=async()=>{n++;try{console.log(`üîÑ Polling attempt ${n}/20 for job ${e}`);const t=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.O.checkStatus(e);if(console.log(`statusResult: ${t}`),!t.success)throw new Error("L·ªói ki·ªÉm tra tr·∫°ng th√°i job");const r=t.data.status;if("done"===r){console.log("‚úÖ Generation completed!");const t=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.O.getResult(e),n=JSON.stringify(t,null,2);if(console.log(`Document generate:\n${n}`),t.success)return void this.handleGenerationComplete(t.data.result);throw new Error("L·ªói l·∫•y k·∫øt qu·∫£ sinh t√†i li·ªáu")}if("error"===r)throw new Error("Job sinh t√†i li·ªáu th·∫•t b·∫°i tr√™n server");if(n>=20)throw new Error("‚è∞ Timeout: Qu√° tr√¨nh sinh t√†i li·ªáu m·∫•t qu√° nhi·ªÅu th·ªùi gian. Vui l√≤ng th·ª≠ l·∫°i.");t.data.progress_message&&console.log(`üìù Progress: ${t.data.progress_message}`),setTimeout(o,1e4)}catch(e){throw console.error("‚ùå Polling error:",e),this.showNotification(`L·ªói trong qu√° tr√¨nh sinh t√†i li·ªáu: ${e.message}`,"error"),this.hideProgress(),this.currentJobId=null,e}};await o()}handleGenerationComplete(e){this.updateProgress(3,"completed"),this.updateProgress(4,"completed"),this.generatedContent=e,console.log("‚úÖ Generated content:",e),this.switchTab("preview"),this.updatePreviewTab(e),this.showNotification("Sinh t√†i li·ªáu th√†nh c√¥ng!","success"),this.hideProgress()}updatePreviewTab(e){const t=document.getElementById("previewTab");t.innerHTML=`\n      <div class="ktool-form">\n        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">\n          <h3 style="margin: 0;">Preview T√†i li·ªáu</h3>\n          <div style="display: flex; gap: 12px;">\n            <button class="ktool-btn ktool-btn-secondary" id="editContentBtn">\n              ‚úèÔ∏è Ch·ªânh s·ª≠a n·ªôi dung\n            </button>\n            <button class="ktool-btn ktool-btn-primary" id="createPageBtn">\n              üìÑ T·∫°o trang Confluence\n            </button>\n            <button class="ktool-btn ktool-btn-secondary" id="downloadBtn">\n              üíæ T·∫£i xu·ªëng\n            </button>\n          </div>\n        </div>\n\n        <div id="documentPreview" style="border: 1px solid #e9ecef; border-radius: 8px; padding: 20px; background: #f8f9fa; max-height: 400px; overflow-y: auto; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6;">\n          ${e.full_storage_format||"<p>Kh√¥ng c√≥ n·ªôi dung</p>"}\n        </div>\n      </div>\n    `;const n=t.querySelector("#editContentBtn"),o=t.querySelector("#createPageBtn"),r=t.querySelector("#downloadBtn");n.addEventListener("click",()=>this.handleEditContent(e)),o.addEventListener("click",()=>this.handleCreatePage()),r.addEventListener("click",()=>this.handleDownload()),setTimeout(()=>{this.initializeMermaid()},100)}async handleCreatePage(){try{const e=_shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.getCurrentSpaceKey();if(!e)throw new Error("Kh√¥ng th·ªÉ x√°c ƒë·ªãnh space key c·ªßa trang hi·ªán t·∫°i");const t=`K-Tool Generated Document - ${(new Date).toLocaleDateString()}`,n=this.generatedContent.full_storage_format||this.generatedContent.content;let o=null;this.settings.documentUrl&&(o=_shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.extractPageId(this.settings.documentUrl));const r=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.createPage(t,n,e,o);if(this.showNotification("T·∫°o trang Confluence th√†nh c√¥ng!","success"),r.id){const e=`${window.location.origin}/pages/${r.id}`;confirm("B·∫°n c√≥ mu·ªën chuy·ªÉn ƒë·∫øn trang v·ª´a t·∫°o kh√¥ng?")&&window.open(e,"_blank")}}catch(e){console.error("‚ùå Create page error:",e),this.showNotification(`L·ªói t·∫°o trang: ${e.message}`,"error")}}handleDownload(){const e=this.generatedContent.full_storage_format||this.generatedContent.content,t=new Blob([e],{type:"text/html"}),n=URL.createObjectURL(t),o=document.createElement("a");o.href=n,o.download=`ktool-document-${Date.now()}.html`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(n),this.showNotification("T·∫£i xu·ªëng th√†nh c√¥ng!","success")}handleEditContent(e){if(console.log("‚úèÔ∏è Opening content editor..."),console.log("üîç Content to edit:",e),console.log("üîç ConfluenceEditor instance:",this.confluenceEditor),!this.confluenceEditor)return console.error("‚ùå ConfluenceEditor is null or undefined"),void this.showNotification("Confluence Editor ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o!","error");try{this.confluenceEditor.setSaveCallback(e=>{console.log("üíæ Content updated:",e),this.generatedContent=e,this.updatePreviewTab(e),this.showNotification("N·ªôi dung ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!","success")}),console.log("üöÄ Opening ConfluenceEditor..."),this.confluenceEditor.openEditor(e,{title:"Ch·ªânh s·ª≠a t√†i li·ªáu ƒë√£ sinh",showMermaidTools:!0}),console.log("‚úÖ ConfluenceEditor opened successfully")}catch(e){console.error("‚ùå Error opening ConfluenceEditor:",e),this.showNotification(`L·ªói m·ªü editor: ${e.message}`,"error")}}handleReset(){confirm("B·∫°n c√≥ ch·∫Øc mu·ªën reset form?")&&(document.getElementById("baDocUrl").value=window.location.href,document.getElementById("additionalNotes").value="",this.hideProgress(),this.switchTab("generate"))}showProgress(){const e=document.getElementById("progressSection");document.getElementById("progressSteps").innerHTML=this.progressSteps.map((e,t)=>`\n      <div class="ktool-progress-step ${e.status}" data-step="${t}">\n        <div class="ktool-progress-icon">${t+1}</div>\n        <span>${e.label}</span>\n      </div>\n    `).join(""),e.style.display="block"}hideProgress(){document.getElementById("progressSection").style.display="none",this.progressSteps=this.progressSteps.map(e=>({...e,status:"pending"}))}updateProgress(e,t){this.progressSteps[e].status=t;const n=document.querySelector(`[data-step="${e}"]`);if(n){n.className=`ktool-progress-step ${t}`;const e=n.querySelector(".ktool-progress-icon");"completed"===t?e.textContent="‚úì":"error"===t?e.textContent="‚úó":"active"===t&&(e.innerHTML='<div class="ktool-spinning">‚è≥</div>')}}showNotification(e,t="info"){const n=document.createElement("div");n.style.cssText=`\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${"success"===t?"#28a745":"error"===t?"#dc3545":"#007bff"};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n      z-index: 1000002;\n      font-size: 14px;\n      max-width: 300px;\n      word-wrap: break-word;\n      opacity: 0;\n      transform: translateX(100%);\n      transition: all 0.3s;\n    `,n.textContent=e,document.body.appendChild(n),setTimeout(()=>{n.style.opacity="1",n.style.transform="translateX(0)"},100),setTimeout(()=>{n.style.opacity="0",n.style.transform="translateX(100%)",setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},300)},5e3)}async loadMermaidScript(){if(window.mermaid)return console.log("‚ö° Mermaid already loaded"),window.mermaid;const res=await fetch(chrome.runtime.getURL("lib/mermaid.min.js")),text=await res.text();return eval(text),console.log("‚úÖ Mermaid loaded dynamically"),window.mermaid}async initializeMermaid(){try{await this.loadMermaidScript(),console.log("üé® Initializing Mermaid diagrams..."),window.mermaid.initialize({startOnLoad:!1,theme:"default",securityLevel:"loose",fontFamily:"Arial, sans-serif",htmlLabels:!0,flowchart:{htmlLabels:!0},deterministicIds:!0,deterministicIDSeed:"mermaid-diagram"}),window.mermaid.setConfig&&window.mermaid.setConfig({securityLevel:"loose",theme:"default"});const e=document.getElementById("documentPreview");if(!e)return;e.querySelectorAll('ac\\:structured-macro[ac\\:name="mermaid"]').forEach((e,t)=>{const n=e.querySelector('ac\\:parameter[ac\\:name="code"]');if(!n)return void console.warn("‚ö†Ô∏è Mermaid macro found but no code parameter");const o=(n.textContent||n.innerText).trim();if(console.log("üîç Found Confluence Mermaid diagram:",o.substring(0,50)+"..."),o){const n=document.createElement("div");n.className="mermaid-diagram",n.id=`mermaid-${t}`,n.style.cssText="margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;",e.parentNode.replaceChild(n,e);try{const e=`mermaid-svg-${t}`,r=document.createElement("div");if(r.style.position="absolute",r.style.left="-9999px",r.style.top="-9999px",document.body.appendChild(r),!window.mermaid.render||"function"!=typeof window.mermaid.render)throw new Error("Mermaid render function not available");try{const t=window.mermaid.render(e,o);t&&"function"==typeof t.then?t.then(e=>{let t;document.body.contains(r)&&document.body.removeChild(r),t="string"==typeof e?e:e&&e.svg?e.svg:String(e),n.innerHTML=t,console.log("‚úÖ Mermaid diagram rendered successfully (promise API)")}).catch(e=>{document.body.contains(r)&&document.body.removeChild(r),console.error("‚ùå Mermaid render error (promise API):",e),this.showMermaidError(n,o,e)}):"string"==typeof t?(document.body.contains(r)&&document.body.removeChild(r),n.innerHTML=t,console.log("‚úÖ Mermaid diagram rendered successfully (sync API)")):window.mermaid.render(e,o,e=>{document.body.contains(r)&&document.body.removeChild(r),n.innerHTML=e,console.log("‚úÖ Mermaid diagram rendered successfully (callback API)")})}catch(e){throw document.body.contains(r)&&document.body.removeChild(r),e}}catch(e){console.error("‚ùå Mermaid render error:",e),this.showMermaidError(n,o,e)}}})}catch(e){console.error("‚ùå Failed to initialize Mermaid:",e)}}showMermaidError(e,t,n){e.innerHTML=`\n      <div style="color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;">\n        <div style="font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;">\n          <span style="margin-right: 8px;">‚ö†Ô∏è</span>\n          Mermaid Render Error\n        </div>\n        <div style="font-size: 12px; color: #721c24; margin-bottom: 10px;">\n          ${n.message||"Unknown error occurred"}\n        </div>\n        <details style="margin-top: 10px;">\n          <summary style="cursor: pointer; font-size: 12px; color: #495057;">Show diagram code</summary>\n          <pre style="margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;">${t}</pre>\n        </details>\n      </div>\n    `}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{new KToolContent}):new KToolContent;
//# sourceMappingURL=content.js.map