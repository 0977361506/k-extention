var __webpack_modules__={278:(e,t,n)=>{n.d(t,{m:()=>c});class o{static formatXHTML(e,t="    "){const n="xml-root-fragment",o=`<${n}>${e}</${n}>`,r=(new DOMParser).parseFromString(o,"text/xml");if(r.getElementsByTagName("parsererror").length>0)return console.error("XML/XHTML parsing error. Returning original string."),e;let a="";const i=r.documentElement;function s(e,n){switch(e.nodeType){case Node.ELEMENT_NODE:const o=e.nodeName;let r=`<${o}`;if(e.attributes&&e.attributes.length>0)for(let t of e.attributes)r+=` ${t.name}="${t.value}"`;if(r+=">",Array.from(e.childNodes).some(e=>e.nodeType!==Node.TEXT_NODE||e.textContent.trim().length>0)){a+=`${n}${r}\n`;const i=n+t;Array.from(e.childNodes).forEach(e=>s(e,i)),a+=`${n}</${o}>\n`}else a+=`${n}${r.replace(">","/>")}\n`;break;case Node.TEXT_NODE:const i=e.textContent.trim();i.length>0&&(a+=`${n}${i}\n`);break;case Node.COMMENT_NODE:a+=`${n}\x3c!--${e.textContent}--\x3e\n`;break;case Node.CDATA_SECTION_NODE:a+=`${n}<![CDATA[${e.textContent}]]>\n`}}return Array.from(i.childNodes).forEach(e=>s(e,"")),a.trim()}static isSelfClosingTag(e){return["br","hr","img","input","meta","link","source","track","wbr"].some(t=>e.startsWith(`<${t}`))}static cleanXMLMarkers(e){if(!e)return"";let t=e.replace(/^```xml\s*\n?/gm,"");return t=t.replace(/\n?```\s*$/gm,""),t}static escapeRegex(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}}class r{constructor(){}syncAllContent(e,t,n=[]){if(!e)throw new Error("Current content is required");const o=this.syncFromRawEditor(e,t),r=this.syncMermaidChanges(o,n);return console.log("üîÑ All content synchronized"),r}syncFromRawEditor(e,t){if(!t)return e;const n=t.querySelector("#raw-content-editor");if(!n||!n.value)return e;const o={...e};return o.full_storage_format=n.value.trim(),void 0!==o.content&&(o.content=n.value.trim()),console.log("üìù Synced content from raw editor"),o}syncMermaidChanges(e,t=[]){if(console.log("üîÑ Starting Mermaid sync...",{diagramsCount:t.length,hasContent:!!e}),!t||0===t.length)return console.log("‚ö†Ô∏è No Mermaid diagrams to sync"),e;let n=e.full_storage_format||e.content||"";console.log("üìä Processing all diagrams (no change check)..."),t.forEach((e,t)=>{var o,r;if(console.log(`ÔøΩ Processing diagram ${t}:`,{id:e.id,hasOriginalCode:!!e.originalCode,hasCode:!!e.code,originalLength:(null===(o=e.originalCode)||void 0===o?void 0:o.length)||0,codeLength:(null===(r=e.code)||void 0===r?void 0:r.length)||0}),e.originalCode&&e.code){console.log(`üìù Replacing code for diagram ${e.id||t}...`),console.log(`üìã Original code preview: "${e.originalCode.substring(0,100)}..."`),console.log(`üìã New code preview: "${e.code.substring(0,100)}..."`);const o=this.updateDiagramInContent(n,e,t);o!==n?(n=o,console.log(`‚úÖ Successfully replaced code for diagram ${e.id||t}`)):console.warn(`‚ö†Ô∏è Failed to replace code for diagram ${e.id||t} - no pattern matched`)}else console.log(`‚ö†Ô∏è Skipping diagram ${e.id||t} - missing originalCode or code`)});const o={...e};return o.full_storage_format=n,void 0!==o.content&&(o.content=n),console.log("‚úÖ Mermaid sync completed - all diagrams processed"),o}updateDiagramInContent(e,t,n){if(!e||!t)return console.log("‚ö†Ô∏è updateDiagramInContent: Missing content or diagram"),e;const r=t.originalCode,a=t.code;if(console.log("üîÑ Updating diagram in content:",{index:n,diagramId:t.id,hasOriginalCode:!!r,hasNewCode:!!a,originalLength:(null==r?void 0:r.length)||0,newLength:(null==a?void 0:a.length)||0}),!r||!a)return console.log("‚ö†Ô∏è Missing originalCode or newCode - skipping update"),e;console.log("üìã Replacing originalCode with newCode (no equality check)"),console.log(`üìã Original: "${r.substring(0,50)}..."`),console.log(`üìã New: "${a.substring(0,50)}..."`);const i=[{pattern:new RegExp(`(<ac:parameter[^>]*ac:name="code"[^>]*>\\s*<\\!\\[CDATA\\[\\s*)(${o.escapeRegex(r)})(\\s*\\]\\]>\\s*</ac:parameter>)`,"gs"),replacement:`$1${a}$3`},{pattern:new RegExp(`(<ac:parameter[^>]*ac:name="code"[^>]*>\\s*)(${o.escapeRegex(r)})(\\s*</ac:parameter>)`,"gs"),replacement:`$1${a}$3`},{pattern:new RegExp(`(<ac:plain-text-body>\\s*<\\!\\[CDATA\\[\\s*)(${o.escapeRegex(r)})(\\s*\\]\\]>\\s*</ac:plain-text-body>)`,"gs"),replacement:`$1${a}$3`}];let s=e,l=!1;console.log("üîç Trying patterns to match and replace...");for(let t=0;t<i.length;t++){const{pattern:n,replacement:o}=i[t];if(console.log(`üîç Testing pattern ${t+1}...`),n.lastIndex=0,n.test(e)){console.log(`‚úÖ Pattern ${t+1} matched! Applying replacement...`),n.lastIndex=0,s=e.replace(n,o),l=!0,console.log(`‚úÖ Successfully updated diagram using pattern ${t+1}`);break}console.log(`‚ùå Pattern ${t+1} did not match`)}if(l)console.log("‚úÖ Pattern matching successful, content updated");else{console.warn(`‚ö†Ô∏è Could not find pattern to update diagram ${t.id||n}`),console.log("üîç Debug info:"),console.log("Original code preview:",r.substring(0,100)+"..."),console.log("New code preview:",a.substring(0,100)+"..."),console.log("Content sample:",e.substring(0,500)+"...");const o=e.includes(r.trim());console.log("Simple string search found original code:",o)}return s}validateContent(e){const t={isValid:!0,errors:[],warnings:[]};if(!e)return t.isValid=!1,t.errors.push("Content is null or undefined"),t;e.full_storage_format||e.content||(t.isValid=!1,t.errors.push("Missing full_storage_format or content field"));const n=e.full_storage_format||e.content;if(n)try{(new DOMParser).parseFromString(`<root>${n}</root>`,"text/xml").getElementsByTagName("parsererror").length>0&&t.warnings.push("Content may contain XML parsing issues")}catch(e){t.warnings.push(`XML validation warning: ${e.message}`)}return t}createBackup(e){return{content:JSON.parse(JSON.stringify(e)),timestamp:Date.now()}}restoreFromBackup(e){if(!e||!e.content)throw new Error("Invalid backup data");return console.log("üîÑ Restored content from backup"),e.content}}class a{static querySelector(e,t){try{return e.querySelector(t)}catch(e){return console.error(`Error querying selector "${t}":`,e),null}}static querySelectorAll(e,t){try{return e.querySelectorAll(t)}catch(e){return console.error(`Error querying selector "${t}":`,e),[]}}static addEventListener(e,t,n,o={}){if(e)try{e.addEventListener(t,n,o)}catch(e){console.error(`Error adding event listener for "${t}":`,e)}else console.warn("Cannot add event listener: element is null")}static removeEventListener(e,t,n){if(e)try{e.removeEventListener(t,n)}catch(e){console.error(`Error removing event listener for "${t}":`,e)}else console.warn("Cannot remove event listener: element is null")}static toggleClass(e,t,n=void 0){if(e)try{void 0!==n?e.classList.toggle(t,n):e.classList.toggle(t)}catch(e){console.error(`Error toggling class "${t}":`,e)}else console.warn("Cannot toggle class: element is null")}static addClass(e,t){if(e)try{e.classList.add(t)}catch(e){console.error(`Error adding class "${t}":`,e)}else console.warn("Cannot add class: element is null")}static removeClass(e,t){if(e)try{e.classList.remove(t)}catch(e){console.error(`Error removing class "${t}":`,e)}else console.warn("Cannot remove class: element is null")}static setContent(e,t,n=!1){if(e)try{if("INPUT"===e.tagName||"TEXTAREA"===e.tagName||"SELECT"===e.tagName)return void(e.value=t||"");n?e.innerHTML=t:e.textContent=t}catch(e){console.error("Error setting content:",e)}else console.warn("Cannot set content: element is null")}static getContent(e,t=!1){if(!e)return console.warn("Cannot get content: element is null"),"";try{return"INPUT"===e.tagName||"TEXTAREA"===e.tagName||"SELECT"===e.tagName?e.value||"":t?e.innerHTML:e.textContent}catch(e){return console.error("Error getting content:",e),""}}static createElement(e,t={},n="",o=!1){try{const r=document.createElement(e);return Object.entries(t).forEach(([e,t])=>{"className"===e?r.className=t:"style"===e&&"object"==typeof t?Object.assign(r.style,t):r.setAttribute(e,t)}),n&&this.setContent(r,n,o),r}catch(t){return console.error(`Error creating element "${e}":`,t),null}}static removeElement(e){if(e)try{e.parentNode?e.parentNode.removeChild(e):e.remove()}catch(e){console.error("Error removing element:",e)}else console.warn("Cannot remove element: element is null")}static isInDOM(e){return!!e&&document.body.contains(e)}static scrollIntoView(e,t={behavior:"smooth",block:"center"}){if(e)try{e.scrollIntoView(t)}catch(e){console.error("Error scrolling element into view:",e)}else console.warn("Cannot scroll: element is null")}static getDimensions(e){if(!e)return console.warn("Cannot get dimensions: element is null"),{width:0,height:0,top:0,left:0};try{const t=e.getBoundingClientRect();return{width:t.width,height:t.height,top:t.top,left:t.left,right:t.right,bottom:t.bottom}}catch(e){return console.error("Error getting element dimensions:",e),{width:0,height:0,top:0,left:0}}}static cloneElement(e,t=!0){if(!e)return console.warn("Cannot clone element: element is null"),null;try{return e.cloneNode(t)}catch(e){return console.error("Error cloning element:",e),null}}}class i{static getEditorTemplate(){return`\n      <div class="confluence-editor-container">\n        <div class="confluence-editor-header">\n          <h2 class="confluence-editor-title">\n            üìù Ch·ªânh s·ª≠a n·ªôi dung Confluence\n          </h2>\n          <div class="confluence-editor-actions">\n            <button class="editor-btn editor-btn-primary" id="editor-save-btn">\n              üíæ L∆∞u thay ƒë·ªïi\n            </button>\n            <button class="editor-btn editor-btn-secondary" id="editor-close-btn">\n              ‚úï ƒê√≥ng\n            </button>\n          </div>\n        </div>\n\n        <div class="confluence-editor-tabs">\n          <button class="confluence-editor-tab active" id="content-tab">\n            üìù Ch·ªânh s·ª≠a n·ªôi dung\n          </button>\n          <button class="confluence-editor-tab" id="mermaid-tab">\n            üìä Ch·ªânh s·ª≠a Mermaid\n          </button>\n        </div>\n\n        <div class="confluence-editor-body">\n          ${this.getContentTabTemplate()}\n          ${this.getMermaidTabTemplate()}\n        </div>\n      </div>\n    `}static getContentTabTemplate(){return'\n      \x3c!-- Content Tab --\x3e\n      <div class="tab-content active" id="content-tab-content">\n        <div class="content-editor-layout">\n          \x3c!-- Raw XHTML Editor (Left) --\x3e\n          <div class="content-editor-pane">\n            <div class="content-editor-header">\n              üìù Raw XHTML Content\n            </div>\n            <div class="content-editor-body">\n              <textarea class="raw-content-editor" id="raw-content-editor" placeholder="Raw XHTML content will appear here..."></textarea>\n            </div>\n          </div>\n\n          \x3c!-- Preview Pane (Right) --\x3e\n          <div class="content-preview-pane">\n            <div class="content-editor-header">\n              üëÅÔ∏è Live Preview\n            </div>\n            <div class="content-editor-body">\n              <div class="content-preview" id="content-preview">\n                \x3c!-- Preview content will be rendered here --\x3e\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    '}static getMermaidTabTemplate(){return`\n      \x3c!-- Mermaid Tab --\x3e\n      <div class="tab-content" id="mermaid-tab-content">\n        <div class="mermaid-editor-layout">\n          \x3c!-- Mermaid Code Editor (Left) --\x3e\n          <div class="mermaid-code-pane">\n            <div class="mermaid-editor-header">\n              üìä Mermaid Code\n              <select id="mermaid-selector" class="mermaid-selector">\n                <option value="">Select diagram...</option>\n              </select>\n            </div>\n            <div class="mermaid-editor-body">\n              <textarea class="mermaid-code-editor" id="mermaid-code-editor" placeholder="Select a Mermaid diagram to edit..."></textarea>\n            </div>\n          </div>\n\n          \x3c!-- Mermaid Preview (Center) --\x3e\n          <div class="mermaid-preview-pane">\n            <div class="mermaid-editor-header">\n              üìä Diagram Preview\n              ${this.getZoomControlsTemplate()}\n            </div>\n            <div class="mermaid-editor-body">\n              <div class="mermaid-preview" id="mermaid-preview">\n                <div class="mermaid-placeholder">\n                  Select a diagram to preview\n                </div>\n              </div>\n            </div>\n          </div>\n\n          \x3c!-- AI Chat (Right) --\x3e\n          <div class="mermaid-ai-pane">\n            <div class="mermaid-editor-header">\n              ü§ñ AI Assistant\n            </div>\n            <div class="mermaid-editor-body">\n              ${this.getAIChatTemplate()}\n            </div>\n          </div>\n        </div>\n      </div>\n    `}static getZoomControlsTemplate(){return'\n      <div class="mermaid-zoom-controls">\n        <button class="zoom-btn" id="zoom-out" title="Zoom Out">‚àí</button>\n        <div class="zoom-level" id="zoom-level">100%</div>\n        <button class="zoom-btn" id="zoom-in" title="Zoom In">+</button>\n        <button class="zoom-btn" id="zoom-reset" title="Reset Zoom">‚åÇ</button>\n      </div>\n    '}static getAIChatTemplate(){return'\n      <div class="ai-chat-container">\n        <div class="ai-chat-messages" id="ai-chat-messages">\n          <div class="ai-message">\n            <div class="ai-avatar">ü§ñ</div>\n            <div class="ai-text">Hi! I can help you edit Mermaid diagrams. Select a diagram and ask me to modify it.</div>\n          </div>\n        </div>\n        <div class="ai-chat-input">\n          <input type="text" id="ai-prompt-input" placeholder="Describe how you want to modify the diagram..." />\n          <button id="ai-send-btn" class="ai-send-btn">Send</button>\n        </div>\n      </div>\n    '}static applyPreviewStyles(e){return e.replace(/<h1>/g,"<h1 style='color: #333; margin: 24px 0 16px 0; font-size: 1.8rem; border-bottom: 2px solid #e1e5e9; padding-bottom: 8px;'>").replace(/<h2>/g,"<h2 style='color: #555; margin: 20px 0 12px 0; font-size: 1.4rem;'>").replace(/<h3>/g,"<h3 style='color: #666; margin: 16px 0 8px 0; font-size: 1.2rem;'>").replace(/<p>/g,"<p style='margin: 12px 0; line-height: 1.6; color: #333;'>").replace(/<ul>/g,"<ul style='margin: 12px 0; padding-left: 24px;'>").replace(/<li>/g,"<li style='margin: 4px 0; line-height: 1.5;'>").replace(/<table>/g,"<table style='border-collapse: collapse; width: 100%; margin: 20px 0; box-shadow: 0 1px 3px rgba(0,0,0,0.1);'>").replace(/<th>/g,"<th style='border: 1px solid #ddd; padding: 12px; background: #f8f9fa; font-weight: 600; text-align: left;'>").replace(/<td>/g,"<td style='border: 1px solid #ddd; padding: 12px; vertical-align: top;'>").replace(/<strong>/g,"<strong style='color: #2c3e50;'>").replace(/<code>/g,"<code style='background: #f1f3f4; padding: 2px 4px; border-radius: 3px; font-family: monospace; font-size: 0.9em;'>")}static createAIMessage(e,t){return`\n      <div class="ai-message">\n        <div class="ai-avatar" style="background: ${"user"===e?"#e5e7eb":"#3b82f6"};">${"user"===e?"üë§":"ü§ñ"}</div>\n        <div class="ai-text">${t}</div>\n      </div>\n    `}static createMermaidContainer(e){const t=document.createElement("div");return t.className="mermaid-diagram",t.id=`preview-mermaid-${e}`,t.style.cssText="margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;",t}}var s=n(378);class l{constructor(){this.STORAGE_KEY="confluence_editor_backup",this.AUTO_SAVE_INTERVAL=3e4,this.autoSaveTimer=null}async saveContent(e,t=null,n={}){const{enableLocalStorage:o=!0,enableCallback:r=!0,showNotification:a=!0}=n,i={localStorage:!1,callback:!1,errors:[]};if(o)try{this.saveToLocalStorage(e),i.localStorage=!0,console.log("‚úÖ Content saved to localStorage")}catch(e){console.error("‚ùå Failed to save to localStorage:",e),i.errors.push(`localStorage: ${e.message}`)}if(r&&t)try{await this.callSaveCallback(t,e),i.callback=!0,console.log("‚úÖ Content saved via callback")}catch(e){console.error("‚ùå Failed to save via callback:",e),i.errors.push(`callback: ${e.message}`)}return a&&this.showSaveNotification(i),i}saveToLocalStorage(e){const t={content:e,timestamp:Date.now(),version:"1.0"};localStorage.setItem(this.STORAGE_KEY,JSON.stringify(t))}loadFromLocalStorage(){try{const e=localStorage.getItem(this.STORAGE_KEY);if(!e)return null;const t=JSON.parse(e);return Date.now()-t.timestamp>864e5?(console.log("üóëÔ∏è Removing old localStorage backup"),localStorage.removeItem(this.STORAGE_KEY),null):(console.log("üì¶ Loaded content from localStorage backup"),t.content)}catch(e){return console.error("‚ùå Failed to load from localStorage:",e),null}}clearLocalStorage(){localStorage.removeItem(this.STORAGE_KEY),console.log("üóëÔ∏è Cleared localStorage backup")}async callSaveCallback(e,t){if("function"!=typeof e)throw new Error("Save callback is not a function");const n=e(t);n&&"function"==typeof n.then&&await n}showSaveNotification(e){const{localStorage:t,callback:n,errors:o}=e;if(t&&n)this.showNotification("‚úÖ ƒê√£ l∆∞u thay ƒë·ªïi th√†nh c√¥ng","success");else if(t||n){const e=t?"localStorage":"callback";this.showNotification(`‚ö†Ô∏è ƒê√£ l∆∞u qua ${e} (m·ªôt ph·∫ßn)`,"warning")}else this.showNotification("‚ùå Kh√¥ng th·ªÉ l∆∞u thay ƒë·ªïi","error");o.length>0&&console.warn("Save errors:",o)}showNotification(e,t="info"){const n=document.createElement("div");n.className=`confluence-editor-notification ${t}`,n.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 12px 20px;\n      border-radius: 6px;\n      color: white;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      z-index: 10001;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      transition: all 0.3s ease;\n      max-width: 300px;\n    ";const o={success:"#28a745",warning:"#ffc107",error:"#dc3545",info:"#17a2b8"};n.style.background=o[t]||o.info,n.textContent=e,document.body.appendChild(n),setTimeout(()=>{n.parentNode&&(n.style.opacity="0",n.style.transform="translateX(100%)",setTimeout(()=>{n.remove()},300))},3e3)}startAutoSave(e){this.stopAutoSave(),this.autoSaveTimer=setInterval(()=>{try{e(),console.log("üîÑ Auto-save completed")}catch(e){console.error("‚ùå Auto-save failed:",e)}},this.AUTO_SAVE_INTERVAL),console.log("‚è∞ Auto-save started (every 30 seconds)")}stopAutoSave(){this.autoSaveTimer&&(clearInterval(this.autoSaveTimer),this.autoSaveTimer=null,console.log("‚èπÔ∏è Auto-save stopped"))}hasUnsavedChanges(e){const t=this.loadFromLocalStorage();if(!t)return!1;try{return JSON.stringify(e)!==JSON.stringify(t)}catch(e){return console.error("‚ùå Error comparing content:",e),!1}}getBackupInfo(){try{const e=localStorage.getItem(this.STORAGE_KEY);if(!e)return null;const t=JSON.parse(e);return{timestamp:t.timestamp,age:Date.now()-t.timestamp,version:t.version}}catch(e){return null}}}class c{constructor(){this.isEditorOpen=!1,this.currentContent=null,this.originalContent=null,this.onSave=null,this.mermaidDiagrams=[],this.mermaidDiagramsMap=new Map,this.currentSelectedDiagram=null,this.currentSelectedDiagramId=null,this.editorContainer=null,this.textEditor=null,this.previewContainer=null,this.isPreviewMode=!1,this.autoSaveTimer=null,this.isModified=!1,this.currentZoom=1,this.dragOffset={x:0,y:0},this.storageManager=new l,this.contentSynchronizer=new r}openEditor(e,t={}){this.isEditorOpen&&this.closeEditor(),console.log("üìù Opening Confluence Editor with content:",e);const n=this.storageManager.loadFromLocalStorage();if(n&&!1!==t.allowBackupRestore){const t=this.storageManager.getBackupInfo(),o=Math.floor(t.age/6e4);o<30?(this.currentContent=n,console.log(`üì¶ Auto-restored content from backup (${o} minutes old)`)):(this.currentContent=e,this.storageManager.clearLocalStorage(),console.log(`üì¶ Backup too old (${o} minutes), using original content`))}else this.currentContent=e;this.originalContent=JSON.parse(JSON.stringify(e)),this.isEditorOpen=!0,this.extractMermaidDiagrams(),this.createEditorUI(t),this.initializeContentTab()}createEditorUI(){const e=a.createElement("div",{className:"confluence-editor-overlay"});a.setContent(e,i.getEditorTemplate(),!0),document.body.appendChild(e),this.editorContainer=e,this.bindEditorEvents()}bindEditorEvents(){if(!this.editorContainer)return;const e=a.querySelector(this.editorContainer,"#editor-close-btn");console.log("üîç Close button found:",!!e),e?a.addEventListener(e,"click",()=>{console.log("üîÑ Close button clicked"),this.closeEditor()}):console.error("‚ùå Close button not found!");const t=a.querySelector(this.editorContainer,"#editor-save-btn");console.log("üîç Save button found:",!!t),t?a.addEventListener(t,"click",()=>{console.log("üíæ Save button clicked"),this.saveChanges()}):console.error("‚ùå Save button not found!");const n=a.querySelector(this.editorContainer,"#content-tab"),o=a.querySelector(this.editorContainer,"#mermaid-tab");a.addEventListener(n,"click",()=>this.switchTab("content")),a.addEventListener(o,"click",()=>this.switchTab("mermaid"));const r=a.querySelector(this.editorContainer,"#raw-content-editor");a.addEventListener(r,"input",()=>this.updateContentPreview());const i=a.querySelector(this.editorContainer,"#mermaid-selector"),s=a.querySelector(this.editorContainer,"#mermaid-code-editor"),l=a.querySelector(this.editorContainer,"#ai-send-btn"),c=a.querySelector(this.editorContainer,"#ai-prompt-input");a.addEventListener(i,"change",e=>this.selectMermaidDiagram(e.target.value)),a.addEventListener(s,"input",()=>this.updateMermaidPreview()),a.addEventListener(l,"click",()=>this.sendAIPrompt()),a.addEventListener(c,"keypress",e=>{"Enter"===e.key&&this.sendAIPrompt()});const d=a.querySelector(this.editorContainer,"#zoom-in"),g=a.querySelector(this.editorContainer,"#zoom-out"),m=a.querySelector(this.editorContainer,"#zoom-reset");a.addEventListener(d,"click",()=>this.zoomIn()),a.addEventListener(g,"click",()=>this.zoomOut()),a.addEventListener(m,"click",()=>this.resetZoom());const u=a.querySelector(this.editorContainer,"#mermaid-preview");a.addEventListener(u,"wheel",e=>this.handleWheel(e)),a.addEventListener(this.editorContainer,"click",e=>{e.target===this.editorContainer&&this.closeEditor()});const h=e=>{"Escape"===e.key&&(this.closeEditor(),a.removeEventListener(document,"keydown",h))};a.addEventListener(document,"keydown",h)}switchTab(e){a.querySelectorAll(this.editorContainer,".confluence-editor-tab").forEach(e=>a.removeClass(e,"active"));const t=a.querySelector(this.editorContainer,`#${e}-tab`);a.addClass(t,"active"),a.querySelectorAll(this.editorContainer,".tab-content").forEach(e=>a.removeClass(e,"active"));const n=a.querySelector(this.editorContainer,`#${e}-tab-content`);a.addClass(n,"active"),"content"===e?this.initializeContentTab():"mermaid"===e&&this.initializeMermaidTab(),console.log(`Switched to ${e} tab`)}initializeContentTab(){const e=a.querySelector(this.editorContainer,"#raw-content-editor");if(console.log("üîç Initializing content tab..."),console.log("Raw editor found:",!!e),console.log("Current content exists:",!!this.currentContent),e&&this.currentContent){let t=this.currentContent.full_storage_format||this.currentContent.content||"";console.log("Raw content length:",t.length),t=o.cleanXMLMarkers(t),t=o.formatXHTML(t),console.log("Formatted content length:",t.length),e.value=t,a.setContent(e,t),console.log("‚úÖ Content set to raw editor"),this.updateContentPreview()}else console.warn("‚ö†Ô∏è Cannot initialize content tab - missing rawEditor or currentContent")}initializeMermaidTab(){console.log("üîç Initializing mermaid tab..."),console.log("üìä Extracting diagrams from current content..."),this.extractMermaidDiagrams(),console.log("Diagrams available:",this.mermaidDiagrams.length),console.log("DiagramsMap size:",this.mermaidDiagramsMap.size),this.populateMermaidSelector()}updateContentPreview(){const e=a.querySelector(this.editorContainer,"#raw-content-editor"),t=a.querySelector(this.editorContainer,"#content-preview");if(!e||!t)return;const n=a.getContent(e);this.currentContent&&(this.currentContent.full_storage_format=n,this.originalContent&&n!==this.originalContent.full_storage_format&&(this.isModified=!0,this.updateSaveButtonState())),this.renderContentPreview(n,t)}renderContentPreview(e,t){const n=i.applyPreviewStyles(e);a.setContent(t,n,!0),this.renderMermaidDiagramsInPreview()}renderMermaidDiagramsInPreview(){setTimeout(()=>{this.initializeMermaidInPreview()},100)}async initializeMermaidInPreview(){try{await s.Z.initializeMermaid(),console.log("üé® Initializing Mermaid diagrams in preview...");const e=a.querySelector(this.editorContainer,"#content-preview");if(!e)return;a.querySelectorAll(e,'ac\\:structured-macro[ac\\:name="mermaid"]').forEach(async(e,t)=>{const n=a.querySelector(e,'ac\\:parameter[ac\\:name="code"]');if(!n)return void console.warn("‚ö†Ô∏è Mermaid macro found but no code parameter");const o=a.getContent(n).trim();if(console.log("üîç Found Confluence Mermaid diagram:",o.substring(0,50)+"..."),o){const n=i.createMermaidContainer(t);e.parentNode.replaceChild(n,e);const r=`preview-mermaid-svg-${t}`;await s.Z.renderDiagram(r,o,n)}})}catch(e){console.error("‚ùå Failed to initialize Mermaid in preview:",e)}}populateMermaidSelector(){var e,t;const n=a.querySelector(this.editorContainer,"#mermaid-selector");if(n){if(console.log("üîÑ Populating Mermaid selector..."),console.log(`üìä DiagramsMap size: ${(null===(e=this.mermaidDiagramsMap)||void 0===e?void 0:e.size)||0}`),console.log(`üìä Current options count: ${n.options.length}`),a.setContent(n,'<option value="">üìä Select diagram to edit...</option>',!0),console.log(`üìä After clear, options count: ${n.options.length}`),this.mermaidDiagramsMap&&this.mermaidDiagramsMap.size>0){let e=0;this.mermaidDiagramsMap.forEach((t,o)=>{const r=document.createElement("option");r.value=o,r.textContent=`${t.title} (${t.type})`,n.appendChild(r),e++,console.log(`üìä Added option ${e}: ${t.title} (${t.type})`)}),console.log(`‚úÖ Added ${e} diagrams to selector (total options: ${n.options.length})`)}else console.warn("‚ö†Ô∏è No Mermaid diagrams found to populate selector");n.removeEventListener("change",this.handleMermaidSelectorChange),this.handleMermaidSelectorChange=e=>{const t=e.target.value;console.log(`üéØ Selected diagram: ${t}`),this.selectMermaidDiagram(t)},n.addEventListener("change",this.handleMermaidSelectorChange),console.log(`‚úÖ Populated ${(null===(t=this.mermaidDiagramsMap)||void 0===t?void 0:t.size)||0} diagrams in selector`)}else console.error("‚ùå Mermaid selector not found")}selectMermaidDiagram(e){if(!e)return void this.clearMermaidEditor();const t=this.mermaidDiagramsMap.get(e);if(!t)return void console.error(`‚ùå Diagram not found in map: ${e}`);const n=this.mermaidDiagrams.find(t=>t.id===e);if(!n)return void console.error(`‚ùå Diagram not found in array: ${e}`);const o=this.editorContainer.querySelector("#mermaid-code-editor");o&&(o.value=t.content,this.currentSelectedDiagram=n,this.currentSelectedDiagramId=e,this.updateMermaidPreview(),o.removeEventListener("input",this.handleMermaidCodeChange),this.handleMermaidCodeChange=()=>{if(this.currentSelectedDiagram&&this.currentSelectedDiagramId){const e=o.value;console.log("new code",e),this.currentSelectedDiagram.code=e,this.mermaidDiagramsMap.get(this.currentSelectedDiagramId).content=e,this.contentSynchronizer.trackDiagramChange(this.currentSelectedDiagramId,e),this.updateMermaidPreview(),this.isModified=!0,this.updateSaveButtonState(),console.log(`üìù Updated diagram ${this.currentSelectedDiagramId}`)}},o.addEventListener("input",this.handleMermaidCodeChange)),console.log(`‚úÖ Selected diagram: ${e} (${t.type})`)}clearMermaidEditor(){const e=this.editorContainer.querySelector("#mermaid-code-editor"),t=this.editorContainer.querySelector("#mermaid-preview");e&&(e.value=""),t&&(t.innerHTML='<div class="mermaid-placeholder">Select a diagram to preview</div>'),this.currentSelectedDiagram=null}updateMermaidPreview(){const e=this.editorContainer.querySelector("#mermaid-code-editor"),t=this.editorContainer.querySelector("#mermaid-preview");if(!e||!t)return;const n=e.value.trim();n?(this.currentSelectedDiagram&&(this.currentSelectedDiagram.code=n),t.innerHTML=`<div class="mermaid">${n}</div>`,window.mermaid&&(window.mermaid.init(void 0,t.querySelector(".mermaid")),setTimeout(()=>{this.updateZoom()},100))):t.innerHTML='<div class="mermaid-placeholder">Enter Mermaid code to preview</div>'}sendAIPrompt(){const e=this.editorContainer.querySelector("#ai-prompt-input"),t=this.editorContainer.querySelector("#ai-chat-messages");if(!e||!t)return;const n=e.value.trim();n&&(this.addAIMessage("user",n),e.value="",setTimeout(()=>{this.addAIMessage("ai","AI integration coming soon! I will help you modify Mermaid diagrams based on your prompts.")},1e3))}addAIMessage(e,t){const n=a.querySelector(this.editorContainer,"#ai-chat-messages");if(!n)return;const o=i.createAIMessage(e,t);a.setContent(n,a.getContent(n)+o,!0),n.scrollTop=n.scrollHeight}extractMermaidDiagrams(){var e;if(null===(e=this.currentContent)||void 0===e||!e.full_storage_format)return this.mermaidDiagrams=[],void(this.mermaidDiagramsMap=new Map);const{diagrams:t,diagramsMap:n}=s.Z.extractMermaidDiagrams(this.currentContent.full_storage_format);this.mermaidDiagrams=t,this.mermaidDiagramsMap=n}updateStatus(e){var t;const n=null===(t=this.editorContainer)||void 0===t?void 0:t.querySelector("#editor-status");n&&(n.textContent=e,setTimeout(()=>{n.textContent="S·∫µn s√†ng"},3e3))}async saveChanges(){console.log("üíæ Saving changes...");try{this.currentContent=this.contentSynchronizer.syncAllContent(this.currentContent,this.editorContainer,this.mermaidDiagrams);const e=this.contentSynchronizer.validateContent(this.currentContent);if(!e.isValid)throw new Error(`Content validation failed: ${e.errors.join(", ")}`);const t=await this.storageManager.saveContent(this.currentContent,this.onSave,{enableLocalStorage:!0,enableCallback:!0,showNotification:!0});this.isModified=!1,this.updateSaveButtonState(),this.originalContent=JSON.parse(JSON.stringify(this.currentContent)),console.log("‚úÖ Skipping diagram re-extraction to prevent duplicates"),console.log("‚úÖ Changes saved successfully",t),console.log("üíæ Save completed - closing editor..."),this.closeEditor()}catch(e){console.error("‚ùå Error saving changes:",e),this.storageManager.showNotification(`‚ùå L·ªói khi l∆∞u: ${e.message}`,"error")}}updateSaveButtonState(){const e=a.querySelector(this.editorContainer,"#editor-save-btn");e&&(this.isModified?(a.setContent(e,"üíæ L∆∞u thay ƒë·ªïi *"),e.style.background="#28a745",e.title="C√≥ thay ƒë·ªïi ch∆∞a l∆∞u"):(a.setContent(e,"üíæ L∆∞u thay ƒë·ªïi"),e.style.background="#007bff",e.title="L∆∞u thay ƒë·ªïi"))}zoomIn(){this.currentZoom=Math.min(1.2*this.currentZoom,3),this.updateZoom()}zoomOut(){this.currentZoom=Math.max(this.currentZoom/1.2,.3),this.updateZoom()}resetZoom(){this.currentZoom=1,this.dragOffset={x:0,y:0},this.updateZoom()}updateZoom(){const e=a.querySelector(this.editorContainer,"#mermaid-preview"),t=a.querySelector(this.editorContainer,"#zoom-level");if(e){const t=a.querySelector(e,".mermaid, svg");t&&(t.style.transform=`scale(${this.currentZoom}) translate(${this.dragOffset.x}px, ${this.dragOffset.y}px)`,t.style.transformOrigin="center center",t.style.transition="transform 0.2s ease")}t&&a.setContent(t,`${Math.round(100*this.currentZoom)}%`)}handleWheel(e){e.preventDefault(),e.deltaY<0?this.zoomIn():this.zoomOut()}closeEditor(){console.log("üîÑ Closing editor..."),this.storageManager.stopAutoSave(),this.editorContainer&&(a.removeElement(this.editorContainer),this.editorContainer=null),this.isEditorOpen=!1,this.currentContent=null,this.originalContent=null,this.mermaidDiagrams=[],this.mermaidDiagramsMap=new Map,this.currentSelectedDiagram=null,this.currentSelectedDiagramId=null,this.isModified=!1,this.currentZoom=1,this.dragOffset={x:0,y:0},console.log("‚úÖ Editor closed")}setSaveCallback(e){this.onSave=e}isOpen(){return this.isEditorOpen}getCurrentContent(){if(this.textEditor){const e=this.textEditor.getValue();this.currentContent&&(this.currentContent.full_storage_format=e)}return this.currentContent}}},371:(e,t,n)=>{n.d(t,{h:()=>r});var o=n(599);class r{static async getSettings(){try{return(await chrome.storage.sync.get([o.qF]))[o.qF]||o.a$}catch(e){return console.error("Error loading settings:",e),o.a$}}static async saveSettings(e){try{return await chrome.storage.sync.set({[o.qF]:e}),!0}catch(e){return console.error("Error saving settings:",e),!1}}static async updateSetting(e,t){try{const n={...await this.getSettings(),[e]:t};return await this.saveSettings(n)}catch(e){return console.error("Error updating setting:",e),!1}}static async resetSettings(){try{return await chrome.storage.sync.remove([o.qF]),!0}catch(e){return console.error("Error resetting settings:",e),!1}}static validateSettings(e){var t,n,o,r;const a={};if(null!==(t=e.apiKey)&&void 0!==t&&t.trim()||(a.apiKey="API Key l√† b·∫Øt bu·ªôc"),null!==(n=e.urlTemplate)&&void 0!==n&&n.trim()){const t=this.validateConfluencePageLink(e.urlTemplate);t.valid||(a.urlTemplate=t.error||"URL Template kh√¥ng h·ª£p l·ªá.")}else a.urlTemplate="URL Template l√† b·∫Øt bu·ªôc";return null!==(o=e.documentUrl)&&void 0!==o&&o.trim()?this.isValidUrl(e.documentUrl)||(a.documentUrl="URL kh√¥ng h·ª£p l·ªá"):a.documentUrl="URL th∆∞ m·ª•c l∆∞u t√†i li·ªáu l√† b·∫Øt bu·ªôc",null!==(r=e.databaseUrl)&&void 0!==r&&r.trim()?this.isValidUrl(e.databaseUrl)||(a.databaseUrl="URL kh√¥ng h·ª£p l·ªá"):a.databaseUrl="URL th∆∞ m·ª•c database l√† b·∫Øt bu·ªôc",{isValid:0===Object.keys(a).length,errors:a}}static isValidUrl(e){try{return new URL(e),!0}catch{return!1}}static validateConfluencePageLink(e){const t={valid:!1,error:null,pageId:null};if(!e||"string"!=typeof e||!e.trim())return t.error="URL l√† b·∫Øt bu·ªôc",t;let n;try{n=new URL(e.trim())}catch{return t.error="URL kh√¥ng h·ª£p l·ªá",t}const o=n.searchParams.get("pageId");if(o&&/^\d+$/.test(o))return t.valid=!0,t.pageId=o,t;const r=n.pathname.split("/"),a=r.indexOf("pages");if(a>=0&&r.length>a+1){const e=r[a+1];if(/^\d+$/.test(e))return t.valid=!0,t.pageId=e,t}return t.error="Kh√¥ng t√¨m th·∫•y pageId trong URL",t}}},378:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>MermaidRenderer});class MermaidRenderer{static async loadMermaidScript(){if(window.mermaid)return console.log("‚ö° Mermaid already loaded"),window.mermaid;const res=await fetch(chrome.runtime.getURL("lib/mermaid.min.js")),text=await res.text();return eval(text),console.log("‚úÖ Mermaid loaded dynamically"),window.mermaid}static async initializeMermaid(){await this.loadMermaidScript(),window.mermaid.initialize({startOnLoad:!1,theme:"default",securityLevel:"loose",fontFamily:"Arial, sans-serif",htmlLabels:!0,flowchart:{htmlLabels:!0},deterministicIds:!0,deterministicIDSeed:"mermaid-diagram-preview"}),window.mermaid.setConfig&&window.mermaid.setConfig({securityLevel:"loose",theme:"default"})}static async renderDiagram(e,t,n){try{const o=document.createElement("div");if(o.style.position="absolute",o.style.left="-9999px",o.style.top="-9999px",document.body.appendChild(o),!window.mermaid.render||"function"!=typeof window.mermaid.render)throw new Error("Mermaid render function not available");try{const r=window.mermaid.render(e,t);if(r&&"function"==typeof r.then){const e=await r;let t;document.body.contains(o)&&document.body.removeChild(o),t="string"==typeof e?e:e&&e.svg?e.svg:String(e),n.innerHTML=t,console.log("‚úÖ Mermaid diagram rendered successfully (promise API)")}else"string"==typeof r?(document.body.contains(o)&&document.body.removeChild(o),n.innerHTML=r,console.log("‚úÖ Mermaid diagram rendered successfully (sync API)")):window.mermaid.render(e,t,e=>{document.body.contains(o)&&document.body.removeChild(o),n.innerHTML=e,console.log("‚úÖ Mermaid diagram rendered successfully (callback API)")})}catch(e){throw document.body.contains(o)&&document.body.removeChild(o),e}}catch(e){console.error("‚ùå Mermaid render error:",e),this.showMermaidError(n,t,e)}}static showMermaidError(e,t,n){e.innerHTML=`\n      <div style="color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;">\n        <div style="font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;">\n          <span style="margin-right: 8px;">‚ö†Ô∏è</span>\n          Mermaid Render Error\n        </div>\n        <div style="font-size: 12px; color: #721c24; margin-bottom: 10px;">\n          ${n.message||"Unknown error occurred"}\n        </div>\n        <details style="margin-top: 10px;">\n          <summary style="cursor: pointer; font-size: 12px; color: #495057;">Show diagram code</summary>\n          <pre style="margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;">${t}</pre>\n        </details>\n      </div>\n    `}static detectMermaidType(e){const t=e.trim().split("\n")[0].toLowerCase();return t.includes("graph")?"graph":t.includes("flowchart")?"flowchart":t.includes("sequencediagram")?"sequence":t.includes("classDiagram")?"class":t.includes("stateDiagram")?"state":t.includes("erDiagram")?"er":t.includes("gantt")?"gantt":t.includes("pie")?"pie":"graph"}static extractMermaidDiagrams(e){const t=[],n=new Map;if(!e)return{diagrams:t,diagramsMap:n};const o=/<ac:structured-macro[^>]*ac:name="(mermaid|code)"[^>]*>([\s\S]*?)<\/ac:structured-macro>/gi;let r,a=0;for(;null!==(r=o.exec(e));){const e=r[1],o=r[2],i=o.match(/<ac:parameter[^>]*ac:name="code">([\s\S]*?)<\/ac:parameter>/);if(!i)continue;const s=i[1].trim();if(!s)continue;if("code"===e){const e=o.match(/<ac:parameter[^>]*ac:name="language">([\s\S]*?)<\/ac:parameter>/);if(!e||"mermaid"!==e[1].trim())continue}const l=this.detectMermaidType(s),c=`mermaid-diagram-${a}`,d={id:c,code:s,originalCode:s,originalMatch:r[0],index:a,type:l,title:`${l.charAt(0).toUpperCase()+l.slice(1)} Diagram ${a+1}`};t.push(d),n.set(c,{content:s,type:l,index:a,title:d.title}),console.log(`‚úÖ Extracted diagram ${a}:`,{type:l,code:s.substring(0,50)+"..."}),a++}return console.log("üé® Extracted Mermaid diagrams:",t),{diagrams:t,diagramsMap:n}}}},546:(e,t,n)=>{n.d(t,{O:()=>a,T:()=>i});var o=n(599);async function r(e,t){try{console.log(`üíæ Saving diagram ${e.filename} to API for page ${t}`);const n={filename:e.filename,data:e.diagramCode,svg:e.svg||"",png:e.png||""},o=await fetch(`/rest/mermaidrest/1.0/mermaid/${t}`,{method:"POST",headers:{Accept:"application/json, text/javascript, */*; q=0.01","Content-Type":"application/json; charset=UTF-8","X-Requested-With":"XMLHttpRequest"},body:JSON.stringify(n)});if(!o.ok){const t=await o.text();return console.error(`‚ùå Failed to save diagram ${e.filename}:`,o.status,t),!1}return console.log(`‚úÖ Successfully saved diagram ${e.filename} to API`),!0}catch(t){return console.error(`‚ùå Error saving diagram ${e.filename}:`,t),!1}}class a{static async request(e,t={}){try{const n=await fetch(e,{headers:{"Content-Type":"application/json",...t.headers},...t});if(!n.ok)throw new Error(`HTTP ${n.status}: ${n.statusText}`);return{success:!0,data:await n.json()}}catch(e){return console.error("API request failed:",e),{success:!1,error:e.message}}}static async generateDocument(e){return await this.request(o.yl.GEN_DOC,{method:"POST",body:JSON.stringify(e)})}static async checkStatus(e){return await this.request(`${o.yl.GEN_DOC_STATUS}?job_id=${e}`)}static async getResult(e){return await this.request(`${o.yl.GEN_DOC_RESULT}?job_id=${e}`)}static async editText(e){return await this.request(o.yl.EDIT_TEXT,{method:"POST",body:JSON.stringify(e)})}}class i{static extractPageId(e){const t=[/\/pages\/(\d+)/,/pageId=(\d+)/,/\/(\d+)$/];for(const n of t){const t=e.match(n);if(t)return t[1]}return null}static getCurrentSpaceKey(){const e=document.querySelector('meta[name="ajs-space-key"]');if(e)return e.content;const t=document.querySelector("[data-space-key]");if(t)return t.dataset.spaceKey;const n=window.location.pathname.match(/\/spaces\/([^\/]+)/);return n?n[1]:null}static async fetchPageContent(e){try{var t,n,o,r;console.log("üîç Fetching Confluence content for pageId:",e);const a=`/rest/api/content/${e}?expand=body.storage,body.view`,i=await fetch(a,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"}});if(!i.ok){const e=await i.text();throw console.error("‚ùå API Error:",i.status,e),new Error(`HTTP ${i.status}: ${i.statusText}`)}const s=await i.json();return console.log("üìÑ Content data received:",{id:s.id,title:s.title,hasStorage:!(null===(t=s.body)||void 0===t||null===(t=t.storage)||void 0===t||!t.value),hasView:!(null===(n=s.body)||void 0===n||null===(n=n.view)||void 0===n||!n.value)}),{title:s.title,content:(null===(o=s.body)||void 0===o||null===(o=o.view)||void 0===o?void 0:o.value)||"",storageFormat:(null===(r=s.body)||void 0===r||null===(r=r.storage)||void 0===r?void 0:r.value)||""}}catch(e){throw console.error("‚ùå Error fetching Confluence content:",e),e}}static async cloneTemplateForGeneration(e){try{var t,n;if(console.log("üîç Cloning template from URL:",e),!e||!e.trim())throw console.error("‚ùå Empty URL provided"),new Error("URL template kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");const o=this.extractPageIdFromUrl(e);if(!o)throw console.error("‚ùå No pageId found in URL"),new Error("URL kh√¥ng ch·ª©a pageId h·ª£p l·ªá. Vui l√≤ng ki·ªÉm tra l·∫°i URL template.");console.log("üìã Fetching template pageId:",o);const r=`/rest/api/content/${o}?expand=body.storage`,a=await fetch(r,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"}});if(!a.ok){const e=await a.text();throw console.error("‚ùå API Error:",a.status,e),new Error(`HTTP ${a.status}: ${a.statusText}`)}const i=await a.json();if(console.log("üìÑ Template data received:",{id:i.id,title:i.title,hasStorage:!(null===(t=i.body)||void 0===t||null===(t=t.storage)||void 0===t||!t.value)}),null===(n=i.body)||void 0===n||null===(n=n.storage)||void 0===n||!n.value)throw console.error("‚ùå No storage content found in response"),new Error("Template kh√¥ng c√≥ n·ªôi dung storage format");const s=i.body.storage.value;console.log("üìÑ Original storage format length:",s.length);const{templateStructure:l,analysisInfo:c}=this.extractTemplateStructure(s),d={title:i.title,originalStorageFormat:s,templateStructure:l,analysisInfo:c};return console.log("‚úÖ Template cloned successfully:",{title:d.title,originalLength:s.length,structureLength:l.length,analysis:c}),d}catch(e){throw console.error("‚ùå Error cloning template:",e),e}}static extractTemplateStructure(e){let t=0,n=0,o=0;console.log("üîç Extracting template structure...");let r=e;[/(<<.*?>>)/g,/(\{\{.*?\}\})/g,/(&lt;&lt;.*?&gt;&gt;)/g,/(\u003c\u003c.*?\u003e\u003e)/g].forEach((e,t)=>{const n=[...r.matchAll(e)];console.log(`üéØ Placeholder pattern ${t+1} found ${n.length} matches`),o+=n.length}),t=(e.match(/<p[^>]*>\s*<\/p>/g)||[]).length,n=(e.match(/<td[^>]*>\s*<\/td>/g)||[]).length;const a={emptyParagraphs:t,emptyTableCells:n,placeholders:o,totalLength:e.length};return{templateStructure:r,analysisInfo:a}}static extractPageIdFromUrl(e){const t=[/\/pages\/(\d+)/,/pageId=(\d+)/,/\/(\d+)$/,/viewpage\.action\?pageId=(\d+)/];for(const n of t){const t=e.match(n);if(t)return t[1]}return null}static extractPlaceholders(e){console.log("üîç Analyzing content for placeholders..."),console.log("üìÑ Content length:",e.length),console.log("üìÑ Content preview (first 500 chars):",e.substring(0,500));const t=e.replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&amp;/g,"&").replace(/&quot;/g,'"').replace(/&#39;/g,"'"),n=[/<<([^>]+)>>/g,/&lt;&lt;([^&]+)&gt;&gt;/g];let o=[];[e,t].forEach((e,t)=>{console.log(`üîç Testing on ${0===t?"original":"decoded"} content...`),n.forEach((t,n)=>{const r=[...e.matchAll(t)];console.log(`üéØ Pattern ${n+1} found ${r.length} matches:`,r.map(e=>e[0])),1===n?o.push(...r.map(e=>`<<${e[1]}>>`)):o.push(...r.map(e=>e[0]))})});const r=[...new Set(o)];return console.log("üéØ Unique placeholders found:",r),r}static async extractImagesFromHtml(e){const t=[];try{const n=(new DOMParser).parseFromString(e,"text/html").querySelectorAll("img");for(const e of Array.from(n)){const n=e.getAttribute("src");let o;if(n){let r=n;if(n.startsWith("data:image"))o=e.getAttribute("alt")?e.getAttribute("alt")+".png":`image_${Date.now()}.png`;else{const{base64:e,filename:t}=await this.urlToBase64(n);if(!e)continue;r=e,o=t}t.push({src:r,alt:e.getAttribute("alt")||void 0,filename:o})}}}catch(e){console.warn("extractImagesFromHtml error:",e)}return t}static async urlToBase64(e){try{const t=await fetch(e);if(!t.ok)return{base64:null,filename:this.getFilenameFromUrl(e)};const n=await t.blob(),o=this.getFilenameFromUrl(e);return await new Promise((e,t)=>{const r=new FileReader;r.onloadend=()=>e({base64:r.result,filename:o}),r.onerror=t,r.readAsDataURL(n)})}catch(t){return console.warn("urlToBase64 error:",t),{base64:null,filename:this.getFilenameFromUrl(e)}}}static getFilenameFromUrl(e){try{const t=new URL(e).pathname;return t.substring(t.lastIndexOf("/")+1)||`image_${Date.now()}`}catch{return`image_${Date.now()}`}}static validateAndCleanTitle(e){return e.replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g,"").replace(/√¢‚Ç¨‚Ñ¢/g,"'").replace(/√¢‚Ç¨≈ì/g,'"').replace(/√¢‚Ç¨/g,'"').replace(/√¢‚Ç¨¬¶/g,"...").replace(/\s+/g," ").trim()||`Generated Document - ${(new Date).toLocaleDateString()}`}static ensureUtf8Encoding(e){try{const t=new TextEncoder,n=new TextDecoder("utf-8",{fatal:!1}),o=t.encode(e);return n.decode(o)}catch(t){return console.warn("UTF-8 encoding issue, using original content:",t),e}}static basicContentCleanup(e){return e.replace(/^```\w*\s*/g,"").replace(/```\s*$/g,"").trim().replace(/^\uFEFF/,"").replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g,"").replace(/√¢‚Ç¨‚Ñ¢/g,"'").replace(/√¢‚Ç¨≈ì/g,'"').replace(/√¢‚Ç¨/g,'"').replace(/√¢‚Ç¨¬¶/g,"...").replace(/√¢‚Ç¨"/g,"‚Äì").replace(/√¢‚Ç¨"/g,"‚Äî").replace(/\r\n/g,"\n").replace(/\r/g,"\n").replace(/\n{3,}/g,"\n\n").replace(/[ \t]+$/gm,"").replace(/^[ \t]+/gm,"").trim()}static advancedHTMLSanitization(e){console.log("üî¨ Starting advanced HTML sanitization...");let t=e.replace(/<(br|hr|img|input|meta|link|area|base|col|embed|source|track|wbr)([^>]*?)(?<!\/)\s*>/gi,"<$1$2/>").replace(/(\w+)=([^"\s>]+)(\s|>)/g,'$1="$2"$3').replace(/&(?![a-zA-Z0-9#]+;)/g,"&amp;").replace(/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]/g,"").replace(/√¢‚Ç¨‚Ñ¢/g,"'").replace(/√¢‚Ç¨≈ì/g,'"').replace(/√¢‚Ç¨/g,'"').replace(/<(\w+)([^>]*?)>\s*<\/\1>/g,(e,t)=>["p","td","th","li"].includes(t.toLowerCase())?`<${t}>&nbsp;</${t}>`:"").replace(/>\s+</g,"><").replace(/\s+/g," ").trim();return console.log("‚úÖ Advanced HTML sanitization complete"),console.log(`üìä Original length: ${e.length}, Final length: ${t.length}`),t}static convertToMermaidCloudMacros(e){console.log("üîÑ Converting all macros to mermaid-cloud macros...");let t=1,n=111;const o=e.replace(/<ac:structured-macro[^>]*>[\s\S]*?<\/ac:structured-macro>/g,e=>{const o=`k-tool-diagram-${t}`,r=n.toString();return t++,n++,console.log(`üîß Converting macro ${t-1} to mermaid-cloud: ${o}`),`<ac:structured-macro ac:name="mermaid-cloud" ac:schema-version="1" ac:macro-id="${r}">\n<ac:parameter ac:name="toolbar">bottom</ac:parameter>\n<ac:parameter ac:name="filename">${o}</ac:parameter>\n<ac:parameter ac:name="format">svg</ac:parameter>\n<ac:parameter ac:name="zoom">fit</ac:parameter>\n<ac:parameter ac:name="revision">1</ac:parameter>\n</ac:structured-macro>`});return console.log(`‚úÖ Converted ${t-1} macros to mermaid-cloud`),o}static validateAndFixXML(e){let t=e;return console.log("üîç Validating and fixing XML content..."),t=t.replace(/<\s+([a-zA-Z])/g,"<$1").replace(/([a-zA-Z])\s+([^>]*>)/g,"$1 $2").replace(/<\/\s+([a-zA-Z][^>]*?)>/g,"</$1>").replace(/([a-zA-Z-]+)\s*=\s*"([^"]*)"/g,'$1="$2"').replace(/\s{2,}/g," ").replace(/\r\n/g,"\n").replace(/\r/g,"\n"),t=t.replace(/<ac:([^>]+)>/g,(e,t)=>`<ac:${t.trim()}>`).replace(/<ac:structured-macro\s+([^>]+)>/g,(e,t)=>`<ac:structured-macro ${t.trim().replace(/\s+/g," ")}>`).replace(/<!\[CDATA\[\s*([\s\S]*?)\s*\]\]>/g,"<![CDATA[$1]]>"),console.log("‚úÖ XML validation and fixing complete"),t}static async createPage(e,t,n,o=null){try{var a,i;console.log("üîÑ Creating page from generated content...");const s=this.validateAndCleanTitle(e);console.log("üìã Original title:",e),console.log("üìã Clean title:",s),console.log("üìã Space:",n),console.log("üìã Content length:",t.length);const l=this.ensureUtf8Encoding(t);console.log("üî§ UTF-8 validation complete"),console.log("üìÑ Content preview (first 200 chars):"),console.log(l.substring(0,200)),console.log("üßπ Starting enhanced content cleanup...");let c=this.basicContentCleanup(l);console.log("üî¨ Performing advanced HTML sanitization..."),c=this.advancedHTMLSanitization(c),console.log("üîÑ Converting macros to mermaid-cloud..."),c=this.convertToMermaidCloudMacros(c);const d=c;console.log("‚úÖ Content processing complete"),console.log("üìÑ Final content length:",d.length),console.log("üìÑ Final content preview (first 200 chars):"),console.log(d.substring(0,200));const g={type:"page",title:s.trim()+"-"+Date.now(),space:{key:n},body:{storage:{value:d,representation:"storage"}}};o&&(g.ancestors=[{id:o}],console.log("üìÅ Setting parent page ID:",o)),console.log("üì§ Sending page creation request...");const m=await fetch("/rest/api/content",{method:"POST",headers:{"Content-Type":"application/json; charset=utf-8",Accept:"application/json","X-Atlassian-Token":"no-check"},body:JSON.stringify(g)});if(!m.ok){const e=await m.text();console.error("‚ùå Page creation failed:",e);let t=`HTTP ${m.status}: ${m.statusText}`;try{const n=JSON.parse(e);n.message&&(t=n.message),n.errors&&Array.isArray(n.errors)&&(t+=`\n\nDetailed errors:\n${n.errors.map(e=>`${e.field||"Unknown field"}: ${e.message||e}`).join("\n")}`)}catch(n){console.warn("Could not parse error response as JSON"),t+=`\n\nRaw error: ${e}`}throw new Error(t)}const u=await m.json();console.log("‚úÖ Page created successfully!"),console.log("üìÑ Page ID:",u.id),console.log("üîó Page URL:",null===(a=u._links)||void 0===a?void 0:a.webui);let h=`‚úÖ T·∫°o t√†i li·ªáu th√†nh c√¥ng!\n\nTi√™u ƒë·ªÅ: ${u.title}\nPage ID: ${u.id}`;const p=function(e){let t=1;const n=[],o=/<ac:structured-macro[^>]*ac:name="mermaid"[^>]*>[\s\S]*?<ac:parameter[^>]*ac:name="code"[^>]*>(?:<!\[CDATA\[([\s\S]*?)\]\]>|([\s\S]*?))<\/ac:parameter>[\s\S]*?<\/ac:structured-macro>/g;let r;for(;null!==(r=o.exec(e));){const e=(r[1]||r[2]||"").trim();e&&(n.push({filename:`k-tool-diagram-${t}`,macroId:(110+t).toString(),diagramCode:e}),t++)}return n}(t);if(console.log(`üìä Extracted ${p.length} diagrams from content`),p.length>0){console.log("üé® Processing extracted diagrams...");const e=await async function(e,t){if(0===t.length)return console.log("‚ÑπÔ∏è No diagrams to process"),{success:0,total:0,errors:[]};console.log(`üîÑ Processing ${t.length} diagrams for page ${e}`);let n=0;const o=[],a=t.length;try{console.log("üé® Converting diagrams to SVG/PNG...");const a=await Promise.all(t.map(e=>async function(e){try{console.log(`üé® Converting diagram to SVG/PNG: ${e.filename}`),console.log(`üé® Converting diagram to SVG/PNG: ${e.diagramCode}`),await async function(){if("undefined"==typeof window||!window.mermaid)return new Promise((e,t)=>{const n=document.createElement("script");n.src="https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.min.js",n.onload=()=>{window.mermaid&&window.mermaid.initialize({startOnLoad:!1,securityLevel:"loose",theme:"default"}),e()},n.onerror=t,document.head.appendChild(n)})}();const t=await window.mermaid.render(`diagram-${e.macroId}`,e.diagramCode);let n;if("string"==typeof t)n=t;else{if(!t||"object"!=typeof t||!t.svg)throw new Error("Invalid SVG result from mermaid.render");n=t.svg}e.svg=n;const o=document.createElement("canvas"),r=o.getContext("2d"),a=new Image;return await new Promise((t,i)=>{a.onload=()=>{o.width=a.width||800,o.height=a.height||600,r&&(r.fillStyle="white",r.fillRect(0,0,o.width,o.height),r.drawImage(a,0,0),e.png=o.toDataURL("image/png").split(",")[1]),t(!0)},a.onerror=i,a.src="data:image/svg+xml;base64,"+btoa(unescape(encodeURIComponent(n)))}),console.log(`‚úÖ Successfully converted ${e.filename} to SVG/PNG`),e}catch(t){return console.error(`‚ùå Failed to convert diagram ${e.filename}:`,t),e.png="iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==",e}}(e)));console.log("üíæ Saving diagrams sequentially...");for(let t=0;t<a.length;t++){const i=a[t];console.log(`üìä Saving diagram ${t+1}/${a.length}: ${i.filename}`);try{await r(i,e)?(n++,console.log(`‚úÖ Diagram ${t+1}/${a.length} saved successfully`)):(o.push(`Failed to save diagram: ${i.filename}`),console.error(`‚ùå Diagram ${t+1}/${a.length} failed to save`))}catch(e){const n=`Error saving diagram ${i.filename}: ${e instanceof Error?e.message:"Unknown error"}`;o.push(n),console.error(`‚ùå Diagram ${t+1}/${a.length} error:`,e)}t<a.length-1&&await new Promise(e=>setTimeout(e,500))}}catch(e){console.error("‚ùå Error during diagram processing:",e),o.push(`Processing error: ${e instanceof Error?e.message:"Unknown error"}`)}const i={success:n,total:a,errors:o};return console.log(`üìä Diagram processing complete: ${n}/${a} successful`),o.length>0&&console.warn("‚ö†Ô∏è Diagram processing errors:",o),i}(u.id,p);e.total>0&&(h+=`\n\nüìä Diagrams: ${e.success}/${e.total} saved successfully`,e.errors.length>0&&(h+=`\n‚ö†Ô∏è Diagram errors:\n${e.errors.join("\n")}`))}if("undefined"!=typeof window&&window.KToolNotificationUtils&&window.KToolNotificationUtils.success("Trang ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!",h.replace(/^‚úÖ\s*/,"")),null!==(i=u._links)&&void 0!==i&&i.webui){const e=`${window.location.origin}${u._links.webui}`;window.open(e,"_blank")}}catch(e){console.error("‚ùå Error creating page:",e);let t="L·ªói khi t·∫°o trang Confluence.";throw e instanceof Error&&(t=e.message.includes("validation failed")?`‚ùå N·ªôi dung kh√¥ng h·ª£p l·ªá:\n\n${e.message}`:e.message.includes("HTTP 400")?"‚ùå D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá. Vui l√≤ng ki·ªÉm tra l·∫°i n·ªôi dung.":e.message.includes("HTTP 401")?"‚ùå Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p. Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i.":e.message.includes("HTTP 403")?"‚ùå Kh√¥ng c√≥ quy·ªÅn t·∫°o trang trong space n√†y.":`‚ùå ${e.message}`),"undefined"!=typeof window&&window.KToolNotificationUtils&&window.KToolNotificationUtils.error("L·ªói t·∫°o trang",t.replace(/^‚ùå\s*/,"")),e}}}},599:(e,t,n)=>{n.d(t,{Wx:()=>s,a$:()=>i,qF:()=>o,yl:()=>a});const o="extensionSettings",r="http://localhost:5001",a={GEN_DOC:`${r}/api/generate-full-confluence-doc`,GEN_DOC_STATUS:`${r}/api/generate-status`,GEN_DOC_RESULT:`${r}/api/generate-result`,EDIT_DIAGRAM:`${r}/api/edit-diagram`,EDIT_TEXT:`${r}/api/edit-text`},i={apiKey:"",urlTemplate:"",customPrompt:"",documentUrl:"",databaseUrl:"",instructionUrl:"",isEnabled:!0,selectedModel:"sonar-pro"},s=[{id:"fetch",label:"L·∫•y n·ªôi dung BA",status:"pending"},{id:"clone",label:"Clone template",status:"pending"},{id:"analyze",label:"Ph√¢n t√≠ch placeholders",status:"pending"},{id:"generate",label:"AI sinh t√†i li·ªáu",status:"pending"},{id:"complete",label:"Ho√†n th√†nh",status:"pending"}]}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var __webpack_exports__={},_shared_api_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(546),_shared_constants_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(599),_shared_storage_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(371),_confluenceEditor_js__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(278);class KToolContent{constructor(){this.settings={},this.isModalOpen=!1,this.currentTab="generate",this.generationJob=null,this.progressSteps=[..._shared_constants_js__WEBPACK_IMPORTED_MODULE_1__.Wx],this.confluenceEditor=null,this.init()}async init(){if(console.log("üöÄ K-Tool Content Script initializing..."),document.getElementById("ktool-root"))console.log("üîç K-Tool already injected, skipping...");else{await this.loadSettings(),this.injectUI(),this.bindEvents();try{console.log("üîß Initializing ConfluenceEditor..."),this.confluenceEditor=new _confluenceEditor_js__WEBPACK_IMPORTED_MODULE_3__.m,console.log("‚úÖ ConfluenceEditor initialized:",this.confluenceEditor)}catch(e){console.error("‚ùå Error initializing ConfluenceEditor:",e),this.confluenceEditor=null}window.ktoolContent=this,console.log("‚úÖ K-Tool Content Script ready")}}async loadSettings(){try{this.settings=await _shared_storage_js__WEBPACK_IMPORTED_MODULE_2__.h.getSettings(),console.log("‚öôÔ∏è Settings loaded:",this.settings)}catch(e){console.error("‚ùå Error loading settings:",e)}}injectUI(){const e=document.createElement("div");e.id="ktool-root",document.body.appendChild(e);const t=this.createBubble();e.appendChild(t);const n=this.createModal();e.appendChild(n)}createBubble(){const e=document.createElement("div");return e.className="ktool-bubble "+(this.settings.isEnabled?"":"disabled"),e.innerHTML=`\n      <div class="ktool-bubble-icon">K</div>\n      <div class="ktool-tooltip">\n        ${this.settings.isEnabled?"üöÄ K-Tool Document Generator<br/>Click ƒë·ªÉ m·ªü c√¥ng c·ª• sinh t√†i li·ªáu":"‚ö†Ô∏è K-Tool ƒë√£ t·∫Øt<br/>Vui l√≤ng b·∫≠t trong settings"}\n      </div>\n    `,e.addEventListener("click",()=>{this.settings.isEnabled?this.openModal():this.showNotification("K-Tool ƒë√£ t·∫Øt. Vui l√≤ng b·∫≠t trong extension settings.","warning")}),e}createModal(){const e=document.createElement("div");return e.className="ktool-modal-overlay",e.innerHTML=`\n      <div class="ktool-modal">\n        <div class="ktool-modal-header">\n          <h2 class="ktool-modal-title">K-Tool Document Generator</h2>\n          <button class="ktool-modal-close" type="button">&times;</button>\n        </div>\n        <div class="ktool-modal-body">\n          <div class="ktool-tabs">\n            <button class="ktool-tab active" data-tab="generate">üìÑ Sinh t√†i li·ªáu</button>\n            <button class="ktool-tab" data-tab="preview">üëÅÔ∏è Preview</button>\n            <button class="ktool-tab" data-tab="settings">‚öôÔ∏è Settings</button>\n          </div>\n          \n          \x3c!-- Generate Tab --\x3e\n          <div class="ktool-tab-content active" data-tab="generate">\n            ${this.createGenerateTab()}\n          </div>\n          \n          \x3c!-- Preview Tab --\x3e\n          <div class="ktool-tab-content" data-tab="preview" id="previewTab">\n            ${this.createPreviewTab()}\n          </div>\n          \n          \x3c!-- Settings Tab --\x3e\n          <div class="ktool-tab-content" data-tab="settings">\n            ${this.createSettingsTab()}\n          </div>\n        </div>\n      </div>\n    `,e}createGenerateTab(){return`\n      <div class="ktool-form">\n        <div class="ktool-form-group">\n          <label class="ktool-form-label">URL t√†i li·ªáu BA *</label>\n          <input \n            type="url" \n            class="ktool-form-input" \n            id="baDocUrl" \n            placeholder="https://confluence.com/pages/123456"\n            value="${window.location.href}"\n          >\n        </div>\n        \n        <div class="ktool-form-group">\n          <label class="ktool-form-label">Ghi ch√∫ th√™m (t√πy ch·ªçn)</label>\n          <textarea \n            class="ktool-form-textarea" \n            id="additionalNotes" \n            placeholder="Th√™m ghi ch√∫ ho·∫∑c y√™u c·∫ßu ƒë·∫∑c bi·ªát..."\n            rows="3"\n          ></textarea>\n        </div>\n        \n        <div style="display: flex; gap: 12px; margin-top: 20px;">\n          <button class="ktool-btn ktool-btn-primary" id="generateBtn">\n            üîß T·∫°o t√†i li·ªáu\n          </button>\n          <button class="ktool-btn ktool-btn-secondary" id="resetBtn">\n            üîÑ Reset\n          </button>\n        </div>\n      </div>\n      \n      \x3c!-- Progress Section --\x3e\n      <div class="ktool-progress" id="progressSection" style="display: none;">\n        <h3 style="margin: 0 0 16px 0; font-size: 16px;">Ti·∫øn tr√¨nh sinh t√†i li·ªáu:</h3>\n        <div id="progressSteps"></div>\n      </div>\n    `}createPreviewTab(){return'\n      <div class="ktool-form">\n        <div style="text-align: center; padding: 40px; color: #6c757d;">\n          <div style="font-size: 48px; margin-bottom: 16px;">üìÑ</div>\n          <h3 style="margin: 0 0 8px 0;">Ch∆∞a c√≥ n·ªôi dung ƒë·ªÉ preview</h3>\n          <p style="margin: 0;">Vui l√≤ng sinh t√†i li·ªáu tr∆∞·ªõc khi preview.</p>\n        </div>\n      </div>\n    '}createSettingsTab(){return'\n      <div class="ktool-form">\n        <div style="text-align: center; padding: 40px; color: #6c757d;">\n          <div style="font-size: 48px; margin-bottom: 16px;">‚öôÔ∏è</div>\n          <h3 style="margin: 0 0 8px 0;">C√†i ƒë·∫∑t Extension</h3>\n          <p style="margin: 0 0 16px 0;">Click v√†o icon extension tr√™n toolbar ƒë·ªÉ c√†i ƒë·∫∑t.</p>\n          <button class="ktool-btn ktool-btn-primary" onclick="chrome.runtime.openOptionsPage?.() || alert(\'Vui l√≤ng click v√†o icon K-Tool tr√™n toolbar ƒë·ªÉ c√†i ƒë·∫∑t\')">\n            üîß M·ªü Settings\n          </button>\n        </div>\n      </div>\n    '}bindEvents(){const e=document.querySelector(".ktool-modal-overlay");e.querySelector(".ktool-modal-close").addEventListener("click",()=>{this.closeModal()}),e.addEventListener("click",t=>{t.target===e&&this.closeModal()}),e.querySelectorAll(".ktool-tab").forEach(e=>{e.addEventListener("click",()=>{this.switchTab(e.dataset.tab)})}),e.querySelector("#generateBtn").addEventListener("click",()=>{this.handleGenerate()}),e.querySelector("#resetBtn").addEventListener("click",()=>{this.handleReset()}),chrome.runtime.onMessage.addListener((e,t,n)=>{"settingsChanged"===e.action&&(this.settings=e.settings,this.updateBubbleState())}),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.isModalOpen&&this.closeModal(),!e.ctrlKey&&!e.metaKey||"k"!==e.key||this.isModalOpen||(e.preventDefault(),this.settings.isEnabled&&this.openModal())})}openModal(){const e=document.querySelector(".ktool-modal-overlay");e.classList.add("show"),this.isModalOpen=!0,setTimeout(()=>{const t=e.querySelector(".ktool-form-input");t&&t.focus()},300)}closeModal(){document.querySelector(".ktool-modal-overlay").classList.remove("show"),this.isModalOpen=!1}switchTab(e){document.querySelectorAll(".ktool-tab").forEach(t=>{t.classList.toggle("active",t.dataset.tab===e)}),document.querySelectorAll(".ktool-tab-content").forEach(t=>{t.classList.toggle("active",t.dataset.tab===e)}),this.currentTab=e}updateBubbleState(){const e=document.querySelector(".ktool-bubble"),t=e.querySelector(".ktool-tooltip");this.settings.isEnabled?(e.classList.remove("disabled"),t.innerHTML="üöÄ K-Tool Document Generator<br/>Click ƒë·ªÉ m·ªü c√¥ng c·ª• sinh t√†i li·ªáu"):(e.classList.add("disabled"),t.innerHTML="‚ö†Ô∏è K-Tool ƒë√£ t·∫Øt<br/>Vui l√≤ng b·∫≠t trong settings")}async handleGenerate(){const e=document.getElementById("baDocUrl").value.trim(),t=document.getElementById("additionalNotes").value.trim();if(e){if(!_shared_storage_js__WEBPACK_IMPORTED_MODULE_2__.h.validateSettings(this.settings).isValid)return this.showNotification("Vui l√≤ng c·∫•u h√¨nh ƒë·∫ßy ƒë·ªß settings tr∆∞·ªõc khi sinh t√†i li·ªáu!","error"),void this.switchTab("settings");try{this.showProgress(),this.updateProgress(0,"active");const n=_shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.extractPageId(e);if(!n)throw new Error("‚ùå URL kh√¥ng h·ª£p l·ªá! Vui l√≤ng ki·ªÉm tra l·∫°i URL Confluence page.");console.log("üîç Fetching content for pageId:",n);const o=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.fetchPageContent(n);if(!o)throw new Error("‚ùå Kh√¥ng th·ªÉ l·∫•y n·ªôi dung t√†i li·ªáu BA!");const r=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.extractImagesFromHtml(o.content);if(console.log("üñºÔ∏è Extracted images (all base64):",r),this.updateProgress(0,"completed"),this.updateProgress(1,"active"),!this.settings.urlTemplate)throw new Error("‚ö†Ô∏è Vui l√≤ng setting template c·ªßa t√†i li·ªáu!");console.log("üîÑ Cloning template from:",this.settings.urlTemplate);const a=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.cloneTemplateForGeneration(this.settings.urlTemplate);if(!a)throw new Error("‚ùå Kh√¥ng th·ªÉ clone template! Vui l√≤ng ki·ªÉm tra URL template trong Settings.");console.log("‚úÖ Template cloned successfully:",a.title),this.updateProgress(1,"completed"),this.updateProgress(2,"active");const i=_shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.extractPlaceholders(a.originalStorageFormat);if(console.log("üîç Found placeholders <<>>:",i),0===i.length)throw new Error("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y placeholder n√†o c√≥ d·∫°ng <<T√™n>>. Vui l√≤ng ki·ªÉm tra template!");this.updateProgress(2,"completed"),this.updateProgress(3,"active");let s="";if(this.settings.instructionUrl){const e=_shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.extractPageId(this.settings.instructionUrl);if(e){console.log("üîç Fetching instruction content for pageId:",e);const t=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.fetchPageContent(e);s=(null==t?void 0:t.content)||""}else console.warn("‚ö†Ô∏è Invalid instruction URL:",this.settings.instructionUrl)}const l={ba_content:o.content,template_structure:a.templateStructure,original_storage_format:a.originalStorageFormat,instructions:s,additional_prompt:this.settings.customPrompt||"",placeholders:i,selectedModel:this.settings.selectedModel,images:r,additional_notes:t};console.log("üì§ Sending payload for placeholder filling:",{ba_content_length:l.ba_content.length,template_structure_length:l.template_structure.length,original_format_length:l.original_storage_format.length,placeholders_found:i.length,placeholders_list:i});const c=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.O.generateDocument(l),d=c.data.job_id;if(!d)throw new Error(c.error||"Kh√¥ng nh·∫≠n ƒë∆∞·ª£c job_id t·ª´ server!");this.currentJobId=d,await this.pollGenerationResult(d,l)}catch(e){console.error("‚ùå Generation error:",e),this.showNotification(`L·ªói sinh t√†i li·ªáu: ${e.message}`,"error"),this.hideProgress()}}else this.showNotification("Vui l√≤ng nh·∫≠p URL t√†i li·ªáu BA!","error")}async pollGenerationResult(e,t){let n=0;const o=async()=>{n++;try{console.log(`üîÑ Polling attempt ${n}/20 for job ${e}`);const t=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.O.checkStatus(e);if(console.log(`statusResult: ${t}`),!t.success)throw new Error("L·ªói ki·ªÉm tra tr·∫°ng th√°i job");const r=t.data.status;if("done"===r){console.log("‚úÖ Generation completed!");const t=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.O.getResult(e),n=JSON.stringify(t,null,2);if(console.log(`Document generate:\n${n}`),t.success)return void this.handleGenerationComplete(t.data.result);throw new Error("L·ªói l·∫•y k·∫øt qu·∫£ sinh t√†i li·ªáu")}if("error"===r)throw new Error("Job sinh t√†i li·ªáu th·∫•t b·∫°i tr√™n server");if(n>=20)throw new Error("‚è∞ Timeout: Qu√° tr√¨nh sinh t√†i li·ªáu m·∫•t qu√° nhi·ªÅu th·ªùi gian. Vui l√≤ng th·ª≠ l·∫°i.");t.data.progress_message&&console.log(`üìù Progress: ${t.data.progress_message}`),setTimeout(o,1e4)}catch(e){throw console.error("‚ùå Polling error:",e),this.showNotification(`L·ªói trong qu√° tr√¨nh sinh t√†i li·ªáu: ${e.message}`,"error"),this.hideProgress(),this.currentJobId=null,e}};await o()}handleGenerationComplete(e){this.updateProgress(3,"completed"),this.updateProgress(4,"completed"),this.generatedContent=e,console.log("‚úÖ Generated content:",e),this.switchTab("preview"),this.updatePreviewTab(e),this.showNotification("Sinh t√†i li·ªáu th√†nh c√¥ng!","success"),this.hideProgress()}updatePreviewTab(e){const t=document.getElementById("previewTab");t.innerHTML=`\n      <div class="ktool-form">\n        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">\n          <h3 style="margin: 0;">Preview T√†i li·ªáu</h3>\n          <div style="display: flex; gap: 12px;">\n            <button class="ktool-btn ktool-btn-secondary" id="editContentBtn">\n              ‚úèÔ∏è Ch·ªânh s·ª≠a n·ªôi dung\n            </button>\n            <button class="ktool-btn ktool-btn-primary" id="createPageBtn">\n              üìÑ T·∫°o trang Confluence\n            </button>\n            <button class="ktool-btn ktool-btn-secondary" id="downloadBtn">\n              üíæ T·∫£i xu·ªëng\n            </button>\n          </div>\n        </div>\n\n        <div id="documentPreview" style="border: 1px solid #e9ecef; border-radius: 8px; padding: 20px; background: #f8f9fa; max-height: 400px; overflow-y: auto; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6;">\n          ${e.full_storage_format||"<p>Kh√¥ng c√≥ n·ªôi dung</p>"}\n        </div>\n      </div>\n    `;const n=t.querySelector("#editContentBtn"),o=t.querySelector("#createPageBtn"),r=t.querySelector("#downloadBtn");n.addEventListener("click",()=>this.handleEditContent(e)),o.addEventListener("click",()=>this.handleCreatePage()),r.addEventListener("click",()=>this.handleDownload()),setTimeout(()=>{this.initializeMermaid()},100)}async handleCreatePage(){try{const e=_shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.getCurrentSpaceKey();if(!e)throw new Error("Kh√¥ng th·ªÉ x√°c ƒë·ªãnh space key c·ªßa trang hi·ªán t·∫°i");const t=`K-Tool Generated Document - ${(new Date).toLocaleDateString()}`,n=this.generatedContent.full_storage_format||this.generatedContent.content;let o=null;this.settings.documentUrl&&(o=_shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.extractPageId(this.settings.documentUrl));const r=await _shared_api_js__WEBPACK_IMPORTED_MODULE_0__.T.createPage(t,n,e,o);if(this.showNotification("T·∫°o trang Confluence th√†nh c√¥ng!","success"),r.id){const e=`${window.location.origin}/pages/${r.id}`;console.log("üîó Auto-opening new page:",e),window.open(e,"_blank")}}catch(e){console.error("‚ùå Create page error:",e),this.showNotification(`L·ªói t·∫°o trang: ${e.message}`,"error")}}handleDownload(){const e=this.generatedContent.full_storage_format||this.generatedContent.content,t=new Blob([e],{type:"text/html"}),n=URL.createObjectURL(t),o=document.createElement("a");o.href=n,o.download=`ktool-document-${Date.now()}.html`,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(n),this.showNotification("T·∫£i xu·ªëng th√†nh c√¥ng!","success")}handleEditContent(e){if(console.log("‚úèÔ∏è Opening content editor..."),console.log("üîç Content to edit:",e),console.log("üîç ConfluenceEditor instance:",this.confluenceEditor),!this.confluenceEditor)return console.error("‚ùå ConfluenceEditor is null or undefined"),void this.showNotification("Confluence Editor ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o!","error");try{this.confluenceEditor.setSaveCallback(e=>{console.log("üíæ Content updated:",e),this.generatedContent=e,this.updatePreviewTab(e),this.showNotification("N·ªôi dung ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!","success")}),console.log("üöÄ Opening ConfluenceEditor..."),this.confluenceEditor.openEditor(e,{title:"Ch·ªânh s·ª≠a t√†i li·ªáu ƒë√£ sinh",showMermaidTools:!0}),console.log("‚úÖ ConfluenceEditor opened successfully")}catch(e){console.error("‚ùå Error opening ConfluenceEditor:",e),this.showNotification(`L·ªói m·ªü editor: ${e.message}`,"error")}}handleReset(){console.log("üîÑ Auto-resetting form..."),document.getElementById("baDocUrl").value=window.location.href,document.getElementById("additionalNotes").value="",this.hideProgress(),this.switchTab("generate")}showProgress(){const e=document.getElementById("progressSection");document.getElementById("progressSteps").innerHTML=this.progressSteps.map((e,t)=>`\n      <div class="ktool-progress-step ${e.status}" data-step="${t}">\n        <div class="ktool-progress-icon">${t+1}</div>\n        <span>${e.label}</span>\n      </div>\n    `).join(""),e.style.display="block"}hideProgress(){document.getElementById("progressSection").style.display="none",this.progressSteps=this.progressSteps.map(e=>({...e,status:"pending"}))}updateProgress(e,t){this.progressSteps[e].status=t;const n=document.querySelector(`[data-step="${e}"]`);if(n){n.className=`ktool-progress-step ${t}`;const e=n.querySelector(".ktool-progress-icon");"completed"===t?e.textContent="‚úì":"error"===t?e.textContent="‚úó":"active"===t&&(e.innerHTML='<div class="ktool-spinning">‚è≥</div>')}}showNotification(e,t="info"){const n=document.createElement("div");n.style.cssText=`\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${"success"===t?"#28a745":"error"===t?"#dc3545":"#007bff"};\n      color: white;\n      padding: 12px 20px;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n      z-index: 1000002;\n      font-size: 14px;\n      max-width: 300px;\n      word-wrap: break-word;\n      opacity: 0;\n      transform: translateX(100%);\n      transition: all 0.3s;\n    `,n.textContent=e,document.body.appendChild(n),setTimeout(()=>{n.style.opacity="1",n.style.transform="translateX(0)"},100),setTimeout(()=>{n.style.opacity="0",n.style.transform="translateX(100%)",setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},300)},5e3)}async loadMermaidScript(){if(window.mermaid)return console.log("‚ö° Mermaid already loaded"),window.mermaid;const res=await fetch(chrome.runtime.getURL("lib/mermaid.min.js")),text=await res.text();return eval(text),console.log("‚úÖ Mermaid loaded dynamically"),window.mermaid}async initializeMermaid(){try{await this.loadMermaidScript(),console.log("üé® Initializing Mermaid diagrams..."),window.mermaid.initialize({startOnLoad:!1,theme:"default",securityLevel:"loose",fontFamily:"Arial, sans-serif",htmlLabels:!0,flowchart:{htmlLabels:!0},deterministicIds:!0,deterministicIDSeed:"mermaid-diagram"}),window.mermaid.setConfig&&window.mermaid.setConfig({securityLevel:"loose",theme:"default"});const e=document.getElementById("documentPreview");if(!e)return;e.querySelectorAll('ac\\:structured-macro[ac\\:name="mermaid"]').forEach((e,t)=>{const n=e.querySelector('ac\\:parameter[ac\\:name="code"]');if(!n)return void console.warn("‚ö†Ô∏è Mermaid macro found but no code parameter");const o=(n.textContent||n.innerText).trim();if(console.log("üîç Found Confluence Mermaid diagram:",o.substring(0,50)+"..."),o){const n=document.createElement("div");n.className="mermaid-diagram",n.id=`mermaid-${t}`,n.style.cssText="margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;",e.parentNode.replaceChild(n,e);try{const e=`mermaid-svg-${t}`,r=document.createElement("div");if(r.style.position="absolute",r.style.left="-9999px",r.style.top="-9999px",document.body.appendChild(r),!window.mermaid.render||"function"!=typeof window.mermaid.render)throw new Error("Mermaid render function not available");try{const t=window.mermaid.render(e,o);t&&"function"==typeof t.then?t.then(e=>{let t;document.body.contains(r)&&document.body.removeChild(r),t="string"==typeof e?e:e&&e.svg?e.svg:String(e),n.innerHTML=t,console.log("‚úÖ Mermaid diagram rendered successfully (promise API)")}).catch(e=>{document.body.contains(r)&&document.body.removeChild(r),console.error("‚ùå Mermaid render error (promise API):",e),this.showMermaidError(n,o,e)}):"string"==typeof t?(document.body.contains(r)&&document.body.removeChild(r),n.innerHTML=t,console.log("‚úÖ Mermaid diagram rendered successfully (sync API)")):window.mermaid.render(e,o,e=>{document.body.contains(r)&&document.body.removeChild(r),n.innerHTML=e,console.log("‚úÖ Mermaid diagram rendered successfully (callback API)")})}catch(e){throw document.body.contains(r)&&document.body.removeChild(r),e}}catch(e){console.error("‚ùå Mermaid render error:",e),this.showMermaidError(n,o,e)}}})}catch(e){console.error("‚ùå Failed to initialize Mermaid:",e)}}showMermaidError(e,t,n){e.innerHTML=`\n      <div style="color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;">\n        <div style="font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;">\n          <span style="margin-right: 8px;">‚ö†Ô∏è</span>\n          Mermaid Render Error\n        </div>\n        <div style="font-size: 12px; color: #721c24; margin-bottom: 10px;">\n          ${n.message||"Unknown error occurred"}\n        </div>\n        <details style="margin-top: 10px;">\n          <summary style="cursor: pointer; font-size: 12px; color: #495057;">Show diagram code</summary>\n          <pre style="margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;">${t}</pre>\n        </details>\n      </div>\n    `}}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{new KToolContent}):new KToolContent;
//# sourceMappingURL=content.js.map