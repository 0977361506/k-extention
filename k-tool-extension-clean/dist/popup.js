const e="extensionSettings",t=("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname||window.location.hostname.includes("localhost"),{apiKey:"",urlTemplate:"",customPrompt:"",documentUrl:"",databaseUrl:"",instructionUrl:"",isEnabled:!0,selectedModel:"sonar-pro"});class a{static STORAGE_KEYS={CONFLUENCE_CONTENT_BACKUP:"confluence_content_backup",MERMAID_DIAGRAM_MAPPINGS:"mermaid_diagram_mappings",MERMAID_AI_FILENAME:"mermaid-ai-filename",MERMAID_DIAGRAM_INFO:"mermaid_diagram_info",CONFLUENCE_EDITOR_BACKUP:"confluence_editor_backup"};constructor(){this.STORAGE_KEY=a.STORAGE_KEYS.CONFLUENCE_CONTENT_BACKUP,this.AUTO_SAVE_INTERVAL=3e4,this.autoSaveTimer=null}static async getSettings(){try{return(await chrome.storage.sync.get([e]))[e]||t}catch(e){return console.error("Error loading settings:",e),t}}static async saveSettings(t){try{return await chrome.storage.sync.set({[e]:t}),!0}catch(e){return console.error("Error saving settings:",e),!1}}static async updateSetting(e,t){try{const a={...await this.getSettings(),[e]:t};return await this.saveSettings(a)}catch(e){return console.error("Error updating setting:",e),!1}}static async resetSettings(){try{return await chrome.storage.sync.remove([e]),!0}catch(e){return console.error("Error resetting settings:",e),!1}}static validateSettings(e){var t,a,s,r;const o={};if(null!==(t=e.apiKey)&&void 0!==t&&t.trim()||(o.apiKey="API Key là bắt buộc"),null!==(a=e.urlTemplate)&&void 0!==a&&a.trim()){const t=this.validateConfluencePageLink(e.urlTemplate);t.valid||(o.urlTemplate=t.error||"URL Template không hợp lệ.")}else o.urlTemplate="URL Template là bắt buộc";return null!==(s=e.documentUrl)&&void 0!==s&&s.trim()?this.isValidUrl(e.documentUrl)||(o.documentUrl="URL không hợp lệ"):o.documentUrl="URL thư mục lưu tài liệu là bắt buộc",null!==(r=e.databaseUrl)&&void 0!==r&&r.trim()?this.isValidUrl(e.databaseUrl)||(o.databaseUrl="URL không hợp lệ"):o.databaseUrl="URL thư mục database là bắt buộc",{isValid:0===Object.keys(o).length,errors:o}}static getSettingKeys(){return Object.keys(t)}static async hasSettings(){try{return!!(await chrome.storage.sync.get([e]))[e]}catch(e){return console.error("Error checking settings existence:",e),!1}}static async getSetting(e){try{const a=await this.getSettings();return void 0!==a[e]?a[e]:t[e]}catch(a){return console.error(`Error getting setting ${e}:`,a),t[e]}}static async exportSettings(){try{const e=await this.getSettings();return JSON.stringify(e,null,2)}catch(e){throw console.error("Error exporting settings:",e),e}}static async importSettings(e){try{const t=JSON.parse(e),a=this.validateSettings(t);if(!a.isValid)throw new Error(a.message);return await this.saveSettings(t)}catch(e){return console.error("Error importing settings:",e),!1}}static async clearAllChromeStorage(){try{return await chrome.storage.sync.clear(),await chrome.storage.local.clear(),!0}catch(e){return console.error("Error clearing Chrome storage:",e),!1}}static isValidUrl(e){try{return new URL(e),!0}catch{return!1}}static validateConfluencePageLink(e){const t={valid:!1,error:null,pageId:null};if(!e||"string"!=typeof e||!e.trim())return t.error="URL là bắt buộc",t;let a;try{a=new URL(e.trim())}catch{return t.error="URL không hợp lệ",t}const s=a.searchParams.get("pageId");if(s&&/^\d+$/.test(s))return t.valid=!0,t.pageId=s,t;const r=a.pathname.split("/"),o=r.indexOf("pages");if(o>=0&&r.length>o+1){const e=r[o+1];if(/^\d+$/.test(e))return t.valid=!0,t.pageId=e,t}return t.error="Không tìm thấy pageId trong URL",t}async saveContent(e,t=null,a={}){const{enableLocalStorage:s=!0,enableCallback:r=!0,showNotification:o=!0}=a,n={localStorage:!1,callback:!1,errors:[]};if(s)try{this.saveToLocalStorage(e),n.localStorage=!0,console.log("✅ Content saved to localStorage")}catch(e){console.error("❌ Failed to save to localStorage:",e),n.errors.push(`localStorage: ${e.message}`)}if(r&&t)try{await this.callSaveCallback(t,e),n.callback=!0,console.log("✅ Content saved via callback")}catch(e){console.error("❌ Failed to save via callback:",e),n.errors.push(`callback: ${e.message}`)}return o&&this.showSaveNotification(n),n}saveToLocalStorage(e){const t={content:e,timestamp:Date.now(),version:"1.0"};localStorage.setItem(this.STORAGE_KEY,JSON.stringify(t))}loadFromLocalStorage(){try{const e=localStorage.getItem(this.STORAGE_KEY);if(!e)return null;const t=JSON.parse(e);return Date.now()-t.timestamp>864e5?(console.log("🗑️ Removing old localStorage backup"),localStorage.removeItem(this.STORAGE_KEY),null):(console.log("📦 Loaded content from localStorage backup"),t.content)}catch(e){return console.error("❌ Failed to load from localStorage:",e),null}}clearLocalStorage(){localStorage.removeItem(this.STORAGE_KEY),console.log("🗑️ Cleared localStorage backup")}async callSaveCallback(e,t){if("function"!=typeof e)throw new Error("Save callback is not a function");const a=e(t);a&&"function"==typeof a.then&&await a}showSaveNotification(e){const{localStorage:t,callback:a,errors:s}=e;if(t&&a)this.showNotification("✅ Đã lưu thay đổi thành công","success");else if(t||a){const e=t?"localStorage":"callback";this.showNotification(`⚠️ Đã lưu qua ${e} (một phần)`,"warning")}else this.showNotification("❌ Không thể lưu thay đổi","error");s.length>0&&console.warn("Save errors:",s)}showNotification(e,t="info"){const a=document.createElement("div");a.className=`confluence-editor-notification ${t}`,a.style.cssText="\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 12px 20px;\n      border-radius: 6px;\n      color: white;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      z-index: 10001;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      transition: all 0.3s ease;\n      max-width: 300px;\n    ";const s={success:"#28a745",warning:"#ffc107",error:"#dc3545",info:"#17a2b8"};a.style.background=s[t]||s.info,a.textContent=e,document.body.appendChild(a),setTimeout(()=>{a.parentNode&&(a.style.opacity="0",a.style.transform="translateX(100%)",setTimeout(()=>{a.remove()},300))},3e3)}startAutoSave(e){this.stopAutoSave(),this.autoSaveTimer=setInterval(()=>{try{e(),console.log("🔄 Auto-save completed")}catch(e){console.error("❌ Auto-save failed:",e)}},this.AUTO_SAVE_INTERVAL),console.log("⏰ Auto-save started (every 30 seconds)")}stopAutoSave(){this.autoSaveTimer&&(clearInterval(this.autoSaveTimer),this.autoSaveTimer=null,console.log("⏹️ Auto-save stopped"))}hasUnsavedChanges(e){const t=this.loadFromLocalStorage();if(!t)return!1;try{return JSON.stringify(e)!==JSON.stringify(t)}catch(e){return console.error("❌ Error comparing content:",e),!1}}getBackupInfo(){try{const e=localStorage.getItem(this.STORAGE_KEY);if(!e)return null;const t=JSON.parse(e);return{timestamp:t.timestamp,age:Date.now()-t.timestamp,version:t.version}}catch(e){return null}}async getItem(e){try{const t=localStorage.getItem(e);return t?JSON.parse(t):null}catch(t){return console.error(`❌ Error getting item from localStorage (${e}):`,t),null}}async setItem(e,t){try{localStorage.setItem(e,JSON.stringify(t))}catch(t){throw console.error(`❌ Error setting item to localStorage (${e}):`,t),t}}async removeItem(e){try{localStorage.removeItem(e)}catch(t){throw console.error(`❌ Error removing item from localStorage (${e}):`,t),t}}saveMermaidDiagramMappings(e){try{if(!e||0===e.size)return console.log("🗂️ No diagrams to save, clearing mappings"),localStorage.removeItem(a.STORAGE_KEYS.MERMAID_DIAGRAM_MAPPINGS),!0;const t={};return e.forEach((e,a)=>{t[a]={title:e.title,type:e.type,content:e.content,originCode:e.originCode,timestamp:Date.now()}}),localStorage.setItem(a.STORAGE_KEYS.MERMAID_DIAGRAM_MAPPINGS,JSON.stringify(t)),console.log(`✅ Saved ${e.size} Mermaid diagram mappings to localStorage`),!0}catch(e){return console.error("❌ Error saving Mermaid diagram mappings:",e),!1}}getMermaidDiagramMappings(){try{const e=localStorage.getItem(a.STORAGE_KEYS.MERMAID_DIAGRAM_MAPPINGS);if(!e)return console.log("📊 No stored Mermaid diagram mappings found"),new Map;const t=JSON.parse(e),s=new Map;return Object.entries(t).forEach(([e,t])=>{s.set(e,t)}),console.log(`📊 Loaded ${s.size} Mermaid diagram mappings from localStorage`),s}catch(e){return console.error("❌ Error loading Mermaid diagram mappings:",e),new Map}}async clearAllKToolData(){const e=Object.values(a.STORAGE_KEYS),t=[],s=[];for(const a of e)try{await this.removeItem(a),t.push(a)}catch(e){s.push({key:a,error:e.message})}return console.log("🧹 Cleared K-Tool localStorage keys:",t),s.length>0&&console.warn("⚠️ Failed to clear some keys:",s),{clearedKeys:t,failedKeys:s}}}class s{constructor(){this.isInitialLoad=!0,this.saveTimeout=null,this.elements={},this.init()}async init(){this.bindElements(),this.bindEvents(),await this.loadSettings(),this.isInitialLoad=!1}bindElements(){this.elements={enabledSwitch:document.getElementById("enabledSwitch"),statusText:document.getElementById("statusText"),apiKey:document.getElementById("apiKey"),selectedModel:document.getElementById("selectedModel"),urlTemplate:document.getElementById("urlTemplate"),documentUrl:document.getElementById("documentUrl"),databaseUrl:document.getElementById("databaseUrl"),instructionUrl:document.getElementById("instructionUrl"),customPrompt:document.getElementById("customPrompt"),charCount:document.getElementById("charCount"),saveStatus:document.getElementById("saveStatus"),saveIcon:document.getElementById("saveIcon"),saveText:document.getElementById("saveText"),resetBtn:document.getElementById("resetBtn")}}bindEvents(){this.elements.enabledSwitch.addEventListener("change",e=>{this.updateStatusText(e.target.checked),this.handleInputChange("isEnabled",e.target.checked)}),["apiKey","selectedModel","urlTemplate","documentUrl","databaseUrl","instructionUrl","customPrompt"].forEach(e=>{const t=this.elements[e];t&&t.addEventListener("input",t=>{this.handleInputChange(e,t.target.value),this.clearError(e),"customPrompt"===e&&this.updateCharCount(t.target.value)})}),this.elements.resetBtn.addEventListener("click",()=>{this.resetSettings()}),this.bindAutoSaveEvents()}bindAutoSaveEvents(){window.addEventListener("beforeunload",()=>{this.saveSettingsImmediately()}),window.addEventListener("blur",()=>{this.saveSettingsImmediately()}),document.addEventListener("visibilitychange",()=>{"hidden"===document.visibilityState&&this.saveSettingsImmediately()}),window.addEventListener("pagehide",()=>{this.saveSettingsImmediately()})}async loadSettings(){try{const e=await a.getSettings();this.elements.enabledSwitch.checked=e.isEnabled,this.elements.apiKey.value=e.apiKey||"",this.elements.selectedModel.value=e.selectedModel||"sonar-pro",this.elements.urlTemplate.value=e.urlTemplate||"",this.elements.documentUrl.value=e.documentUrl||"",this.elements.databaseUrl.value=e.databaseUrl||"",this.elements.instructionUrl.value=e.instructionUrl||"",this.elements.customPrompt.value=e.customPrompt||"",this.updateStatusText(e.isEnabled),this.updateCharCount(e.customPrompt||"")}catch(e){console.error("Error loading settings:",e),this.showSaveStatus("error","Lỗi tải cài đặt")}}handleInputChange(e,t){this.isInitialLoad||(this.saveTimeout&&clearTimeout(this.saveTimeout),this.saveTimeout=setTimeout(async()=>{await this.saveSettings()},1e3))}async saveSettings(){try{this.showSaveStatus("saving","Đang lưu...");const e={isEnabled:this.elements.enabledSwitch.checked,apiKey:this.elements.apiKey.value.trim(),selectedModel:this.elements.selectedModel.value,urlTemplate:this.elements.urlTemplate.value.trim(),documentUrl:this.elements.documentUrl.value.trim(),databaseUrl:this.elements.databaseUrl.value.trim(),instructionUrl:this.elements.instructionUrl.value.trim(),customPrompt:this.elements.customPrompt.value.trim()},t=a.validateSettings(e);if(!t.isValid)return this.showValidationErrors(t.errors),void this.showSaveStatus("error","Lỗi validation");await a.saveSettings(e)?(this.showSaveStatus("saved","Đã lưu"),this.clearAllErrors()):this.showSaveStatus("error","Lỗi lưu")}catch(e){console.error("Error saving settings:",e),this.showSaveStatus("error","Lỗi lưu")}}async saveSettingsImmediately(){try{this.saveTimeout&&(clearTimeout(this.saveTimeout),this.saveTimeout=null);const e={isEnabled:this.elements.enabledSwitch.checked,apiKey:this.elements.apiKey.value.trim(),selectedModel:this.elements.selectedModel.value,urlTemplate:this.elements.urlTemplate.value.trim(),documentUrl:this.elements.documentUrl.value.trim(),databaseUrl:this.elements.databaseUrl.value.trim(),instructionUrl:this.elements.instructionUrl.value.trim(),customPrompt:this.elements.customPrompt.value.trim()};await a.saveSettings(e)}catch(e){console.error("Error saving settings immediately:",e)}}async resetSettings(){if(confirm("Bạn có chắc muốn reset tất cả cài đặt về mặc định?"))try{await a.resetSettings(),await this.loadSettings(),this.showSaveStatus("saved","Đã reset")}catch(e){console.error("Error resetting settings:",e),this.showSaveStatus("error","Lỗi reset")}}updateStatusText(e){this.elements.statusText.textContent=e?"Bật":"Tắt",this.elements.statusText.style.color=e?"#28a745":"#6c757d"}updateCharCount(e){const t=e.length;this.elements.charCount.textContent=`${t} ký tự`,this.elements.charCount.style.color=t<10?"#dc3545":t<50?"#ffc107":"#28a745"}showSaveStatus(e,t){const a=this.elements.saveStatus,s=this.elements.saveIcon,r=this.elements.saveText;a.className="save-status",s.className="save-icon",a.classList.add(e),"saving"===e?(s.classList.add("spinning"),s.textContent="⏳"):"saved"===e?s.textContent="✅":"error"===e&&(s.textContent="❌"),r.textContent=t,a.style.display="flex","saving"!==e&&setTimeout(()=>{a.style.display="none"},3e3)}showValidationErrors(e){Object.keys(e).forEach(t=>{this.showError(t,e[t])})}showError(e,t){const a=this.elements[e],s=document.getElementById(`${e}Error`);a&&s&&(a.classList.add("error"),s.textContent=t,s.classList.add("show"))}clearError(e){const t=this.elements[e],a=document.getElementById(`${e}Error`);t&&a&&(t.classList.remove("error"),a.classList.remove("show"))}clearAllErrors(){const e=document.querySelectorAll(".error-message"),t=document.querySelectorAll(".form-input, .form-select, .form-textarea");e.forEach(e=>e.classList.remove("show")),t.forEach(e=>e.classList.remove("error"))}}document.addEventListener("DOMContentLoaded",()=>{new s});
//# sourceMappingURL=popup.js.map