{"version":3,"file":"content.js","mappings":"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","sources":["webpack://k-tool-extension-clean/./src/shared/api.js","webpack://k-tool-extension-clean/./src/content/confluenceEditor.js","webpack://k-tool-extension-clean/./src/shared/storage.js","webpack://k-tool-extension-clean/./src/shared/constants.js","webpack://k-tool-extension-clean/webpack/bootstrap","webpack://k-tool-extension-clean/webpack/runtime/define property getters","webpack://k-tool-extension-clean/webpack/runtime/hasOwnProperty shorthand","webpack://k-tool-extension-clean/./src/content/content.js"],"sourcesContent":["// API utilities for K-Tool Extension\nimport { API_URLS } from \"./constants.js\";\n\nexport class ApiClient {\n  /**\n   * Make HTTP request with error handling\n   * @param {string} url - Request URL\n   * @param {Object} options - Fetch options\n   * @returns {Promise<Object>} Response data\n   */\n  static async request(url, options = {}) {\n    try {\n      const response = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return { success: true, data };\n    } catch (error) {\n      console.error(\"API request failed:\", error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  /**\n   * Generate document from BA content\n   * @param {Object} payload - Generation payload\n   * @returns {Promise<Object>} Job response\n   */\n  static async generateDocument(payload) {\n    return await this.request(API_URLS.GEN_DOC, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n\n  /**\n   * Check generation status\n   * @param {string} jobId - Job ID to check\n   * @returns {Promise<Object>} Status response\n   */\n  static async checkStatus(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_STATUS}?job_id=${jobId}`);\n  }\n\n  /**\n   * Get generation result\n   * @param {string} jobId - Job ID to get result\n   * @returns {Promise<Object>} Result response\n   */\n  static async getResult(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_RESULT}?job_id=${jobId}`);\n  }\n\n  /**\n   * Edit text using AI\n   * @param {Object} payload - Edit payload\n   * @returns {Promise<Object>} Edit response\n   */\n  static async editText(payload) {\n    return await this.request(API_URLS.EDIT_TEXT, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n}\n\n/**\n * Confluence API utilities\n */\nexport class ConfluenceApi {\n  /**\n   * Extract page ID from Confluence URL\n   * @param {string} url - Confluence page URL\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageId(url) {\n    const patterns = [/\\/pages\\/(\\d+)/, /pageId=(\\d+)/, /\\/(\\d+)$/];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Get current space key from page\n   * @returns {string|null} Space key or null\n   */\n  static getCurrentSpaceKey() {\n    // Try to get space key from various sources\n    const spaceKeyMeta = document.querySelector('meta[name=\"ajs-space-key\"]');\n    if (spaceKeyMeta) return spaceKeyMeta.content;\n\n    const spaceKeyElement = document.querySelector(\"[data-space-key]\");\n    if (spaceKeyElement) return spaceKeyElement.dataset.spaceKey;\n\n    // Try to extract from URL\n    const urlMatch = window.location.pathname.match(/\\/spaces\\/([^\\/]+)/);\n    if (urlMatch) return urlMatch[1];\n\n    return null;\n  }\n\n  /**\n   * Fetch page content from Confluence\n   * @param {string} pageId - Page ID to fetch\n   * @returns {Promise<Object>} Page content with title, content (view), and storageFormat\n   */\n  static async fetchPageContent(pageId) {\n    try {\n      console.log(\"🔍 Fetching Confluence content for pageId:\", pageId);\n\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage,body.view`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Content data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n        hasView: !!data.body?.view?.value,\n      });\n\n      return {\n        title: data.title,\n        content: data.body?.view?.value || \"\",\n        storageFormat: data.body?.storage?.value || \"\",\n      };\n    } catch (error) {\n      console.error(\"❌ Error fetching Confluence content:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clone template from URL for document generation\n   * @param {string} url - Template URL\n   * @returns {Promise<Object>} Cloned template data\n   */\n  static async cloneTemplateForGeneration(url) {\n    try {\n      console.log(\"🔍 Cloning template from URL:\", url);\n\n      if (!url || !url.trim()) {\n        console.error(\"❌ Empty URL provided\");\n        throw new Error(\"URL template không được để trống\");\n      }\n\n      // Extract pageId from URL\n      const pageId = this.extractPageIdFromUrl(url);\n      if (!pageId) {\n        console.error(\"❌ No pageId found in URL\");\n        throw new Error(\n          \"URL không chứa pageId hợp lệ. Vui lòng kiểm tra lại URL template.\"\n        );\n      }\n\n      console.log(\"📋 Fetching template pageId:\", pageId);\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Template data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n      });\n\n      if (!data.body?.storage?.value) {\n        console.error(\"❌ No storage content found in response\");\n        throw new Error(\"Template không có nội dung storage format\");\n      }\n\n      const originalStorageFormat = data.body.storage.value;\n      console.log(\n        \"📄 Original storage format length:\",\n        originalStorageFormat.length\n      );\n\n      const { templateStructure, analysisInfo } = this.extractTemplateStructure(\n        originalStorageFormat\n      );\n\n      const result = {\n        title: data.title,\n        originalStorageFormat,\n        templateStructure,\n        analysisInfo,\n      };\n\n      console.log(\"✅ Template cloned successfully:\", {\n        title: result.title,\n        originalLength: originalStorageFormat.length,\n        structureLength: templateStructure.length,\n        analysis: analysisInfo,\n      });\n\n      return result;\n    } catch (error) {\n      console.error(\"❌ Error cloning template:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Extract template structure and analyze placeholders\n   * @param {string} storageFormat - Original storage format\n   * @returns {Object} Template structure and analysis info\n   */\n  static extractTemplateStructure(storageFormat) {\n    let emptyParagraphs = 0;\n    let emptyTableCells = 0;\n    let placeholders = 0;\n\n    console.log(\"🔍 Extracting template structure...\");\n\n    const placeholderPatterns = [\n      /(<<.*?>>)/g,\n      /(\\{\\{.*?\\}\\})/g,\n      /(&lt;&lt;.*?&gt;&gt;)/g,\n      /(\\u003c\\u003c.*?\\u003e\\u003e)/g,\n    ];\n\n    let structure = storageFormat;\n\n    placeholderPatterns.forEach((regex, index) => {\n      const matches = [...structure.matchAll(regex)];\n      console.log(\n        `🎯 Placeholder pattern ${index + 1} found ${matches.length} matches`\n      );\n      placeholders += matches.length;\n    });\n\n    // Count empty paragraphs and table cells\n    emptyParagraphs = (storageFormat.match(/<p[^>]*>\\s*<\\/p>/g) || []).length;\n    emptyTableCells = (storageFormat.match(/<td[^>]*>\\s*<\\/td>/g) || []).length;\n\n    const analysisInfo = {\n      emptyParagraphs,\n      emptyTableCells,\n      placeholders,\n      totalLength: storageFormat.length,\n    };\n\n    return {\n      templateStructure: structure,\n      analysisInfo,\n    };\n  }\n\n  /**\n   * Extract pageId from various URL formats\n   * @param {string} url - URL to extract pageId from\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageIdFromUrl(url) {\n    const patterns = [\n      /\\/pages\\/(\\d+)/,\n      /pageId=(\\d+)/,\n      /\\/(\\d+)$/,\n      /viewpage\\.action\\?pageId=(\\d+)/,\n    ];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Extract placeholders from content (<<placeholder>> format)\n   * @param {string} content - Content to analyze\n   * @returns {Array} Array of placeholder strings\n   */\n  static extractPlaceholders(content) {\n    console.log(\"🔍 Analyzing content for placeholders...\");\n    console.log(\"📄 Content length:\", content.length);\n    console.log(\n      \"📄 Content preview (first 500 chars):\",\n      content.substring(0, 500)\n    );\n\n    // Helper function to decode HTML entities\n    const decodeHtmlEntities = (str) => {\n      return str\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\")\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\");\n    };\n\n    const decodedContent = decodeHtmlEntities(content);\n\n    // Patterns to find placeholders\n    const patterns = [\n      /<<([^>]+)>>/g, // Normal <<placeholder>>\n      /&lt;&lt;([^&]+)&gt;&gt;/g, // HTML encoded &lt;&lt;placeholder&gt;&gt;\n    ];\n\n    let allMatches = [];\n\n    // Test patterns on both original and decoded content\n    [content, decodedContent].forEach((testContent, contentIndex) => {\n      console.log(\n        `🔍 Testing on ${\n          contentIndex === 0 ? \"original\" : \"decoded\"\n        } content...`\n      );\n\n      patterns.forEach((regex, patternIndex) => {\n        const matches = [...testContent.matchAll(regex)];\n        console.log(\n          `🎯 Pattern ${patternIndex + 1} found ${matches.length} matches:`,\n          matches.map((m) => m[0])\n        );\n\n        if (patternIndex === 1) {\n          // For HTML encoded, decode back to normal format\n          allMatches.push(...matches.map((match) => `<<${match[1]}>>`));\n        } else {\n          allMatches.push(...matches.map((match) => match[0]));\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePlaceholders = [...new Set(allMatches)];\n    console.log(\"🎯 Unique placeholders found:\", uniquePlaceholders);\n\n    return uniquePlaceholders;\n  }\n\n  /**\n   * Extract images from HTML content and convert to base64\n   * @param {string} html - HTML content\n   * @returns {Promise<Array>} Array of image objects with base64 data\n   */\n  static async extractImagesFromHtml(html) {\n    const images = [];\n    try {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      const imgTags = doc.querySelectorAll(\"img\");\n\n      for (const img of Array.from(imgTags)) {\n        const src = img.getAttribute(\"src\");\n        let filename = undefined;\n\n        if (src) {\n          let base64src = src;\n\n          if (!src.startsWith(\"data:image\")) {\n            // Convert URL to base64 and get filename\n            const { base64, filename: fname } = await this.urlToBase64(src);\n            if (base64) {\n              base64src = base64;\n              filename = fname;\n            } else continue; // skip if failed\n          } else {\n            // If already base64, get name from alt or set default\n            filename = img.getAttribute(\"alt\")\n              ? img.getAttribute(\"alt\") + \".png\"\n              : `image_${Date.now()}.png`;\n          }\n\n          images.push({\n            src: base64src,\n            alt: img.getAttribute(\"alt\") || undefined,\n            filename,\n          });\n        }\n      }\n    } catch (e) {\n      console.warn(\"extractImagesFromHtml error:\", e);\n    }\n    return images;\n  }\n\n  /**\n   * Convert image URL to base64\n   * @param {string} url - Image URL\n   * @returns {Promise<Object>} Object with base64 data and filename\n   */\n  static async urlToBase64(url) {\n    try {\n      const response = await fetch(url);\n      if (!response.ok)\n        return { base64: null, filename: this.getFilenameFromUrl(url) };\n\n      const blob = await response.blob();\n      const filename = this.getFilenameFromUrl(url);\n\n      return await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({ base64: reader.result, filename });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n      });\n    } catch (e) {\n      console.warn(\"urlToBase64 error:\", e);\n      return { base64: null, filename: this.getFilenameFromUrl(url) };\n    }\n  }\n\n  /**\n   * Get filename from URL\n   * @param {string} url - URL to extract filename from\n   * @returns {string} Filename\n   */\n  static getFilenameFromUrl(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n      return (\n        pathname.substring(pathname.lastIndexOf(\"/\") + 1) ||\n        `image_${Date.now()}`\n      );\n    } catch {\n      return `image_${Date.now()}`;\n    }\n  }\n\n  /**\n   * Create new Confluence page\n   * @param {string} title - Page title\n   * @param {string} content - Page content (storage format)\n   * @param {string} spaceKey - Space key\n   * @param {string} parentId - Parent page ID (optional)\n   * @returns {Promise<Object>} Created page response\n   */\n  static async createPage(title, content, spaceKey, parentId = null) {\n    try {\n      const payload = {\n        type: \"page\",\n        title,\n        space: { key: spaceKey },\n        body: {\n          storage: {\n            value: content,\n            representation: \"storage\",\n          },\n        },\n      };\n\n      if (parentId) {\n        payload.ancestors = [{ id: parentId }];\n      }\n\n      const response = await fetch(\"/rest/api/content\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to create page: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error creating page:\", error);\n      throw error;\n    }\n  }\n}\n","// Confluence Content Editor with Rich Text Editing\r\n// Handles editing interface when Confluence content is returned from API\r\n\r\nclass ConfluenceEditor {\r\n  constructor() {\r\n    this.isEditorOpen = false;\r\n    this.currentContent = null;\r\n    this.originalContent = null;\r\n    this.mermaidDiagrams = [];\r\n    this.editorContainer = null;\r\n    this.textEditor = null; // CodeMirror instance\r\n    this.previewContainer = null;\r\n    this.isPreviewMode = false;\r\n    this.autoSaveTimer = null;\r\n    this.isModified = false;\r\n    // Zoom controls\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n  }\r\n\r\n  openEditor(content, options = {}) {\r\n    if (this.isEditorOpen) {\r\n      this.closeEditor();\r\n    }\r\n\r\n    console.log(\"📝 Opening Confluence Editor with content:\", content);\r\n\r\n    this.currentContent = content;\r\n    this.originalContent = JSON.parse(JSON.stringify(content)); // Deep copy\r\n    this.isEditorOpen = true;\r\n\r\n    // Extract Mermaid diagrams from content\r\n    this.extractMermaidDiagrams();\r\n\r\n    // Create editor UI\r\n    this.createEditorUI(options);\r\n\r\n    // Initialize content tab (default)\r\n    this.initializeContentTab();\r\n  }\r\n\r\n  createEditorUI(options = {}) {\r\n    const overlay = document.createElement(\"div\");\r\n    overlay.className = \"confluence-editor-overlay\";\r\n\r\n    overlay.innerHTML = `\r\n      <div class=\"confluence-editor-container\">\r\n        <div class=\"confluence-editor-header\">\r\n          <h2 class=\"confluence-editor-title\">\r\n            📝 Chỉnh sửa nội dung Confluence\r\n          </h2>\r\n          <div class=\"confluence-editor-actions\">\r\n            <button class=\"editor-btn editor-btn-primary\" id=\"editor-save-btn\">\r\n              � Lưu thay đổi\r\n            </button>\r\n            <button class=\"editor-btn editor-btn-secondary\" id=\"editor-close-btn\">\r\n              ✕ Đóng\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"confluence-editor-tabs\">\r\n          <button class=\"confluence-editor-tab active\" id=\"content-tab\">\r\n            📝 Chỉnh sửa nội dung\r\n          </button>\r\n          <button class=\"confluence-editor-tab\" id=\"mermaid-tab\">\r\n            📊 Chỉnh sửa Mermaid\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"confluence-editor-body\">\r\n          <!-- Content Tab -->\r\n          <div class=\"tab-content active\" id=\"content-tab-content\">\r\n            <div class=\"content-editor-layout\">\r\n              <!-- Raw XHTML Editor (Left) -->\r\n              <div class=\"content-editor-pane\">\r\n                <div class=\"content-editor-header\">\r\n                  📝 Raw XHTML Content\r\n                </div>\r\n                <div class=\"content-editor-body\">\r\n                  <textarea class=\"raw-content-editor\" id=\"raw-content-editor\" placeholder=\"Raw XHTML content will appear here...\"></textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Preview Pane (Right) -->\r\n              <div class=\"content-preview-pane\">\r\n                <div class=\"content-editor-header\">\r\n                  👁️ Live Preview\r\n                </div>\r\n                <div class=\"content-editor-body\">\r\n                  <div class=\"content-preview\" id=\"content-preview\">\r\n                    <!-- Preview content will be rendered here -->\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Mermaid Tab -->\r\n          <div class=\"tab-content\" id=\"mermaid-tab-content\">\r\n            <div class=\"mermaid-editor-layout\">\r\n              <!-- Mermaid Code Editor (Left) -->\r\n              <div class=\"mermaid-code-pane\">\r\n                <div class=\"mermaid-editor-header\">\r\n                  � Mermaid Code\r\n                  <select id=\"mermaid-selector\" class=\"mermaid-selector\">\r\n                    <option value=\"\">Select diagram...</option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"mermaid-editor-body\">\r\n                  <textarea class=\"mermaid-code-editor\" id=\"mermaid-code-editor\" placeholder=\"Select a Mermaid diagram to edit...\"></textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Mermaid Preview (Center) -->\r\n              <div class=\"mermaid-preview-pane\">\r\n                <div class=\"mermaid-editor-header\">\r\n                  📊 Diagram Preview\r\n                  <div class=\"mermaid-zoom-controls\">\r\n                    <button class=\"zoom-btn\" id=\"zoom-out\" title=\"Zoom Out\">−</button>\r\n                    <div class=\"zoom-level\" id=\"zoom-level\">100%</div>\r\n                    <button class=\"zoom-btn\" id=\"zoom-in\" title=\"Zoom In\">+</button>\r\n                    <button class=\"zoom-btn\" id=\"zoom-reset\" title=\"Reset Zoom\">⌂</button>\r\n                  </div>\r\n                </div>\r\n                <div class=\"mermaid-editor-body\">\r\n                  <div class=\"mermaid-preview\" id=\"mermaid-preview\">\r\n                    <div class=\"mermaid-placeholder\">\r\n                      Select a diagram to preview\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- AI Chat (Right) -->\r\n              <div class=\"mermaid-ai-pane\">\r\n                <div class=\"mermaid-editor-header\">\r\n                  🤖 AI Assistant\r\n                </div>\r\n                <div class=\"mermaid-editor-body\">\r\n                  <div class=\"ai-chat-container\">\r\n                    <div class=\"ai-chat-messages\" id=\"ai-chat-messages\">\r\n                      <div class=\"ai-message\">\r\n                        <div class=\"ai-avatar\">🤖</div>\r\n                        <div class=\"ai-text\">Hi! I can help you edit Mermaid diagrams. Select a diagram and ask me to modify it.</div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"ai-chat-input\">\r\n                      <input type=\"text\" id=\"ai-prompt-input\" placeholder=\"Describe how you want to modify the diagram...\" />\r\n                      <button id=\"ai-send-btn\" class=\"ai-send-btn\">Send</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    document.body.appendChild(overlay);\r\n    this.editorContainer = overlay;\r\n\r\n    // Bind events\r\n    this.bindEditorEvents();\r\n  }\r\n\r\n  bindEditorEvents() {\r\n    if (!this.editorContainer) return;\r\n\r\n    // Close button\r\n    const closeBtn = this.editorContainer.querySelector(\"#editor-close-btn\");\r\n    closeBtn.addEventListener(\"click\", () => this.closeEditor());\r\n\r\n    // Save button\r\n    const saveBtn = this.editorContainer.querySelector(\"#editor-save-btn\");\r\n    saveBtn.addEventListener(\"click\", () => this.saveChanges());\r\n\r\n    // Tab buttons\r\n    const contentTab = this.editorContainer.querySelector(\"#content-tab\");\r\n    const mermaidTab = this.editorContainer.querySelector(\"#mermaid-tab\");\r\n\r\n    if (contentTab)\r\n      contentTab.addEventListener(\"click\", () => this.switchTab(\"content\"));\r\n    if (mermaidTab)\r\n      mermaidTab.addEventListener(\"click\", () => this.switchTab(\"mermaid\"));\r\n\r\n    // Content tab elements\r\n    const rawEditor = this.editorContainer.querySelector(\"#raw-content-editor\");\r\n    if (rawEditor) {\r\n      rawEditor.addEventListener(\"input\", () => this.updateContentPreview());\r\n    }\r\n\r\n    // Mermaid tab elements\r\n    const mermaidSelector =\r\n      this.editorContainer.querySelector(\"#mermaid-selector\");\r\n    const mermaidCodeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const aiSendBtn = this.editorContainer.querySelector(\"#ai-send-btn\");\r\n    const aiPromptInput =\r\n      this.editorContainer.querySelector(\"#ai-prompt-input\");\r\n\r\n    if (mermaidSelector) {\r\n      mermaidSelector.addEventListener(\"change\", (e) =>\r\n        this.selectMermaidDiagram(e.target.value)\r\n      );\r\n    }\r\n\r\n    if (mermaidCodeEditor) {\r\n      mermaidCodeEditor.addEventListener(\"input\", () =>\r\n        this.updateMermaidPreview()\r\n      );\r\n    }\r\n\r\n    if (aiSendBtn) {\r\n      aiSendBtn.addEventListener(\"click\", () => this.sendAIPrompt());\r\n    }\r\n\r\n    if (aiPromptInput) {\r\n      aiPromptInput.addEventListener(\"keypress\", (e) => {\r\n        if (e.key === \"Enter\") this.sendAIPrompt();\r\n      });\r\n    }\r\n\r\n    // Zoom controls\r\n    const zoomInBtn = this.editorContainer.querySelector(\"#zoom-in\");\r\n    const zoomOutBtn = this.editorContainer.querySelector(\"#zoom-out\");\r\n    const zoomResetBtn = this.editorContainer.querySelector(\"#zoom-reset\");\r\n\r\n    if (zoomInBtn) {\r\n      zoomInBtn.addEventListener(\"click\", () => this.zoomIn());\r\n    }\r\n    if (zoomOutBtn) {\r\n      zoomOutBtn.addEventListener(\"click\", () => this.zoomOut());\r\n    }\r\n    if (zoomResetBtn) {\r\n      zoomResetBtn.addEventListener(\"click\", () => this.resetZoom());\r\n    }\r\n\r\n    // Add wheel zoom to mermaid preview\r\n    const mermaidPreview =\r\n      this.editorContainer.querySelector(\"#mermaid-preview\");\r\n    if (mermaidPreview) {\r\n      mermaidPreview.addEventListener(\"wheel\", (e) => this.handleWheel(e));\r\n    }\r\n\r\n    // Close on overlay click\r\n    this.editorContainer.addEventListener(\"click\", (e) => {\r\n      if (e.target === this.editorContainer) {\r\n        this.closeEditor();\r\n      }\r\n    });\r\n\r\n    // ESC key to close\r\n    const handleEsc = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        this.closeEditor();\r\n        document.removeEventListener(\"keydown\", handleEsc);\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", handleEsc);\r\n  }\r\n\r\n  // Switch between tabs\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    const tabs = this.editorContainer.querySelectorAll(\r\n      \".confluence-editor-tab\"\r\n    );\r\n    tabs.forEach((tab) => tab.classList.remove(\"active\"));\r\n\r\n    const activeTab = this.editorContainer.querySelector(`#${tabName}-tab`);\r\n    if (activeTab) activeTab.classList.add(\"active\");\r\n\r\n    // Update tab content\r\n    const tabContents = this.editorContainer.querySelectorAll(\".tab-content\");\r\n    tabContents.forEach((content) => content.classList.remove(\"active\"));\r\n\r\n    const activeContent = this.editorContainer.querySelector(\r\n      `#${tabName}-tab-content`\r\n    );\r\n    if (activeContent) activeContent.classList.add(\"active\");\r\n\r\n    // Initialize tab-specific content\r\n    if (tabName === \"content\") {\r\n      this.initializeContentTab();\r\n    } else if (tabName === \"mermaid\") {\r\n      this.initializeMermaidTab();\r\n    }\r\n\r\n    console.log(`Switched to ${tabName} tab`);\r\n  }\r\n\r\n  // Initialize content tab\r\n  initializeContentTab() {\r\n    const rawEditor = this.editorContainer.querySelector(\"#raw-content-editor\");\r\n    if (rawEditor && this.currentContent) {\r\n      // Get raw content and clean up ```xml markers\r\n      let rawContent =\r\n        this.currentContent.full_storage_format ||\r\n        this.currentContent.content ||\r\n        \"\";\r\n\r\n      // Remove ```xml and ``` markers\r\n      rawContent = rawContent.replace(/^```xml\\s*\\n?/gm, \"\");\r\n      rawContent = rawContent.replace(/\\n?```\\s*$/gm, \"\");\r\n\r\n      // Format for better readability\r\n      rawContent = this.formatXHTML(rawContent);\r\n\r\n      rawEditor.value = rawContent;\r\n      this.updateContentPreview();\r\n    }\r\n  }\r\n\r\n  // Initialize mermaid tab\r\n  initializeMermaidTab() {\r\n    this.extractMermaidDiagrams();\r\n    this.populateMermaidSelector();\r\n  }\r\n\r\n  // Format XHTML for better readability with proper alignment\r\n\r\n  formatXHTML(xmlString, indent = \"    \") {\r\n    // 1. Phân tích cú pháp chuỗi thành một cây DOM\r\n    const parser = new DOMParser();\r\n\r\n    // Bọc nội dung bằng một thẻ root tạm thời nếu nó chỉ là một fragment\r\n    const rootTag = \"xml-root-fragment\";\r\n    const wrappedXml = `<${rootTag}>${xmlString}</${rootTag}>`;\r\n\r\n    const doc = parser.parseFromString(wrappedXml, \"text/xml\");\r\n\r\n    // Kiểm tra lỗi phân tích cú pháp\r\n    if (doc.getElementsByTagName(\"parsererror\").length > 0) {\r\n      console.error(\"Lỗi phân tích cú pháp XML/XHTML. Trả về chuỗi gốc.\");\r\n      return xmlString;\r\n    }\r\n\r\n    let output = \"\";\r\n    let currentIndent = \"\";\r\n\r\n    // Lấy thẻ root bọc ngoài (chỉ xử lý con của nó)\r\n    const rootElement = doc.documentElement;\r\n\r\n    /**\r\n     * Hàm đệ quy để duyệt và xây dựng lại chuỗi\r\n     * @param {Node} node - Node hiện tại\r\n     * @param {string} level - Mức thụt lề hiện tại\r\n     */\r\n    function processNode(node, level) {\r\n      switch (node.nodeType) {\r\n        case Node.ELEMENT_NODE: // 1: Thẻ HTML/XML (ví dụ: <p>, <ac:structured-macro>)\r\n          const nodeName = node.nodeName;\r\n\r\n          // Bắt đầu thẻ (ví dụ: <p data=\"...\">)\r\n          let startTag = `<${nodeName}`;\r\n\r\n          // Thêm thuộc tính\r\n          if (node.attributes && node.attributes.length > 0) {\r\n            for (let attr of node.attributes) {\r\n              startTag += ` ${attr.name}=\"${attr.value}\"`;\r\n            }\r\n          }\r\n          startTag += \">\";\r\n\r\n          // Kiểm tra xem thẻ có con (trừ TextNode rỗng) hay không\r\n          const hasSignificantChildren = Array.from(node.childNodes).some(\r\n            (child) =>\r\n              child.nodeType !== Node.TEXT_NODE ||\r\n              child.textContent.trim().length > 0\r\n          );\r\n\r\n          if (!hasSignificantChildren) {\r\n            // Xử lý thẻ tự đóng hoặc thẻ rỗng (ví dụ: <br />)\r\n            // Lưu ý: Trong XHTML, thẻ <tag></tag> là phổ biến hơn <tag />\r\n            // Ở đây ta sử dụng logic thông thường: Thẻ mở, thẻ đóng trên cùng dòng\r\n            output += `${level}${startTag.replace(\">\", \"/>\")}\\n`;\r\n          } else {\r\n            // Thẻ mở trên dòng mới\r\n            output += `${level}${startTag}\\n`;\r\n\r\n            // Tăng mức thụt lề và xử lý con\r\n            const nextLevel = level + indent;\r\n            Array.from(node.childNodes).forEach((child) =>\r\n              processNode(child, nextLevel)\r\n            );\r\n\r\n            // Thẻ đóng trên dòng mới với mức thụt lề cũ\r\n            output += `${level}</${nodeName}>\\n`;\r\n          }\r\n          break;\r\n\r\n        case Node.TEXT_NODE: // 3: Nội dung văn bản\r\n          const text = node.textContent.trim();\r\n          if (text.length > 0) {\r\n            // Xử lý văn bản thuần túy (ví dụ: nội dung bên trong <p>)\r\n            // Nếu nó là văn bản thuần túy, ta thêm nó vào dòng hiện tại hoặc trên dòng mới\r\n            output += `${level}${text}\\n`;\r\n          }\r\n          break;\r\n\r\n        case Node.COMMENT_NODE: // 8: Comment (ví dụ: )\r\n          output += `${level}\\n`;\r\n          break;\r\n\r\n        case Node.CDATA_SECTION_NODE: // 4: CDATA Section (An toàn cho code trong <ac:parameter>)\r\n          // Đây là trường hợp quan trọng nhất cho nội dung Mermaid\r\n          output += `${level}<![CDATA[${node.textContent}]]>\\n`;\r\n          break;\r\n\r\n        // Bạn có thể thêm các case khác như DOCUMENT_TYPE_NODE, PROCESSING_INSTRUCTION_NODE nếu cần\r\n      }\r\n    }\r\n\r\n    // Bắt đầu xử lý từ các con của thẻ root tạm thời\r\n    Array.from(rootElement.childNodes).forEach((node) =>\r\n      processNode(node, currentIndent)\r\n    );\r\n\r\n    return output.trim();\r\n  }\r\n\r\n  isSelfClosingTag(tag) {\r\n    const selfClosing = [\r\n      \"br\",\r\n      \"hr\",\r\n      \"img\",\r\n      \"input\",\r\n      \"meta\",\r\n      \"link\",\r\n      \"source\",\r\n      \"track\",\r\n      \"wbr\",\r\n    ];\r\n    return selfClosing.some((t) => tag.startsWith(`<${t}`));\r\n  }\r\n\r\n  // Update content preview\r\n  updateContentPreview() {\r\n    const rawEditor = this.editorContainer.querySelector(\"#raw-content-editor\");\r\n    const preview = this.editorContainer.querySelector(\"#content-preview\");\r\n\r\n    if (!rawEditor || !preview) return;\r\n\r\n    const content = rawEditor.value;\r\n\r\n    // Update current content\r\n    if (this.currentContent) {\r\n      this.currentContent.full_storage_format = content;\r\n      // Mark as modified if content changed\r\n      if (\r\n        this.originalContent &&\r\n        content !== this.originalContent.full_storage_format\r\n      ) {\r\n        this.isModified = true;\r\n        this.updateSaveButtonState();\r\n      }\r\n    }\r\n\r\n    // Render preview (similar to existing preview logic)\r\n    this.renderContentPreview(content, preview);\r\n  }\r\n\r\n  // Render content preview\r\n  renderContentPreview(content, previewElement) {\r\n    // Convert basic HTML with better styling first\r\n    let processedContent = content\r\n      .replace(\r\n        /<h1>/g,\r\n        \"<h1 style='color: #333; margin: 24px 0 16px 0; font-size: 1.8rem; border-bottom: 2px solid #e1e5e9; padding-bottom: 8px;'>\"\r\n      )\r\n      .replace(\r\n        /<h2>/g,\r\n        \"<h2 style='color: #555; margin: 20px 0 12px 0; font-size: 1.4rem;'>\"\r\n      )\r\n      .replace(\r\n        /<h3>/g,\r\n        \"<h3 style='color: #666; margin: 16px 0 8px 0; font-size: 1.2rem;'>\"\r\n      )\r\n      .replace(\r\n        /<p>/g,\r\n        \"<p style='margin: 12px 0; line-height: 1.6; color: #333;'>\"\r\n      )\r\n      .replace(/<ul>/g, \"<ul style='margin: 12px 0; padding-left: 24px;'>\")\r\n      .replace(/<li>/g, \"<li style='margin: 4px 0; line-height: 1.5;'>\")\r\n      .replace(\r\n        /<table>/g,\r\n        \"<table style='border-collapse: collapse; width: 100%; margin: 20px 0; box-shadow: 0 1px 3px rgba(0,0,0,0.1);'>\"\r\n      )\r\n      .replace(\r\n        /<th>/g,\r\n        \"<th style='border: 1px solid #ddd; padding: 12px; background: #f8f9fa; font-weight: 600; text-align: left;'>\"\r\n      )\r\n      .replace(\r\n        /<td>/g,\r\n        \"<td style='border: 1px solid #ddd; padding: 12px; vertical-align: top;'>\"\r\n      )\r\n      .replace(/<strong>/g, \"<strong style='color: #2c3e50;'>\")\r\n      .replace(\r\n        /<code>/g,\r\n        \"<code style='background: #f1f3f4; padding: 2px 4px; border-radius: 3px; font-family: monospace; font-size: 0.9em;'>\"\r\n      );\r\n\r\n    // Set the processed content to preview element\r\n    previewElement.innerHTML = processedContent;\r\n\r\n    // Render Mermaid diagrams using the comprehensive logic from content.js\r\n    this.renderMermaidDiagramsInPreview();\r\n  }\r\n\r\n  // Load Mermaid script dynamically (copied from content.js)\r\n  async loadMermaidScript() {\r\n    if (window.mermaid) {\r\n      console.log(\"⚡ Mermaid already loaded\");\r\n      return window.mermaid;\r\n    }\r\n\r\n    const res = await fetch(chrome.runtime.getURL(\"lib/mermaid.min.js\"));\r\n    const text = await res.text();\r\n    eval(text); // UMD sẽ gắn mermaid vào window\r\n    console.log(\"✅ Mermaid loaded dynamically\");\r\n    return window.mermaid;\r\n  }\r\n\r\n  // Initialize Mermaid diagrams (copied from content.js logic)\r\n  async initializeMermaidInPreview() {\r\n    try {\r\n      // Load Mermaid if not already loaded\r\n      await this.loadMermaidScript();\r\n\r\n      console.log(\"🎨 Initializing Mermaid diagrams in preview...\");\r\n\r\n      // Configure Mermaid with proper DOM context\r\n      window.mermaid.initialize({\r\n        startOnLoad: false,\r\n        theme: \"default\",\r\n        securityLevel: \"loose\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        // Ensure proper DOM context\r\n        htmlLabels: true,\r\n        flowchart: {\r\n          htmlLabels: true,\r\n        },\r\n        // Set the document context explicitly\r\n        deterministicIds: true,\r\n        deterministicIDSeed: \"mermaid-diagram-preview\",\r\n      });\r\n\r\n      // Ensure mermaid has access to document\r\n      if (window.mermaid.setConfig) {\r\n        window.mermaid.setConfig({\r\n          securityLevel: \"loose\",\r\n          theme: \"default\",\r\n        });\r\n      }\r\n\r\n      // Find all mermaid code blocks in the preview\r\n      const previewDiv = this.editorContainer.querySelector(\"#content-preview\");\r\n      if (!previewDiv) return;\r\n\r\n      // Look for Confluence Mermaid structured macros\r\n      const mermaidElements = previewDiv.querySelectorAll(\r\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\r\n      );\r\n\r\n      mermaidElements.forEach((element, index) => {\r\n        // Get the code parameter from Confluence structured macro\r\n        const codeParam = element.querySelector(\r\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\r\n        );\r\n        if (!codeParam) {\r\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\r\n          return;\r\n        }\r\n\r\n        const mermaidCode = (\r\n          codeParam.textContent || codeParam.innerText\r\n        ).trim();\r\n        console.log(\r\n          \"🔍 Found Confluence Mermaid diagram:\",\r\n          mermaidCode.substring(0, 50) + \"...\"\r\n        );\r\n\r\n        // Always process Confluence mermaid macros (no need to check syntax)\r\n        if (mermaidCode) {\r\n          // Create a new div for the mermaid diagram\r\n          const mermaidDiv = document.createElement(\"div\");\r\n          mermaidDiv.className = \"mermaid-diagram\";\r\n          mermaidDiv.id = `preview-mermaid-${index}`;\r\n          mermaidDiv.style.cssText =\r\n            \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\r\n\r\n          // Replace the original element\r\n          element.parentNode.replaceChild(mermaidDiv, element);\r\n\r\n          // Render the diagram with proper DOM context\r\n          try {\r\n            const diagramId = `preview-mermaid-svg-${index}`;\r\n\r\n            // Create a temporary container in the document to ensure proper DOM context\r\n            const tempContainer = document.createElement(\"div\");\r\n            tempContainer.style.position = \"absolute\";\r\n            tempContainer.style.left = \"-9999px\";\r\n            tempContainer.style.top = \"-9999px\";\r\n            document.body.appendChild(tempContainer);\r\n\r\n            // Modern mermaid.render returns a promise\r\n            if (\r\n              window.mermaid.render &&\r\n              typeof window.mermaid.render === \"function\"\r\n            ) {\r\n              try {\r\n                // Try modern API first\r\n                const renderResult = window.mermaid.render(\r\n                  diagramId,\r\n                  mermaidCode\r\n                );\r\n\r\n                if (renderResult && typeof renderResult.then === \"function\") {\r\n                  // Promise-based API\r\n                  renderResult\r\n                    .then((result) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n\r\n                      // Handle different return formats\r\n                      let svgCode;\r\n                      if (typeof result === \"string\") {\r\n                        svgCode = result;\r\n                      } else if (result && result.svg) {\r\n                        svgCode = result.svg;\r\n                      } else {\r\n                        svgCode = String(result);\r\n                      }\r\n\r\n                      mermaidDiv.innerHTML = svgCode;\r\n                      console.log(\r\n                        \"✅ Preview Mermaid diagram rendered successfully (promise API)\"\r\n                      );\r\n                    })\r\n                    .catch((error) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n                      console.error(\r\n                        \"❌ Preview Mermaid render error (promise API):\",\r\n                        error\r\n                      );\r\n                      this.showMermaidError(mermaidDiv, mermaidCode, error);\r\n                    });\r\n                } else {\r\n                  // Synchronous return or callback-based API\r\n                  if (typeof renderResult === \"string\") {\r\n                    // Clean up temp container\r\n                    if (document.body.contains(tempContainer)) {\r\n                      document.body.removeChild(tempContainer);\r\n                    }\r\n                    mermaidDiv.innerHTML = renderResult;\r\n                    console.log(\r\n                      \"✅ Preview Mermaid diagram rendered successfully (sync API)\"\r\n                    );\r\n                  } else {\r\n                    // Try callback-based API\r\n                    window.mermaid.render(diagramId, mermaidCode, (svgCode) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n                      mermaidDiv.innerHTML = svgCode;\r\n                      console.log(\r\n                        \"✅ Preview Mermaid diagram rendered successfully (callback API)\"\r\n                      );\r\n                    });\r\n                  }\r\n                }\r\n              } catch (renderError) {\r\n                // Clean up temp container\r\n                if (document.body.contains(tempContainer)) {\r\n                  document.body.removeChild(tempContainer);\r\n                }\r\n                throw renderError;\r\n              }\r\n            } else {\r\n              throw new Error(\"Mermaid render function not available\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\"❌ Preview Mermaid render error:\", error);\r\n            this.showMermaidError(mermaidDiv, mermaidCode, error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to initialize Mermaid in preview:\", error);\r\n    }\r\n  }\r\n\r\n  // Show Mermaid error in a nice format (copied from content.js)\r\n  showMermaidError(container, text, error) {\r\n    container.innerHTML = `\r\n      <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\r\n        <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\r\n          <span style=\"margin-right: 8px;\">⚠️</span>\r\n          Mermaid Render Error\r\n        </div>\r\n        <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\r\n          ${error.message || \"Unknown error occurred\"}\r\n        </div>\r\n        <details style=\"margin-top: 10px;\">\r\n          <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\r\n          <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${text}</pre>\r\n        </details>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  // Render Mermaid diagrams in preview (updated to use new logic)\r\n  renderMermaidDiagramsInPreview() {\r\n    // Use the new comprehensive Mermaid initialization\r\n    setTimeout(() => {\r\n      this.initializeMermaidInPreview();\r\n    }, 100);\r\n  }\r\n\r\n  // Populate mermaid selector using Map\r\n  populateMermaidSelector() {\r\n    const selector = this.editorContainer.querySelector(\"#mermaid-selector\");\r\n    if (!selector) {\r\n      console.error(\"❌ Mermaid selector not found\");\r\n      return;\r\n    }\r\n\r\n    // Clear existing options\r\n    selector.innerHTML =\r\n      '<option value=\"\">📊 Select diagram to edit...</option>';\r\n\r\n    // Add diagram options from Map\r\n    if (this.mermaidDiagramsMap && this.mermaidDiagramsMap.size > 0) {\r\n      this.mermaidDiagramsMap.forEach((diagramData, diagramId) => {\r\n        const option = document.createElement(\"option\");\r\n        option.value = diagramId;\r\n        option.textContent = `${diagramData.title} (${diagramData.type})`;\r\n        selector.appendChild(option);\r\n      });\r\n    }\r\n\r\n    // Add event listener for selector change\r\n    selector.removeEventListener(\"change\", this.handleMermaidSelectorChange);\r\n    this.handleMermaidSelectorChange = (e) => {\r\n      const selectedId = e.target.value;\r\n      console.log(`🎯 Selected diagram: ${selectedId}`);\r\n      this.selectMermaidDiagram(selectedId);\r\n    };\r\n    selector.addEventListener(\"change\", this.handleMermaidSelectorChange);\r\n\r\n    console.log(\r\n      `✅ Populated ${this.mermaidDiagramsMap?.size || 0} diagrams in selector`\r\n    );\r\n  }\r\n\r\n  // Select mermaid diagram\r\n  selectMermaidDiagram(diagramId) {\r\n    if (!diagramId) {\r\n      this.clearMermaidEditor();\r\n      return;\r\n    }\r\n\r\n    // Get diagram from Map\r\n    const diagramData = this.mermaidDiagramsMap.get(diagramId);\r\n    if (!diagramData) {\r\n      console.error(`❌ Diagram not found in map: ${diagramId}`);\r\n      return;\r\n    }\r\n\r\n    // Find full diagram record from array\r\n    const diagram = this.mermaidDiagrams.find((d) => d.id === diagramId);\r\n    if (!diagram) {\r\n      console.error(`❌ Diagram not found in array: ${diagramId}`);\r\n      return;\r\n    }\r\n\r\n    // Update code editor\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    if (codeEditor) {\r\n      codeEditor.value = diagramData.content;\r\n      this.currentSelectedDiagram = diagram;\r\n      this.currentSelectedDiagramId = diagramId;\r\n      this.updateMermaidPreview();\r\n\r\n      // Add event listener for code changes\r\n      codeEditor.removeEventListener(\"input\", this.handleMermaidCodeChange);\r\n      this.handleMermaidCodeChange = () => {\r\n        if (this.currentSelectedDiagram && this.currentSelectedDiagramId) {\r\n          // Update diagram code in memory (both array and map)\r\n          this.currentSelectedDiagram.code = codeEditor.value;\r\n          this.mermaidDiagramsMap.get(this.currentSelectedDiagramId).content =\r\n            codeEditor.value;\r\n          // Update preview\r\n          this.updateMermaidPreview();\r\n          // Mark as modified\r\n          this.isModified = true;\r\n          this.updateSaveButtonState();\r\n          console.log(`📝 Updated diagram ${this.currentSelectedDiagramId}`);\r\n        }\r\n      };\r\n      codeEditor.addEventListener(\"input\", this.handleMermaidCodeChange);\r\n    }\r\n\r\n    console.log(`✅ Selected diagram: ${diagramId} (${diagramData.type})`);\r\n  }\r\n\r\n  // Clear mermaid editor\r\n  clearMermaidEditor() {\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n\r\n    if (codeEditor) codeEditor.value = \"\";\r\n    if (preview) {\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Select a diagram to preview</div>';\r\n    }\r\n\r\n    this.currentSelectedDiagram = null;\r\n  }\r\n\r\n  // Update mermaid preview\r\n  updateMermaidPreview() {\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n\r\n    if (!codeEditor || !preview) return;\r\n\r\n    const code = codeEditor.value.trim();\r\n    if (!code) {\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Enter Mermaid code to preview</div>';\r\n      return;\r\n    }\r\n\r\n    // Update current diagram\r\n    if (this.currentSelectedDiagram) {\r\n      this.currentSelectedDiagram.code = code;\r\n    }\r\n\r\n    // Render mermaid\r\n    preview.innerHTML = `<div class=\"mermaid\">${code}</div>`;\r\n\r\n    // Initialize mermaid rendering\r\n    if (window.mermaid) {\r\n      window.mermaid.init(undefined, preview.querySelector(\".mermaid\"));\r\n      // Apply current zoom after rendering\r\n      setTimeout(() => {\r\n        this.updateZoom();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  // Send AI prompt\r\n  sendAIPrompt() {\r\n    const promptInput = this.editorContainer.querySelector(\"#ai-prompt-input\");\r\n    const messagesContainer =\r\n      this.editorContainer.querySelector(\"#ai-chat-messages\");\r\n\r\n    if (!promptInput || !messagesContainer) return;\r\n\r\n    const prompt = promptInput.value.trim();\r\n    if (!prompt) return;\r\n\r\n    // Add user message\r\n    this.addAIMessage(\"user\", prompt);\r\n\r\n    // Clear input\r\n    promptInput.value = \"\";\r\n\r\n    // TODO: Integrate with AI API\r\n    // For now, show a placeholder response\r\n    setTimeout(() => {\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        \"AI integration coming soon! I will help you modify Mermaid diagrams based on your prompts.\"\r\n      );\r\n    }, 1000);\r\n  }\r\n\r\n  // Add AI message\r\n  addAIMessage(type, text) {\r\n    const messagesContainer =\r\n      this.editorContainer.querySelector(\"#ai-chat-messages\");\r\n    if (!messagesContainer) return;\r\n\r\n    const messageDiv = document.createElement(\"div\");\r\n    messageDiv.className = \"ai-message\";\r\n\r\n    const avatar = type === \"user\" ? \"👤\" : \"🤖\";\r\n    const bgColor = type === \"user\" ? \"#e5e7eb\" : \"#3b82f6\";\r\n\r\n    messageDiv.innerHTML = `\r\n      <div class=\"ai-avatar\" style=\"background: ${bgColor};\">${avatar}</div>\r\n      <div class=\"ai-text\">${text}</div>\r\n    `;\r\n\r\n    messagesContainer.appendChild(messageDiv);\r\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n  }\r\n\r\n  extractMermaidDiagrams() {\r\n    this.mermaidDiagrams = [];\r\n    this.mermaidDiagramsMap = new Map();\r\n\r\n    if (!this.currentContent?.full_storage_format) return;\r\n\r\n    const content = this.currentContent.full_storage_format;\r\n\r\n    // Regex để tìm tất cả <ac:structured-macro ...> ... </ac:structured-macro>\r\n    const macroRegex =\r\n      /<ac:structured-macro[^>]*ac:name=\"(mermaid|code)\"[^>]*>([\\s\\S]*?)<\\/ac:structured-macro>/gi;\r\n\r\n    let match;\r\n    let index = 0;\r\n\r\n    while ((match = macroRegex.exec(content)) !== null) {\r\n      const macroName = match[1];\r\n      const macroContent = match[2];\r\n\r\n      // Kiểm tra code parameter\r\n      const codeMatch = macroContent.match(\r\n        /<ac:parameter[^>]*ac:name=\"code\">([\\s\\S]*?)<\\/ac:parameter>/\r\n      );\r\n      if (!codeMatch) continue;\r\n\r\n      const code = codeMatch[1].trim();\r\n      if (!code) continue;\r\n\r\n      // Nếu là code macro, check language\r\n      if (macroName === \"code\") {\r\n        const langMatch = macroContent.match(\r\n          /<ac:parameter[^>]*ac:name=\"language\">([\\s\\S]*?)<\\/ac:parameter>/\r\n        );\r\n        if (!langMatch || langMatch[1].trim() !== \"mermaid\") continue;\r\n      }\r\n\r\n      const type = this.detectMermaidType\r\n        ? this.detectMermaidType(code)\r\n        : \"graph\";\r\n      const diagramId = `mermaid-diagram-${index}`;\r\n\r\n      const diagramRecord = {\r\n        id: diagramId,\r\n        code: code,\r\n        originalCode: code,\r\n        originalMatch: match[0],\r\n        index: index,\r\n        type: type,\r\n        title: `${type.charAt(0).toUpperCase() + type.slice(1)} Diagram ${\r\n          index + 1\r\n        }`,\r\n      };\r\n\r\n      this.mermaidDiagrams.push(diagramRecord);\r\n      this.mermaidDiagramsMap.set(diagramId, {\r\n        content: code,\r\n        type: type,\r\n        index: index,\r\n        title: diagramRecord.title,\r\n      });\r\n\r\n      console.log(`✅ Extracted diagram ${index}:`, {\r\n        type,\r\n        code: code.substring(0, 50) + \"...\",\r\n      });\r\n\r\n      index++;\r\n    }\r\n\r\n    console.log(\"🎨 Extracted Mermaid diagrams:\", this.mermaidDiagrams);\r\n  }\r\n\r\n  // Detect Mermaid diagram type\r\n  detectMermaidType(code) {\r\n    const firstLine = code.trim().split(\"\\n\")[0].toLowerCase();\r\n    if (firstLine.includes(\"graph\")) return \"graph\";\r\n    if (firstLine.includes(\"flowchart\")) return \"flowchart\";\r\n    if (firstLine.includes(\"sequencediagram\")) return \"sequence\";\r\n    if (firstLine.includes(\"classDiagram\")) return \"class\";\r\n    if (firstLine.includes(\"stateDiagram\")) return \"state\";\r\n    if (firstLine.includes(\"erDiagram\")) return \"er\";\r\n    if (firstLine.includes(\"gantt\")) return \"gantt\";\r\n    if (firstLine.includes(\"pie\")) return \"pie\";\r\n    return \"graph\";\r\n  }\r\n\r\n  editMermaidDiagram(diagramId) {\r\n    const diagram = this.mermaidDiagrams.find((d) => d.id === diagramId);\r\n    if (!diagram) return;\r\n\r\n    console.log(\"✏️ Editing Mermaid diagram:\", diagramId);\r\n\r\n    // TODO: Open Mermaid editor popup\r\n    // This could integrate with the ImageAIEditor for AI-powered editing\r\n    const newCode = prompt(\"Edit Mermaid code:\", diagram.code);\r\n    if (newCode && newCode !== diagram.code) {\r\n      diagram.code = newCode;\r\n      // Update the content directly\r\n      this.currentContent.full_storage_format =\r\n        this.currentContent.full_storage_format.replace(\r\n          diagram.originalMatch,\r\n          diagram.originalMatch.replace(diagram.originalCode, newCode)\r\n        );\r\n      this.updateStatus(\"Đã cập nhật diagram\");\r\n    }\r\n  }\r\n\r\n  updateStatus(message) {\r\n    const status = this.editorContainer?.querySelector(\"#editor-status\");\r\n    if (status) {\r\n      status.textContent = message;\r\n      setTimeout(() => {\r\n        status.textContent = \"Sẵn sàng\";\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  saveChanges() {\r\n    console.log(\"💾 Saving changes...\");\r\n\r\n    try {\r\n      // Sync content from raw editor\r\n      this.syncContentFromRawEditor();\r\n\r\n      // Sync Mermaid changes back to content\r\n      this.syncMermaidChangesToContent();\r\n\r\n      // Call save callback with updated content\r\n      if (this.onSave) {\r\n        this.onSave(this.currentContent);\r\n      }\r\n\r\n      // Reset modified state and update button\r\n      this.isModified = false;\r\n      this.updateSaveButtonState();\r\n\r\n      this.updateStatus(\"Đã lưu thay đổi\");\r\n      console.log(\"✅ Changes saved successfully\");\r\n\r\n      // Optionally close editor after save\r\n      setTimeout(() => {\r\n        this.closeEditor();\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error(\"❌ Error saving changes:\", error);\r\n      this.updateStatus(\"Lỗi khi lưu thay đổi\");\r\n    }\r\n  }\r\n\r\n  // Sync content from raw editor\r\n  syncContentFromRawEditor() {\r\n    const rawEditor = this.editorContainer.querySelector(\"#raw-content-editor\");\r\n    if (rawEditor && rawEditor.value) {\r\n      // Update full_storage_format with raw editor content\r\n      this.currentContent.full_storage_format = rawEditor.value;\r\n      console.log(\"📝 Synced content from raw editor\");\r\n    }\r\n  }\r\n\r\n  // Sync Mermaid changes back to content\r\n  syncMermaidChangesToContent() {\r\n    if (!this.mermaidDiagrams || this.mermaidDiagrams.length === 0) return;\r\n\r\n    let content =\r\n      this.currentContent.full_storage_format ||\r\n      this.currentContent.content ||\r\n      \"\";\r\n\r\n    // Update each modified diagram in the content\r\n    this.mermaidDiagrams.forEach((diagram) => {\r\n      if (diagram.originalCode !== diagram.code) {\r\n        // Find and replace the diagram code in content\r\n        const oldPattern = new RegExp(\r\n          `(<ac:plain-text-body><\\\\!\\\\[CDATA\\\\[\\\\s*)(${this.escapeRegex(\r\n            diagram.originalCode\r\n          )})(\\\\s*\\\\]\\\\]></ac:plain-text-body>)`,\r\n          \"g\"\r\n        );\r\n\r\n        content = content.replace(oldPattern, `$1${diagram.code}$3`);\r\n        console.log(`📊 Updated diagram ${diagram.id} in content`);\r\n      }\r\n    });\r\n\r\n    // Update the content\r\n    this.currentContent.full_storage_format = content;\r\n    if (this.currentContent.content) {\r\n      this.currentContent.content = content;\r\n    }\r\n\r\n    console.log(\"📊 Synced all Mermaid changes to content\");\r\n  }\r\n\r\n  // Escape regex special characters\r\n  escapeRegex(string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n  }\r\n\r\n  // Update save button state based on modifications\r\n  updateSaveButtonState() {\r\n    const saveBtn = this.editorContainer.querySelector(\"#editor-save-btn\");\r\n    if (!saveBtn) return;\r\n\r\n    if (this.isModified) {\r\n      saveBtn.innerHTML = \"💾 Lưu thay đổi *\";\r\n      saveBtn.style.background = \"#28a745\";\r\n      saveBtn.title = \"Có thay đổi chưa lưu\";\r\n    } else {\r\n      saveBtn.innerHTML = \"💾 Lưu thay đổi\";\r\n      saveBtn.style.background = \"#007bff\";\r\n      saveBtn.title = \"Lưu thay đổi\";\r\n    }\r\n  }\r\n\r\n  // Zoom controls methods\r\n  zoomIn() {\r\n    this.currentZoom = Math.min(this.currentZoom * 1.2, 3);\r\n    this.updateZoom();\r\n  }\r\n\r\n  zoomOut() {\r\n    this.currentZoom = Math.max(this.currentZoom / 1.2, 0.3);\r\n    this.updateZoom();\r\n  }\r\n\r\n  resetZoom() {\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n    this.updateZoom();\r\n  }\r\n\r\n  updateZoom() {\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n    const zoomLevel = this.editorContainer.querySelector(\"#zoom-level\");\r\n\r\n    if (preview) {\r\n      const mermaidContent = preview.querySelector(\".mermaid, svg\");\r\n      if (mermaidContent) {\r\n        mermaidContent.style.transform = `scale(${this.currentZoom}) translate(${this.dragOffset.x}px, ${this.dragOffset.y}px)`;\r\n        mermaidContent.style.transformOrigin = \"center center\";\r\n        mermaidContent.style.transition = \"transform 0.2s ease\";\r\n      }\r\n    }\r\n\r\n    if (zoomLevel) {\r\n      zoomLevel.textContent = `${Math.round(this.currentZoom * 100)}%`;\r\n    }\r\n  }\r\n\r\n  handleWheel(e) {\r\n    e.preventDefault();\r\n    if (e.deltaY < 0) {\r\n      this.zoomIn();\r\n    } else {\r\n      this.zoomOut();\r\n    }\r\n  }\r\n\r\n  closeEditor() {\r\n    if (this.editorContainer) {\r\n      this.editorContainer.remove();\r\n      this.editorContainer = null;\r\n    }\r\n\r\n    this.isEditorOpen = false;\r\n    this.currentContent = null;\r\n    this.originalContent = null;\r\n    this.mermaidDiagrams = [];\r\n    this.isModified = false;\r\n\r\n    // Reset zoom state\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n\r\n    console.log(\"📝 Confluence Editor closed\");\r\n  }\r\n\r\n  // Public method to set save callback\r\n  setSaveCallback(callback) {\r\n    this.onSave = callback;\r\n  }\r\n\r\n  // Check if editor is currently open\r\n  isOpen() {\r\n    return this.isEditorOpen;\r\n  }\r\n\r\n  // Get current content\r\n  getCurrentContent() {\r\n    if (this.textEditor) {\r\n      // Update content from editor\r\n      const editorContent = this.textEditor.getValue();\r\n      if (this.currentContent) {\r\n        this.currentContent.full_storage_format = editorContent;\r\n      }\r\n    }\r\n    return this.currentContent;\r\n  }\r\n}\r\n\r\n// Export for use in content.js\r\nexport { ConfluenceEditor };\r\n","// Chrome Storage Management\nimport { DEFAULT_SETTINGS, EXTENSION_SETTINGS_KEY } from \"./constants.js\";\n\nexport class StorageManager {\n  /**\n   * Load settings from Chrome storage\n   * @returns {Promise<Object>} Settings object\n   */\n  static async getSettings() {\n    try {\n      const result = await chrome.storage.sync.get([EXTENSION_SETTINGS_KEY]);\n      return result[EXTENSION_SETTINGS_KEY] || DEFAULT_SETTINGS;\n    } catch (error) {\n      console.error(\"Error loading settings:\", error);\n      return DEFAULT_SETTINGS;\n    }\n  }\n\n  /**\n   * Save settings to Chrome storage\n   * @param {Object} settings - Settings object to save\n   * @returns {Promise<boolean>} Success status\n   */\n  static async saveSettings(settings) {\n    try {\n      await chrome.storage.sync.set({ [EXTENSION_SETTINGS_KEY]: settings });\n      return true;\n    } catch (error) {\n      console.error(\"Error saving settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Update specific setting field\n   * @param {string} field - Field name to update\n   * @param {any} value - New value\n   * @returns {Promise<boolean>} Success status\n   */\n  static async updateSetting(field, value) {\n    try {\n      const currentSettings = await this.getSettings();\n      const updatedSettings = { ...currentSettings, [field]: value };\n      return await this.saveSettings(updatedSettings);\n    } catch (error) {\n      console.error(\"Error updating setting:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Reset settings to default\n   * @returns {Promise<boolean>} Success status\n   */\n  static async resetSettings() {\n    try {\n      await chrome.storage.sync.remove([EXTENSION_SETTINGS_KEY]);\n      return true;\n    } catch (error) {\n      console.error(\"Error resetting settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Validate settings object\n   * @param {Object} settings - Settings to validate\n   * @returns {Object} Validation result with errors\n   */\n  static validateSettings(settings) {\n    const errors = {};\n\n    if (!settings.apiKey?.trim()) {\n      errors.apiKey = \"API Key là bắt buộc\";\n    }\n\n    if (!settings.urlTemplate?.trim()) {\n      errors.urlTemplate = \"URL Template là bắt buộc\";\n    } else {\n      const validationResult = this.validateConfluencePageLink(\n        settings.urlTemplate\n      );\n\n      if (!validationResult.valid) {\n        errors.urlTemplate =\n          validationResult.error || \"URL Template không hợp lệ.\";\n      }\n    }\n    if (!settings.documentUrl?.trim()) {\n      errors.documentUrl = \"URL thư mục lưu tài liệu là bắt buộc\";\n    } else if (!this.isValidUrl(settings.documentUrl)) {\n      errors.documentUrl = \"URL không hợp lệ\";\n    }\n\n    if (!settings.databaseUrl?.trim()) {\n      errors.databaseUrl = \"URL thư mục database là bắt buộc\";\n    } else if (!this.isValidUrl(settings.databaseUrl)) {\n      errors.databaseUrl = \"URL không hợp lệ\";\n    }\n\n    // if (!settings.customPrompt?.trim()) {\n    //   errors.customPrompt = \"Custom Prompt là bắt buộc\";\n    // } else if (settings.customPrompt.trim().length < 10) {\n    //   errors.customPrompt = \"Custom Prompt phải có ít nhất 10 ký tự\";\n    // }\n\n    return {\n      isValid: Object.keys(errors).length === 0,\n      errors,\n    };\n  }\n\n  /**\n   * Check if URL is valid\n   * @param {string} url - URL to validate\n   * @returns {boolean} Is valid URL\n   */\n  static isValidUrl(url) {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Validate Confluence page link (có pageId)\n   * @param {string} link - Link Confluence để kiểm tra\n   * @returns {Object} { valid: boolean, error?: string, pageId?: string }\n   */\n  static validateConfluencePageLink(link) {\n    const out = { valid: false, error: null, pageId: null };\n\n    if (!link || typeof link !== \"string\" || !link.trim()) {\n      out.error = \"URL là bắt buộc\";\n      return out;\n    }\n\n    let u;\n    try {\n      u = new URL(link.trim());\n    } catch {\n      out.error = \"URL không hợp lệ\";\n      return out;\n    }\n\n    // check pageId in query param\n    const pageIdParam = u.searchParams.get(\"pageId\");\n    if (pageIdParam && /^\\d+$/.test(pageIdParam)) {\n      out.valid = true;\n      out.pageId = pageIdParam;\n      return out;\n    }\n\n    // check pageId in path (/pages/{id})\n    const pathParts = u.pathname.split(\"/\");\n    const pagesIndex = pathParts.indexOf(\"pages\");\n    if (pagesIndex >= 0 && pathParts.length > pagesIndex + 1) {\n      const candidate = pathParts[pagesIndex + 1];\n      if (/^\\d+$/.test(candidate)) {\n        out.valid = true;\n        out.pageId = candidate;\n        return out;\n      }\n    }\n\n    out.error = \"Không tìm thấy pageId trong URL\";\n    return out;\n  }\n}\n","// K-Tool Extension Constants\nexport const EXTENSION_SETTINGS_KEY = 'extensionSettings';\n\n// API URLs\nconst isLocal = true;\nconst rootUrl = isLocal ? 'http://localhost:5001' : 'https://gendoc.thangnotes.dev';\n\nexport const API_URLS = {\n  GEN_DOC: `${rootUrl}/api/generate-full-confluence-doc`,\n  GEN_DOC_STATUS: `${rootUrl}/api/generate-status`,\n  GEN_DOC_RESULT: `${rootUrl}/api/generate-result`,\n  EDIT_DIAGRAM: `${rootUrl}/api/edit-diagram`,\n  EDIT_TEXT: `${rootUrl}/api/edit-text`\n};\n\n// Default settings\nexport const DEFAULT_SETTINGS = {\n  apiKey: '',\n  urlTemplate: '',\n  customPrompt: '',\n  documentUrl: '',\n  databaseUrl: '',\n  instructionUrl: '',\n  isEnabled: true,\n  selectedModel: 'sonar-pro'\n};\n\n// AI Models\nexport const AI_MODELS = {\n  'sonar-pro': {\n    name: 'Sonar Pro',\n    provider: 'Perplexity',\n    description: 'Perplexity AI Sonar Pro model'\n  },\n  'gemini': {\n    name: 'Gemini 2.0 Flash',\n    provider: 'Google',\n    description: 'Google Gemini 2.0 Flash model'\n  }\n};\n\n// Progress steps for document generation\nexport const PROGRESS_STEPS = [\n  { id: 'fetch', label: 'Lấy nội dung BA', status: 'pending' },\n  { id: 'clone', label: 'Clone template', status: 'pending' },\n  { id: 'analyze', label: 'Phân tích placeholders', status: 'pending' },\n  { id: 'generate', label: 'AI sinh tài liệu', status: 'pending' },\n  { id: 'complete', label: 'Hoàn thành', status: 'pending' }\n];\n\n// Validation patterns\nexport const VALIDATION = {\n  URL_PATTERN: /^https?:\\/\\/.+/,\n  PLACEHOLDER_PATTERN: /<<([^>]+)>>/g,\n  MIN_PROMPT_LENGTH: 10\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// K-Tool Extension Content Script\r\nimport { ApiClient, ConfluenceApi } from \"../shared/api.js\";\r\nimport { PROGRESS_STEPS } from \"../shared/constants.js\";\r\nimport { StorageManager } from \"../shared/storage.js\";\r\nimport { ConfluenceEditor } from \"./confluenceEditor.js\";\r\n\r\nclass KToolContent {\r\n  constructor() {\r\n    this.settings = {};\r\n    this.isModalOpen = false;\r\n    this.currentTab = \"generate\";\r\n    this.generationJob = null;\r\n    this.progressSteps = [...PROGRESS_STEPS];\r\n    this.confluenceEditor = null;\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    console.log(\"🚀 K-Tool Content Script initializing...\");\r\n\r\n    // Check if already injected\r\n    if (document.getElementById(\"ktool-root\")) {\r\n      console.log(\"🔍 K-Tool already injected, skipping...\");\r\n      return;\r\n    }\r\n\r\n    // Load settings\r\n    await this.loadSettings();\r\n\r\n    // Inject UI\r\n    this.injectUI();\r\n\r\n    // Bind events\r\n    this.bindEvents();\r\n\r\n    // Initialize Confluence Editor\r\n    try {\r\n      console.log(\"🔧 Initializing ConfluenceEditor...\");\r\n      this.confluenceEditor = new ConfluenceEditor();\r\n      console.log(\"✅ ConfluenceEditor initialized:\", this.confluenceEditor);\r\n    } catch (error) {\r\n      console.error(\"❌ Error initializing ConfluenceEditor:\", error);\r\n      this.confluenceEditor = null;\r\n    }\r\n\r\n    // Make available globally for debugging\r\n    window.ktoolContent = this;\r\n\r\n    console.log(\"✅ K-Tool Content Script ready\");\r\n  }\r\n\r\n  async loadSettings() {\r\n    try {\r\n      this.settings = await StorageManager.getSettings();\r\n      console.log(\"⚙️ Settings loaded:\", this.settings);\r\n    } catch (error) {\r\n      console.error(\"❌ Error loading settings:\", error);\r\n    }\r\n  }\r\n\r\n  injectUI() {\r\n    // Create root container\r\n    const root = document.createElement(\"div\");\r\n    root.id = \"ktool-root\";\r\n    document.body.appendChild(root);\r\n\r\n    // Create bubble button\r\n    const bubble = this.createBubble();\r\n    root.appendChild(bubble);\r\n\r\n    // Create modal (initially hidden)\r\n    const modal = this.createModal();\r\n    root.appendChild(modal);\r\n  }\r\n\r\n  createBubble() {\r\n    const bubble = document.createElement(\"div\");\r\n    bubble.className = `ktool-bubble ${\r\n      !this.settings.isEnabled ? \"disabled\" : \"\"\r\n    }`;\r\n\r\n    bubble.innerHTML = `\r\n      <div class=\"ktool-bubble-icon\">K</div>\r\n      <div class=\"ktool-tooltip\">\r\n        ${\r\n          this.settings.isEnabled\r\n            ? \"🚀 K-Tool Document Generator<br/>Click để mở công cụ sinh tài liệu\"\r\n            : \"⚠️ K-Tool đã tắt<br/>Vui lòng bật trong settings\"\r\n        }\r\n      </div>\r\n    `;\r\n\r\n    bubble.addEventListener(\"click\", () => {\r\n      if (this.settings.isEnabled) {\r\n        this.openModal();\r\n      } else {\r\n        this.showNotification(\r\n          \"K-Tool đã tắt. Vui lòng bật trong extension settings.\",\r\n          \"warning\"\r\n        );\r\n      }\r\n    });\r\n\r\n    return bubble;\r\n  }\r\n\r\n  createModal() {\r\n    const overlay = document.createElement(\"div\");\r\n    overlay.className = \"ktool-modal-overlay\";\r\n\r\n    overlay.innerHTML = `\r\n      <div class=\"ktool-modal\">\r\n        <div class=\"ktool-modal-header\">\r\n          <h2 class=\"ktool-modal-title\">K-Tool Document Generator</h2>\r\n          <button class=\"ktool-modal-close\" type=\"button\">&times;</button>\r\n        </div>\r\n        <div class=\"ktool-modal-body\">\r\n          <div class=\"ktool-tabs\">\r\n            <button class=\"ktool-tab active\" data-tab=\"generate\">📄 Sinh tài liệu</button>\r\n            <button class=\"ktool-tab\" data-tab=\"preview\">👁️ Preview</button>\r\n            <button class=\"ktool-tab\" data-tab=\"settings\">⚙️ Settings</button>\r\n          </div>\r\n          \r\n          <!-- Generate Tab -->\r\n          <div class=\"ktool-tab-content active\" data-tab=\"generate\">\r\n            ${this.createGenerateTab()}\r\n          </div>\r\n          \r\n          <!-- Preview Tab -->\r\n          <div class=\"ktool-tab-content\" data-tab=\"preview\" id=\"previewTab\">\r\n            ${this.createPreviewTab()}\r\n          </div>\r\n          \r\n          <!-- Settings Tab -->\r\n          <div class=\"ktool-tab-content\" data-tab=\"settings\">\r\n            ${this.createSettingsTab()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    return overlay;\r\n  }\r\n\r\n  createGenerateTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div class=\"ktool-form-group\">\r\n          <label class=\"ktool-form-label\">URL tài liệu BA *</label>\r\n          <input \r\n            type=\"url\" \r\n            class=\"ktool-form-input\" \r\n            id=\"baDocUrl\" \r\n            placeholder=\"https://confluence.com/pages/123456\"\r\n            value=\"${window.location.href}\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"ktool-form-group\">\r\n          <label class=\"ktool-form-label\">Ghi chú thêm (tùy chọn)</label>\r\n          <textarea \r\n            class=\"ktool-form-textarea\" \r\n            id=\"additionalNotes\" \r\n            placeholder=\"Thêm ghi chú hoặc yêu cầu đặc biệt...\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div style=\"display: flex; gap: 12px; margin-top: 20px;\">\r\n          <button class=\"ktool-btn ktool-btn-primary\" id=\"generateBtn\">\r\n            🔧 Tạo tài liệu\r\n          </button>\r\n          <button class=\"ktool-btn ktool-btn-secondary\" id=\"resetBtn\">\r\n            🔄 Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Progress Section -->\r\n      <div class=\"ktool-progress\" id=\"progressSection\" style=\"display: none;\">\r\n        <h3 style=\"margin: 0 0 16px 0; font-size: 16px;\">Tiến trình sinh tài liệu:</h3>\r\n        <div id=\"progressSteps\"></div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createPreviewTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\r\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">📄</div>\r\n          <h3 style=\"margin: 0 0 8px 0;\">Chưa có nội dung để preview</h3>\r\n          <p style=\"margin: 0;\">Vui lòng sinh tài liệu trước khi preview.</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createSettingsTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\r\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">⚙️</div>\r\n          <h3 style=\"margin: 0 0 8px 0;\">Cài đặt Extension</h3>\r\n          <p style=\"margin: 0 0 16px 0;\">Click vào icon extension trên toolbar để cài đặt.</p>\r\n          <button class=\"ktool-btn ktool-btn-primary\" onclick=\"chrome.runtime.openOptionsPage?.() || alert('Vui lòng click vào icon K-Tool trên toolbar để cài đặt')\">\r\n            🔧 Mở Settings\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  bindEvents() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n\r\n    // Close modal events\r\n    modal.querySelector(\".ktool-modal-close\").addEventListener(\"click\", () => {\r\n      this.closeModal();\r\n    });\r\n\r\n    modal.addEventListener(\"click\", (e) => {\r\n      if (e.target === modal) {\r\n        this.closeModal();\r\n      }\r\n    });\r\n\r\n    // Tab switching\r\n    const tabs = modal.querySelectorAll(\".ktool-tab\");\r\n    tabs.forEach((tab) => {\r\n      tab.addEventListener(\"click\", () => {\r\n        this.switchTab(tab.dataset.tab);\r\n      });\r\n    });\r\n\r\n    // Generate button\r\n    const generateBtn = modal.querySelector(\"#generateBtn\");\r\n    generateBtn.addEventListener(\"click\", () => {\r\n      this.handleGenerate();\r\n    });\r\n\r\n    // Reset button\r\n    const resetBtn = modal.querySelector(\"#resetBtn\");\r\n    resetBtn.addEventListener(\"click\", () => {\r\n      this.handleReset();\r\n    });\r\n\r\n    // Listen for settings changes from background\r\n    chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n      if (request.action === \"settingsChanged\") {\r\n        this.settings = request.settings;\r\n        this.updateBubbleState();\r\n      }\r\n    });\r\n\r\n    // Keyboard shortcuts\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      // Escape to close modal\r\n      if (e.key === \"Escape\" && this.isModalOpen) {\r\n        this.closeModal();\r\n      }\r\n\r\n      // Ctrl/Cmd + K to open modal\r\n      if ((e.ctrlKey || e.metaKey) && e.key === \"k\" && !this.isModalOpen) {\r\n        e.preventDefault();\r\n        if (this.settings.isEnabled) {\r\n          this.openModal();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n    modal.classList.add(\"show\");\r\n    this.isModalOpen = true;\r\n\r\n    // Focus first input\r\n    setTimeout(() => {\r\n      const firstInput = modal.querySelector(\".ktool-form-input\");\r\n      if (firstInput) firstInput.focus();\r\n    }, 300);\r\n  }\r\n\r\n  closeModal() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n    modal.classList.remove(\"show\");\r\n    this.isModalOpen = false;\r\n  }\r\n\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    const tabs = document.querySelectorAll(\".ktool-tab\");\r\n    tabs.forEach((tab) => {\r\n      tab.classList.toggle(\"active\", tab.dataset.tab === tabName);\r\n    });\r\n\r\n    // Update tab content\r\n    const contents = document.querySelectorAll(\".ktool-tab-content\");\r\n    contents.forEach((content) => {\r\n      content.classList.toggle(\"active\", content.dataset.tab === tabName);\r\n    });\r\n\r\n    this.currentTab = tabName;\r\n  }\r\n\r\n  updateBubbleState() {\r\n    const bubble = document.querySelector(\".ktool-bubble\");\r\n    const tooltip = bubble.querySelector(\".ktool-tooltip\");\r\n\r\n    if (this.settings.isEnabled) {\r\n      bubble.classList.remove(\"disabled\");\r\n      tooltip.innerHTML =\r\n        \"🚀 K-Tool Document Generator<br/>Click để mở công cụ sinh tài liệu\";\r\n    } else {\r\n      bubble.classList.add(\"disabled\");\r\n      tooltip.innerHTML = \"⚠️ K-Tool đã tắt<br/>Vui lòng bật trong settings\";\r\n    }\r\n  }\r\n\r\n  async handleGenerate() {\r\n    const baDocUrl = document.getElementById(\"baDocUrl\").value.trim();\r\n    const additionalNotes = document\r\n      .getElementById(\"additionalNotes\")\r\n      .value.trim();\r\n\r\n    if (!baDocUrl) {\r\n      this.showNotification(\"Vui lòng nhập URL tài liệu BA!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    // Validate settings\r\n    const validation = StorageManager.validateSettings(this.settings);\r\n    if (!validation.isValid) {\r\n      this.showNotification(\r\n        \"Vui lòng cấu hình đầy đủ settings trước khi sinh tài liệu!\",\r\n        \"error\"\r\n      );\r\n      this.switchTab(\"settings\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Show progress\r\n      this.showProgress();\r\n      this.updateProgress(0, \"active\");\r\n\r\n      // Step 1: Extract page ID and fetch BA content\r\n      const pageId = ConfluenceApi.extractPageId(baDocUrl);\r\n      if (!pageId) {\r\n        throw new Error(\r\n          \"❌ URL không hợp lệ! Vui lòng kiểm tra lại URL Confluence page.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"🔍 Fetching content for pageId:\", pageId);\r\n      const baDocument = await ConfluenceApi.fetchPageContent(pageId);\r\n      if (!baDocument) {\r\n        throw new Error(\"❌ Không thể lấy nội dung tài liệu BA!\");\r\n      }\r\n\r\n      // Extract images from BA content (HTML) and convert all to base64\r\n      const images = await ConfluenceApi.extractImagesFromHtml(\r\n        baDocument.content\r\n      );\r\n      console.log(\"🖼️ Extracted images (all base64):\", images);\r\n\r\n      this.updateProgress(0, \"completed\");\r\n      this.updateProgress(1, \"active\");\r\n\r\n      // Step 2: Clone template structure\r\n      if (!this.settings.urlTemplate) {\r\n        throw new Error(\"⚠️ Vui lòng setting template của tài liệu!\");\r\n      }\r\n\r\n      console.log(\"🔄 Cloning template from:\", this.settings.urlTemplate);\r\n      const clonedTemplate = await ConfluenceApi.cloneTemplateForGeneration(\r\n        this.settings.urlTemplate\r\n      );\r\n\r\n      if (!clonedTemplate) {\r\n        throw new Error(\r\n          \"❌ Không thể clone template! Vui lòng kiểm tra URL template trong Settings.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"✅ Template cloned successfully:\", clonedTemplate.title);\r\n      this.updateProgress(1, \"completed\");\r\n      this.updateProgress(2, \"active\");\r\n\r\n      // Step 3: Analyze placeholders with << >>\r\n      const placeholders = ConfluenceApi.extractPlaceholders(\r\n        clonedTemplate.originalStorageFormat\r\n      );\r\n      console.log(\"🔍 Found placeholders <<>>:\", placeholders);\r\n\r\n      if (placeholders.length === 0) {\r\n        throw new Error(\r\n          \"⚠️ Không tìm thấy placeholder nào có dạng <<Tên>>. Vui lòng kiểm tra template!\"\r\n        );\r\n      }\r\n\r\n      this.updateProgress(2, \"completed\");\r\n      this.updateProgress(3, \"active\");\r\n\r\n      // Get instructions if available\r\n      let instructions = \"\";\r\n      if (this.settings.instructionUrl) {\r\n        const instructionPageId = ConfluenceApi.extractPageId(\r\n          this.settings.instructionUrl\r\n        );\r\n        if (instructionPageId) {\r\n          console.log(\r\n            \"🔍 Fetching instruction content for pageId:\",\r\n            instructionPageId\r\n          );\r\n          const instructionDoc = await ConfluenceApi.fetchPageContent(\r\n            instructionPageId\r\n          );\r\n          instructions = instructionDoc?.content || \"\";\r\n        } else {\r\n          console.warn(\r\n            \"⚠️ Invalid instruction URL:\",\r\n            this.settings.instructionUrl\r\n          );\r\n        }\r\n      }\r\n\r\n      // Step 4: AI Fill Placeholders (Send request and get job_id)\r\n      const payload = {\r\n        ba_content: baDocument.content,\r\n        template_structure: clonedTemplate.templateStructure,\r\n        original_storage_format: clonedTemplate.originalStorageFormat,\r\n        instructions: instructions,\r\n        additional_prompt: this.settings.customPrompt || \"\",\r\n        placeholders: placeholders,\r\n        selectedModel: this.settings.selectedModel,\r\n        images,\r\n        additional_notes: additionalNotes,\r\n      };\r\n\r\n      console.log(\"📤 Sending payload for placeholder filling:\", {\r\n        ba_content_length: payload.ba_content.length,\r\n        template_structure_length: payload.template_structure.length,\r\n        original_format_length: payload.original_storage_format.length,\r\n        placeholders_found: placeholders.length,\r\n        placeholders_list: placeholders,\r\n      });\r\n\r\n      // Send request and get job_id\r\n      const jobResponse = await ApiClient.generateDocument(payload);\r\n      const jobId = jobResponse.data.job_id;\r\n      if (!jobId) {\r\n        throw new Error(\r\n          jobResponse.error || \"Không nhận được job_id từ server!\"\r\n        );\r\n      }\r\n\r\n      this.currentJobId = jobId;\r\n\r\n      // Start polling for result\r\n      await this.pollGenerationResult(jobId, payload);\r\n    } catch (error) {\r\n      console.error(\"❌ Generation error:\", error);\r\n      this.showNotification(`Lỗi sinh tài liệu: ${error.message}`, \"error\");\r\n      this.hideProgress();\r\n    }\r\n  }\r\n\r\n  // These methods are now handled by ConfluenceApi class\r\n  // Keeping them for backward compatibility if needed\r\n\r\n  async pollGenerationResult(jobId, payload) {\r\n    const maxAttempts = 20; // 10 minutes max (60 * 10 seconds)\r\n    let attempts = 0;\r\n\r\n    const poll = async () => {\r\n      attempts++;\r\n\r\n      try {\r\n        console.log(\r\n          `🔄 Polling attempt ${attempts}/${maxAttempts} for job ${jobId}`\r\n        );\r\n\r\n        const statusResult = await ApiClient.checkStatus(jobId);\r\n        console.log(`statusResult: ${statusResult}`);\r\n\r\n        if (!statusResult.success) {\r\n          throw new Error(\"Lỗi kiểm tra trạng thái job\");\r\n        }\r\n\r\n        const status = statusResult.data.status;\r\n\r\n        if (status === \"done\") {\r\n          console.log(\"✅ Generation completed!\");\r\n\r\n          const result = await ApiClient.getResult(jobId);\r\n          const resultString = JSON.stringify(result, null, 2);\r\n\r\n          console.log(`Document generate:\\n${resultString}`);\r\n          if (result.success) {\r\n            this.handleGenerationComplete(result.data.result);\r\n            return;\r\n          } else {\r\n            throw new Error(\"Lỗi lấy kết quả sinh tài liệu\");\r\n          }\r\n        } else if (status === \"error\") {\r\n          throw new Error(\"Job sinh tài liệu thất bại trên server\");\r\n        } else if (attempts >= maxAttempts) {\r\n          throw new Error(\r\n            \"⏰ Timeout: Quá trình sinh tài liệu mất quá nhiều thời gian. Vui lòng thử lại.\"\r\n          );\r\n        } else {\r\n          // Update progress message if available\r\n          if (statusResult.data.progress_message) {\r\n            console.log(`📝 Progress: ${statusResult.data.progress_message}`);\r\n          }\r\n\r\n          // Continue polling\r\n          setTimeout(poll, 10000); // Poll every 10 seconds\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Polling error:\", error);\r\n        this.showNotification(\r\n          `Lỗi trong quá trình sinh tài liệu: ${error.message}`,\r\n          \"error\"\r\n        );\r\n        this.hideProgress();\r\n        this.currentJobId = null;\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    await poll();\r\n  }\r\n\r\n  handleGenerationComplete(result) {\r\n    this.updateProgress(3, \"completed\");\r\n    this.updateProgress(4, \"completed\");\r\n\r\n    // Store result for preview\r\n    this.generatedContent = result;\r\n    console.log(\"✅ Generated content:\", result);\r\n    // Switch to preview tab\r\n    this.switchTab(\"preview\");\r\n    this.updatePreviewTab(result);\r\n\r\n    this.showNotification(\"Sinh tài liệu thành công!\", \"success\");\r\n    this.hideProgress();\r\n  }\r\n\r\n  updatePreviewTab(content) {\r\n    const previewTab = document.getElementById(\"previewTab\");\r\n    previewTab.innerHTML = `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\">\r\n          <h3 style=\"margin: 0;\">Preview Tài liệu</h3>\r\n          <div style=\"display: flex; gap: 12px;\">\r\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"editContentBtn\">\r\n              ✏️ Chỉnh sửa nội dung\r\n            </button>\r\n            <button class=\"ktool-btn ktool-btn-primary\" id=\"createPageBtn\">\r\n              📄 Tạo trang Confluence\r\n            </button>\r\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"downloadBtn\">\r\n              💾 Tải xuống\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"documentPreview\" style=\"border: 1px solid #e9ecef; border-radius: 8px; padding: 20px; background: #f8f9fa; max-height: 400px; overflow-y: auto; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6;\">\r\n          ${content.full_storage_format || \"<p>Không có nội dung</p>\"}\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Bind preview buttons\r\n    const editContentBtn = previewTab.querySelector(\"#editContentBtn\");\r\n    const createPageBtn = previewTab.querySelector(\"#createPageBtn\");\r\n    const downloadBtn = previewTab.querySelector(\"#downloadBtn\");\r\n\r\n    editContentBtn.addEventListener(\"click\", () =>\r\n      this.handleEditContent(content)\r\n    );\r\n    createPageBtn.addEventListener(\"click\", () => this.handleCreatePage());\r\n    downloadBtn.addEventListener(\"click\", () => this.handleDownload());\r\n\r\n    // Initialize Mermaid diagrams after content is loaded\r\n    setTimeout(() => {\r\n      this.initializeMermaid();\r\n    }, 100);\r\n  }\r\n\r\n  async handleCreatePage() {\r\n    try {\r\n      const spaceKey = ConfluenceApi.getCurrentSpaceKey();\r\n      if (!spaceKey) {\r\n        throw new Error(\"Không thể xác định space key của trang hiện tại\");\r\n      }\r\n\r\n      const title = `K-Tool Generated Document - ${new Date().toLocaleDateString()}`;\r\n      const content =\r\n        this.generatedContent.full_storage_format ||\r\n        this.generatedContent.content;\r\n\r\n      // Extract parent page ID from settings if available\r\n      let parentId = null;\r\n      if (this.settings.documentUrl) {\r\n        parentId = ConfluenceApi.extractPageId(this.settings.documentUrl);\r\n      }\r\n\r\n      const result = await ConfluenceApi.createPage(\r\n        title,\r\n        content,\r\n        spaceKey,\r\n        parentId\r\n      );\r\n\r\n      this.showNotification(\"Tạo trang Confluence thành công!\", \"success\");\r\n\r\n      // Optionally redirect to new page\r\n      if (result.id) {\r\n        const newPageUrl = `${window.location.origin}/pages/${result.id}`;\r\n        if (confirm(\"Bạn có muốn chuyển đến trang vừa tạo không?\")) {\r\n          window.open(newPageUrl, \"_blank\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Create page error:\", error);\r\n      this.showNotification(`Lỗi tạo trang: ${error.message}`, \"error\");\r\n    }\r\n  }\r\n\r\n  handleDownload() {\r\n    const content =\r\n      this.generatedContent.full_storage_format ||\r\n      this.generatedContent.content;\r\n    const blob = new Blob([content], { type: \"text/html\" });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `ktool-document-${Date.now()}.html`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n\r\n    this.showNotification(\"Tải xuống thành công!\", \"success\");\r\n  }\r\n\r\n  handleEditContent(content) {\r\n    console.log(\"✏️ Opening content editor...\");\r\n    console.log(\"🔍 Content to edit:\", content);\r\n    console.log(\"🔍 ConfluenceEditor instance:\", this.confluenceEditor);\r\n\r\n    if (!this.confluenceEditor) {\r\n      console.error(\"❌ ConfluenceEditor is null or undefined\");\r\n      this.showNotification(\"Confluence Editor chưa được khởi tạo!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Set up save callback to update the generated content\r\n      this.confluenceEditor.setSaveCallback((updatedContent) => {\r\n        console.log(\"💾 Content updated:\", updatedContent);\r\n\r\n        // Update the stored generated content\r\n        this.generatedContent = updatedContent;\r\n\r\n        // Refresh the preview tab with updated content\r\n        this.updatePreviewTab(updatedContent);\r\n\r\n        this.showNotification(\"Nội dung đã được cập nhật!\", \"success\");\r\n      });\r\n\r\n      // Open the editor with current content\r\n      console.log(\"🚀 Opening ConfluenceEditor...\");\r\n      this.confluenceEditor.openEditor(content, {\r\n        title: \"Chỉnh sửa tài liệu đã sinh\",\r\n        showMermaidTools: true,\r\n      });\r\n      console.log(\"✅ ConfluenceEditor opened successfully\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error opening ConfluenceEditor:\", error);\r\n      this.showNotification(`Lỗi mở editor: ${error.message}`, \"error\");\r\n    }\r\n  }\r\n\r\n  handleReset() {\r\n    if (confirm(\"Bạn có chắc muốn reset form?\")) {\r\n      document.getElementById(\"baDocUrl\").value = window.location.href;\r\n      document.getElementById(\"additionalNotes\").value = \"\";\r\n      this.hideProgress();\r\n      this.switchTab(\"generate\");\r\n    }\r\n  }\r\n\r\n  showProgress() {\r\n    const progressSection = document.getElementById(\"progressSection\");\r\n    const progressSteps = document.getElementById(\"progressSteps\");\r\n\r\n    progressSteps.innerHTML = this.progressSteps\r\n      .map(\r\n        (step, index) => `\r\n      <div class=\"ktool-progress-step ${step.status}\" data-step=\"${index}\">\r\n        <div class=\"ktool-progress-icon\">${index + 1}</div>\r\n        <span>${step.label}</span>\r\n      </div>\r\n    `\r\n      )\r\n      .join(\"\");\r\n\r\n    progressSection.style.display = \"block\";\r\n  }\r\n\r\n  hideProgress() {\r\n    const progressSection = document.getElementById(\"progressSection\");\r\n    progressSection.style.display = \"none\";\r\n\r\n    // Reset progress steps\r\n    this.progressSteps = this.progressSteps.map((step) => ({\r\n      ...step,\r\n      status: \"pending\",\r\n    }));\r\n  }\r\n\r\n  updateProgress(stepIndex, status) {\r\n    this.progressSteps[stepIndex].status = status;\r\n\r\n    const stepElement = document.querySelector(`[data-step=\"${stepIndex}\"]`);\r\n    if (stepElement) {\r\n      stepElement.className = `ktool-progress-step ${status}`;\r\n\r\n      const icon = stepElement.querySelector(\".ktool-progress-icon\");\r\n      if (status === \"completed\") {\r\n        icon.textContent = \"✓\";\r\n      } else if (status === \"error\") {\r\n        icon.textContent = \"✗\";\r\n      } else if (status === \"active\") {\r\n        icon.innerHTML = '<div class=\"ktool-spinning\">⏳</div>';\r\n      }\r\n    }\r\n  }\r\n\r\n  showNotification(message, type = \"info\") {\r\n    // Create notification element\r\n    const notification = document.createElement(\"div\");\r\n    notification.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      background: ${\r\n        type === \"success\"\r\n          ? \"#28a745\"\r\n          : type === \"error\"\r\n          ? \"#dc3545\"\r\n          : \"#007bff\"\r\n      };\r\n      color: white;\r\n      padding: 12px 20px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n      z-index: 1000002;\r\n      font-size: 14px;\r\n      max-width: 300px;\r\n      word-wrap: break-word;\r\n      opacity: 0;\r\n      transform: translateX(100%);\r\n      transition: all 0.3s;\r\n    `;\r\n\r\n    notification.textContent = message;\r\n    document.body.appendChild(notification);\r\n\r\n    // Animate in\r\n    setTimeout(() => {\r\n      notification.style.opacity = \"1\";\r\n      notification.style.transform = \"translateX(0)\";\r\n    }, 100);\r\n\r\n    // Auto remove\r\n    setTimeout(() => {\r\n      notification.style.opacity = \"0\";\r\n      notification.style.transform = \"translateX(100%)\";\r\n      setTimeout(() => {\r\n        if (notification.parentNode) {\r\n          notification.parentNode.removeChild(notification);\r\n        }\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  async loadMermaidScript() {\r\n    if (window.mermaid) {\r\n      console.log(\"⚡ Mermaid already loaded\");\r\n      return window.mermaid;\r\n    }\r\n\r\n    const res = await fetch(chrome.runtime.getURL(\"lib/mermaid.min.js\"));\r\n    const text = await res.text();\r\n    eval(text); // UMD sẽ gắn mermaid vào window\r\n    console.log(\"✅ Mermaid loaded dynamically\");\r\n    return window.mermaid;\r\n  }\r\n\r\n  // Initialize Mermaid diagrams\r\n  async initializeMermaid() {\r\n    try {\r\n      // Load Mermaid if not already loaded\r\n      await this.loadMermaidScript();\r\n\r\n      console.log(\"🎨 Initializing Mermaid diagrams...\");\r\n\r\n      // Configure Mermaid with proper DOM context\r\n      window.mermaid.initialize({\r\n        startOnLoad: false,\r\n        theme: \"default\",\r\n        securityLevel: \"loose\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        // Ensure proper DOM context\r\n        htmlLabels: true,\r\n        flowchart: {\r\n          htmlLabels: true,\r\n        },\r\n        // Set the document context explicitly\r\n        deterministicIds: true,\r\n        deterministicIDSeed: \"mermaid-diagram\",\r\n      });\r\n\r\n      // Ensure mermaid has access to document\r\n      if (window.mermaid.setConfig) {\r\n        window.mermaid.setConfig({\r\n          securityLevel: \"loose\",\r\n          theme: \"default\",\r\n        });\r\n      }\r\n\r\n      // Find all mermaid code blocks in the preview\r\n      const previewDiv = document.getElementById(\"documentPreview\");\r\n      if (!previewDiv) return;\r\n\r\n      // Look for Confluence Mermaid structured macros\r\n      const mermaidElements = previewDiv.querySelectorAll(\r\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\r\n      );\r\n\r\n      mermaidElements.forEach((element, index) => {\r\n        // Get the code parameter from Confluence structured macro\r\n        const codeParam = element.querySelector(\r\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\r\n        );\r\n        if (!codeParam) {\r\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\r\n          return;\r\n        }\r\n\r\n        const mermaidCode = (\r\n          codeParam.textContent || codeParam.innerText\r\n        ).trim();\r\n        console.log(\r\n          \"🔍 Found Confluence Mermaid diagram:\",\r\n          mermaidCode.substring(0, 50) + \"...\"\r\n        );\r\n\r\n        // Always process Confluence mermaid macros (no need to check syntax)\r\n        if (mermaidCode) {\r\n          // Create a new div for the mermaid diagram\r\n          const mermaidDiv = document.createElement(\"div\");\r\n          mermaidDiv.className = \"mermaid-diagram\";\r\n          mermaidDiv.id = `mermaid-${index}`;\r\n          mermaidDiv.style.cssText =\r\n            \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\r\n\r\n          // Replace the original element\r\n          element.parentNode.replaceChild(mermaidDiv, element);\r\n\r\n          // Render the diagram with proper DOM context\r\n          try {\r\n            const diagramId = `mermaid-svg-${index}`;\r\n\r\n            // Create a temporary container in the document to ensure proper DOM context\r\n            const tempContainer = document.createElement(\"div\");\r\n            tempContainer.style.position = \"absolute\";\r\n            tempContainer.style.left = \"-9999px\";\r\n            tempContainer.style.top = \"-9999px\";\r\n            document.body.appendChild(tempContainer);\r\n\r\n            // Modern mermaid.render returns a promise\r\n            if (\r\n              window.mermaid.render &&\r\n              typeof window.mermaid.render === \"function\"\r\n            ) {\r\n              try {\r\n                // Try modern API first\r\n                const renderResult = window.mermaid.render(\r\n                  diagramId,\r\n                  mermaidCode\r\n                );\r\n\r\n                if (renderResult && typeof renderResult.then === \"function\") {\r\n                  // Promise-based API\r\n                  renderResult\r\n                    .then((result) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n\r\n                      // Handle different return formats\r\n                      let svgCode;\r\n                      if (typeof result === \"string\") {\r\n                        svgCode = result;\r\n                      } else if (result && result.svg) {\r\n                        svgCode = result.svg;\r\n                      } else {\r\n                        svgCode = String(result);\r\n                      }\r\n\r\n                      mermaidDiv.innerHTML = svgCode;\r\n                      console.log(\r\n                        \"✅ Mermaid diagram rendered successfully (promise API)\"\r\n                      );\r\n                    })\r\n                    .catch((error) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n                      console.error(\r\n                        \"❌ Mermaid render error (promise API):\",\r\n                        error\r\n                      );\r\n                      this.showMermaidError(mermaidDiv, mermaidCode, error);\r\n                    });\r\n                } else {\r\n                  // Synchronous return or callback-based API\r\n                  if (typeof renderResult === \"string\") {\r\n                    // Clean up temp container\r\n                    if (document.body.contains(tempContainer)) {\r\n                      document.body.removeChild(tempContainer);\r\n                    }\r\n                    mermaidDiv.innerHTML = renderResult;\r\n                    console.log(\r\n                      \"✅ Mermaid diagram rendered successfully (sync API)\"\r\n                    );\r\n                  } else {\r\n                    // Try callback-based API\r\n                    window.mermaid.render(diagramId, mermaidCode, (svgCode) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n                      mermaidDiv.innerHTML = svgCode;\r\n                      console.log(\r\n                        \"✅ Mermaid diagram rendered successfully (callback API)\"\r\n                      );\r\n                    });\r\n                  }\r\n                }\r\n              } catch (renderError) {\r\n                // Clean up temp container\r\n                if (document.body.contains(tempContainer)) {\r\n                  document.body.removeChild(tempContainer);\r\n                }\r\n                throw renderError;\r\n              }\r\n            } else {\r\n              throw new Error(\"Mermaid render function not available\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\"❌ Mermaid render error:\", error);\r\n            this.showMermaidError(mermaidDiv, mermaidCode, error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to initialize Mermaid:\", error);\r\n    }\r\n  }\r\n\r\n  // Show Mermaid error in a nice format\r\n  showMermaidError(container, text, error) {\r\n    container.innerHTML = `\r\n      <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\r\n        <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\r\n          <span style=\"margin-right: 8px;\">⚠️</span>\r\n          Mermaid Render Error\r\n        </div>\r\n        <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\r\n          ${error.message || \"Unknown error occurred\"}\r\n        </div>\r\n        <details style=\"margin-top: 10px;\">\r\n          <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\r\n          <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${text}</pre>\r\n        </details>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n// Initialize when DOM is ready\r\nif (document.readyState === \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    new KToolContent();\r\n  });\r\n} else {\r\n  new KToolContent();\r\n}\r\n"],"names":["ApiClient","request","url","options","response","fetch","headers","ok","Error","status","statusText","success","data","json","error","console","message","generateDocument","payload","this","API_URLS","GEN_DOC","method","body","JSON","stringify","checkStatus","jobId","GEN_DOC_STATUS","getResult","GEN_DOC_RESULT","editText","EDIT_TEXT","ConfluenceApi","extractPageId","patterns","pattern","match","getCurrentSpaceKey","spaceKeyMeta","document","querySelector","content","spaceKeyElement","dataset","spaceKey","urlMatch","window","location","pathname","fetchPageContent","pageId","_data$body","_data$body2","_data$body3","_data$body4","log","apiUrl","Accept","errorText","text","id","title","hasStorage","storage","value","hasView","view","storageFormat","cloneTemplateForGeneration","_data$body5","_data$body6","trim","extractPageIdFromUrl","originalStorageFormat","length","templateStructure","analysisInfo","extractTemplateStructure","result","originalLength","structureLength","analysis","emptyParagraphs","emptyTableCells","placeholders","structure","forEach","regex","index","matches","matchAll","totalLength","extractPlaceholders","substring","decodedContent","replace","allMatches","testContent","contentIndex","patternIndex","map","m","push","uniquePlaceholders","Set","extractImagesFromHtml","html","images","imgTags","DOMParser","parseFromString","querySelectorAll","img","Array","from","src","getAttribute","filename","base64src","startsWith","Date","now","base64","fname","urlToBase64","alt","undefined","e","warn","getFilenameFromUrl","blob","Promise","resolve","reject","reader","FileReader","onloadend","onerror","readAsDataURL","URL","lastIndexOf","createPage","parentId","type","space","key","representation","ancestors","ConfluenceEditor","constructor","isEditorOpen","currentContent","originalContent","mermaidDiagrams","editorContainer","textEditor","previewContainer","isPreviewMode","autoSaveTimer","isModified","currentZoom","dragOffset","x","y","openEditor","closeEditor","parse","extractMermaidDiagrams","createEditorUI","initializeContentTab","overlay","createElement","className","innerHTML","appendChild","bindEditorEvents","addEventListener","saveChanges","contentTab","mermaidTab","switchTab","rawEditor","updateContentPreview","mermaidSelector","mermaidCodeEditor","aiSendBtn","aiPromptInput","selectMermaidDiagram","target","updateMermaidPreview","sendAIPrompt","zoomInBtn","zoomOutBtn","zoomResetBtn","zoomIn","zoomOut","resetZoom","mermaidPreview","handleWheel","handleEsc","removeEventListener","tabName","tab","classList","remove","activeTab","add","activeContent","initializeMermaidTab","rawContent","full_storage_format","formatXHTML","populateMermaidSelector","xmlString","indent","rootTag","wrappedXml","doc","getElementsByTagName","output","rootElement","documentElement","processNode","node","level","nodeType","Node","ELEMENT_NODE","nodeName","startTag","attributes","attr","name","childNodes","some","child","TEXT_NODE","textContent","nextLevel","COMMENT_NODE","CDATA_SECTION_NODE","isSelfClosingTag","tag","t","preview","updateSaveButtonState","renderContentPreview","previewElement","processedContent","renderMermaidDiagramsInPreview","loadMermaidScript","mermaid","res","chrome","runtime","getURL","eval","initializeMermaidInPreview","initialize","startOnLoad","theme","securityLevel","fontFamily","htmlLabels","flowchart","deterministicIds","deterministicIDSeed","setConfig","previewDiv","element","codeParam","mermaidCode","innerText","mermaidDiv","style","cssText","parentNode","replaceChild","diagramId","tempContainer","position","left","top","render","renderResult","then","svgCode","contains","removeChild","svg","String","catch","showMermaidError","renderError","container","setTimeout","_this$mermaidDiagrams","selector","mermaidDiagramsMap","size","diagramData","option","handleMermaidSelectorChange","selectedId","clearMermaidEditor","get","diagram","find","d","codeEditor","currentSelectedDiagram","currentSelectedDiagramId","handleMermaidCodeChange","code","init","updateZoom","promptInput","messagesContainer","prompt","addAIMessage","messageDiv","avatar","bgColor","scrollTop","scrollHeight","_this$currentContent","Map","macroRegex","exec","macroName","macroContent","codeMatch","langMatch","detectMermaidType","diagramRecord","originalCode","originalMatch","charAt","toUpperCase","slice","set","firstLine","split","toLowerCase","includes","editMermaidDiagram","newCode","updateStatus","_this$editorContainer","syncContentFromRawEditor","syncMermaidChangesToContent","onSave","oldPattern","RegExp","escapeRegex","string","saveBtn","background","Math","min","max","zoomLevel","mermaidContent","transform","transformOrigin","transition","round","preventDefault","deltaY","setSaveCallback","callback","isOpen","getCurrentContent","editorContent","getValue","StorageManager","getSettings","sync","EXTENSION_SETTINGS_KEY","DEFAULT_SETTINGS","saveSettings","settings","updateSetting","field","updatedSettings","resetSettings","validateSettings","_settings$apiKey","_settings$urlTemplate","_settings$documentUrl","_settings$databaseUrl","errors","apiKey","urlTemplate","validationResult","validateConfluencePageLink","valid","documentUrl","isValidUrl","databaseUrl","isValid","Object","keys","link","out","u","pageIdParam","searchParams","test","pathParts","pagesIndex","indexOf","candidate","rootUrl","EDIT_DIAGRAM","customPrompt","instructionUrl","isEnabled","selectedModel","PROGRESS_STEPS","label","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","KToolContent","isModalOpen","currentTab","generationJob","progressSteps","confluenceEditor","getElementById","loadSettings","injectUI","bindEvents","ktoolContent","root","bubble","createBubble","modal","createModal","openModal","showNotification","createGenerateTab","createPreviewTab","createSettingsTab","href","closeModal","handleGenerate","handleReset","onMessage","addListener","sender","sendResponse","action","updateBubbleState","ctrlKey","metaKey","firstInput","focus","toggle","tooltip","baDocUrl","additionalNotes","showProgress","updateProgress","baDocument","clonedTemplate","instructions","instructionPageId","instructionDoc","ba_content","template_structure","original_storage_format","additional_prompt","additional_notes","ba_content_length","template_structure_length","original_format_length","placeholders_found","placeholders_list","jobResponse","job_id","currentJobId","pollGenerationResult","hideProgress","attempts","poll","async","statusResult","resultString","handleGenerationComplete","progress_message","generatedContent","updatePreviewTab","previewTab","editContentBtn","createPageBtn","downloadBtn","handleEditContent","handleCreatePage","handleDownload","initializeMermaid","toLocaleDateString","newPageUrl","origin","confirm","open","Blob","createObjectURL","a","download","click","revokeObjectURL","updatedContent","showMermaidTools","progressSection","step","join","display","stepIndex","stepElement","icon","notification","opacity","readyState"],"sourceRoot":""}