{"version":3,"file":"content.js","mappings":"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","sources":["webpack://k-tool-extension-clean/./src/content/utils/xmlFormatter.js","webpack://k-tool-extension-clean/./src/content/utils/contentSynchronizer.js","webpack://k-tool-extension-clean/./src/content/utils/domHelpers.js","webpack://k-tool-extension-clean/./src/content/utils/htmlTemplates.js","webpack://k-tool-extension-clean/./src/content/utils/storageManager.js","webpack://k-tool-extension-clean/./src/content/confluenceEditor.js","webpack://k-tool-extension-clean/./src/content/mermaidAI/MermaidPreview.js","webpack://k-tool-extension-clean/./src/content/mermaidAI/MermaidAIService.js","webpack://k-tool-extension-clean/./src/content/mermaidAI/MermaidApiClient.js","webpack://k-tool-extension-clean/./src/content/mermaidAI/mermaidAIChat.js","webpack://k-tool-extension-clean/./src/shared/storage.js","webpack://k-tool-extension-clean/./src/content/utils/mermaidRenderer.js","webpack://k-tool-extension-clean/./src/shared/diagramUtils.js","webpack://k-tool-extension-clean/./src/shared/api.js","webpack://k-tool-extension-clean/./src/shared/constants.js","webpack://k-tool-extension-clean/webpack/bootstrap","webpack://k-tool-extension-clean/webpack/runtime/define property getters","webpack://k-tool-extension-clean/webpack/runtime/hasOwnProperty shorthand","webpack://k-tool-extension-clean/./src/content/content.js"],"sourcesContent":["// XML/XHTML Formatting Utilities\n// Handles XML parsing, formatting and validation\n\nexport class XMLFormatter {\n  /**\n   * Format XHTML for better readability with proper alignment\n   * @param {string} xmlString - Raw XML/XHTML string\n   * @param {string} indent - Indentation string (default: 4 spaces)\n   * @returns {string} Formatted XML/XHTML string\n   */\n  static formatXHTML(xmlString, indent = \"    \") {\n    // 1. Parse string into DOM tree\n    const parser = new DOMParser();\n\n    // Wrap content with temporary root tag if it's just a fragment\n    const rootTag = \"xml-root-fragment\";\n    const wrappedXml = `<${rootTag}>${xmlString}</${rootTag}>`;\n\n    const doc = parser.parseFromString(wrappedXml, \"text/xml\");\n\n    // Check for parsing errors\n    const parseErrors = doc.getElementsByTagName(\"parsererror\");\n    if (parseErrors.length > 0) {\n      console.warn(\"XML/XHTML parsing error. Returning original string.\", {\n        error: parseErrors[0]?.textContent || \"Unknown parsing error\",\n        originalLength: xmlString.length,\n        sample: xmlString.substring(0, 100) + \"...\",\n      });\n      return xmlString;\n    }\n\n    let output = \"\";\n    let currentIndent = \"\";\n\n    // Get wrapped root element (only process its children)\n    const rootElement = doc.documentElement;\n\n    /**\n     * Recursive function to traverse and rebuild string\n     * @param {Node} node - Current node\n     * @param {string} level - Current indentation level\n     */\n    function processNode(node, level) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE: // 1: HTML/XML tags (e.g., <p>, <ac:structured-macro>)\n          const nodeName = node.nodeName;\n\n          // Start tag (e.g., <p data=\"...\">)\n          let startTag = `<${nodeName}`;\n\n          // Add attributes\n          if (node.attributes && node.attributes.length > 0) {\n            for (let attr of node.attributes) {\n              startTag += ` ${attr.name}=\"${attr.value}\"`;\n            }\n          }\n          startTag += \">\";\n\n          // Check if tag has children (excluding empty TextNodes)\n          const hasSignificantChildren = Array.from(node.childNodes).some(\n            (child) =>\n              child.nodeType !== Node.TEXT_NODE ||\n              child.textContent.trim().length > 0\n          );\n\n          if (!hasSignificantChildren) {\n            // Handle self-closing or empty tags (e.g., <br />)\n            // Note: In XHTML, <tag></tag> is more common than <tag />\n            // Here we use common logic: Open tag, close tag on same line\n            output += `${level}${startTag.replace(\">\", \"/>\")}\\n`;\n          } else {\n            // Open tag on new line\n            output += `${level}${startTag}\\n`;\n\n            // Increase indentation level and process children\n            const nextLevel = level + indent;\n            Array.from(node.childNodes).forEach((child) =>\n              processNode(child, nextLevel)\n            );\n\n            // Close tag on new line with old indentation level\n            output += `${level}</${nodeName}>\\n`;\n          }\n          break;\n\n        case Node.TEXT_NODE: // 3: Text content\n          const text = node.textContent.trim();\n          if (text.length > 0) {\n            // Handle plain text (e.g., content inside <p>)\n            // If it's plain text, add it to current line or new line\n            output += `${level}${text}\\n`;\n          }\n          break;\n\n        case Node.COMMENT_NODE: // 8: Comment (e.g., <!-- comment -->)\n          output += `${level}<!--${node.textContent}-->\\n`;\n          break;\n\n        case Node.CDATA_SECTION_NODE: // 4: CDATA Section (Safe for code in <ac:parameter>)\n          // This is the most important case for Mermaid content\n          output += `${level}<![CDATA[${node.textContent}]]>\\n`;\n          break;\n\n        // You can add other cases like DOCUMENT_TYPE_NODE, PROCESSING_INSTRUCTION_NODE if needed\n      }\n    }\n\n    // Start processing from children of temporary root tag\n    Array.from(rootElement.childNodes).forEach((node) =>\n      processNode(node, currentIndent)\n    );\n\n    return output.trim();\n  }\n\n  /**\n   * Check if a tag is self-closing\n   * @param {string} tag - HTML tag string\n   * @returns {boolean} True if self-closing\n   */\n  static isSelfClosingTag(tag) {\n    const selfClosing = [\n      \"br\",\n      \"hr\",\n      \"img\",\n      \"input\",\n      \"meta\",\n      \"link\",\n      \"source\",\n      \"track\",\n      \"wbr\",\n    ];\n    return selfClosing.some((t) => tag.startsWith(`<${t}`));\n  }\n\n  /**\n   * Clean up XML markers from content\n   * @param {string} content - Content with XML markers\n   * @returns {string} Cleaned content\n   */\n  static cleanXMLMarkers(content) {\n    if (!content) return \"\";\n\n    // Remove ```xml and ``` markers\n    let cleaned = content.replace(/^```xml\\s*\\n?/gm, \"\");\n    cleaned = cleaned.replace(/\\n?```\\s*$/gm, \"\");\n\n    return cleaned;\n  }\n\n  /**\n   * Escape regex special characters\n   * @param {string} string - String to escape\n   * @returns {string} Escaped string\n   */\n  static escapeRegex(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n}\n","/**\n * Content Synchronizer - Handles synchronization between different content sources\n * (Raw editor, Mermaid diagrams, etc.)\n */\nimport { XMLFormatter } from \"./xmlFormatter.js\";\n\nexport class ContentSynchronizer {\n  constructor() {\n    // Simplified - no change tracking needed\n    this.diagramChanges = new Map(); // Track diagram changes\n  }\n\n  /**\n   * Track diagram changes for synchronization\n   * @param {string} diagramId - Diagram ID\n   * @param {string} newCode - New diagram code\n   */\n  trackDiagramChange(diagramId, newCode) {\n    console.log(`📝 Tracking diagram change for ${diagramId}`);\n    this.diagramChanges.set(diagramId, {\n      code: newCode,\n      timestamp: Date.now(),\n    });\n  }\n\n  /**\n   * Get tracked diagram changes\n   * @returns {Map} Map of diagram changes\n   */\n  getTrackedChanges() {\n    return this.diagramChanges;\n  }\n\n  /**\n   * Clear tracked changes\n   */\n  clearTrackedChanges() {\n    this.diagramChanges.clear();\n  }\n\n  /**\n   * Sync all content sources to main content object\n   * @param {Object} currentContent - Main content object\n   * @param {HTMLElement} editorContainer - Editor container element\n   * @param {Array} mermaidDiagrams - Array of Mermaid diagrams\n   * @returns {Object} Updated content object\n   */\n  syncAllContent(currentContent, editorContainer, mermaidDiagrams = []) {\n    if (!currentContent) {\n      throw new Error(\"Current content is required\");\n    }\n\n    // 1. Sync from raw editor\n    const rawContent = this.syncFromRawEditor(currentContent, editorContainer);\n\n    // 2. Sync Mermaid changes\n    const finalContent = this.syncMermaidChanges(rawContent, mermaidDiagrams);\n\n    console.log(\"🔄 All content synchronized\");\n    return finalContent;\n  }\n\n  /**\n   * Sync content from raw editor\n   * @param {Object} currentContent - Current content object\n   * @param {HTMLElement} editorContainer - Editor container\n   * @returns {Object} Updated content object\n   */\n  syncFromRawEditor(currentContent, editorContainer) {\n    if (!editorContainer) return currentContent;\n\n    const rawEditor = editorContainer.querySelector(\"#raw-content-editor\");\n    if (!rawEditor || !rawEditor.value) return currentContent;\n\n    const updatedContent = { ...currentContent };\n    updatedContent.full_storage_format = rawEditor.value.trim();\n\n    // Also update content field if it exists\n    if (updatedContent.content !== undefined) {\n      updatedContent.content = rawEditor.value.trim();\n    }\n\n    console.log(\"📝 Synced content from raw editor\");\n    return updatedContent;\n  }\n\n  /**\n   * Sync Mermaid diagram changes back to content\n   * @param {Object} currentContent - Current content object\n   * @param {Array} mermaidDiagrams - Array of Mermaid diagrams\n   * @returns {Object} Updated content object\n   */\n  syncMermaidChanges(currentContent, mermaidDiagrams = []) {\n    console.log(\"🔄 Starting Mermaid sync...\", {\n      diagramsCount: mermaidDiagrams.length,\n      hasContent: !!currentContent,\n    });\n\n    if (!mermaidDiagrams || mermaidDiagrams.length === 0) {\n      console.log(\"⚠️ No Mermaid diagrams to sync\");\n      return currentContent;\n    }\n\n    let content =\n      currentContent.full_storage_format || currentContent.content || \"\";\n    console.log(\"📊 Processing all diagrams (no change check)...\");\n\n    // Process each diagram - always replace originalCode with code\n    mermaidDiagrams.forEach((diagram, index) => {\n      console.log(`� Processing diagram ${index}:`, {\n        id: diagram.id,\n        hasOriginalCode: !!diagram.originalCode,\n        hasCode: !!diagram.code,\n        originalLength: diagram.originalCode?.length || 0,\n        codeLength: diagram.code?.length || 0,\n      });\n\n      if (diagram.originalCode && diagram.code) {\n        console.log(`📝 Replacing code for diagram ${diagram.id || index}...`);\n        console.log(\n          `📋 Original code preview: \"${diagram.originalCode.substring(\n            0,\n            100\n          )}...\"`\n        );\n        console.log(\n          `📋 New code preview: \"${diagram.code.substring(0, 100)}...\"`\n        );\n\n        const updatedContent = this.updateDiagramInContent(\n          content,\n          diagram,\n          index\n        );\n        if (updatedContent !== content) {\n          content = updatedContent;\n          console.log(\n            `✅ Successfully replaced code for diagram ${diagram.id || index}`\n          );\n        } else {\n          console.warn(\n            `⚠️ Failed to replace code for diagram ${\n              diagram.id || index\n            } - no pattern matched`\n          );\n        }\n      } else {\n        console.log(\n          `⚠️ Skipping diagram ${\n            diagram.id || index\n          } - missing originalCode or code`\n        );\n      }\n    });\n\n    // Always return updated content\n    const updatedContent = { ...currentContent };\n    updatedContent.full_storage_format = content;\n\n    if (updatedContent.content !== undefined) {\n      updatedContent.content = content;\n    }\n\n    console.log(\"✅ Mermaid sync completed - all diagrams processed\");\n    return updatedContent;\n  }\n\n  /**\n   * Update a specific diagram in content string\n   * @param {string} content - Full content string\n   * @param {Object} diagram - Diagram object\n   * @param {number} index - Diagram index\n   * @returns {string} Updated content string\n   */\n  updateDiagramInContent(content, diagram, index) {\n    if (!content || !diagram) {\n      console.log(\"⚠️ updateDiagramInContent: Missing content or diagram\");\n      return content;\n    }\n\n    const originalCode = diagram.originalCode;\n    const newCode = diagram.code;\n\n    console.log(\"🔄 Updating diagram in content:\", {\n      index,\n      diagramId: diagram.id,\n      hasOriginalCode: !!originalCode,\n      hasNewCode: !!newCode,\n      originalLength: originalCode?.length || 0,\n      newLength: newCode?.length || 0,\n    });\n\n    if (!originalCode || !newCode) {\n      console.log(\"⚠️ Missing originalCode or newCode - skipping update\");\n      return content;\n    }\n\n    console.log(\"📋 Replacing originalCode with newCode (no equality check)\");\n    console.log(`📋 Original: \"${originalCode.substring(0, 50)}...\"`);\n    console.log(`📋 New: \"${newCode.substring(0, 50)}...\"`);\n\n    // Try multiple patterns to find and replace the diagram\n    const patterns = [\n      // Pattern 1: CDATA section in ac:parameter\n      {\n        pattern: new RegExp(\n          `(<ac:parameter[^>]*ac:name=\"code\"[^>]*>\\\\s*<\\\\!\\\\[CDATA\\\\[\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*\\\\]\\\\]>\\\\s*</ac:parameter>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n      // Pattern 2: Plain text in ac:parameter\n      {\n        pattern: new RegExp(\n          `(<ac:parameter[^>]*ac:name=\"code\"[^>]*>\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*</ac:parameter>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n      // Pattern 3: ac:plain-text-body with CDATA\n      {\n        pattern: new RegExp(\n          `(<ac:plain-text-body>\\\\s*<\\\\!\\\\[CDATA\\\\[\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*\\\\]\\\\]>\\\\s*</ac:plain-text-body>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n    ];\n\n    let updatedContent = content;\n    let patternMatched = false;\n\n    console.log(\"🔍 Trying patterns to match and replace...\");\n\n    for (let i = 0; i < patterns.length; i++) {\n      const { pattern, replacement } = patterns[i];\n\n      console.log(`🔍 Testing pattern ${i + 1}...`);\n\n      // Reset regex lastIndex to avoid issues with global flag\n      pattern.lastIndex = 0;\n\n      if (pattern.test(content)) {\n        console.log(`✅ Pattern ${i + 1} matched! Applying replacement...`);\n\n        // Reset again before replace\n        pattern.lastIndex = 0;\n        updatedContent = content.replace(pattern, replacement);\n        patternMatched = true;\n\n        console.log(`✅ Successfully updated diagram using pattern ${i + 1}`);\n        break;\n      } else {\n        console.log(`❌ Pattern ${i + 1} did not match`);\n      }\n    }\n\n    if (!patternMatched) {\n      console.warn(\n        `⚠️ Could not find pattern to update diagram ${diagram.id || index}`\n      );\n      console.log(\"🔍 Debug info:\");\n      console.log(\n        \"Original code preview:\",\n        originalCode.substring(0, 100) + \"...\"\n      );\n      console.log(\"New code preview:\", newCode.substring(0, 100) + \"...\");\n      console.log(\"Content sample:\", content.substring(0, 500) + \"...\");\n\n      // Try to find the original code manually for debugging\n      const simpleSearch = content.includes(originalCode.trim());\n      console.log(\"Simple string search found original code:\", simpleSearch);\n    } else {\n      console.log(\"✅ Pattern matching successful, content updated\");\n    }\n\n    return updatedContent;\n  }\n\n  /**\n   * Validate content structure\n   * @param {Object} content - Content to validate\n   * @returns {Object} Validation result\n   */\n  validateContent(content) {\n    const result = {\n      isValid: true,\n      errors: [],\n      warnings: [],\n    };\n\n    if (!content) {\n      result.isValid = false;\n      result.errors.push(\"Content is null or undefined\");\n      return result;\n    }\n\n    // Check required fields\n    if (!content.full_storage_format && !content.content) {\n      result.isValid = false;\n      result.errors.push(\"Missing full_storage_format or content field\");\n    }\n\n    // Check for XML validity\n    const xmlContent = content.full_storage_format || content.content;\n    if (xmlContent) {\n      try {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(\n          `<root>${xmlContent}</root>`,\n          \"text/xml\"\n        );\n        const errors = doc.getElementsByTagName(\"parsererror\");\n\n        if (errors.length > 0) {\n          result.warnings.push(\"Content may contain XML parsing issues\");\n        }\n      } catch (error) {\n        result.warnings.push(`XML validation warning: ${error.message}`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Create content backup\n   * @param {Object} content - Content to backup\n   * @returns {Object} Content backup\n   */\n  createBackup(content) {\n    return {\n      content: JSON.parse(JSON.stringify(content)),\n      timestamp: Date.now(),\n    };\n  }\n\n  /**\n   * Restore from backup\n   * @param {Object} backup - Backup to restore\n   * @returns {Object} Restored content\n   */\n  restoreFromBackup(backup) {\n    if (!backup || !backup.content) {\n      throw new Error(\"Invalid backup data\");\n    }\n\n    console.log(\"🔄 Restored content from backup\");\n    return backup.content;\n  }\n}\n","// DOM Manipulation Helpers\n// Utility functions for DOM operations and event handling\n\nexport class DOMHelpers {\n  /**\n   * Safely query selector with error handling\n   * @param {HTMLElement} container - Container element\n   * @param {string} selector - CSS selector\n   * @returns {HTMLElement|null} Found element or null\n   */\n  static querySelector(container, selector) {\n    try {\n      return container.querySelector(selector);\n    } catch (error) {\n      console.error(`Error querying selector \"${selector}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Safely query all selectors with error handling\n   * @param {HTMLElement} container - Container element\n   * @param {string} selector - CSS selector\n   * @returns {NodeList} Found elements\n   */\n  static querySelectorAll(container, selector) {\n    try {\n      return container.querySelectorAll(selector);\n    } catch (error) {\n      console.error(`Error querying selector \"${selector}\":`, error);\n      return [];\n    }\n  }\n\n  /**\n   * Add event listener with error handling\n   * @param {HTMLElement} element - Target element\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   * @param {object} options - Event options\n   */\n  static addEventListener(element, event, handler, options = {}) {\n    if (!element) {\n      console.warn(`Cannot add event listener: element is null`);\n      return;\n    }\n\n    try {\n      element.addEventListener(event, handler, options);\n    } catch (error) {\n      console.error(`Error adding event listener for \"${event}\":`, error);\n    }\n  }\n\n  /**\n   * Remove event listener with error handling\n   * @param {HTMLElement} element - Target element\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   */\n  static removeEventListener(element, event, handler) {\n    if (!element) {\n      console.warn(`Cannot remove event listener: element is null`);\n      return;\n    }\n\n    try {\n      element.removeEventListener(event, handler);\n    } catch (error) {\n      console.error(`Error removing event listener for \"${event}\":`, error);\n    }\n  }\n\n  /**\n   * Toggle class on element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to toggle\n   * @param {boolean} force - Force add/remove\n   */\n  static toggleClass(element, className, force = undefined) {\n    if (!element) {\n      console.warn(`Cannot toggle class: element is null`);\n      return;\n    }\n\n    try {\n      if (force !== undefined) {\n        element.classList.toggle(className, force);\n      } else {\n        element.classList.toggle(className);\n      }\n    } catch (error) {\n      console.error(`Error toggling class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Add class to element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to add\n   */\n  static addClass(element, className) {\n    if (!element) {\n      console.warn(`Cannot add class: element is null`);\n      return;\n    }\n\n    try {\n      element.classList.add(className);\n    } catch (error) {\n      console.error(`Error adding class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Remove class from element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to remove\n   */\n  static removeClass(element, className) {\n    if (!element) {\n      console.warn(`Cannot remove class: element is null`);\n      return;\n    }\n\n    try {\n      element.classList.remove(className);\n    } catch (error) {\n      console.error(`Error removing class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Set element content safely\n   * @param {HTMLElement} element - Target element\n   * @param {string} content - Content to set\n   * @param {boolean} isHTML - Whether content is HTML (default: false)\n   */\n  static setContent(element, content, isHTML = false) {\n    if (!element) {\n      console.warn(`Cannot set content: element is null`);\n      return;\n    }\n\n    try {\n      // Handle form elements specially\n      if (\n        element.tagName === \"INPUT\" ||\n        element.tagName === \"TEXTAREA\" ||\n        element.tagName === \"SELECT\"\n      ) {\n        element.value = content || \"\";\n        return;\n      }\n\n      if (isHTML) {\n        element.innerHTML = content;\n      } else {\n        element.textContent = content;\n      }\n    } catch (error) {\n      console.error(`Error setting content:`, error);\n    }\n  }\n\n  /**\n   * Get element content safely\n   * @param {HTMLElement} element - Target element\n   * @param {boolean} isHTML - Whether to get HTML content (default: false)\n   * @returns {string} Element content\n   */\n  static getContent(element, isHTML = false) {\n    if (!element) {\n      console.warn(`Cannot get content: element is null`);\n      return \"\";\n    }\n\n    try {\n      // Handle form elements specially\n      if (\n        element.tagName === \"INPUT\" ||\n        element.tagName === \"TEXTAREA\" ||\n        element.tagName === \"SELECT\"\n      ) {\n        return element.value || \"\";\n      }\n\n      return isHTML ? element.innerHTML : element.textContent;\n    } catch (error) {\n      console.error(`Error getting content:`, error);\n      return \"\";\n    }\n  }\n\n  /**\n   * Create element with attributes and content\n   * @param {string} tagName - HTML tag name\n   * @param {object} attributes - Element attributes\n   * @param {string} content - Element content\n   * @param {boolean} isHTML - Whether content is HTML\n   * @returns {HTMLElement} Created element\n   */\n  static createElement(tagName, attributes = {}, content = \"\", isHTML = false) {\n    try {\n      const element = document.createElement(tagName);\n\n      // Set attributes\n      Object.entries(attributes).forEach(([key, value]) => {\n        if (key === \"className\") {\n          element.className = value;\n        } else if (key === \"style\" && typeof value === \"object\") {\n          Object.assign(element.style, value);\n        } else {\n          element.setAttribute(key, value);\n        }\n      });\n\n      // Set content\n      if (content) {\n        this.setContent(element, content, isHTML);\n      }\n\n      return element;\n    } catch (error) {\n      console.error(`Error creating element \"${tagName}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Remove element safely\n   * @param {HTMLElement} element - Element to remove\n   */\n  static removeElement(element) {\n    if (!element) {\n      console.warn(`Cannot remove element: element is null`);\n      return;\n    }\n\n    try {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      } else {\n        element.remove();\n      }\n    } catch (error) {\n      console.error(`Error removing element:`, error);\n    }\n  }\n\n  /**\n   * Check if element exists in DOM\n   * @param {HTMLElement} element - Element to check\n   * @returns {boolean} True if element exists in DOM\n   */\n  static isInDOM(element) {\n    if (!element) return false;\n    return document.body.contains(element);\n  }\n\n  /**\n   * Scroll element into view smoothly\n   * @param {HTMLElement} element - Element to scroll to\n   * @param {object} options - Scroll options\n   */\n  static scrollIntoView(\n    element,\n    options = { behavior: \"smooth\", block: \"center\" }\n  ) {\n    if (!element) {\n      console.warn(`Cannot scroll: element is null`);\n      return;\n    }\n\n    try {\n      element.scrollIntoView(options);\n    } catch (error) {\n      console.error(`Error scrolling element into view:`, error);\n    }\n  }\n\n  /**\n   * Get element dimensions\n   * @param {HTMLElement} element - Target element\n   * @returns {object} Element dimensions\n   */\n  static getDimensions(element) {\n    if (!element) {\n      console.warn(`Cannot get dimensions: element is null`);\n      return { width: 0, height: 0, top: 0, left: 0 };\n    }\n\n    try {\n      const rect = element.getBoundingClientRect();\n      return {\n        width: rect.width,\n        height: rect.height,\n        top: rect.top,\n        left: rect.left,\n        right: rect.right,\n        bottom: rect.bottom,\n      };\n    } catch (error) {\n      console.error(`Error getting element dimensions:`, error);\n      return { width: 0, height: 0, top: 0, left: 0 };\n    }\n  }\n\n  /**\n   * Deep clone element\n   * @param {HTMLElement} element - Element to clone\n   * @param {boolean} deep - Whether to deep clone (default: true)\n   * @returns {HTMLElement} Cloned element\n   */\n  static cloneElement(element, deep = true) {\n    if (!element) {\n      console.warn(`Cannot clone element: element is null`);\n      return null;\n    }\n\n    try {\n      return element.cloneNode(deep);\n    } catch (error) {\n      console.error(`Error cloning element:`, error);\n      return null;\n    }\n  }\n}\n","// HTML Templates for Confluence Editor\n// Contains all HTML template strings and styling utilities\n\nexport class HTMLTemplates {\n  /**\n   * Get the main editor HTML template\n   * @returns {string} HTML template string\n   */\n  static getEditorTemplate() {\n    return `\n      <div class=\"confluence-editor-container\">\n        <div class=\"confluence-editor-header\">\n          <h2 class=\"confluence-editor-title\">\n            📝 Chỉnh sửa nội dung Confluence\n          </h2>\n          <div class=\"confluence-editor-actions\">\n            <button class=\"editor-btn editor-btn-primary\" id=\"editor-save-btn\">\n              💾 Lưu thay đổi\n            </button>\n            <button class=\"editor-btn editor-btn-secondary\" id=\"editor-close-btn\">\n              ✕ Đóng\n            </button>\n          </div>\n        </div>\n\n        <div class=\"confluence-editor-tabs\">\n          <button class=\"confluence-editor-tab active\" id=\"content-tab\">\n            📝 Chỉnh sửa nội dung\n          </button>\n          <button class=\"confluence-editor-tab\" id=\"mermaid-tab\">\n            📊 Chỉnh sửa Mermaid\n          </button>\n        </div>\n\n        <div class=\"confluence-editor-body\">\n          ${this.getContentTabTemplate()}\n          ${this.getMermaidTabTemplate()}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get content tab template\n   * @returns {string} Content tab HTML\n   */\n  static getContentTabTemplate() {\n    return `\n      <!-- Content Tab -->\n      <div class=\"tab-content active\" id=\"content-tab-content\">\n        <div class=\"content-editor-layout\">\n          <!-- Raw XHTML Editor (Left) -->\n          <div class=\"content-editor-pane\">\n            <div class=\"content-editor-header\">\n              📝 Raw XHTML Content\n            </div>\n            <div class=\"content-editor-body\">\n              <textarea class=\"raw-content-editor\" id=\"raw-content-editor\" placeholder=\"Raw XHTML content will appear here...\"></textarea>\n            </div>\n          </div>\n\n          <!-- Preview Pane (Right) -->\n          <div class=\"content-preview-pane\">\n            <div class=\"content-editor-header\">\n              👁️ Live Preview\n            </div>\n            <div class=\"content-editor-body\">\n              <div class=\"content-preview\" id=\"content-preview\">\n                <!-- Preview content will be rendered here -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get mermaid tab template\n   * @returns {string} Mermaid tab HTML\n   */\n  static getMermaidTabTemplate() {\n    return `\n      <!-- Mermaid Tab -->\n      <div class=\"tab-content\" id=\"mermaid-tab-content\">\n        <div class=\"mermaid-editor-layout\">\n          <!-- Mermaid Code Editor (Left) -->\n          <div class=\"mermaid-code-pane\">\n            <div class=\"mermaid-editor-header\">\n              📊 Mermaid Code\n              <select id=\"mermaid-selector\" class=\"mermaid-selector\">\n                <option value=\"\">Select diagram...</option>\n              </select>\n            </div>\n            <div class=\"mermaid-editor-body\">\n              <textarea class=\"mermaid-code-editor\" id=\"mermaid-code-editor\" placeholder=\"Select a Mermaid diagram to edit...\"></textarea>\n            </div>\n          </div>\n\n          <!-- Mermaid Preview (Center) -->\n          <div class=\"mermaid-preview-pane\">\n            <div class=\"mermaid-editor-header\">\n              📊 Diagram Preview\n              ${this.getZoomControlsTemplate()}\n            </div>\n            <div class=\"mermaid-editor-body\">\n              <div class=\"mermaid-preview\" id=\"mermaid-preview\">\n                <div class=\"mermaid-placeholder\">\n                  Select a diagram to preview\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- AI Chat (Right) -->\n          <div class=\"mermaid-ai-pane\">\n            <div class=\"mermaid-editor-header\">\n              🤖 AI Assistant\n            </div>\n            <div class=\"mermaid-editor-body\">\n              ${this.getAIChatTemplate()}\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get zoom controls template\n   * @returns {string} Zoom controls HTML\n   */\n  static getZoomControlsTemplate() {\n    return `\n      <div class=\"mermaid-zoom-controls\">\n        <button class=\"zoom-btn\" id=\"zoom-out\" title=\"Zoom Out\">−</button>\n        <div class=\"zoom-level\" id=\"zoom-level\">100%</div>\n        <button class=\"zoom-btn\" id=\"zoom-in\" title=\"Zoom In\">+</button>\n        <button class=\"zoom-btn\" id=\"zoom-reset\" title=\"Reset Zoom\">⌂</button>\n      </div>\n    `;\n  }\n\n  /**\n   * Get AI chat template - Enhanced version similar to extension\n   * @returns {string} AI chat HTML\n   */\n  static getAIChatTemplate() {\n    return `\n      <div class=\"ai-chat-container\">\n        <div class=\"ai-chat-header\">\n          <div class=\"ai-header-title\">\n            <span class=\"ai-icon\">🤖</span>\n            <span>AI Diagram Assistant</span>\n          </div>\n          <div class=\"ai-header-status\">Ready</div>\n        </div>\n        <div class=\"ai-chat-messages\" id=\"ai-chat-messages\">\n          <div class=\"ai-message\">\n            <div class=\"ai-avatar\">🤖</div>\n            <div class=\"ai-text\">\n              <strong>Hi! I'm your AI Diagram Assistant.</strong><br/><br/>\n              I can help you modify Mermaid diagrams with natural language commands:<br/>\n              • \"Add a new node called 'Database'\"<br/>\n              • \"Change the color of node A to blue\"<br/>\n              • \"Add an arrow from A to B\"<br/>\n              • \"Make this flowchart more detailed\"<br/><br/>\n              <em>Select a diagram above and describe what you want to change!</em>\n            </div>\n          </div>\n        </div>\n        <div class=\"ai-chat-input\">\n          <div class=\"ai-input-container\">\n            <textarea\n              id=\"ai-prompt-input\"\n              placeholder=\"Describe how you want to modify the diagram...\"\n              rows=\"2\"\n            ></textarea>\n            <button id=\"ai-send-btn\" class=\"ai-send-btn\" title=\"Send message (Enter)\">\n              <span class=\"send-icon\">📤</span>\n            </button>\n          </div>\n          <div class=\"ai-input-tips\">\n            💡 <strong>Tips:</strong> Be specific about changes you want. Press Enter to send.\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Apply inline styles to HTML content for preview\n   * @param {string} content - Raw HTML content\n   * @returns {string} Styled HTML content\n   */\n  static applyPreviewStyles(content) {\n    return content\n      .replace(\n        /<h1>/g,\n        \"<h1 style='color: #333; margin: 24px 0 16px 0; font-size: 1.8rem; border-bottom: 2px solid #e1e5e9; padding-bottom: 8px;'>\"\n      )\n      .replace(\n        /<h2>/g,\n        \"<h2 style='color: #555; margin: 20px 0 12px 0; font-size: 1.4rem;'>\"\n      )\n      .replace(\n        /<h3>/g,\n        \"<h3 style='color: #666; margin: 16px 0 8px 0; font-size: 1.2rem;'>\"\n      )\n      .replace(\n        /<p>/g,\n        \"<p style='margin: 12px 0; line-height: 1.6; color: #333;'>\"\n      )\n      .replace(/<ul>/g, \"<ul style='margin: 12px 0; padding-left: 24px;'>\")\n      .replace(/<li>/g, \"<li style='margin: 4px 0; line-height: 1.5;'>\")\n      .replace(\n        /<table>/g,\n        \"<table style='border-collapse: collapse; width: 100%; margin: 20px 0; box-shadow: 0 1px 3px rgba(0,0,0,0.1);'>\"\n      )\n      .replace(\n        /<th>/g,\n        \"<th style='border: 1px solid #ddd; padding: 12px; background: #f8f9fa; font-weight: 600; text-align: left;'>\"\n      )\n      .replace(\n        /<td>/g,\n        \"<td style='border: 1px solid #ddd; padding: 12px; vertical-align: top;'>\"\n      )\n      .replace(/<strong>/g, \"<strong style='color: #2c3e50;'>\")\n      .replace(\n        /<code>/g,\n        \"<code style='background: #f1f3f4; padding: 2px 4px; border-radius: 3px; font-family: monospace; font-size: 0.9em;'>\"\n      );\n  }\n\n  /**\n   * Create AI message HTML\n   * @param {string} type - Message type ('user' or 'ai')\n   * @param {string} text - Message text\n   * @returns {string} AI message HTML\n   */\n  static createAIMessage(type, text) {\n    const avatar = type === \"user\" ? \"👤\" : \"🤖\";\n    const bgColor = type === \"user\" ? \"#e5e7eb\" : \"#3b82f6\";\n\n    return `\n      <div class=\"ai-message\">\n        <div class=\"ai-avatar\" style=\"background: ${bgColor};\">${avatar}</div>\n        <div class=\"ai-text\">${text}</div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create mermaid diagram container with styling\n   * @param {number} index - Diagram index\n   * @returns {HTMLElement} Mermaid container element\n   */\n  static createMermaidContainer(index) {\n    const mermaidDiv = document.createElement(\"div\");\n    mermaidDiv.className = \"mermaid-diagram\";\n    mermaidDiv.id = `preview-mermaid-${index}`;\n    mermaidDiv.style.cssText =\n      \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\n    return mermaidDiv;\n  }\n}\n","/**\n * Storage Manager - Handles saving and loading content changes\n * Supports both callback-based saving and localStorage backup\n */\nexport class StorageManager {\n  constructor() {\n    this.STORAGE_KEY = 'confluence_editor_backup';\n    this.AUTO_SAVE_INTERVAL = 30000; // 30 seconds\n    this.autoSaveTimer = null;\n  }\n\n  /**\n   * Save content with multiple strategies\n   * @param {Object} content - Content to save\n   * @param {Function} saveCallback - Optional callback for external save\n   * @param {Object} options - Save options\n   */\n  async saveContent(content, saveCallback = null, options = {}) {\n    const { \n      enableLocalStorage = true, \n      enableCallback = true,\n      showNotification = true \n    } = options;\n\n    const results = {\n      localStorage: false,\n      callback: false,\n      errors: []\n    };\n\n    // 1. Save to localStorage as backup\n    if (enableLocalStorage) {\n      try {\n        this.saveToLocalStorage(content);\n        results.localStorage = true;\n        console.log('✅ Content saved to localStorage');\n      } catch (error) {\n        console.error('❌ Failed to save to localStorage:', error);\n        results.errors.push(`localStorage: ${error.message}`);\n      }\n    }\n\n    // 2. Call external save callback\n    if (enableCallback && saveCallback) {\n      try {\n        await this.callSaveCallback(saveCallback, content);\n        results.callback = true;\n        console.log('✅ Content saved via callback');\n      } catch (error) {\n        console.error('❌ Failed to save via callback:', error);\n        results.errors.push(`callback: ${error.message}`);\n      }\n    }\n\n    // 3. Show notification\n    if (showNotification) {\n      this.showSaveNotification(results);\n    }\n\n    return results;\n  }\n\n  /**\n   * Save content to localStorage\n   * @param {Object} content - Content to save\n   */\n  saveToLocalStorage(content) {\n    const backupData = {\n      content: content,\n      timestamp: Date.now(),\n      version: '1.0'\n    };\n\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(backupData));\n  }\n\n  /**\n   * Load content from localStorage\n   * @returns {Object|null} Saved content or null\n   */\n  loadFromLocalStorage() {\n    try {\n      const saved = localStorage.getItem(this.STORAGE_KEY);\n      if (!saved) return null;\n\n      const backupData = JSON.parse(saved);\n      \n      // Check if backup is recent (within 24 hours)\n      const age = Date.now() - backupData.timestamp;\n      const maxAge = 24 * 60 * 60 * 1000; // 24 hours\n      \n      if (age > maxAge) {\n        console.log('🗑️ Removing old localStorage backup');\n        localStorage.removeItem(this.STORAGE_KEY);\n        return null;\n      }\n\n      console.log('📦 Loaded content from localStorage backup');\n      return backupData.content;\n    } catch (error) {\n      console.error('❌ Failed to load from localStorage:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Clear localStorage backup\n   */\n  clearLocalStorage() {\n    localStorage.removeItem(this.STORAGE_KEY);\n    console.log('🗑️ Cleared localStorage backup');\n  }\n\n  /**\n   * Call external save callback\n   * @param {Function} callback - Save callback function\n   * @param {Object} content - Content to save\n   */\n  async callSaveCallback(callback, content) {\n    if (typeof callback !== 'function') {\n      throw new Error('Save callback is not a function');\n    }\n\n    // Handle both sync and async callbacks\n    const result = callback(content);\n    if (result && typeof result.then === 'function') {\n      await result;\n    }\n  }\n\n  /**\n   * Show save notification\n   * @param {Object} results - Save results\n   */\n  showSaveNotification(results) {\n    const { localStorage, callback, errors } = results;\n    \n    if (localStorage && callback) {\n      this.showNotification('✅ Đã lưu thay đổi thành công', 'success');\n    } else if (localStorage || callback) {\n      const method = localStorage ? 'localStorage' : 'callback';\n      this.showNotification(`⚠️ Đã lưu qua ${method} (một phần)`, 'warning');\n    } else {\n      this.showNotification('❌ Không thể lưu thay đổi', 'error');\n    }\n\n    if (errors.length > 0) {\n      console.warn('Save errors:', errors);\n    }\n  }\n\n  /**\n   * Show notification to user\n   * @param {string} message - Notification message\n   * @param {string} type - Notification type (success, warning, error)\n   */\n  showNotification(message, type = 'info') {\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `confluence-editor-notification ${type}`;\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 12px 20px;\n      border-radius: 6px;\n      color: white;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      z-index: 10001;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      transition: all 0.3s ease;\n      max-width: 300px;\n    `;\n\n    // Set background color based on type\n    const colors = {\n      success: '#28a745',\n      warning: '#ffc107',\n      error: '#dc3545',\n      info: '#17a2b8'\n    };\n    notification.style.background = colors[type] || colors.info;\n\n    notification.textContent = message;\n    document.body.appendChild(notification);\n\n    // Auto remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentNode) {\n        notification.style.opacity = '0';\n        notification.style.transform = 'translateX(100%)';\n        setTimeout(() => {\n          notification.remove();\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * Start auto-save timer\n   * @param {Function} saveFunction - Function to call for auto-save\n   */\n  startAutoSave(saveFunction) {\n    this.stopAutoSave();\n    \n    this.autoSaveTimer = setInterval(() => {\n      try {\n        saveFunction();\n        console.log('🔄 Auto-save completed');\n      } catch (error) {\n        console.error('❌ Auto-save failed:', error);\n      }\n    }, this.AUTO_SAVE_INTERVAL);\n\n    console.log('⏰ Auto-save started (every 30 seconds)');\n  }\n\n  /**\n   * Stop auto-save timer\n   */\n  stopAutoSave() {\n    if (this.autoSaveTimer) {\n      clearInterval(this.autoSaveTimer);\n      this.autoSaveTimer = null;\n      console.log('⏹️ Auto-save stopped');\n    }\n  }\n\n  /**\n   * Check if there are unsaved changes in localStorage\n   * @param {Object} currentContent - Current content to compare\n   * @returns {boolean} True if there are unsaved changes\n   */\n  hasUnsavedChanges(currentContent) {\n    const saved = this.loadFromLocalStorage();\n    if (!saved) return false;\n\n    try {\n      const currentStr = JSON.stringify(currentContent);\n      const savedStr = JSON.stringify(saved);\n      return currentStr !== savedStr;\n    } catch (error) {\n      console.error('❌ Error comparing content:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get backup info\n   * @returns {Object|null} Backup information\n   */\n  getBackupInfo() {\n    try {\n      const saved = localStorage.getItem(this.STORAGE_KEY);\n      if (!saved) return null;\n\n      const backupData = JSON.parse(saved);\n      return {\n        timestamp: backupData.timestamp,\n        age: Date.now() - backupData.timestamp,\n        version: backupData.version\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n}\n","// Confluence Content Editor with Rich Text Editing\r\n// Handles editing interface when Confluence content is returned from API\r\n\r\nimport { API_URLS } from \"../shared/constants.js\";\r\nimport { StorageManager as ChromeStorageManager } from \"../shared/storage.js\";\r\nimport { ContentSynchronizer } from \"./utils/contentSynchronizer.js\";\r\nimport { DOMHelpers } from \"./utils/domHelpers.js\";\r\nimport { HTMLTemplates } from \"./utils/htmlTemplates.js\";\r\nimport { MermaidRenderer } from \"./utils/mermaidRenderer.js\";\r\nimport { StorageManager } from \"./utils/storageManager.js\";\r\nimport { XMLFormatter } from \"./utils/xmlFormatter.js\";\r\n\r\nclass ConfluenceEditor {\r\n  constructor() {\r\n    this.isEditorOpen = false;\r\n    this.currentContent = null;\r\n    this.originalContent = null;\r\n    this.onSave = null;\r\n    this.mermaidDiagrams = [];\r\n    this.mermaidDiagramsMap = new Map();\r\n    this.currentSelectedDiagram = null;\r\n    this.currentSelectedDiagramId = null;\r\n    this.editorContainer = null;\r\n    this.textEditor = null; // CodeMirror instance\r\n    this.previewContainer = null;\r\n    this.isPreviewMode = false;\r\n    this.autoSaveTimer = null;\r\n    this.isModified = false;\r\n\r\n    // Zoom controls\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n\r\n    // Initialize utility classes\r\n    this.storageManager = new StorageManager();\r\n    this.contentSynchronizer = new ContentSynchronizer();\r\n  }\r\n\r\n  openEditor(content, options = {}) {\r\n    if (this.isEditorOpen) {\r\n      this.closeEditor();\r\n    }\r\n\r\n    console.log(\"📝 Opening Confluence Editor with content:\", content);\r\n\r\n    // Auto-restore from localStorage backup if available (no confirm)\r\n    const backup = this.storageManager.loadFromLocalStorage();\r\n    if (backup && options.allowBackupRestore !== false) {\r\n      const backupInfo = this.storageManager.getBackupInfo();\r\n      const ageMinutes = Math.floor(backupInfo.age / (1000 * 60));\r\n\r\n      // Auto-restore if backup is recent (less than 30 minutes)\r\n      if (ageMinutes < 30) {\r\n        this.currentContent = backup;\r\n        console.log(\r\n          `📦 Auto-restored content from backup (${ageMinutes} minutes old)`\r\n        );\r\n      } else {\r\n        this.currentContent = content;\r\n        this.storageManager.clearLocalStorage();\r\n        console.log(\r\n          `📦 Backup too old (${ageMinutes} minutes), using original content`\r\n        );\r\n      }\r\n    } else {\r\n      this.currentContent = content;\r\n    }\r\n\r\n    this.originalContent = JSON.parse(JSON.stringify(content)); // Deep copy of original\r\n    this.isEditorOpen = true;\r\n\r\n    // Extract Mermaid diagrams from content\r\n    this.extractMermaidDiagrams();\r\n\r\n    // Create editor UI\r\n    this.createEditorUI(options);\r\n\r\n    // Initialize content tab (default)\r\n    this.initializeContentTab();\r\n  }\r\n\r\n  createEditorUI() {\r\n    const overlay = DOMHelpers.createElement(\"div\", {\r\n      className: \"confluence-editor-overlay\",\r\n    });\r\n\r\n    DOMHelpers.setContent(overlay, HTMLTemplates.getEditorTemplate(), true);\r\n    document.body.appendChild(overlay);\r\n    this.editorContainer = overlay;\r\n\r\n    // Bind events\r\n    this.bindEditorEvents();\r\n  }\r\n\r\n  bindEditorEvents() {\r\n    if (!this.editorContainer) return;\r\n\r\n    // Close button\r\n    const closeBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-close-btn\"\r\n    );\r\n    console.log(\"🔍 Close button found:\", !!closeBtn);\r\n    if (closeBtn) {\r\n      DOMHelpers.addEventListener(closeBtn, \"click\", () => {\r\n        console.log(\"🔄 Close button clicked\");\r\n        this.closeEditor();\r\n      });\r\n    } else {\r\n      console.error(\"❌ Close button not found!\");\r\n    }\r\n\r\n    // Save button\r\n    const saveBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-save-btn\"\r\n    );\r\n    console.log(\"🔍 Save button found:\", !!saveBtn);\r\n    if (saveBtn) {\r\n      DOMHelpers.addEventListener(saveBtn, \"click\", () => {\r\n        console.log(\"💾 Save button clicked\");\r\n        this.saveChanges();\r\n      });\r\n    } else {\r\n      console.error(\"❌ Save button not found!\");\r\n    }\r\n\r\n    // Tab buttons\r\n    const contentTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#content-tab\"\r\n    );\r\n    const mermaidTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-tab\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(contentTab, \"click\", () =>\r\n      this.switchTab(\"content\")\r\n    );\r\n    DOMHelpers.addEventListener(mermaidTab, \"click\", () =>\r\n      this.switchTab(\"mermaid\")\r\n    );\r\n\r\n    // Content tab elements\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n    DOMHelpers.addEventListener(rawEditor, \"input\", () =>\r\n      this.updateContentPreview()\r\n    );\r\n\r\n    // Mermaid tab elements\r\n    const mermaidSelector = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-selector\"\r\n    );\r\n    const mermaidCodeEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const aiSendBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-send-btn\"\r\n    );\r\n    const aiPromptInput = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-prompt-input\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(mermaidSelector, \"change\", (e) =>\r\n      this.selectMermaidDiagram(e.target.value)\r\n    );\r\n\r\n    DOMHelpers.addEventListener(mermaidCodeEditor, \"input\", () => {\r\n      this.updateMermaidPreview().catch((error) => {\r\n        console.error(\"❌ Error updating Mermaid preview:\", error);\r\n      });\r\n    });\r\n\r\n    DOMHelpers.addEventListener(aiSendBtn, \"click\", () => this.sendAIPrompt());\r\n\r\n    DOMHelpers.addEventListener(aiPromptInput, \"keypress\", (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        e.preventDefault();\r\n        this.sendAIPrompt();\r\n      }\r\n    });\r\n\r\n    // Zoom controls\r\n    const zoomInBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-in\"\r\n    );\r\n    const zoomOutBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-out\"\r\n    );\r\n    const zoomResetBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-reset\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(zoomInBtn, \"click\", () => this.zoomIn());\r\n    DOMHelpers.addEventListener(zoomOutBtn, \"click\", () => this.zoomOut());\r\n    DOMHelpers.addEventListener(zoomResetBtn, \"click\", () => this.resetZoom());\r\n\r\n    // Add wheel zoom to mermaid preview\r\n    const mermaidPreview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-preview\"\r\n    );\r\n    DOMHelpers.addEventListener(mermaidPreview, \"wheel\", (e) =>\r\n      this.handleWheel(e)\r\n    );\r\n\r\n    // Close on overlay click\r\n    DOMHelpers.addEventListener(this.editorContainer, \"click\", (e) => {\r\n      if (e.target === this.editorContainer) {\r\n        this.closeEditor();\r\n      }\r\n    });\r\n\r\n    // ESC key to close\r\n    const handleEsc = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        this.closeEditor();\r\n        DOMHelpers.removeEventListener(document, \"keydown\", handleEsc);\r\n      }\r\n    };\r\n    DOMHelpers.addEventListener(document, \"keydown\", handleEsc);\r\n  }\r\n\r\n  // Switch between tabs\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    const tabs = DOMHelpers.querySelectorAll(\r\n      this.editorContainer,\r\n      \".confluence-editor-tab\"\r\n    );\r\n    tabs.forEach((tab) => DOMHelpers.removeClass(tab, \"active\"));\r\n\r\n    const activeTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      `#${tabName}-tab`\r\n    );\r\n    DOMHelpers.addClass(activeTab, \"active\");\r\n\r\n    // Update tab content\r\n    const tabContents = DOMHelpers.querySelectorAll(\r\n      this.editorContainer,\r\n      \".tab-content\"\r\n    );\r\n    tabContents.forEach((content) => DOMHelpers.removeClass(content, \"active\"));\r\n\r\n    const activeContent = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      `#${tabName}-tab-content`\r\n    );\r\n    DOMHelpers.addClass(activeContent, \"active\");\r\n\r\n    // Initialize tab-specific content\r\n    if (tabName === \"content\") {\r\n      this.initializeContentTab();\r\n    } else if (tabName === \"mermaid\") {\r\n      this.initializeMermaidTab();\r\n    }\r\n\r\n    console.log(`Switched to ${tabName} tab`);\r\n  }\r\n\r\n  // Initialize content tab\r\n  initializeContentTab() {\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n\r\n    console.log(\"🔍 Initializing content tab...\");\r\n    console.log(\"Raw editor found:\", !!rawEditor);\r\n    console.log(\"Current content exists:\", !!this.currentContent);\r\n\r\n    if (rawEditor && this.currentContent) {\r\n      // Get raw content and clean up ```xml markers\r\n      let rawContent =\r\n        this.currentContent.full_storage_format ||\r\n        this.currentContent.content ||\r\n        \"\";\r\n\r\n      console.log(\"Raw content length:\", rawContent.length);\r\n\r\n      // Clean XML markers and format for better readability\r\n      rawContent = XMLFormatter.cleanXMLMarkers(rawContent);\r\n      rawContent = XMLFormatter.formatXHTML(rawContent);\r\n\r\n      console.log(\"Formatted content length:\", rawContent.length);\r\n\r\n      // Set content using direct assignment and DOMHelpers\r\n      rawEditor.value = rawContent;\r\n      DOMHelpers.setContent(rawEditor, rawContent);\r\n\r\n      console.log(\"✅ Content set to raw editor\");\r\n      this.updateContentPreview();\r\n    } else {\r\n      console.warn(\r\n        \"⚠️ Cannot initialize content tab - missing rawEditor or currentContent\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // Initialize mermaid tab\r\n  initializeMermaidTab() {\r\n    console.log(\"🔍 Initializing mermaid tab...\");\r\n\r\n    // Always extract diagrams to ensure sync with current content\r\n    console.log(\"📊 Extracting diagrams from current content...\");\r\n    this.extractMermaidDiagrams();\r\n\r\n    console.log(\"Diagrams available:\", this.mermaidDiagrams.length);\r\n    console.log(\"DiagramsMap size:\", this.mermaidDiagramsMap.size);\r\n    this.populateMermaidSelector();\r\n  }\r\n\r\n  // Update content preview\r\n  updateContentPreview() {\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n    const preview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#content-preview\"\r\n    );\r\n\r\n    if (!rawEditor || !preview) return;\r\n\r\n    const content = DOMHelpers.getContent(rawEditor);\r\n\r\n    // Update current content\r\n    if (this.currentContent) {\r\n      this.currentContent.full_storage_format = content;\r\n      // Mark as modified if content changed\r\n      if (\r\n        this.originalContent &&\r\n        content !== this.originalContent.full_storage_format\r\n      ) {\r\n        this.isModified = true;\r\n        this.updateSaveButtonState();\r\n      }\r\n    }\r\n\r\n    // Render preview\r\n    this.renderContentPreview(content, preview);\r\n  }\r\n\r\n  // Render content preview\r\n  renderContentPreview(content, previewElement) {\r\n    // Apply inline styles for preview\r\n    const processedContent = HTMLTemplates.applyPreviewStyles(content);\r\n\r\n    // Set the processed content to preview element\r\n    DOMHelpers.setContent(previewElement, processedContent, true);\r\n\r\n    // Render Mermaid diagrams\r\n    this.renderMermaidDiagramsInPreview();\r\n  }\r\n\r\n  // Render Mermaid diagrams in preview\r\n  renderMermaidDiagramsInPreview() {\r\n    // Use the new comprehensive Mermaid initialization\r\n    setTimeout(() => {\r\n      this.initializeMermaidInPreview();\r\n    }, 100);\r\n  }\r\n\r\n  // Initialize Mermaid diagrams in preview\r\n  async initializeMermaidInPreview() {\r\n    try {\r\n      // Initialize Mermaid\r\n      await MermaidRenderer.initializeMermaid();\r\n\r\n      console.log(\"🎨 Initializing Mermaid diagrams in preview...\");\r\n\r\n      // Find all mermaid code blocks in the preview\r\n      const previewDiv = DOMHelpers.querySelector(\r\n        this.editorContainer,\r\n        \"#content-preview\"\r\n      );\r\n      if (!previewDiv) return;\r\n\r\n      // Look for Confluence Mermaid structured macros\r\n      const mermaidElements = DOMHelpers.querySelectorAll(\r\n        previewDiv,\r\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\r\n      );\r\n\r\n      mermaidElements.forEach(async (element, index) => {\r\n        // Get the code parameter from Confluence structured macro\r\n        const codeParam = DOMHelpers.querySelector(\r\n          element,\r\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\r\n        );\r\n        if (!codeParam) {\r\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\r\n          return;\r\n        }\r\n\r\n        const mermaidCode = DOMHelpers.getContent(codeParam).trim();\r\n        console.log(\r\n          \"🔍 Found Confluence Mermaid diagram:\",\r\n          mermaidCode.substring(0, 50) + \"...\"\r\n        );\r\n\r\n        // Always process Confluence mermaid macros\r\n        if (mermaidCode) {\r\n          // Create a new div for the mermaid diagram\r\n          const mermaidDiv = HTMLTemplates.createMermaidContainer(index);\r\n\r\n          // Validate parent node before replacing\r\n          if (!element.parentNode) {\r\n            console.error(\r\n              \"❌ Cannot replace Mermaid element in preview: no parent node\"\r\n            );\r\n            console.error(\r\n              \"❌ Mermaid code:\",\r\n              mermaidCode.substring(0, 100) + \"...\"\r\n            );\r\n            return;\r\n          }\r\n\r\n          // Replace the original element\r\n          try {\r\n            element.parentNode.replaceChild(mermaidDiv, element);\r\n          } catch (replaceError) {\r\n            console.error(\r\n              \"❌ Failed to replace Mermaid element in preview:\",\r\n              replaceError\r\n            );\r\n            console.error(\r\n              \"❌ Mermaid code:\",\r\n              mermaidCode.substring(0, 100) + \"...\"\r\n            );\r\n            return;\r\n          }\r\n\r\n          // Render the diagram\r\n          const diagramId = `preview-mermaid-svg-${index}`;\r\n          await MermaidRenderer.renderDiagram(\r\n            diagramId,\r\n            mermaidCode,\r\n            mermaidDiv\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to initialize Mermaid in preview:\", error);\r\n    }\r\n  }\r\n\r\n  // Populate mermaid selector using Map\r\n  populateMermaidSelector() {\r\n    const selector = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-selector\"\r\n    );\r\n    if (!selector) {\r\n      console.error(\"❌ Mermaid selector not found\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"🔄 Populating Mermaid selector...\");\r\n    console.log(`📊 DiagramsMap size: ${this.mermaidDiagramsMap?.size || 0}`);\r\n    console.log(`📊 Current options count: ${selector.options.length}`);\r\n\r\n    // Clear ALL existing options completely\r\n    selector.innerHTML = \"\";\r\n\r\n    // Add default option\r\n    const defaultOption = document.createElement(\"option\");\r\n    defaultOption.value = \"\";\r\n    defaultOption.textContent = \"📊 Select diagram to edit...\";\r\n    selector.appendChild(defaultOption);\r\n\r\n    console.log(`📊 After clear, options count: ${selector.options.length}`);\r\n\r\n    // Only add diagrams that actually exist in current content\r\n    if (this.mermaidDiagramsMap && this.mermaidDiagramsMap.size > 0) {\r\n      let addedCount = 0;\r\n\r\n      // Create a Set to track added diagram IDs to prevent duplicates\r\n      const addedDiagrams = new Set();\r\n\r\n      this.mermaidDiagramsMap.forEach((diagramData, diagramId) => {\r\n        // Only add if not already added and has valid content\r\n        if (\r\n          !addedDiagrams.has(diagramId) &&\r\n          diagramData.content &&\r\n          diagramData.content.trim()\r\n        ) {\r\n          const option = document.createElement(\"option\");\r\n          option.value = diagramId;\r\n          option.textContent = `${diagramData.title} (${diagramData.type})`;\r\n          selector.appendChild(option);\r\n          addedDiagrams.add(diagramId);\r\n          addedCount++;\r\n          console.log(\r\n            `📊 Added option ${addedCount}: ${diagramData.title} (${diagramData.type})`\r\n          );\r\n        }\r\n      });\r\n\r\n      console.log(\r\n        `✅ Added ${addedCount} unique diagrams to selector (total options: ${selector.options.length})`\r\n      );\r\n    } else {\r\n      console.warn(\"⚠️ No Mermaid diagrams found to populate selector\");\r\n    }\r\n\r\n    // Remove existing event listener to prevent duplicates\r\n    if (this.handleMermaidSelectorChange) {\r\n      selector.removeEventListener(\"change\", this.handleMermaidSelectorChange);\r\n    }\r\n\r\n    // Add fresh event listener\r\n    this.handleMermaidSelectorChange = (e) => {\r\n      const selectedId = e.target.value;\r\n      console.log(`🎯 Selected diagram: ${selectedId}`);\r\n      this.selectMermaidDiagram(selectedId);\r\n    };\r\n    selector.addEventListener(\"change\", this.handleMermaidSelectorChange);\r\n\r\n    console.log(\r\n      `✅ Populated ${this.mermaidDiagramsMap?.size || 0} diagrams in selector`\r\n    );\r\n  }\r\n\r\n  // Select mermaid diagram\r\n  selectMermaidDiagram(diagramId) {\r\n    if (!diagramId) {\r\n      this.clearMermaidEditor();\r\n      return;\r\n    }\r\n\r\n    // Get diagram from Map\r\n    const diagramData = this.mermaidDiagramsMap.get(diagramId);\r\n    if (!diagramData) {\r\n      console.error(`❌ Diagram not found in map: ${diagramId}`);\r\n      return;\r\n    }\r\n\r\n    // Find full diagram record from array\r\n    const diagram = this.mermaidDiagrams.find((d) => d.id === diagramId);\r\n    if (!diagram) {\r\n      console.error(`❌ Diagram not found in array: ${diagramId}`);\r\n      return;\r\n    }\r\n\r\n    // Update code editor\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    if (codeEditor) {\r\n      codeEditor.value = diagramData.content;\r\n      this.currentSelectedDiagram = diagram;\r\n      this.currentSelectedDiagramId = diagramId;\r\n      this.updateMermaidPreview().catch((error) => {\r\n        console.error(\"❌ Error updating Mermaid preview:\", error);\r\n      });\r\n\r\n      // Add event listener for code changes\r\n      codeEditor.removeEventListener(\"input\", this.handleMermaidCodeChange);\r\n      this.handleMermaidCodeChange = () => {\r\n        if (this.currentSelectedDiagram && this.currentSelectedDiagramId) {\r\n          const newCode = codeEditor.value;\r\n          console.log(\"new code\", newCode);\r\n          // Update diagram code in memory (both array and map)\r\n          this.currentSelectedDiagram.code = newCode;\r\n          this.mermaidDiagramsMap.get(this.currentSelectedDiagramId).content =\r\n            newCode;\r\n\r\n          // Track the change for synchronization\r\n          this.contentSynchronizer.trackDiagramChange(\r\n            this.currentSelectedDiagramId,\r\n            newCode\r\n          );\r\n\r\n          // Update preview\r\n          this.updateMermaidPreview().catch((error) => {\r\n            console.error(\"❌ Error updating Mermaid preview:\", error);\r\n          });\r\n\r\n          // Mark as modified\r\n          this.isModified = true;\r\n          this.updateSaveButtonState();\r\n\r\n          console.log(`📝 Updated diagram ${this.currentSelectedDiagramId}`);\r\n        }\r\n      };\r\n      codeEditor.addEventListener(\"input\", this.handleMermaidCodeChange);\r\n    }\r\n\r\n    console.log(`✅ Selected diagram: ${diagramId} (${diagramData.type})`);\r\n  }\r\n\r\n  // Clear mermaid editor\r\n  clearMermaidEditor() {\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n\r\n    if (codeEditor) codeEditor.value = \"\";\r\n    if (preview) {\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Select a diagram to preview</div>';\r\n    }\r\n\r\n    this.currentSelectedDiagram = null;\r\n  }\r\n\r\n  // Update mermaid preview\r\n  async updateMermaidPreview() {\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n\r\n    if (!codeEditor || !preview) return;\r\n\r\n    const code = codeEditor.value.trim();\r\n    if (!code) {\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Enter Mermaid code to preview</div>';\r\n      return;\r\n    }\r\n\r\n    // Update current diagram\r\n    if (this.currentSelectedDiagram) {\r\n      this.currentSelectedDiagram.code = code;\r\n    }\r\n\r\n    // Render mermaid using MermaidRenderer to avoid SVG error appending\r\n    try {\r\n      // Clear preview first\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Rendering diagram...</div>';\r\n\r\n      // Create unique diagram ID\r\n      const diagramId = `mermaid-editor-preview-${Date.now()}`;\r\n\r\n      // Use MermaidRenderer to safely render the diagram\r\n      await MermaidRenderer.renderDiagram(diagramId, code, preview);\r\n\r\n      // Apply current zoom after rendering\r\n      setTimeout(() => {\r\n        this.updateZoom();\r\n      }, 100);\r\n    } catch (error) {\r\n      console.error(\"❌ Error rendering Mermaid in editor preview:\", error);\r\n      preview.innerHTML = `\r\n        <div class=\"mermaid-placeholder\" style=\"color: #dc3545;\">\r\n          ❌ Error rendering diagram:<br>\r\n          <small>${error.message}</small>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  // Send AI prompt - EXACT copy from extension logic\r\n  async sendAIPrompt() {\r\n    const promptInput = this.editorContainer.querySelector(\"#ai-prompt-input\");\r\n    const messagesContainer =\r\n      this.editorContainer.querySelector(\"#ai-chat-messages\");\r\n\r\n    if (!promptInput || !messagesContainer) return;\r\n\r\n    const prompt = promptInput.value.trim();\r\n    if (!prompt) return;\r\n\r\n    // Check if a diagram is selected and validate it\r\n    if (!this.currentSelectedDiagram || !this.currentSelectedDiagramId) {\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        \"⚠️ Please select a Mermaid diagram first to edit it.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Double-check the selected diagram exists in the map\r\n    const diagramInMap = this.mermaidDiagramsMap.get(\r\n      this.currentSelectedDiagramId\r\n    );\r\n    if (!diagramInMap) {\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        \"❌ Selected diagram not found. Please select a valid diagram.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    console.log(`🎯 AI editing diagram: ${this.currentSelectedDiagramId}`, {\r\n      title: diagramInMap.title,\r\n      type: diagramInMap.type,\r\n      currentCode: this.currentSelectedDiagram.code?.substring(0, 50) + \"...\",\r\n    });\r\n\r\n    // Add user message\r\n    this.addAIMessage(\"user\", prompt);\r\n\r\n    // Clear input and show loading\r\n    promptInput.value = \"\";\r\n    this.addAIMessage(\"ai\", \"🤖 Processing your request...\");\r\n\r\n    try {\r\n      // Get current settings for AI model\r\n      const settings = await ChromeStorageManager.getSettings();\r\n\r\n      // Prepare request payload similar to extension\r\n      const requestBody = {\r\n        content: this.currentContent?.full_storage_format || \"\",\r\n        diagram_code: this.currentSelectedDiagram.code,\r\n        user_request: prompt,\r\n        selectedModel: settings.selectedModel || \"sonar-pro\",\r\n      };\r\n\r\n      console.log(\"🤖 Sending AI request:\", requestBody);\r\n\r\n      // Call AI API (same endpoint as extension)\r\n      const response = await fetch(API_URLS.EDIT_DIAGRAM, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          errorData.error || `HTTP ${response.status}: ${response.statusText}`\r\n        );\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success && data.edited_diagram) {\r\n        // Clean and validate the AI response\r\n        const cleanedDiagram = this.cleanAIResponse(data.edited_diagram);\r\n\r\n        if (cleanedDiagram && cleanedDiagram.trim()) {\r\n          // Validate we're still editing the same diagram\r\n          const currentDiagramInMap = this.mermaidDiagramsMap.get(\r\n            this.currentSelectedDiagramId\r\n          );\r\n          if (!currentDiagramInMap) {\r\n            throw new Error(\"Selected diagram no longer exists\");\r\n          }\r\n\r\n          console.log(`🔄 Updating diagram ${this.currentSelectedDiagramId}:`, {\r\n            oldCode: this.currentSelectedDiagram.code?.substring(0, 30) + \"...\",\r\n            newCode: cleanedDiagram.substring(0, 30) + \"...\",\r\n          });\r\n\r\n          // Update ONLY the selected diagram\r\n          this.currentSelectedDiagram.code = cleanedDiagram;\r\n          currentDiagramInMap.content = cleanedDiagram;\r\n\r\n          // Update the code editor to reflect the change\r\n          const codeEditor = this.editorContainer.querySelector(\r\n            \"#mermaid-code-editor\"\r\n          );\r\n          if (codeEditor) {\r\n            codeEditor.value = cleanedDiagram;\r\n            console.log(\"✅ Code editor updated with AI response\");\r\n          }\r\n\r\n          // Update preview for this specific diagram\r\n          this.updateMermaidPreview().catch((error) => {\r\n            console.error(\"❌ Error updating Mermaid preview:\", error);\r\n          });\r\n\r\n          // Mark content as modified for synchronization\r\n          console.log(\r\n            `🔄 Diagram ${this.currentSelectedDiagramId} updated by AI`\r\n          );\r\n\r\n          // Update the content will be handled by syncAllContent when saving\r\n\r\n          // Remove loading message and add success message\r\n          this.removeLastAIMessage();\r\n          this.addAIMessage(\"ai\", `✅ Updated diagram: ${prompt}`);\r\n\r\n          // Show success notification\r\n          if (\r\n            typeof window !== \"undefined\" &&\r\n            window[\"KToolNotificationUtils\"]\r\n          ) {\r\n            window[\"KToolNotificationUtils\"].success(\r\n              \"AI Assistant\",\r\n              \"Diagram updated successfully!\"\r\n            );\r\n          }\r\n        } else {\r\n          throw new Error(\"Invalid Mermaid syntax in AI response\");\r\n        }\r\n      } else {\r\n        throw new Error(\"Invalid response format or missing edited_diagram\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ AI API Error:\", error);\r\n\r\n      // Remove loading message and add error message\r\n      this.removeLastAIMessage();\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        `❌ Error: ${error.message}\\n\\n🔄 Please try again or adjust your request.`\r\n      );\r\n\r\n      // Show error notification\r\n      if (typeof window !== \"undefined\" && window[\"KToolNotificationUtils\"]) {\r\n        window[\"KToolNotificationUtils\"].error(\r\n          \"AI Assistant\",\r\n          `Error: ${error.message}`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // Clean AI response - enhanced validation\r\n  cleanAIResponse(response) {\r\n    if (!response) return \"\";\r\n\r\n    console.log(\"🧹 Cleaning AI response:\", response.substring(0, 100) + \"...\");\r\n\r\n    // Remove markdown code blocks and common AI response patterns\r\n    let cleaned = response\r\n      .replace(/```mermaid\\n?/gi, \"\")\r\n      .replace(/```\\n?/g, \"\")\r\n      .replace(/^Here's the updated.*?:\\s*/i, \"\")\r\n      .replace(/^Updated diagram.*?:\\s*/i, \"\")\r\n      .replace(/^The modified.*?:\\s*/i, \"\");\r\n\r\n    // Remove extra whitespace and newlines at start/end\r\n    cleaned = cleaned.trim();\r\n\r\n    // Split by lines and remove empty lines at start/end\r\n    const lines = cleaned.split(\"\\n\");\r\n    const nonEmptyStart = lines.findIndex((line) => line.trim() !== \"\");\r\n    const nonEmptyEnd = lines\r\n      .slice()\r\n      .reverse()\r\n      .findIndex((line) => line.trim() !== \"\");\r\n\r\n    if (nonEmptyStart !== -1 && nonEmptyEnd !== -1) {\r\n      cleaned = lines\r\n        .slice(nonEmptyStart, lines.length - nonEmptyEnd)\r\n        .join(\"\\n\");\r\n    }\r\n\r\n    // Basic validation - should start with a mermaid diagram type\r\n    const validStarts = [\r\n      \"graph\",\r\n      \"flowchart\",\r\n      \"sequenceDiagram\",\r\n      \"classDiagram\",\r\n      \"stateDiagram\",\r\n      \"erDiagram\",\r\n      \"journey\",\r\n      \"gantt\",\r\n      \"pie\",\r\n      \"gitgraph\",\r\n      \"mindmap\",\r\n      \"timeline\",\r\n    ];\r\n\r\n    const firstLine = cleaned.split(\"\\n\")[0].trim().toLowerCase();\r\n    const hasValidStart = validStarts.some((start) =>\r\n      firstLine.startsWith(start.toLowerCase())\r\n    );\r\n\r\n    if (!hasValidStart) {\r\n      console.warn(\r\n        \"⚠️ AI response may not be valid Mermaid syntax:\",\r\n        firstLine\r\n      );\r\n      console.warn(\"Expected to start with one of:\", validStarts.join(\", \"));\r\n    }\r\n\r\n    console.log(\"✅ Cleaned AI response:\", cleaned.substring(0, 100) + \"...\");\r\n    return cleaned;\r\n  }\r\n\r\n  // Remove last AI message (for loading states)\r\n  removeLastAIMessage() {\r\n    const messagesContainer =\r\n      this.editorContainer.querySelector(\"#ai-chat-messages\");\r\n    if (!messagesContainer) return;\r\n\r\n    const messages = messagesContainer.querySelectorAll(\".ai-message\");\r\n    if (messages.length > 0) {\r\n      const lastMessage = messages[messages.length - 1];\r\n      if (\r\n        lastMessage.querySelector(\".ai-text\").textContent.includes(\"Processing\")\r\n      ) {\r\n        lastMessage.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add AI message\r\n  addAIMessage(type, text) {\r\n    const messagesContainer = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-chat-messages\"\r\n    );\r\n    if (!messagesContainer) return;\r\n\r\n    const messageHTML = HTMLTemplates.createAIMessage(type, text);\r\n    DOMHelpers.setContent(\r\n      messagesContainer,\r\n      DOMHelpers.getContent(messagesContainer) + messageHTML,\r\n      true\r\n    );\r\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n  }\r\n\r\n  extractMermaidDiagrams() {\r\n    if (!this.currentContent?.full_storage_format) {\r\n      this.mermaidDiagrams = [];\r\n      this.mermaidDiagramsMap = new Map();\r\n      return;\r\n    }\r\n\r\n    const { diagrams, diagramsMap } = MermaidRenderer.extractMermaidDiagrams(\r\n      this.currentContent.full_storage_format\r\n    );\r\n\r\n    this.mermaidDiagrams = diagrams;\r\n    this.mermaidDiagramsMap = diagramsMap;\r\n  }\r\n\r\n  updateStatus(message) {\r\n    const status = this.editorContainer?.querySelector(\"#editor-status\");\r\n    if (status) {\r\n      status.textContent = message;\r\n      setTimeout(() => {\r\n        status.textContent = \"Sẵn sàng\";\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  async saveChanges() {\r\n    console.log(\"💾 Saving changes...\");\r\n\r\n    try {\r\n      // Sync all content sources\r\n      this.currentContent = this.contentSynchronizer.syncAllContent(\r\n        this.currentContent,\r\n        this.editorContainer,\r\n        this.mermaidDiagrams\r\n      );\r\n\r\n      // Validate content before saving\r\n      const validation = this.contentSynchronizer.validateContent(\r\n        this.currentContent\r\n      );\r\n      if (!validation.isValid) {\r\n        throw new Error(\r\n          `Content validation failed: ${validation.errors.join(\", \")}`\r\n        );\r\n      }\r\n\r\n      // Save using storage manager (supports both callback and localStorage)\r\n      const saveResults = await this.storageManager.saveContent(\r\n        this.currentContent,\r\n        this.onSave,\r\n        {\r\n          enableLocalStorage: true,\r\n          enableCallback: true,\r\n          showNotification: true,\r\n        }\r\n      );\r\n\r\n      // Reset modified state and update button\r\n      this.isModified = false;\r\n      this.updateSaveButtonState();\r\n\r\n      // Update original content to new saved state\r\n      this.originalContent = JSON.parse(JSON.stringify(this.currentContent));\r\n\r\n      // Don't re-extract diagrams after save to avoid duplicates\r\n      console.log(\"✅ Skipping diagram re-extraction to prevent duplicates\");\r\n\r\n      console.log(\"✅ Changes saved successfully\", saveResults);\r\n\r\n      // Save completed - auto close editor immediately\r\n      console.log(\"💾 Save completed - closing editor...\");\r\n      this.closeEditor();\r\n    } catch (error) {\r\n      console.error(\"❌ Error saving changes:\", error);\r\n      this.storageManager.showNotification(\r\n        `❌ Lỗi khi lưu: ${error.message}`,\r\n        \"error\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // Update save button state based on modifications\r\n  updateSaveButtonState() {\r\n    const saveBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-save-btn\"\r\n    );\r\n    if (!saveBtn) return;\r\n\r\n    if (this.isModified) {\r\n      DOMHelpers.setContent(saveBtn, \"💾 Lưu thay đổi *\");\r\n      saveBtn.style.background = \"#28a745\";\r\n      saveBtn.title = \"Có thay đổi chưa lưu\";\r\n    } else {\r\n      DOMHelpers.setContent(saveBtn, \"💾 Lưu thay đổi\");\r\n      saveBtn.style.background = \"#007bff\";\r\n      saveBtn.title = \"Lưu thay đổi\";\r\n    }\r\n  }\r\n\r\n  // Zoom controls methods\r\n  zoomIn() {\r\n    this.currentZoom = Math.min(this.currentZoom * 1.2, 3);\r\n    this.updateZoom();\r\n  }\r\n\r\n  zoomOut() {\r\n    this.currentZoom = Math.max(this.currentZoom / 1.2, 0.3);\r\n    this.updateZoom();\r\n  }\r\n\r\n  resetZoom() {\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n    this.updateZoom();\r\n  }\r\n\r\n  updateZoom() {\r\n    const preview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-preview\"\r\n    );\r\n    const zoomLevel = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-level\"\r\n    );\r\n\r\n    if (preview) {\r\n      const mermaidContent = DOMHelpers.querySelector(preview, \".mermaid, svg\");\r\n      if (mermaidContent) {\r\n        mermaidContent.style.transform = `scale(${this.currentZoom}) translate(${this.dragOffset.x}px, ${this.dragOffset.y}px)`;\r\n        mermaidContent.style.transformOrigin = \"center center\";\r\n        mermaidContent.style.transition = \"transform 0.2s ease\";\r\n      }\r\n    }\r\n\r\n    if (zoomLevel) {\r\n      DOMHelpers.setContent(\r\n        zoomLevel,\r\n        `${Math.round(this.currentZoom * 100)}%`\r\n      );\r\n    }\r\n  }\r\n\r\n  handleWheel(e) {\r\n    e.preventDefault();\r\n    if (e.deltaY < 0) {\r\n      this.zoomIn();\r\n    } else {\r\n      this.zoomOut();\r\n    }\r\n  }\r\n\r\n  closeEditor() {\r\n    console.log(\"🔄 Closing editor...\");\r\n\r\n    // Stop auto-save\r\n    this.storageManager.stopAutoSave();\r\n\r\n    if (this.editorContainer) {\r\n      DOMHelpers.removeElement(this.editorContainer);\r\n      this.editorContainer = null;\r\n    }\r\n\r\n    this.isEditorOpen = false;\r\n    this.currentContent = null;\r\n    this.originalContent = null;\r\n    this.mermaidDiagrams = [];\r\n    this.mermaidDiagramsMap = new Map();\r\n    this.currentSelectedDiagram = null;\r\n    this.currentSelectedDiagramId = null;\r\n    this.isModified = false;\r\n\r\n    // Reset zoom state\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n\r\n    console.log(\"✅ Editor closed\");\r\n  }\r\n\r\n  // Public method to set save callback\r\n  setSaveCallback(callback) {\r\n    this.onSave = callback;\r\n  }\r\n\r\n  // Check if editor is currently open\r\n  isOpen() {\r\n    return this.isEditorOpen;\r\n  }\r\n\r\n  // Get current content\r\n  getCurrentContent() {\r\n    if (this.textEditor) {\r\n      // Update content from editor\r\n      const editorContent = this.textEditor.getValue();\r\n      if (this.currentContent) {\r\n        this.currentContent.full_storage_format = editorContent;\r\n      }\r\n    }\r\n    return this.currentContent;\r\n  }\r\n}\r\n\r\n// Export for use in content.js\r\nexport { ConfluenceEditor };\r\n","/**\n * Mermaid Preview Handler\n * Handles rendering and updating of Mermaid diagram previews\n */\nimport { MermaidRenderer } from \"../utils/mermaidRenderer.js\";\n\nexport class MermaidPreview {\n  constructor() {\n    this.previewContainer = null;\n  }\n\n  /**\n   * Initialize preview container\n   */\n  initialize() {\n    this.previewContainer = document.getElementById(\n      \"mermaid-preview-container\"\n    );\n    if (!this.previewContainer) {\n      console.error(\"❌ Preview container not found\");\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Update Mermaid preview from code\n   * @param {string} code - Mermaid diagram code\n   */\n  async updatePreview(code) {\n    if (!this.previewContainer) {\n      console.error(\"❌ Preview container not initialized\");\n      return;\n    }\n\n    if (!code || !code.trim()) {\n      this.showPlaceholder(\"Enter Mermaid code to preview\");\n      return;\n    }\n\n    try {\n      // Clean and validate code\n      const cleanCode = this.cleanMermaidCode(code);\n      console.log(\"🧹 Cleaned Mermaid code:\", cleanCode);\n\n      // Validate code\n      const validation = this.validateMermaidCode(cleanCode);\n      if (!validation.isValid) {\n        this.showError(`Invalid Mermaid syntax: ${validation.error}`);\n        return;\n      }\n\n      // Initialize Mermaid if needed\n      await MermaidRenderer.initializeMermaid();\n\n      // Create unique diagram ID\n      const diagramId = `mermaid-ai-chat-preview-${Date.now()}`;\n\n      // Show loading\n      this.showPlaceholder(\"Rendering diagram...\");\n\n      // Render diagram\n      await MermaidRenderer.renderDiagram(\n        diagramId,\n        cleanCode,\n        this.previewContainer\n      );\n\n      console.log(\"✅ Mermaid preview updated successfully\");\n    } catch (error) {\n      console.error(\"❌ Error updating Mermaid preview:\", error);\n      this.showError(error.message);\n    }\n  }\n\n  /**\n   * Show placeholder message\n   * @param {string} message - Placeholder message\n   */\n  showPlaceholder(message) {\n    if (\n      this.previewContainer &&\n      this.previewContainer.nodeType === Node.ELEMENT_NODE &&\n      document.contains(this.previewContainer)\n    ) {\n      this.previewContainer.innerHTML = `\n        <div class=\"mermaid-preview-placeholder\">\n          ${message}\n        </div>\n      `;\n    } else {\n      console.error(\"❌ Invalid or detached preview container for placeholder\");\n    }\n  }\n\n  /**\n   * Show error message\n   * @param {string} errorMessage - Error message to display\n   */\n  showError(errorMessage) {\n    if (\n      this.previewContainer &&\n      this.previewContainer.nodeType === Node.ELEMENT_NODE &&\n      document.contains(this.previewContainer)\n    ) {\n      this.previewContainer.innerHTML = `\n        <div class=\"mermaid-preview-placeholder\" style=\"color: #dc3545;\">\n          ❌ Error rendering diagram:<br>\n          <small>${errorMessage}</small>\n        </div>\n      `;\n    } else {\n      console.error(\n        \"❌ Invalid or detached preview container for error display\"\n      );\n      console.error(\"❌ Error message:\", errorMessage);\n    }\n  }\n\n  /**\n   * Clear preview\n   */\n  clear() {\n    this.showPlaceholder(\"Click on a Mermaid diagram to start editing\");\n  }\n\n  /**\n   * Get current preview content\n   * @returns {string} Current preview HTML content\n   */\n  getCurrentContent() {\n    return this.previewContainer ? this.previewContainer.innerHTML : \"\";\n  }\n\n  /**\n   * Clean Mermaid code - remove unwanted characters and normalize\n   * @param {string} code - Raw Mermaid code\n   * @returns {string} Cleaned code\n   */\n  cleanMermaidCode(code) {\n    if (!code) return \"\";\n\n    // Remove HTML entities\n    let cleaned = code\n      .replace(/&lt;/g, \"<\")\n      .replace(/&gt;/g, \">\")\n      .replace(/&amp;/g, \"&\")\n      .replace(/&quot;/g, '\"')\n      .replace(/&#39;/g, \"'\");\n\n    // Remove CDATA sections\n    cleaned = cleaned.replace(/<!\\[CDATA\\[(.*?)\\]\\]>/gs, \"$1\");\n\n    // Remove HTML tags\n    cleaned = cleaned.replace(/<[^>]*>/g, \"\");\n\n    // Normalize whitespace\n    cleaned = cleaned.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n\n    // Remove excessive whitespace but preserve structure\n    cleaned = cleaned.replace(/\\n\\s*\\n\\s*\\n/g, \"\\n\\n\");\n\n    // Trim\n    cleaned = cleaned.trim();\n\n    return cleaned;\n  }\n\n  /**\n   * Validate Mermaid code syntax\n   * @param {string} code - Mermaid code to validate\n   * @returns {Object} Validation result\n   */\n  validateMermaidCode(code) {\n    if (!code || !code.trim()) {\n      return {\n        isValid: false,\n        error: \"Code is empty\",\n      };\n    }\n\n    const trimmed = code.trim();\n\n    // Check for valid Mermaid diagram types\n    const validStarters = [\n      \"graph\",\n      \"flowchart\",\n      \"sequenceDiagram\",\n      \"classDiagram\",\n      \"stateDiagram\",\n      \"erDiagram\",\n      \"journey\",\n      \"gantt\",\n      \"pie\",\n      \"gitgraph\",\n      \"mindmap\",\n      \"timeline\",\n      \"sankey\",\n      \"requirement\",\n    ];\n\n    const hasValidStarter = validStarters.some((starter) =>\n      trimmed.toLowerCase().startsWith(starter.toLowerCase())\n    );\n\n    if (!hasValidStarter) {\n      return {\n        isValid: false,\n        error: `Must start with a valid diagram type: ${validStarters.join(\n          \", \"\n        )}`,\n      };\n    }\n\n    // Check for common syntax issues\n    if (trimmed.includes(\"undefined\") || trimmed.includes(\"null\")) {\n      return {\n        isValid: false,\n        error: \"Contains undefined or null values\",\n      };\n    }\n\n    // Check for unbalanced brackets\n    const openBrackets = (trimmed.match(/\\[/g) || []).length;\n    const closeBrackets = (trimmed.match(/\\]/g) || []).length;\n    if (openBrackets !== closeBrackets) {\n      return {\n        isValid: false,\n        error: \"Unbalanced square brackets\",\n      };\n    }\n\n    return {\n      isValid: true,\n      error: null,\n    };\n  }\n}\n","/**\n * Mermaid AI Service\n * Handles AI API calls for Mermaid diagram modifications\n */\nimport { ApiClient } from \"../../shared/api.js\";\n\nexport class MermaidAIService {\n  constructor() {\n    this.apiClient = new ApiClient();\n  }\n\n  /**\n   * Send prompt to AI for diagram modification\n   * @param {string} diagramContent - Current Mermaid diagram code\n   * @param {string} userPrompt - User's modification request\n   * @returns {Promise<Object>} AI response with modified diagram\n   */\n  async modifyDiagram(diagramContent, userPrompt) {\n    console.log(\"🤖 Sending AI request for diagram modification...\");\n\n    // Validate inputs\n    const promptValidation = this.validateUserPrompt(userPrompt);\n    if (!promptValidation.isValid) {\n      throw new Error(promptValidation.error);\n    }\n\n    const diagramValidation = this.validateDiagramContent(diagramContent);\n    if (!diagramValidation.isValid) {\n      throw new Error(diagramValidation.error);\n    }\n\n    // Prepare payload\n    const payload = {\n      diagram_content: diagramContent,\n      user_prompt: userPrompt,\n      context: \"mermaid_diagram_editing\",\n    };\n\n    console.log(\"📤 Sending AI request:\", payload);\n\n    try {\n      // Call AI API\n      const response = await this.callAI(payload);\n      \n      if (!response || !response.edited_diagram) {\n        throw new Error(\"Invalid AI response format - missing edited_diagram\");\n      }\n\n      console.log(\"✅ AI response received successfully\");\n      return response;\n    } catch (error) {\n      console.error(\"❌ AI API error:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Call AI API\n   * @param {Object} payload - Request payload\n   * @returns {Promise<Object>} AI response\n   */\n  async callAI(payload) {\n    try {\n      const response = await fetch(\"/api/ai/mermaid-edit\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(\n          errorData.error || `HTTP ${response.status}: ${response.statusText}`\n        );\n      }\n\n      const data = await response.json();\n      console.log(\"📥 AI API response:\", data);\n\n      return data;\n    } catch (error) {\n      console.error(\"❌ AI API call failed:\", error);\n      \n      // Return mock response for development/testing\n      if (error.message.includes(\"fetch\")) {\n        console.log(\"🔧 Using mock AI response for development\");\n        return this.getMockResponse(payload);\n      }\n      \n      throw error;\n    }\n  }\n\n  /**\n   * Get mock AI response for development\n   * @param {Object} payload - Original request payload\n   * @returns {Object} Mock response\n   */\n  getMockResponse(payload) {\n    // Simple mock: add a comment to the diagram\n    const originalDiagram = payload.diagram_content;\n    const modifiedDiagram = `%% Modified by AI: ${payload.user_prompt}\\n${originalDiagram}`;\n    \n    return {\n      success: true,\n      edited_diagram: modifiedDiagram,\n      explanation: `I've added a comment to your diagram based on your request: \"${payload.user_prompt}\"`\n    };\n  }\n\n  /**\n   * Validate user prompt\n   * @param {string} prompt - User prompt to validate\n   * @returns {Object} Validation result\n   */\n  validateUserPrompt(prompt) {\n    if (!prompt || !prompt.trim()) {\n      return {\n        isValid: false,\n        error: \"Please enter a prompt describing how you want to modify the diagram\"\n      };\n    }\n\n    if (prompt.trim().length < 3) {\n      return {\n        isValid: false,\n        error: \"Prompt is too short. Please provide more details.\"\n      };\n    }\n\n    if (prompt.length > 1000) {\n      return {\n        isValid: false,\n        error: \"Prompt is too long. Please keep it under 1000 characters.\"\n      };\n    }\n\n    return {\n      isValid: true,\n      error: null\n    };\n  }\n\n  /**\n   * Validate diagram content\n   * @param {string} content - Diagram content to validate\n   * @returns {Object} Validation result\n   */\n  validateDiagramContent(content) {\n    if (!content || !content.trim()) {\n      return {\n        isValid: false,\n        error: \"No diagram content found. Please select a Mermaid diagram first.\"\n      };\n    }\n\n    // Basic Mermaid syntax validation\n    const trimmed = content.trim();\n    const validStarters = [\n      'graph', 'flowchart', 'sequenceDiagram', 'classDiagram', \n      'stateDiagram', 'erDiagram', 'journey', 'gantt', 'pie'\n    ];\n    \n    const hasValidStarter = validStarters.some(starter => \n      trimmed.toLowerCase().startsWith(starter.toLowerCase())\n    );\n    \n    if (!hasValidStarter) {\n      return {\n        isValid: false,\n        error: \"Invalid Mermaid diagram format. Please ensure it starts with a valid diagram type.\"\n      };\n    }\n\n    return {\n      isValid: true,\n      error: null\n    };\n  }\n\n  /**\n   * Get user-friendly error message\n   * @param {Error} error - Error object\n   * @returns {string} User-friendly error message\n   */\n  getErrorMessage(error) {\n    if (error.message.includes(\"fetch\")) {\n      return \"Unable to connect to AI service. Please check your internet connection.\";\n    }\n    \n    if (error.message.includes(\"HTTP 429\")) {\n      return \"Too many requests. Please wait a moment and try again.\";\n    }\n    \n    if (error.message.includes(\"HTTP 500\")) {\n      return \"AI service is temporarily unavailable. Please try again later.\";\n    }\n    \n    return error.message || \"An unexpected error occurred. Please try again.\";\n  }\n}\n","/**\n * Mermaid API Client\n * Handles API calls to fetch Mermaid diagram code from Confluence\n */\nexport class MermaidApiClient {\n  /**\n   * Extract page ID from current URL\n   * @returns {string|null} Page ID or null if not found\n   */\n  static extractPageId() {\n    try {\n      console.log(\"🔍 Extracting page ID from current page...\");\n      console.log(\"🔍 Current URL:\", window.location.href);\n      console.log(\"🔍 Current pathname:\", window.location.pathname);\n      console.log(\"🔍 Current search:\", window.location.search);\n\n      // Method 1: From URL params like /pages/viewpage.action?pageId=1933328\n      const urlParams = new URLSearchParams(window.location.search);\n      const pageId = urlParams.get(\"pageId\");\n      if (pageId) {\n        console.log(\"📄 Page ID extracted from URL params:\", pageId);\n        return pageId;\n      }\n\n      // Method 2: From URL path like /pages/(\\d+) or /display/SPACE/(\\d+)\n      const pathMatches = [\n        window.location.pathname.match(/\\/pages\\/(\\d+)/),\n        window.location.pathname.match(/\\/display\\/[^\\/]+\\/(\\d+)/),\n        window.location.href.match(/pageId=(\\d+)/),\n        window.location.href.match(/\\/(\\d+)(?:[?#]|$)/),\n      ];\n\n      for (const match of pathMatches) {\n        if (match && match[1]) {\n          console.log(\"📄 Page ID extracted from path/URL:\", match[1]);\n          return match[1];\n        }\n      }\n\n      // Method 3: From meta tags\n      const metaSelectors = [\n        'meta[name=\"ajs-page-id\"]',\n        'meta[name=\"confluence-page-id\"]',\n        'meta[property=\"confluence:page-id\"]',\n      ];\n\n      for (const selector of metaSelectors) {\n        const metaTag = document.querySelector(selector);\n        if (metaTag && metaTag.content) {\n          console.log(\n            `📄 Page ID extracted from meta tag (${selector}):`,\n            metaTag.content\n          );\n          return metaTag.content;\n        }\n      }\n\n      // Method 4: From AJS context if available\n      if (window.AJS && window.AJS.params && window.AJS.params.pageId) {\n        console.log(\"📄 Page ID extracted from AJS:\", window.AJS.params.pageId);\n        return window.AJS.params.pageId;\n      }\n\n      // Method 5: From Confluence context\n      if (window.Confluence && window.Confluence.getContentId) {\n        const contentId = window.Confluence.getContentId();\n        if (contentId) {\n          console.log(\n            \"📄 Page ID extracted from Confluence context:\",\n            contentId\n          );\n          return contentId;\n        }\n      }\n\n      // Method 6: From data attributes on body or html\n      const bodyPageId =\n        document.body.getAttribute(\"data-page-id\") ||\n        document.documentElement.getAttribute(\"data-page-id\");\n      if (bodyPageId) {\n        console.log(\n          \"📄 Page ID extracted from body data attribute:\",\n          bodyPageId\n        );\n        return bodyPageId;\n      }\n\n      console.warn(\"⚠️ Could not extract page ID from current page\");\n      console.warn(\n        \"⚠️ Available methods tried: URL params, path patterns, meta tags, AJS context, Confluence context, data attributes\"\n      );\n      return null;\n    } catch (error) {\n      console.error(\"❌ Error extracting page ID:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Extract filename from image src URL\n   * @param {string} src - Image src URL\n   * @returns {string|null} Filename without extension or null if not found\n   */\n  static extractFilename(src) {\n    try {\n      if (!src) return null;\n\n      console.log(\"🔍 Extracting filename from src:\", src);\n\n      // Parse URL to get pathname\n      const url = new URL(src, window.location.origin);\n      const pathname = url.pathname;\n\n      // Extract filename from path like /download/attachments/1933328/Diagram.png\n      const pathParts = pathname.split(\"/\");\n      const filenameWithExt = pathParts[pathParts.length - 1];\n\n      if (!filenameWithExt) return null;\n\n      // Remove extension (.png, .jpg, .svg, etc.)\n      const filename = filenameWithExt.split(\".\")[0];\n\n      console.log(\"✅ Extracted filename:\", filename);\n      return filename;\n    } catch (error) {\n      console.error(\"❌ Error extracting filename:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Save filename to localStorage for later use\n   * @param {string} filename - Filename to save\n   */\n  static saveFilename(filename) {\n    try {\n      if (!filename) return;\n\n      localStorage.setItem(\"mermaid-ai-filename\", filename);\n      console.log(\"💾 Filename saved to localStorage:\", filename);\n    } catch (error) {\n      console.error(\"❌ Error saving filename to localStorage:\", error);\n    }\n  }\n\n  /**\n   * Get saved filename from localStorage\n   * @returns {string|null} Saved filename or null if not found\n   */\n  static getSavedFilename() {\n    try {\n      const filename = localStorage.getItem(\"mermaid-ai-filename\");\n      console.log(\"📂 Retrieved filename from localStorage:\", filename);\n      return filename;\n    } catch (error) {\n      console.error(\"❌ Error retrieving filename from localStorage:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Fetch Mermaid diagram code from Confluence API\n   * @param {string} pageId - Confluence page ID (ceoId)\n   * @param {string} filename - Diagram filename\n   * @returns {Promise<string>} Mermaid diagram code\n   */\n  static async fetchMermaidCode(pageId, filename) {\n    try {\n      console.log(\"🌐 Fetching Mermaid code from API...\", { pageId, filename });\n\n      const apiUrl = `http://localhost:8090/rest/mermaidrest/1.0/mermaid/diagram?ceoId=${pageId}&filename=${filename}`;\n\n      console.log(\"📡 API URL:\", apiUrl);\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"*/*\",\n          \"Accept-Language\": \"en-US,en;q=0.9,vi;q=0.8\",\n          \"Cache-Control\": \"no-cache\",\n          Connection: \"keep-alive\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Pragma: \"no-cache\",\n          Referer:\n            \"http://localhost:8090/plugins/mermaid-cloud/editMermaidDiagram.action\",\n          \"Sec-Fetch-Dest\": \"empty\",\n          \"Sec-Fetch-Mode\": \"cors\",\n          \"Sec-Fetch-Site\": \"same-origin\",\n          \"User-Agent\": navigator.userAgent,\n          \"X-Requested-With\": \"XMLHttpRequest\",\n          \"sec-ch-ua\":\n            '\"Chromium\";v=\"140\", \"Not=A?Brand\";v=\"24\", \"Google Chrome\";v=\"140\"',\n          \"sec-ch-ua-mobile\": \"?0\",\n          \"sec-ch-ua-platform\": '\"Windows\"',\n        },\n        credentials: \"include\", // Include cookies for authentication\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json(); // Assuming API returns plain text Mermaid code\n\n      return data;\n    } catch (error) {\n      console.error(\"❌ Error fetching Mermaid code:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch Mermaid code using saved filename and current page ID\n   * @returns {Promise<string>} Mermaid diagram code\n   */\n  static async fetchMermaidCodeFromSaved() {\n    const pageId = this.extractPageId();\n    const filename = this.getSavedFilename();\n\n    if (!pageId) {\n      throw new Error(\"Could not extract page ID from current page\");\n    }\n\n    if (!filename) {\n      throw new Error(\n        \"No filename found in localStorage. Please click on a Mermaid diagram first.\"\n      );\n    }\n\n    return await this.fetchMermaidCode(pageId, filename);\n  }\n}\n","// Mermaid AI Chat Service for K-Tool Extension\nimport { MermaidExtractor } from \"./MermaidExtractor.js\";\nimport { MermaidPreview } from \"./MermaidPreview.js\";\nimport { MermaidAIService } from \"./MermaidAIService.js\";\nimport { MermaidApiClient } from \"./MermaidApiClient.js\";\n\nexport class MermaidAIChat {\n  constructor($) {\n    this.$ = $ || window.jQuery || window.$; // jQuery instance từ AJS hoặc fallback\n    this.isPopupOpen = false;\n    this.currentMermaidContent = \"\";\n\n    // Initialize components\n    this.preview = new MermaidPreview();\n    this.aiService = new MermaidAIService();\n\n    // ✅ Replace MermaidDetector with internal properties\n    this.lastClickedElement = null;\n    this.lastClickPosition = { x: 0, y: 0 };\n\n    // ✅ Zoom functionality\n    this.currentZoom = 1.0; // 100%\n    this.minZoom = 0.25; // 25%\n    this.maxZoom = 3.0; // 300%\n    this.zoomStep = 0.25; // 25% per step\n    this.isZooming = false; // Flag to prevent flicker during zoom\n\n    console.log(\"🚀 Mermaid AI Chat initializing with AJS/jQuery:\", !!this.$);\n    this.init();\n  }\n\n  async init() {\n    console.log(\"🚀 AJS: Mermaid AI Chat initializing...\");\n\n    // Check if already injected\n    if (document.getElementById(\"mermaid-ai-chat-root\")) {\n      console.log(\"🔍 AJS: Mermaid AI Chat already injected, skipping...\");\n      return;\n    }\n\n    // Create popup UI first\n    this.createPopupUI();\n\n    // Initialize preview component\n    this.preview.initialize();\n\n    // ✅ Setup detection without MermaidDetector\n    this.setupMermaidDetection();\n    this.setupConfluencePageChangeDetection();\n\n    // Setup ConfluenceEditor monitoring to avoid conflicts\n    this.setupConfluenceEditorMonitoring();\n\n    console.log(\"✅ AJS: Mermaid AI Chat ready\");\n  }\n\n  /**\n   * Handle Mermaid diagram click\n   * @param {HTMLElement} element - Clicked element\n   * @param {Object} position - Click position {x, y}\n   */\n  handleMermaidClick(element, position) {\n    console.log(\"🎯 Mermaid diagram clicked:\", element, position);\n\n    // Extract content from clicked element\n    // this.currentMermaidContent = MermaidExtractor.extractFromElement(element);\n\n    // Show popup at click position\n    this.showChatPopup(position.x, position.y);\n  }\n\n  setupMermaidDetection() {\n    console.log(\"🔍 SIMPLE: Setting up iframe click detection...\");\n\n    // ✅ Sử dụng lại logic từ MermaidDetector thay vì duplicate code\n    // Chỉ setup iframe event listeners với logic đơn giản\n    this.setupIframeEventListeners();\n\n    // Setup MutationObserver để detect iframe mới (chỉ observe DOM cha)\n    this.setupMutationObserver();\n\n    console.log(\"✅ SIMPLE: Setup completed\");\n  }\n\n  setupIframeEventListeners() {\n    console.log(\"🔍 IFRAME: Setting up iframe event listeners...\");\n    this.refreshIframeListeners();\n  }\n\n  refreshIframeListeners() {\n    // Tìm tất cả iframes hiện tại\n    const iframes = document.querySelectorAll(\"iframe\");\n    console.log(\"🔍 IFRAME REFRESH: Found\", iframes.length, \"iframes\");\n\n    if (iframes.length === 0) {\n      console.log(\"⚠️ IFRAME REFRESH: No iframes found on page\");\n      console.log(\n        \"⚠️ IFRAME REFRESH: Document ready state:\",\n        document.readyState\n      );\n\n      // Try again after a delay\n      setTimeout(() => {\n        console.log(\"🔍 IFRAME REFRESH: Retrying iframe search after delay...\");\n        const retryIframes = document.querySelectorAll(\"iframe\");\n        console.log(\n          \"🔍 IFRAME REFRESH: Retry found\",\n          retryIframes.length,\n          \"iframes\"\n        );\n        if (retryIframes.length > 0) {\n          retryIframes.forEach((iframe, index) => {\n            console.log(\n              `🔍 IFRAME REFRESH RETRY ${index}: Processing iframe:`,\n              iframe.src || iframe.id || \"no-src\"\n            );\n            this.attachIframeListeners(iframe, `refresh-retry-${index}`);\n          });\n        }\n      }, 1000);\n    } else {\n      iframes.forEach((iframe, index) => {\n        console.log(\n          `🔍 IFRAME REFRESH ${index}: Processing iframe:`,\n          iframe.src || iframe.id || \"no-src\"\n        );\n        this.attachIframeListeners(iframe, `refresh-${index}`);\n      });\n    }\n  }\n\n  attachIframeListeners(iframe, index) {\n    try {\n      // Kiểm tra nếu iframe đã có listener để tránh duplicate\n      if (iframe.dataset.mermaidListenerAttached === \"true\") {\n        console.log(\n          `⚠️ IFRAME ${index}: Listener already attached, skipping...`\n        );\n        return;\n      }\n\n      // Đánh dấu iframe đã có listener\n      iframe.dataset.mermaidListenerAttached = \"true\";\n\n      // Đợi iframe load xong\n      const loadHandler = () => {\n        console.log(\n          `🔍 IFRAME ${index}: Iframe loaded, attaching listeners...`\n        );\n        try {\n          const iframeDoc =\n            iframe.contentDocument || iframe.contentWindow.document;\n\n          if (!iframeDoc) {\n            console.log(\n              `⚠️ IFRAME ${index}: Cannot access iframe document (cross-origin?)`\n            );\n            return;\n          }\n\n          console.log(\n            `✅ IFRAME ${index}: Iframe document accessible, adding click listeners...`\n          );\n\n          // Click handler: Lưu element và tọa độ nếu là ảnh\n          const clickHandler = (event) => {\n            console.log(`🖱️ IFRAME ${index} CLICK: Element clicked:`, {\n              tag: event.target.tagName,\n              classes: event.target.className,\n              id: event.target.id,\n              src: event.target.src || \"N/A\",\n              alt: event.target.alt || \"N/A\",\n              element: event.target,\n            });\n\n            console.log(\n              `🔍 IFRAME ${index} CLICK: Checking if Mermaid element...`\n            );\n            console.log(\n              `🔍 IFRAME ${index} CLICK: isMermaidElement result:`,\n              this.isMermaidElement(event.target)\n            );\n\n            // ✅ Handle click directly without MermaidDetector\n            if (this.isMermaidElement(event.target)) {\n              console.log(\"🎯 Mermaid element clicked:\", event.target);\n\n              // Extract and save filename from image src if available\n              if (event.target.src) {\n                const filename = MermaidApiClient.extractFilename(\n                  event.target.src\n                );\n                if (filename) {\n                  MermaidApiClient.saveFilename(filename);\n                  console.log(`💾 Filename saved: ${filename}`);\n                } else {\n                  console.warn(\n                    \"⚠️ Could not extract filename from src:\",\n                    event.target.src\n                  );\n                }\n              }\n\n              // Save click info\n              this.lastClickedElement = event.target;\n              this.lastClickPosition = {\n                x: event.clientX + iframe.offsetLeft,\n                y: event.clientY + iframe.offsetTop,\n              };\n\n              // Trigger callback\n              this.handleMermaidClick(event.target, this.lastClickPosition);\n            }\n          };\n\n          // Remove existing listener nếu có\n          if (iframeDoc.mermaidClickHandler) {\n            iframeDoc.removeEventListener(\n              \"click\",\n              iframeDoc.mermaidClickHandler,\n              true\n            );\n          }\n\n          // Add new listener\n          const boundClickHandler = clickHandler.bind(this);\n          iframeDoc.addEventListener(\"click\", boundClickHandler, true);\n\n          // Store reference để có thể remove sau này\n          iframeDoc.mermaidClickHandler = boundClickHandler;\n        } catch (e) {\n          console.log(\n            `❌ IFRAME ${index}: Error accessing iframe content:`,\n            e.message\n          );\n        }\n      };\n\n      // Remove existing load listener nếu có\n      if (iframe.mermaidLoadHandler) {\n        iframe.removeEventListener(\"load\", iframe.mermaidLoadHandler);\n      }\n\n      // Add load listener\n      iframe.addEventListener(\"load\", loadHandler);\n      iframe.mermaidLoadHandler = loadHandler;\n\n      // Nếu iframe đã load rồi thì gọi handler ngay\n      if (\n        iframe.contentDocument &&\n        iframe.contentDocument.readyState === \"complete\"\n      ) {\n        loadHandler();\n      }\n    } catch (e) {\n      console.log(\n        `❌ IFRAME ${index}: Error setting up iframe listener:`,\n        e.message\n      );\n    }\n  }\n\n  setupMutationObserver() {\n    console.log(\n      \"🔍 MUTATION: Setting up observer to track ALL DOM changes in parent...\"\n    );\n\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation, mutationIndex) => {\n        console.log(`🔍 MUTATION ${mutationIndex}: Type: ${mutation.type}`);\n        if (mutation.type === \"childList\") {\n          // Log ADDED nodes\n          if (mutation.addedNodes.length > 0) {\n            console.log(\n              `➕ MUTATION ${mutationIndex}: ${mutation.addedNodes.length} nodes ADDED:`\n            );\n            mutation.addedNodes.forEach((node, nodeIndex) => {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                console.log(`➕ Added ${nodeIndex}: ${node.tagName}`, {\n                  tag: node.tagName,\n                  classes: node.className || \"N/A\",\n                  id: node.id || \"N/A\",\n                  textContent: node.textContent?.substring(0, 50) || \"N/A\",\n                  element: node,\n                });\n\n                // Nếu là iframe thì attach listeners\n                if (node.tagName === \"IFRAME\") {\n                  console.log(\n                    \"🎯 MUTATION: IFRAME detected, attaching listeners...\"\n                  );\n                  this.attachIframeListeners(node, \"new\");\n                }\n\n                this.injectAIButton();\n              } else if (node.nodeType === Node.TEXT_NODE) {\n                console.log(`➕ Added ${nodeIndex}: TEXT_NODE`, {\n                  content: node.textContent?.substring(0, 50) || \"N/A\",\n                });\n              }\n            });\n          }\n        }\n      });\n    });\n\n    // Observe DOM cha với tất cả types\n    observer.observe(document.body, {\n      childList: true,\n      subtree: false,\n    });\n  }\n\n  setupConfluencePageChangeDetection() {\n    console.log(\n      \"🔍 PAGE CHANGE: Setting up Confluence page change detection...\"\n    );\n\n    // Method 1: Listen for Confluence-specific events\n    if (window.AJS && AJS.bind) {\n      // Editor events\n      AJS.bind(\"init.rte\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Confluence RTE initialized - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n\n      AJS.bind(\"rte-ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Confluence RTE ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n\n      // Page events\n      AJS.bind(\"page.edit.ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Page edit ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1500);\n      });\n\n      AJS.bind(\"page.view.ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Page view ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n    }\n\n    // Method 2: Watch for URL changes (SPA navigation)\n    let currentUrl = window.location.href;\n    const checkUrlChange = () => {\n      if (window.location.href !== currentUrl) {\n        console.log(\n          \"🔄 PAGE CHANGE: URL changed from\",\n          currentUrl,\n          \"to\",\n          window.location.href\n        );\n        currentUrl = window.location.href;\n\n        // Re-setup after URL change\n        setTimeout(() => {\n          console.log(\n            \"🔄 PAGE CHANGE: Re-setting up iframe listeners after URL change\"\n          );\n          this.setupIframeEventListeners();\n        }, 2000);\n      }\n    };\n\n    setInterval(checkUrlChange, 1000);\n\n    console.log(\n      \"✅ PAGE CHANGE: Confluence page change detection setup completed\"\n    );\n  }\n\n  injectAIButton() {\n    // ✅ Skip if ConfluenceEditor popup is open to avoid conflict\n    if (document.querySelector(\".confluence-editor-overlay\")) {\n      console.log(\n        \"🚫 ConfluenceEditor popup is open, skipping AI button injection\"\n      );\n      return;\n    }\n\n    var panel = document.getElementById(\"property-panel\");\n    if (!panel) return;\n\n    var buttonContainer = panel.querySelector(\".panel-buttons\");\n    if (!buttonContainer) return;\n\n    // Kiểm tra nếu nút AI đã có\n    if (\n      buttonContainer.querySelector(\n        \".macro-placeholder-property-panel-ai-button\"\n      )\n    )\n      return;\n\n    console.log(\"✨ Thêm nút AI vào property panel...\");\n\n    // Tạo thẻ <a> mới\n    var aiButton = document.createElement(\"a\");\n    aiButton.href = \"#\";\n    aiButton.className =\n      \"aui-button macro-placeholder-property-panel-ai-button\";\n    aiButton.setAttribute(\"tabindex\", \"0\");\n    aiButton.setAttribute(\"role\", \"button\");\n    aiButton.setAttribute(\"aria-label\", \"AI\");\n    aiButton.style.marginRight = \"4px\";\n\n    // Icon + Text\n    aiButton.innerHTML = `<span class=\"icon\"></span><span class=\"panel-button-text\">AI</span>`;\n\n    // Thêm sự kiện click\n    aiButton.addEventListener(\"click\", async (e) => {\n      e.preventDefault();\n\n      // ✅ Skip if ConfluenceEditor popup is open to avoid conflict\n      if (document.querySelector(\".confluence-editor-overlay\")) {\n        console.log(\n          \"🚫 ConfluenceEditor popup is open, ignoring AI button click\"\n        );\n        return;\n      }\n\n      console.log(\"🤖 AI Button clicked - fetching Mermaid code...\");\n\n      // Get last clicked element and position\n      const lastClickedElement = this.lastClickedElement;\n      const lastClickPosition = this.lastClickPosition;\n\n      console.log(\n        \"🔍 DEBUG AI BUTTON: this.lastClickedElement:\",\n        this.lastClickedElement\n      );\n      console.log(\n        \"🔍 DEBUG AI BUTTON: this.lastClickPosition:\",\n        this.lastClickPosition\n      );\n      console.log(\n        \"🔍 DEBUG AI BUTTON: lastClickedElement:\",\n        lastClickedElement\n      );\n      console.log(\"🔍 DEBUG AI BUTTON: lastClickPosition:\", lastClickPosition);\n      console.log(\n        \"🔍 DEBUG AI BUTTON: Position check:\",\n        lastClickPosition &&\n          (lastClickPosition.x !== 0 || lastClickPosition.y !== 0)\n      );\n\n      if (\n        lastClickedElement &&\n        lastClickPosition &&\n        (lastClickPosition.x !== 0 || lastClickPosition.y !== 0)\n      ) {\n        console.log(\n          \"🤖 Found saved element - fetching Mermaid code from API...\"\n        );\n\n        try {\n          // Show loading state\n          const loadingMessage = \"🔄 Fetching Mermaid diagram code...\";\n          console.log(loadingMessage);\n\n          // Fetch Mermaid code from API using saved filename and page ID\n          const mermaidCodeResponse =\n            await MermaidApiClient.fetchMermaidCodeFromSaved();\n          const mermaidCode = mermaidCodeResponse.data;\n          console.log(\"✅ Mermaid code fetched successfully:\", mermaidCode);\n\n          // Update current content with fetched code\n          this.currentMermaidContent = mermaidCode;\n\n          // Show chat popup with fetched content\n          this.showChatPopup(lastClickPosition.x, lastClickPosition.y);\n        } catch (error) {\n          console.error(\"❌ Error fetching Mermaid code:\", error);\n          alert(`❌ Error fetching Mermaid code: ${error.message}`);\n        }\n      } else {\n        console.log(\n          \"⚠️ No saved element found - please click on an image first\"\n        );\n        alert(\"⚠️ Vui lòng click vào một hình ảnh trước khi sử dụng AI Chat!\");\n      }\n    });\n\n    // Chèn vào trước nút Remove\n    var removeButton = buttonContainer.querySelector(\n      \".macro-placeholder-property-panel-remove-button\"\n    );\n    if (removeButton) {\n      buttonContainer.insertBefore(aiButton, removeButton);\n    } else {\n      buttonContainer.appendChild(aiButton);\n    }\n\n    console.log(\"✅ Đã chèn nút AI thành công.\");\n  }\n\n  /**\n   * Remove AI button when ConfluenceEditor is open\n   */\n  removeAIButton() {\n    const aiButton = document.querySelector(\n      \".macro-placeholder-property-panel-ai-button\"\n    );\n    if (aiButton) {\n      aiButton.remove();\n      console.log(\"🗑️ AI button removed due to ConfluenceEditor popup\");\n    }\n  }\n\n  /**\n   * Monitor ConfluenceEditor popup state and manage AI button accordingly\n   */\n  setupConfluenceEditorMonitoring() {\n    // Monitor for ConfluenceEditor popup open/close\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"childList\") {\n          mutation.addedNodes.forEach((node) => {\n            if (\n              node.nodeType === Node.ELEMENT_NODE &&\n              node.classList &&\n              node.classList.contains(\"confluence-editor-overlay\")\n            ) {\n              console.log(\n                \"🔍 ConfluenceEditor popup opened, removing AI button\"\n              );\n              this.removeAIButton();\n            }\n          });\n\n          mutation.removedNodes.forEach((node) => {\n            if (\n              node.nodeType === Node.ELEMENT_NODE &&\n              node.classList &&\n              node.classList.contains(\"confluence-editor-overlay\")\n            ) {\n              console.log(\n                \"🔍 ConfluenceEditor popup closed, re-injecting AI button\"\n              );\n              // Delay to ensure DOM is ready\n              setTimeout(() => {\n                this.injectAIButton();\n              }, 100);\n            }\n          });\n        }\n      });\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: false, // Only observe direct children of body\n    });\n\n    console.log(\"✅ ConfluenceEditor monitoring setup completed\");\n  }\n\n  /**\n   * Check if element is a Mermaid diagram\n   * @param {HTMLElement} element - Element to check\n   * @returns {boolean} True if element is Mermaid-related\n   */\n  isMermaidElement(element) {\n    if (\n      !element ||\n      !element.nodeType ||\n      element.nodeType !== Node.ELEMENT_NODE\n    ) {\n      return false;\n    }\n\n    console.log(\"🔍 isMermaidElement: Checking element:\", {\n      tag: element.tagName,\n      src: element.src || \"N/A\",\n      className: element.className || \"N/A\",\n      id: element.id || \"N/A\",\n    });\n\n    // Check for various Mermaid indicators\n    const checks = [\n      // Image with mermaid in src\n      element.tagName === \"IMG\" &&\n        element.src &&\n        element.src.includes(\"mermaid\"),\n      // SVG with mermaid in id\n      element.tagName === \"SVG\" && element.id && element.id.includes(\"mermaid\"),\n      // Element with mermaid class\n      element.classList && element.classList.contains(\"mermaid\"),\n      // Element with mermaid data attribute\n      element.getAttribute &&\n        element.getAttribute(\"data-macro-name\") === \"mermaid\",\n      // Confluence structured macro\n      element.tagName === \"AC:STRUCTURED-MACRO\" &&\n        element.getAttribute(\"ac:name\") === \"mermaid\",\n      // Any image (for broader detection)\n      element.tagName === \"IMG\" && element.src,\n      // Any SVG\n      element.tagName === \"SVG\",\n    ];\n\n    const result = checks.some((check) => check);\n    console.log(\"🔍 isMermaidElement: Result:\", result);\n\n    return result;\n  }\n\n  /**\n   * Bind zoom control events\n   */\n  bindZoomControls() {\n    const zoomInBtn = document.getElementById(\"zoom-in-btn\");\n    const zoomOutBtn = document.getElementById(\"zoom-out-btn\");\n    const zoomResetBtn = document.getElementById(\"zoom-reset-btn\");\n    const previewContainer = document.getElementById(\n      \"mermaid-preview-container\"\n    );\n\n    if (!zoomInBtn || !zoomOutBtn || !zoomResetBtn || !previewContainer) {\n      console.warn(\"⚠️ Zoom controls not found\");\n      return;\n    }\n\n    // Zoom In\n    zoomInBtn.addEventListener(\"click\", () => {\n      this.zoomIn();\n    });\n\n    // Zoom Out\n    zoomOutBtn.addEventListener(\"click\", () => {\n      this.zoomOut();\n    });\n\n    // Reset Zoom\n    zoomResetBtn.addEventListener(\"click\", () => {\n      this.resetZoom();\n    });\n\n    // Keyboard shortcuts\n    document.addEventListener(\"keydown\", (e) => {\n      // Only work when popup is open and not typing in input fields\n      if (\n        !this.isPopupOpen ||\n        e.target.tagName === \"INPUT\" ||\n        e.target.tagName === \"TEXTAREA\"\n      ) {\n        return;\n      }\n\n      if (e.key === \"+\" || e.key === \"=\") {\n        e.preventDefault();\n        this.zoomIn();\n      } else if (e.key === \"-\") {\n        e.preventDefault();\n        this.zoomOut();\n      } else if (e.key === \"0\") {\n        e.preventDefault();\n        this.resetZoom();\n      }\n    });\n\n    // Mouse wheel zoom (Ctrl + wheel)\n    previewContainer.addEventListener(\"wheel\", (e) => {\n      if (e.ctrlKey) {\n        e.preventDefault();\n        if (e.deltaY < 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n    });\n\n    console.log(\"✅ Zoom controls bound successfully\");\n  }\n\n  /**\n   * Zoom in\n   */\n  zoomIn() {\n    if (this.currentZoom < this.maxZoom) {\n      this.currentZoom = Math.min(\n        this.currentZoom + this.zoomStep,\n        this.maxZoom\n      );\n      this.applyZoom();\n    }\n  }\n\n  /**\n   * Zoom out\n   */\n  zoomOut() {\n    if (this.currentZoom > this.minZoom) {\n      this.currentZoom = Math.max(\n        this.currentZoom - this.zoomStep,\n        this.minZoom\n      );\n      this.applyZoom();\n    }\n  }\n\n  /**\n   * Reset zoom to 100%\n   */\n  resetZoom() {\n    this.currentZoom = 1.0;\n    this.applyZoom();\n  }\n\n  /**\n   * Apply zoom to preview container\n   */\n  applyZoom() {\n    const previewContainer = document.getElementById(\n      \"mermaid-preview-container\"\n    );\n    const zoomDisplay = document.getElementById(\"zoom-level-display\");\n\n    if (!previewContainer) return;\n\n    // Set zoom flag to prevent flicker\n    this.isZooming = true;\n\n    // Apply transform\n    previewContainer.style.transform = `scale(${this.currentZoom})`;\n    previewContainer.style.transformOrigin = \"center center\";\n\n    // Update zoom display\n    if (zoomDisplay) {\n      zoomDisplay.textContent = `${Math.round(this.currentZoom * 100)}%`;\n    }\n\n    // Update button states\n    this.updateZoomButtonStates();\n\n    console.log(`🔍 Zoom applied: ${Math.round(this.currentZoom * 100)}%`);\n\n    // Reset zoom flag after a short delay\n    setTimeout(() => {\n      this.isZooming = false;\n    }, 100);\n  }\n\n  /**\n   * Update zoom button states (enable/disable)\n   */\n  updateZoomButtonStates() {\n    const zoomInBtn = document.getElementById(\"zoom-in-btn\");\n    const zoomOutBtn = document.getElementById(\"zoom-out-btn\");\n\n    if (zoomInBtn) {\n      zoomInBtn.disabled = this.currentZoom >= this.maxZoom;\n      zoomInBtn.style.opacity = this.currentZoom >= this.maxZoom ? \"0.5\" : \"1\";\n    }\n\n    if (zoomOutBtn) {\n      zoomOutBtn.disabled = this.currentZoom <= this.minZoom;\n      zoomOutBtn.style.opacity = this.currentZoom <= this.minZoom ? \"0.5\" : \"1\";\n    }\n  }\n\n  createPopupUI() {\n    const root = document.createElement(\"div\");\n    root.id = \"mermaid-ai-chat-root\";\n    root.innerHTML = `\n      <style>\n        .mermaid-preview-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 8px 12px;\n          background: #f5f5f5;\n          border-bottom: 1px solid #ddd;\n          font-weight: bold;\n        }\n\n        .zoom-controls {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n\n        .zoom-btn {\n          background: #fff;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n          padding: 4px 8px;\n          cursor: pointer;\n          font-size: 12px;\n          transition: all 0.2s;\n        }\n\n        .zoom-btn:hover:not(:disabled) {\n          background: #e6f3ff;\n          border-color: #0066cc;\n        }\n\n        .zoom-btn:disabled {\n          cursor: not-allowed;\n          opacity: 0.5;\n        }\n\n        .zoom-level {\n          font-size: 12px;\n          font-weight: bold;\n          color: #666;\n          min-width: 40px;\n          text-align: center;\n        }\n\n        .zoom-icon {\n          font-size: 10px;\n        }\n\n        #mermaid-preview-container {\n          transition: transform 0.2s ease;\n          overflow: auto;\n          max-height: 400px;\n        }\n      </style>\n      <div id=\"mermaid-ai-chat-popup\" class=\"mermaid-ai-chat-popup\" style=\"display: none;\">\n        <div class=\"mermaid-ai-chat-header\">\n          <h3>🤖 Mermaid AI Chat Editor</h3>\n          <button class=\"mermaid-ai-chat-close\">&times;</button>\n        </div>\n        <div class=\"mermaid-ai-chat-body\">\n          <!-- Left Pane: Code Editor + Chat Input -->\n          <div class=\"mermaid-ai-chat-left-pane\">\n            <!-- Code Editor Section -->\n            <div class=\"mermaid-code-section\">\n              <div class=\"mermaid-code-header\">\n                📝 Mermaid Code\n              </div>\n              <textarea\n                id=\"mermaid-code-editor\"\n                class=\"mermaid-code-editor\"\n                placeholder=\"Mermaid diagram code will appear here...\"\n              ></textarea>\n            </div>\n\n            <!-- Chat Input Section -->\n            <div class=\"mermaid-chat-section\">\n              <div class=\"mermaid-chat-input-area\">\n                <textarea\n                  id=\"mermaid-ai-chat-input\"\n                  class=\"mermaid-chat-input\"\n                  placeholder=\"💬 Describe how you want to modify the diagram...\"\n                  rows=\"2\"\n                ></textarea>\n                <button id=\"mermaid-ai-chat-send\" class=\"mermaid-chat-send\">\n                  Send\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <!-- Right Pane: Mermaid Preview -->\n          <div class=\"mermaid-ai-chat-right-pane\">\n            <div class=\"mermaid-preview-section\">\n              <div class=\"mermaid-preview-header\">\n                <span class=\"preview-title\">📊 Diagram Preview</span>\n                <div class=\"zoom-controls\">\n                  <button id=\"zoom-out-btn\" class=\"zoom-btn\" title=\"Zoom Out (-)\">\n                    <span class=\"zoom-icon\">🔍➖</span>\n                  </button>\n                  <span id=\"zoom-level-display\" class=\"zoom-level\">100%</span>\n                  <button id=\"zoom-in-btn\" class=\"zoom-btn\" title=\"Zoom In (+)\">\n                    <span class=\"zoom-icon\">🔍➕</span>\n                  </button>\n                  <button id=\"zoom-reset-btn\" class=\"zoom-btn\" title=\"Reset Zoom (0)\">\n                    <span class=\"zoom-icon\">🔄</span>\n                  </button>\n                </div>\n              </div>\n              <div class=\"mermaid-preview-body\">\n                <div id=\"mermaid-preview-container\" class=\"mermaid-preview-container\">\n                  <div class=\"mermaid-preview-placeholder\">\n                    Click on a Mermaid diagram to start editing\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n\n    document.body.appendChild(root);\n    this.bindPopupEvents();\n  }\n\n  bindPopupEvents() {\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    const header = popup.querySelector(\".mermaid-ai-chat-header\");\n    const closeBtn = popup.querySelector(\".mermaid-ai-chat-close\");\n    const sendBtn = document.getElementById(\"mermaid-ai-chat-send\");\n    const input = document.getElementById(\"mermaid-ai-chat-input\");\n    const codeEditor = document.getElementById(\"mermaid-code-editor\");\n\n    // Make popup draggable\n    this.makeDraggable(popup, header);\n\n    // Close popup\n    closeBtn.addEventListener(\"click\", () => {\n      this.hideChatPopup();\n    });\n\n    // Send message\n    sendBtn.addEventListener(\"click\", () => {\n      this.sendMessage();\n    });\n\n    // Send on Enter (Ctrl+Enter for new line)\n    input.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" && !e.ctrlKey && !e.shiftKey) {\n        e.preventDefault();\n        this.sendMessage();\n      }\n    });\n\n    // Code editor change event - update preview\n    codeEditor.addEventListener(\"input\", () => {\n      this.updateMermaidPreview();\n    });\n\n    // ✅ Zoom controls\n    this.bindZoomControls();\n\n    // Click outside to close - with proper event handling\n    setTimeout(() => {\n      const handleClickOutside = (e) => {\n        // Skip if popup is not open\n        if (!this.isPopupOpen) return;\n\n        // Skip if clicking on AI button (to prevent immediate close)\n        if (e.target.closest(\".macro-placeholder-property-panel-ai-button\")) {\n          return;\n        }\n\n        // ✅ Skip if clicking on AI button in ConfluenceEditor popup\n        if (\n          e.target.closest(\"#ai-send-btn\") &&\n          document.querySelector(\".confluence-editor-overlay\")\n        ) {\n          return;\n        }\n\n        // Skip if clicking inside popup\n        if (popup.contains(e.target)) {\n          return;\n        }\n\n        console.log(\"🖱️ Click outside popup detected, closing...\");\n        this.hideChatPopup();\n      };\n\n      document.addEventListener(\"click\", handleClickOutside, true);\n    }, 300); // Delay to prevent immediate close after opening\n  }\n\n  makeDraggable(popup, dragHandle) {\n    let isDragging = false;\n    let dragStartX = 0;\n    let dragStartY = 0;\n    let popupStartX = 0;\n    let popupStartY = 0;\n\n    console.log(\"🎯 DRAG: Setting up draggable popup...\");\n\n    // Style the drag handle\n    dragHandle.style.cursor = \"move\";\n    dragHandle.style.userSelect = \"none\";\n\n    const startDrag = (e) => {\n      // Don't drag if clicking on close button\n      if (e.target.classList.contains(\"mermaid-ai-chat-close\")) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation(); // Prevent event bubbling\n\n      isDragging = true;\n\n      // Get mouse position\n      dragStartX = e.clientX;\n      dragStartY = e.clientY;\n\n      // Get popup current position (from style, not getBoundingClientRect)\n      popupStartX = parseInt(popup.style.left) || 0;\n      popupStartY = parseInt(popup.style.top) || 0;\n\n      console.log(\"🎯 DRAG: Started\", {\n        mouseX: dragStartX,\n        mouseY: dragStartY,\n        popupX: popupStartX,\n        popupY: popupStartY,\n      });\n\n      // Add global event listeners\n      document.addEventListener(\"mousemove\", onDrag, true);\n      document.addEventListener(\"mouseup\", stopDrag, true);\n\n      // Prevent text selection during drag\n      document.body.style.userSelect = \"none\";\n    };\n\n    const onDrag = (e) => {\n      if (!isDragging) return;\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      // Calculate mouse movement\n      const deltaX = e.clientX - dragStartX;\n      const deltaY = e.clientY - dragStartY;\n\n      // Calculate new popup position\n      let newX = popupStartX + deltaX;\n      let newY = popupStartY + deltaY;\n\n      // Constrain to viewport (with some padding)\n      const padding = 10;\n      const maxX = window.innerWidth - 400 - padding; // 400 is popup width\n      const maxY = window.innerHeight - 300 - padding; // estimated popup height\n\n      newX = Math.max(padding, Math.min(newX, maxX));\n      newY = Math.max(padding, Math.min(newY, maxY));\n\n      // Apply position\n      popup.style.left = newX + \"px\";\n      popup.style.top = newY + \"px\";\n    };\n\n    const stopDrag = (e) => {\n      if (!isDragging) return;\n\n      console.log(\"🎯 DRAG: Stopped\");\n      isDragging = false;\n\n      // Remove global event listeners\n      document.removeEventListener(\"mousemove\", onDrag, true);\n      document.removeEventListener(\"mouseup\", stopDrag, true);\n\n      // Restore text selection\n      document.body.style.userSelect = \"\";\n\n      e.stopPropagation(); // Prevent click outside from firing\n    };\n\n    // Attach drag to header\n    dragHandle.addEventListener(\"mousedown\", startDrag);\n\n    console.log(\"✅ DRAG: Setup completed\");\n  }\n\n  showChatPopup(x, y) {\n    console.log(\"🎉 STEP 8: showChatPopup called with coordinates:\", { x, y });\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    console.log(\"🎉 STEP 8.1: Found popup element:\", popup);\n\n    if (!popup) {\n      console.error(\"❌ STEP 8.1: Popup element not found!\");\n      return;\n    }\n\n    // Populate code editor with current content\n    const codeEditor = document.getElementById(\"mermaid-code-editor\");\n    if (codeEditor && this.currentMermaidContent) {\n      codeEditor.value = this.currentMermaidContent;\n      // Trigger preview update\n      this.updateMermaidPreview();\n    }\n\n    const leftPos = Math.min(x, window.innerWidth - 400);\n    const topPos = Math.min(y, window.innerHeight - 300);\n\n    console.log(\"🎉 STEP 8.2: Setting popup position:\", { leftPos, topPos });\n    console.log(\"🎉 STEP 8.2: Window dimensions:\", {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n\n    popup.style.display = \"block\";\n    popup.style.left = leftPos + \"px\";\n    popup.style.top = topPos + \"px\";\n\n    console.log(\"🎉 STEP 8.3: Popup styles applied:\", {\n      display: popup.style.display,\n      left: popup.style.left,\n      top: popup.style.top,\n    });\n\n    this.isPopupOpen = true;\n    console.log(\"🎉 STEP 8.4: isPopupOpen set to:\", this.isPopupOpen);\n\n    // Focus input\n    setTimeout(() => {\n      const input = document.getElementById(\"mermaid-ai-chat-input\");\n      console.log(\"🎉 STEP 8.5: Focusing input element:\", input);\n      if (input) {\n        input.focus();\n        console.log(\"✅ STEP 8.5: Input focused successfully\");\n      } else {\n        console.error(\"❌ STEP 8.5: Input element not found!\");\n      }\n    }, 100);\n\n    console.log(\"✅ STEP 8: showChatPopup completed\");\n  }\n\n  /**\n   * Update Mermaid preview from code editor\n   */\n  async updateMermaidPreview() {\n    const codeEditor = document.getElementById(\"mermaid-code-editor\");\n    if (!codeEditor) return;\n\n    // ✅ Skip update if currently zooming to prevent flicker\n    if (this.isZooming) {\n      console.log(\"🔍 Skipping preview update during zoom to prevent flicker\");\n      return;\n    }\n\n    const code = codeEditor.value.trim();\n\n    // Update current content\n    this.currentMermaidContent = code;\n\n    // Store current zoom level\n    const currentZoom = this.currentZoom;\n\n    // Use preview component to update\n    await this.preview.updatePreview(code);\n\n    // ✅ Reapply zoom after preview update to maintain zoom level\n    if (currentZoom !== 1.0) {\n      setTimeout(() => {\n        this.currentZoom = currentZoom;\n        this.applyZoom();\n      }, 50); // Small delay to ensure DOM is updated\n    }\n  }\n\n  hideChatPopup() {\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    popup.style.display = \"none\";\n    this.isPopupOpen = false;\n\n    // Clear messages except system message\n    const messagesContainer = document.getElementById(\n      \"mermaid-ai-chat-messages\"\n    );\n    const systemMessage = messagesContainer.querySelector(\".system\");\n    messagesContainer.innerHTML = \"\";\n    messagesContainer.appendChild(systemMessage);\n\n    // Clear input\n    document.getElementById(\"mermaid-ai-chat-input\").value = \"\";\n\n    console.log(\"✅ Chat popup closed\");\n  }\n\n  async sendMessage() {\n    const input = document.getElementById(\"mermaid-ai-chat-input\");\n    const codeEditor = document.getElementById(\"mermaid-code-editor\");\n    const sendBtn = document.getElementById(\"mermaid-ai-chat-send\");\n    const message = input.value.trim();\n\n    if (!message) return;\n\n    // Get current code from editor\n    const currentCode = codeEditor.value.trim();\n    if (!currentCode) {\n      alert(\"⚠️ Please enter some Mermaid code first\");\n      return;\n    }\n\n    // Update current content\n    this.currentMermaidContent = currentCode;\n\n    // Disable send button and show loading\n    sendBtn.disabled = true;\n    sendBtn.textContent = \"🤔 Thinking...\";\n    input.disabled = true;\n\n    try {\n      // Call AI service\n      const response = await this.aiService.modifyDiagram(\n        this.currentMermaidContent,\n        message\n      );\n\n      // Update code editor with new diagram\n      codeEditor.value = response.edited_diagram;\n      this.currentMermaidContent = response.edited_diagram;\n\n      // Update preview\n      await this.updateMermaidPreview();\n\n      // Clear input\n      input.value = \"\";\n\n      console.log(\"✅ Diagram updated successfully by AI\");\n    } catch (error) {\n      console.error(\"❌ AI API error:\", error);\n\n      // Get user-friendly error message\n      const errorMessage = this.aiService.getErrorMessage(error);\n      alert(`❌ ${errorMessage}`);\n    } finally {\n      // Re-enable controls\n      sendBtn.disabled = false;\n      sendBtn.textContent = \"Send\";\n      input.disabled = false;\n      input.focus();\n    }\n  }\n\n  addMessage(type, content) {\n    const messagesContainer = document.getElementById(\n      \"mermaid-ai-chat-messages\"\n    );\n    const messageId = \"msg-\" + Date.now();\n\n    const messageDiv = document.createElement(\"div\");\n    messageDiv.className = `mermaid-ai-chat-message ${type}`;\n    messageDiv.id = messageId;\n    messageDiv.innerHTML = `\n      <div class=\"message-content\">\n        <p>${content}</p>\n      </div>\n    `;\n\n    messagesContainer.appendChild(messageDiv);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n    return messageId;\n  }\n\n  removeMessage(messageId) {\n    const message = document.getElementById(messageId);\n    if (message) {\n      message.remove();\n    }\n  }\n}\n\n// Export for use as service in K-Tool Extension\n// Initialization will be handled by the main content.js\n","// Chrome Storage Management\nimport { DEFAULT_SETTINGS, EXTENSION_SETTINGS_KEY } from \"./constants.js\";\n\nexport class StorageManager {\n  /**\n   * Load settings from Chrome storage\n   * @returns {Promise<Object>} Settings object\n   */\n  static async getSettings() {\n    try {\n      const result = await chrome.storage.sync.get([EXTENSION_SETTINGS_KEY]);\n      return result[EXTENSION_SETTINGS_KEY] || DEFAULT_SETTINGS;\n    } catch (error) {\n      console.error(\"Error loading settings:\", error);\n      return DEFAULT_SETTINGS;\n    }\n  }\n\n  /**\n   * Save settings to Chrome storage\n   * @param {Object} settings - Settings object to save\n   * @returns {Promise<boolean>} Success status\n   */\n  static async saveSettings(settings) {\n    try {\n      await chrome.storage.sync.set({ [EXTENSION_SETTINGS_KEY]: settings });\n      return true;\n    } catch (error) {\n      console.error(\"Error saving settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Update specific setting field\n   * @param {string} field - Field name to update\n   * @param {any} value - New value\n   * @returns {Promise<boolean>} Success status\n   */\n  static async updateSetting(field, value) {\n    try {\n      const currentSettings = await this.getSettings();\n      const updatedSettings = { ...currentSettings, [field]: value };\n      return await this.saveSettings(updatedSettings);\n    } catch (error) {\n      console.error(\"Error updating setting:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Reset settings to default\n   * @returns {Promise<boolean>} Success status\n   */\n  static async resetSettings() {\n    try {\n      await chrome.storage.sync.remove([EXTENSION_SETTINGS_KEY]);\n      return true;\n    } catch (error) {\n      console.error(\"Error resetting settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Validate settings object\n   * @param {Object} settings - Settings to validate\n   * @returns {Object} Validation result with errors\n   */\n  static validateSettings(settings) {\n    const errors = {};\n\n    if (!settings.apiKey?.trim()) {\n      errors.apiKey = \"API Key là bắt buộc\";\n    }\n\n    if (!settings.urlTemplate?.trim()) {\n      errors.urlTemplate = \"URL Template là bắt buộc\";\n    } else {\n      const validationResult = this.validateConfluencePageLink(\n        settings.urlTemplate\n      );\n\n      if (!validationResult.valid) {\n        errors.urlTemplate =\n          validationResult.error || \"URL Template không hợp lệ.\";\n      }\n    }\n    if (!settings.documentUrl?.trim()) {\n      errors.documentUrl = \"URL thư mục lưu tài liệu là bắt buộc\";\n    } else if (!this.isValidUrl(settings.documentUrl)) {\n      errors.documentUrl = \"URL không hợp lệ\";\n    }\n\n    if (!settings.databaseUrl?.trim()) {\n      errors.databaseUrl = \"URL thư mục database là bắt buộc\";\n    } else if (!this.isValidUrl(settings.databaseUrl)) {\n      errors.databaseUrl = \"URL không hợp lệ\";\n    }\n\n    // if (!settings.customPrompt?.trim()) {\n    //   errors.customPrompt = \"Custom Prompt là bắt buộc\";\n    // } else if (settings.customPrompt.trim().length < 10) {\n    //   errors.customPrompt = \"Custom Prompt phải có ít nhất 10 ký tự\";\n    // }\n\n    return {\n      isValid: Object.keys(errors).length === 0,\n      errors,\n    };\n  }\n\n  /**\n   * Check if URL is valid\n   * @param {string} url - URL to validate\n   * @returns {boolean} Is valid URL\n   */\n  static isValidUrl(url) {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Validate Confluence page link (có pageId)\n   * @param {string} link - Link Confluence để kiểm tra\n   * @returns {Object} { valid: boolean, error?: string, pageId?: string }\n   */\n  static validateConfluencePageLink(link) {\n    const out = { valid: false, error: null, pageId: null };\n\n    if (!link || typeof link !== \"string\" || !link.trim()) {\n      out.error = \"URL là bắt buộc\";\n      return out;\n    }\n\n    let u;\n    try {\n      u = new URL(link.trim());\n    } catch {\n      out.error = \"URL không hợp lệ\";\n      return out;\n    }\n\n    // check pageId in query param\n    const pageIdParam = u.searchParams.get(\"pageId\");\n    if (pageIdParam && /^\\d+$/.test(pageIdParam)) {\n      out.valid = true;\n      out.pageId = pageIdParam;\n      return out;\n    }\n\n    // check pageId in path (/pages/{id})\n    const pathParts = u.pathname.split(\"/\");\n    const pagesIndex = pathParts.indexOf(\"pages\");\n    if (pagesIndex >= 0 && pathParts.length > pagesIndex + 1) {\n      const candidate = pathParts[pagesIndex + 1];\n      if (/^\\d+$/.test(candidate)) {\n        out.valid = true;\n        out.pageId = candidate;\n        return out;\n      }\n    }\n\n    out.error = \"Không tìm thấy pageId trong URL\";\n    return out;\n  }\n}\n","// Mermaid Rendering Utilities\n// Handles Mermaid diagram loading, rendering and error handling\n\nexport class MermaidRenderer {\n  /**\n   * Load Mermaid script dynamically\n   * @returns {Promise<object>} Mermaid instance\n   */\n  static async loadMermaidScript() {\n    if (window.mermaid) {\n      console.log(\"⚡ Mermaid already loaded\");\n      return window.mermaid;\n    }\n\n    const res = await fetch(chrome.runtime.getURL(\"lib/mermaid.min.js\"));\n    const text = await res.text();\n    eval(text); // UMD will attach mermaid to window\n    console.log(\"✅ Mermaid loaded dynamically\");\n    return window.mermaid;\n  }\n\n  /**\n   * Initialize Mermaid with proper configuration\n   * @returns {Promise<void>}\n   */\n  static async initializeMermaid() {\n    await this.loadMermaidScript();\n\n    // Configure Mermaid with proper DOM context\n    window.mermaid.initialize({\n      startOnLoad: false,\n      theme: \"default\",\n      securityLevel: \"loose\",\n      fontFamily: \"Arial, sans-serif\",\n      // Ensure proper DOM context\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true,\n      },\n      // Set the document context explicitly\n      deterministicIds: true,\n      deterministicIDSeed: \"mermaid-diagram-preview\",\n    });\n\n    // Ensure mermaid has access to document\n    if (window.mermaid.setConfig) {\n      window.mermaid.setConfig({\n        securityLevel: \"loose\",\n        theme: \"default\",\n      });\n    }\n  }\n\n  /**\n   * Render a single Mermaid diagram\n   * @param {string} diagramId - Unique ID for the diagram\n   * @param {string} mermaidCode - Mermaid diagram code\n   * @param {HTMLElement} container - Container element\n   * @returns {Promise<void>}\n   */\n  static async renderDiagram(diagramId, mermaidCode, container) {\n    try {\n      // 🧹 Làm sạch code trước\n      const cleanCode = this.cleanMermaidCode(mermaidCode);\n      console.log(\"🧹 Cleaned Mermaid code for rendering:\", cleanCode);\n\n      // 🧩 Kiểm tra hợp lệ\n      if (!this.validateMermaidCode(cleanCode)) {\n        throw new Error(\"Invalid Mermaid syntax after cleaning\");\n      }\n      if (!container || container.nodeType !== Node.ELEMENT_NODE) {\n        throw new Error(\"Invalid container for Mermaid diagram\");\n      }\n\n      // ⚙️ Đảm bảo Mermaid đã sẵn sàng\n      if (!window.mermaid || typeof window.mermaid.render !== \"function\") {\n        throw new Error(\"Mermaid render function not available\");\n      }\n\n      // 🚫 Ngăn chèn SVG lỗi vào body bằng container ảo\n      const tempContainer = document.createElement(\"div\");\n      tempContainer.style.position = \"absolute\";\n      tempContainer.style.left = \"-9999px\";\n      tempContainer.style.top = \"-9999px\";\n      tempContainer.style.visibility = \"hidden\";\n      document.body.appendChild(tempContainer);\n\n      try {\n        let svgCode;\n\n        // ⚡ API hiện đại (Promise-based)\n        const renderResult = await window.mermaid.render(\n          diagramId,\n          cleanCode,\n          tempContainer\n        );\n\n        // Xử lý các kiểu trả về khác nhau\n        if (typeof renderResult === \"string\") {\n          svgCode = renderResult;\n        } else if (renderResult && renderResult.svg) {\n          svgCode = renderResult.svg;\n        } else {\n          svgCode = tempContainer.innerHTML;\n        }\n\n        // ✅ Gán SVG vào container thực tế\n        container.innerHTML = svgCode;\n        console.log(\"✅ Mermaid diagram rendered successfully!\");\n      } catch (renderError) {\n        console.error(\"❌ Mermaid render error:\", renderError);\n        this.showMermaidError(container, mermaidCode, renderError);\n      } finally {\n        // 🧹 Dọn container ảo để tránh chèn SVG rác\n        if (tempContainer && tempContainer.parentNode) {\n          tempContainer.remove();\n        }\n      }\n    } catch (error) {\n      console.error(\"❌ Mermaid render error (outer):\", error);\n      this.showMermaidError(container, mermaidCode, error);\n    }\n  }\n\n  /**\n   * Show Mermaid error in a nice format\n   * @param {HTMLElement} container - Container element\n   * @param {string} text - Mermaid code that failed\n   * @param {Error} error - Error object\n   */\n  static showMermaidError(container, text, error) {\n    // Validate container before attempting to set innerHTML\n    if (\n      !container ||\n      !container.nodeType ||\n      container.nodeType !== Node.ELEMENT_NODE\n    ) {\n      console.error(\n        \"❌ Invalid container for Mermaid error display:\",\n        container\n      );\n      console.error(\"❌ Mermaid error details:\", {\n        message: error.message || \"Unknown error occurred\",\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\n      });\n      return;\n    }\n\n    // Check if container is still in the DOM\n    if (!document.contains(container)) {\n      console.error(\"❌ Container is not in DOM, cannot display Mermaid error\");\n      console.error(\"❌ Mermaid error details:\", {\n        message: error.message || \"Unknown error occurred\",\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\n      });\n      return;\n    }\n\n    try {\n      container.innerHTML = `\n        <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\n          <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\n            <span style=\"margin-right: 8px;\">⚠️</span>\n            Mermaid Render Error\n          </div>\n          <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\n            ${error.message || \"Unknown error occurred\"}\n          </div>\n          <details style=\"margin-top: 10px;\">\n            <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\n            <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${\n              text || \"No code provided\"\n            }</pre>\n          </details>\n        </div>\n      `;\n    } catch (setInnerHTMLError) {\n      console.error(\n        \"❌ Failed to set error HTML in container:\",\n        setInnerHTMLError\n      );\n      console.error(\"❌ Original Mermaid error:\", {\n        message: error.message || \"Unknown error occurred\",\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\n      });\n    }\n  }\n\n  /**\n   * Detect Mermaid diagram type from code\n   * @param {string} code - Mermaid diagram code\n   * @returns {string} Diagram type\n   */\n  static detectMermaidType(code) {\n    const firstLine = code.trim().split(\"\\n\")[0].toLowerCase();\n    if (firstLine.includes(\"graph\")) return \"graph\";\n    if (firstLine.includes(\"flowchart\")) return \"flowchart\";\n    if (firstLine.includes(\"sequencediagram\")) return \"sequence\";\n    if (firstLine.includes(\"classDiagram\")) return \"class\";\n    if (firstLine.includes(\"stateDiagram\")) return \"state\";\n    if (firstLine.includes(\"erDiagram\")) return \"er\";\n    if (firstLine.includes(\"gantt\")) return \"gantt\";\n    if (firstLine.includes(\"pie\")) return \"pie\";\n    return \"graph\";\n  }\n\n  /**\n   * Extract Mermaid diagrams from Confluence content\n   * @param {string} content - Confluence storage format content\n   * @returns {Array} Array of diagram objects\n   */\n  static extractMermaidDiagrams(content) {\n    const diagrams = [];\n    const diagramsMap = new Map();\n\n    if (!content) return { diagrams, diagramsMap };\n\n    // Regex to find all <ac:structured-macro ...> ... </ac:structured-macro>\n    const macroRegex =\n      /<ac:structured-macro[^>]*ac:name=\"(mermaid|code)\"[^>]*>([\\s\\S]*?)<\\/ac:structured-macro>/gi;\n\n    let match;\n    let index = 0;\n\n    while ((match = macroRegex.exec(content)) !== null) {\n      const macroName = match[1];\n      const macroContent = match[2];\n\n      // Check code parameter\n      const codeMatch = macroContent.match(\n        /<ac:parameter[^>]*ac:name=\"code\">([\\s\\S]*?)<\\/ac:parameter>/\n      );\n      if (!codeMatch) continue;\n\n      const code = codeMatch[1].trim();\n      if (!code) continue;\n\n      // If it's code macro, check language\n      if (macroName === \"code\") {\n        const langMatch = macroContent.match(\n          /<ac:parameter[^>]*ac:name=\"language\">([\\s\\S]*?)<\\/ac:parameter>/\n        );\n        if (!langMatch || langMatch[1].trim() !== \"mermaid\") continue;\n      }\n\n      const type = this.detectMermaidType(code);\n      const diagramId = `mermaid-diagram-${index}`;\n\n      const diagramRecord = {\n        id: diagramId,\n        code: code,\n        originalCode: code,\n        originalMatch: match[0],\n        index: index,\n        type: type,\n        title: `${type.charAt(0).toUpperCase() + type.slice(1)} Diagram ${\n          index + 1\n        }`,\n      };\n\n      diagrams.push(diagramRecord);\n      diagramsMap.set(diagramId, {\n        content: code,\n        type: type,\n        index: index,\n        title: diagramRecord.title,\n      });\n\n      console.log(`✅ Extracted diagram ${index}:`, {\n        type,\n        code: code.substring(0, 50) + \"...\",\n      });\n\n      index++;\n    }\n\n    console.log(\"🎨 Extracted Mermaid diagrams:\", diagrams);\n    return { diagrams, diagramsMap };\n  }\n\n  /**\n   * Clean Mermaid code - remove unwanted characters and normalize\n   * @param {string} code - Raw Mermaid code\n   * @returns {string} Cleaned code\n   */\n  static cleanMermaidCode(code) {\n    if (!code) return \"\";\n\n    // Remove HTML entities\n    let cleaned = code\n      .replace(/&lt;/g, \"<\")\n      .replace(/&gt;/g, \">\")\n      .replace(/&amp;/g, \"&\")\n      .replace(/&quot;/g, '\"')\n      .replace(/&#39;/g, \"'\");\n\n    // Remove CDATA sections\n    cleaned = cleaned.replace(/<!\\[CDATA\\[(.*?)\\]\\]>/gs, \"$1\");\n\n    // Remove HTML tags\n    cleaned = cleaned.replace(/<[^>]*>/g, \"\");\n\n    // Normalize whitespace\n    cleaned = cleaned.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n\n    // Remove excessive whitespace but preserve structure\n    cleaned = cleaned.replace(/\\n\\s*\\n\\s*\\n/g, \"\\n\\n\");\n\n    // Trim\n    cleaned = cleaned.trim();\n\n    return cleaned;\n  }\n\n  /**\n   * Validate Mermaid code syntax\n   * @param {string} code - Mermaid code to validate\n   * @returns {boolean} True if valid\n   */\n  static validateMermaidCode(code) {\n    if (!code || !code.trim()) {\n      return false;\n    }\n\n    const trimmed = code.trim();\n\n    // Check for valid Mermaid diagram types\n    const validStarters = [\n      \"graph\",\n      \"flowchart\",\n      \"sequenceDiagram\",\n      \"classDiagram\",\n      \"stateDiagram\",\n      \"erDiagram\",\n      \"journey\",\n      \"gantt\",\n      \"pie\",\n      \"gitgraph\",\n      \"mindmap\",\n      \"timeline\",\n      \"sankey\",\n      \"requirement\",\n    ];\n\n    const hasValidStarter = validStarters.some((starter) =>\n      trimmed.toLowerCase().startsWith(starter.toLowerCase())\n    );\n\n    if (!hasValidStarter) {\n      return false;\n    }\n\n    // Check for common syntax issues\n    if (trimmed.includes(\"undefined\") || trimmed.includes(\"null\")) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","/**\n * Diagram processing utilities for Confluence page creation\n * Ported from extension/src/api/api.ts and extension/src/utils/mermaidExporter.ts\n */\n\n/**\n * DiagramData interface equivalent for JavaScript\n * @typedef {Object} DiagramData\n * @property {string} filename - The filename for the diagram\n * @property {string} macroId - The macro ID\n * @property {string} diagramCode - The mermaid diagram code\n * @property {string} [svg] - The SVG content\n * @property {string} [png] - The PNG base64 content\n */\n\n/**\n * Extract diagrams from Confluence storage format - EXACT copy from extension\n * @param {string} storage - The storage format content\n * @returns {DiagramData[]} Array of extracted diagrams\n */\nexport function getDiagramConfluenceStyles(storage) {\n  let macroCounter = 1;\n  const extractedDiagrams = [];\n  \n  // Find all mermaid macros in storage content\n  const mermaidRegex = /<ac:structured-macro[^>]*ac:name=\"mermaid\"[^>]*>[\\s\\S]*?<ac:parameter[^>]*ac:name=\"code\"[^>]*>(?:<!\\[CDATA\\[([\\s\\S]*?)\\]\\]>|([\\s\\S]*?))<\\/ac:parameter>[\\s\\S]*?<\\/ac:structured-macro>/g;\n  \n  let match;\n  while ((match = mermaidRegex.exec(storage)) !== null) {\n    const code = (match[1] || match[2] || '').trim();\n    \n    if (code) {\n      extractedDiagrams.push({\n        filename: `k-tool-diagram-${macroCounter}`,\n        macroId: (110 + macroCounter).toString(),\n        diagramCode: code\n      });\n      macroCounter++;\n    }\n  }\n\n  return extractedDiagrams;\n}\n\n/**\n * Load mermaid script dynamically if not already loaded\n * @returns {Promise<void>}\n */\nasync function loadMermaidScript() {\n  if (typeof window !== 'undefined' && window.mermaid) {\n    return; // Already loaded\n  }\n\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.src = 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.min.js';\n    script.onload = () => {\n      // Initialize mermaid\n      if (window.mermaid) {\n        window.mermaid.initialize({ \n          startOnLoad: false, \n          securityLevel: 'loose',\n          theme: 'default'\n        });\n      }\n      resolve();\n    };\n    script.onerror = reject;\n    document.head.appendChild(script);\n  });\n}\n\n/**\n * Convert diagram code to SVG and PNG using mermaid - EXACT copy from extension\n * @param {DiagramData} diagram - The diagram data\n * @returns {Promise<DiagramData>} The diagram with SVG and PNG data\n */\nexport async function convertDiagramToSvgPng(diagram) {\n  try {\n    console.log(`🎨 Converting diagram to SVG/PNG: ${diagram.filename}`);\n    console.log(`🎨 Converting diagram to SVG/PNG: ${diagram.diagramCode}`);\n\n    // Ensure mermaid is loaded\n    await loadMermaidScript();\n\n    // Use mermaid to render SVG\n    const svgResult = await window.mermaid.render(`diagram-${diagram.macroId}`, diagram.diagramCode);\n    \n    // Handle different return types from mermaid.render\n    let svgContent;\n    if (typeof svgResult === 'string') {\n      svgContent = svgResult;\n    } else if (svgResult && typeof svgResult === 'object' && svgResult.svg) {\n      svgContent = svgResult.svg;\n    } else {\n      throw new Error('Invalid SVG result from mermaid.render');\n    }\n    \n    diagram.svg = svgContent;\n    \n    // Convert SVG to PNG using canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    \n    await new Promise((resolve, reject) => {\n      img.onload = () => {\n        canvas.width = img.width || 800;\n        canvas.height = img.height || 600;\n        \n        if (ctx) {\n          ctx.fillStyle = 'white';\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0);\n          diagram.png = canvas.toDataURL('image/png').split(',')[1]; // Remove data:image/png;base64,\n        }\n        resolve(true);\n      };\n      \n      img.onerror = reject;\n      img.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgContent)));\n    });\n    \n    console.log(`✅ Successfully converted ${diagram.filename} to SVG/PNG`);\n    return diagram;\n    \n  } catch (error) {\n    console.error(`❌ Failed to convert diagram ${diagram.filename}:`, error);\n    \n    // Create fallback PNG data\n    diagram.png = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==';\n    return diagram;\n  }\n}\n\n/**\n * Save diagram to mermaid-cloud API - EXACT copy from extension\n * @param {DiagramData} diagram - The diagram data\n * @param {string} pageId - The page ID\n * @returns {Promise<boolean>} Success status\n */\nexport async function saveDiagramToAPI(diagram, pageId) {\n  try {\n    console.log(`💾 Saving diagram ${diagram.filename} to API for page ${pageId}`);\n    \n    const payload = {\n      filename: diagram.filename,\n      data: diagram.diagramCode,\n      svg: diagram.svg || '',\n      png: diagram.png || ''\n    };\n    \n    const response = await fetch(`/rest/mermaidrest/1.0/mermaid/${pageId}`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/javascript, */*; q=0.01',\n        'Content-Type': 'application/json; charset=UTF-8',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      body: JSON.stringify(payload)\n    });\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`❌ Failed to save diagram ${diagram.filename}:`, response.status, errorText);\n      return false;\n    }\n    \n    console.log(`✅ Successfully saved diagram ${diagram.filename} to API`);\n    return true;\n    \n  } catch (error) {\n    console.error(`❌ Error saving diagram ${diagram.filename}:`, error);\n    return false;\n  }\n}\n\n/**\n * Process all extracted diagrams and save them to API sequentially - EXACT copy from extension\n * @param {string} pageId - The page ID\n * @param {DiagramData[]} extractedDiagrams - Array of diagrams to process\n * @returns {Promise<{success: number, total: number, errors: string[]}>} Processing result\n */\nexport async function processAndSaveDiagrams(pageId, extractedDiagrams) {\n  if (extractedDiagrams.length === 0) {\n    console.log('ℹ️ No diagrams to process');\n    return { success: 0, total: 0, errors: [] };\n  }\n  \n  console.log(`🔄 Processing ${extractedDiagrams.length} diagrams for page ${pageId}`);\n  \n  let successCount = 0;\n  const errors = [];\n  const totalDiagrams = extractedDiagrams.length;\n  \n  try {\n    // Convert all diagrams to SVG/PNG first\n    console.log('🎨 Converting diagrams to SVG/PNG...');\n    const processedDiagrams = await Promise.all(\n      extractedDiagrams.map(diagram => convertDiagramToSvgPng(diagram))\n    );\n    \n    // Save diagrams sequentially (one by one)\n    console.log('💾 Saving diagrams sequentially...');\n    for (let i = 0; i < processedDiagrams.length; i++) {\n      const diagram = processedDiagrams[i];\n      console.log(`📊 Saving diagram ${i + 1}/${processedDiagrams.length}: ${diagram.filename}`);\n      \n      try {\n        const success = await saveDiagramToAPI(diagram, pageId);\n        if (success) {\n          successCount++;\n          console.log(`✅ Diagram ${i + 1}/${processedDiagrams.length} saved successfully`);\n        } else {\n          errors.push(`Failed to save diagram: ${diagram.filename}`);\n          console.error(`❌ Diagram ${i + 1}/${processedDiagrams.length} failed to save`);\n        }\n      } catch (error) {\n        const errorMsg = `Error saving diagram ${diagram.filename}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n        errors.push(errorMsg);\n        console.error(`❌ Diagram ${i + 1}/${processedDiagrams.length} error:`, error);\n      }\n      \n      // Add small delay between saves to avoid overwhelming the API\n      if (i < processedDiagrams.length - 1) {\n        await new Promise(resolve => setTimeout(resolve, 500));\n      }\n    }\n    \n  } catch (error) {\n    console.error('❌ Error during diagram processing:', error);\n    errors.push(`Processing error: ${error instanceof Error ? error.message : 'Unknown error'}`);\n  }\n  \n  const result = {\n    success: successCount,\n    total: totalDiagrams,\n    errors\n  };\n  \n  console.log(`📊 Diagram processing complete: ${successCount}/${totalDiagrams} successful`);\n  if (errors.length > 0) {\n    console.warn('⚠️ Diagram processing errors:', errors);\n  }\n  \n  return result;\n}\n","// API utilities for K-Tool Extension\nimport { API_URLS } from \"./constants.js\";\nimport {\n  getDiagramConfluenceStyles,\n  processAndSaveDiagrams,\n} from \"./diagramUtils.js\";\n\nexport class ApiClient {\n  /**\n   * Make HTTP request with error handling\n   * @param {string} url - Request URL\n   * @param {Object} options - Fetch options\n   * @returns {Promise<Object>} Response data\n   */\n  static async request(url, options = {}) {\n    try {\n      const response = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return { success: true, data };\n    } catch (error) {\n      console.error(\"API request failed:\", error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  /**\n   * Generate document from BA content\n   * @param {Object} payload - Generation payload\n   * @returns {Promise<Object>} Job response\n   */\n  static async generateDocument(payload) {\n    return await this.request(API_URLS.GEN_DOC, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n\n  /**\n   * Check generation status\n   * @param {string} jobId - Job ID to check\n   * @returns {Promise<Object>} Status response\n   */\n  static async checkStatus(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_STATUS}?job_id=${jobId}`);\n  }\n\n  /**\n   * Get generation result\n   * @param {string} jobId - Job ID to get result\n   * @returns {Promise<Object>} Result response\n   */\n  static async getResult(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_RESULT}?job_id=${jobId}`);\n  }\n\n  /**\n   * Edit text using AI\n   * @param {Object} payload - Edit payload\n   * @returns {Promise<Object>} Edit response\n   */\n  static async editText(payload) {\n    return await this.request(API_URLS.EDIT_TEXT, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n}\n\n/**\n * Confluence API utilities\n */\nexport class ConfluenceApi {\n  /**\n   * Extract page ID from Confluence URL\n   * @param {string} url - Confluence page URL\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageId(url) {\n    const patterns = [/\\/pages\\/(\\d+)/, /pageId=(\\d+)/, /\\/(\\d+)$/];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Get current space key from page\n   * @returns {string|null} Space key or null\n   */\n  static getCurrentSpaceKey() {\n    // Try to get space key from various sources\n    const spaceKeyMeta = document.querySelector('meta[name=\"ajs-space-key\"]');\n    if (spaceKeyMeta) return spaceKeyMeta.content;\n\n    const spaceKeyElement = document.querySelector(\"[data-space-key]\");\n    if (spaceKeyElement) return spaceKeyElement.dataset.spaceKey;\n\n    // Try to extract from URL\n    const urlMatch = window.location.pathname.match(/\\/spaces\\/([^\\/]+)/);\n    if (urlMatch) return urlMatch[1];\n\n    return null;\n  }\n\n  /**\n   * Fetch page content from Confluence\n   * @param {string} pageId - Page ID to fetch\n   * @returns {Promise<Object>} Page content with title, content (view), and storageFormat\n   */\n  static async fetchPageContent(pageId) {\n    try {\n      console.log(\"🔍 Fetching Confluence content for pageId:\", pageId);\n\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage,body.view`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Content data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n        hasView: !!data.body?.view?.value,\n      });\n\n      return {\n        title: data.title,\n        content: data.body?.view?.value || \"\",\n        storageFormat: data.body?.storage?.value || \"\",\n      };\n    } catch (error) {\n      console.error(\"❌ Error fetching Confluence content:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clone template from URL for document generation\n   * @param {string} url - Template URL\n   * @returns {Promise<Object>} Cloned template data\n   */\n  static async cloneTemplateForGeneration(url) {\n    try {\n      console.log(\"🔍 Cloning template from URL:\", url);\n\n      if (!url || !url.trim()) {\n        console.error(\"❌ Empty URL provided\");\n        throw new Error(\"URL template không được để trống\");\n      }\n\n      // Extract pageId from URL\n      const pageId = this.extractPageIdFromUrl(url);\n      if (!pageId) {\n        console.error(\"❌ No pageId found in URL\");\n        throw new Error(\n          \"URL không chứa pageId hợp lệ. Vui lòng kiểm tra lại URL template.\"\n        );\n      }\n\n      console.log(\"📋 Fetching template pageId:\", pageId);\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Template data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n      });\n\n      if (!data.body?.storage?.value) {\n        console.error(\"❌ No storage content found in response\");\n        throw new Error(\"Template không có nội dung storage format\");\n      }\n\n      const originalStorageFormat = data.body.storage.value;\n      console.log(\n        \"📄 Original storage format length:\",\n        originalStorageFormat.length\n      );\n\n      const { templateStructure, analysisInfo } = this.extractTemplateStructure(\n        originalStorageFormat\n      );\n\n      const result = {\n        title: data.title,\n        originalStorageFormat,\n        templateStructure,\n        analysisInfo,\n      };\n\n      console.log(\"✅ Template cloned successfully:\", {\n        title: result.title,\n        originalLength: originalStorageFormat.length,\n        structureLength: templateStructure.length,\n        analysis: analysisInfo,\n      });\n\n      return result;\n    } catch (error) {\n      console.error(\"❌ Error cloning template:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Extract template structure and analyze placeholders\n   * @param {string} storageFormat - Original storage format\n   * @returns {Object} Template structure and analysis info\n   */\n  static extractTemplateStructure(storageFormat) {\n    let emptyParagraphs = 0;\n    let emptyTableCells = 0;\n    let placeholders = 0;\n\n    console.log(\"🔍 Extracting template structure...\");\n\n    const placeholderPatterns = [\n      /(<<.*?>>)/g,\n      /(\\{\\{.*?\\}\\})/g,\n      /(&lt;&lt;.*?&gt;&gt;)/g,\n      /(\\u003c\\u003c.*?\\u003e\\u003e)/g,\n    ];\n\n    let structure = storageFormat;\n\n    placeholderPatterns.forEach((regex, index) => {\n      const matches = [...structure.matchAll(regex)];\n      console.log(\n        `🎯 Placeholder pattern ${index + 1} found ${matches.length} matches`\n      );\n      placeholders += matches.length;\n    });\n\n    // Count empty paragraphs and table cells\n    emptyParagraphs = (storageFormat.match(/<p[^>]*>\\s*<\\/p>/g) || []).length;\n    emptyTableCells = (storageFormat.match(/<td[^>]*>\\s*<\\/td>/g) || []).length;\n\n    const analysisInfo = {\n      emptyParagraphs,\n      emptyTableCells,\n      placeholders,\n      totalLength: storageFormat.length,\n    };\n\n    return {\n      templateStructure: structure,\n      analysisInfo,\n    };\n  }\n\n  /**\n   * Extract pageId from various URL formats\n   * @param {string} url - URL to extract pageId from\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageIdFromUrl(url) {\n    const patterns = [\n      /\\/pages\\/(\\d+)/,\n      /pageId=(\\d+)/,\n      /\\/(\\d+)$/,\n      /viewpage\\.action\\?pageId=(\\d+)/,\n    ];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Extract placeholders from content (<<placeholder>> format)\n   * @param {string} content - Content to analyze\n   * @returns {Array} Array of placeholder strings\n   */\n  static extractPlaceholders(content) {\n    console.log(\"🔍 Analyzing content for placeholders...\");\n    console.log(\"📄 Content length:\", content.length);\n    console.log(\n      \"📄 Content preview (first 500 chars):\",\n      content.substring(0, 500)\n    );\n\n    // Helper function to decode HTML entities\n    const decodeHtmlEntities = (str) => {\n      return str\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\")\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\");\n    };\n\n    const decodedContent = decodeHtmlEntities(content);\n\n    // Patterns to find placeholders\n    const patterns = [\n      /<<([^>]+)>>/g, // Normal <<placeholder>>\n      /&lt;&lt;([^&]+)&gt;&gt;/g, // HTML encoded &lt;&lt;placeholder&gt;&gt;\n    ];\n\n    let allMatches = [];\n\n    // Test patterns on both original and decoded content\n    [content, decodedContent].forEach((testContent, contentIndex) => {\n      console.log(\n        `🔍 Testing on ${\n          contentIndex === 0 ? \"original\" : \"decoded\"\n        } content...`\n      );\n\n      patterns.forEach((regex, patternIndex) => {\n        const matches = [...testContent.matchAll(regex)];\n        console.log(\n          `🎯 Pattern ${patternIndex + 1} found ${matches.length} matches:`,\n          matches.map((m) => m[0])\n        );\n\n        if (patternIndex === 1) {\n          // For HTML encoded, decode back to normal format\n          allMatches.push(...matches.map((match) => `<<${match[1]}>>`));\n        } else {\n          allMatches.push(...matches.map((match) => match[0]));\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePlaceholders = [...new Set(allMatches)];\n    console.log(\"🎯 Unique placeholders found:\", uniquePlaceholders);\n\n    return uniquePlaceholders;\n  }\n\n  /**\n   * Extract images from HTML content and convert to base64\n   * @param {string} html - HTML content\n   * @returns {Promise<Array>} Array of image objects with base64 data\n   */\n  static async extractImagesFromHtml(html) {\n    const images = [];\n    try {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      const imgTags = doc.querySelectorAll(\"img\");\n\n      for (const img of Array.from(imgTags)) {\n        const src = img.getAttribute(\"src\");\n        let filename = undefined;\n\n        if (src) {\n          let base64src = src;\n\n          if (!src.startsWith(\"data:image\")) {\n            // Convert URL to base64 and get filename\n            const { base64, filename: fname } = await this.urlToBase64(src);\n            if (base64) {\n              base64src = base64;\n              filename = fname;\n            } else continue; // skip if failed\n          } else {\n            // If already base64, get name from alt or set default\n            filename = img.getAttribute(\"alt\")\n              ? img.getAttribute(\"alt\") + \".png\"\n              : `image_${Date.now()}.png`;\n          }\n\n          images.push({\n            src: base64src,\n            alt: img.getAttribute(\"alt\") || undefined,\n            filename,\n          });\n        }\n      }\n    } catch (e) {\n      console.warn(\"extractImagesFromHtml error:\", e);\n    }\n    return images;\n  }\n\n  /**\n   * Convert image URL to base64\n   * @param {string} url - Image URL\n   * @returns {Promise<Object>} Object with base64 data and filename\n   */\n  static async urlToBase64(url) {\n    try {\n      const response = await fetch(url);\n      if (!response.ok)\n        return { base64: null, filename: this.getFilenameFromUrl(url) };\n\n      const blob = await response.blob();\n      const filename = this.getFilenameFromUrl(url);\n\n      return await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({ base64: reader.result, filename });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n      });\n    } catch (e) {\n      console.warn(\"urlToBase64 error:\", e);\n      return { base64: null, filename: this.getFilenameFromUrl(url) };\n    }\n  }\n\n  /**\n   * Get filename from URL\n   * @param {string} url - URL to extract filename from\n   * @returns {string} Filename\n   */\n  static getFilenameFromUrl(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n      return (\n        pathname.substring(pathname.lastIndexOf(\"/\") + 1) ||\n        `image_${Date.now()}`\n      );\n    } catch {\n      return `image_${Date.now()}`;\n    }\n  }\n\n  /**\n   * Validate and clean page title to prevent font/encoding issues\n   */\n  static validateAndCleanTitle(title) {\n    return (\n      title\n        // Remove control characters and invalid XML characters\n        .replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, \"\")\n        // Fix common encoding issues\n        .replace(/â€™/g, \"'\")\n        .replace(/â€œ/g, '\"')\n        .replace(/â€/g, '\"')\n        .replace(/â€¦/g, \"...\")\n        // Clean up whitespace\n        .replace(/\\s+/g, \" \")\n        .trim() ||\n      // Ensure title is not empty and has reasonable length\n      `Generated Document - ${new Date().toLocaleDateString()}`\n    );\n  }\n\n  /**\n   * Ensure UTF-8 encoding for content\n   */\n  static ensureUtf8Encoding(content) {\n    try {\n      // Try to encode and decode to ensure proper UTF-8\n      const encoder = new TextEncoder();\n      const decoder = new TextDecoder(\"utf-8\", { fatal: false });\n      const encoded = encoder.encode(content);\n      return decoder.decode(encoded);\n    } catch (error) {\n      console.warn(\"UTF-8 encoding issue, using original content:\", error);\n      return content;\n    }\n  }\n\n  /**\n   * Basic content cleanup - EXACT copy from extension/src/api/api.ts\n   */\n  static basicContentCleanup(content) {\n    return (\n      content\n        // Remove code block prefixes\n        .replace(/^```\\w*\\s*/g, \"\")\n        .replace(/```\\s*$/g, \"\")\n        .trim()\n\n        // Enhanced character cleanup for Vietnamese and UTF-8\n        .replace(/^\\uFEFF/, \"\") // Remove BOM\n        .replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, \"\") // Remove control characters\n\n        // Fix common encoding issues\n        .replace(/â€™/g, \"'\") // Smart apostrophe\n        .replace(/â€œ/g, '\"') // Smart quote open\n        .replace(/â€/g, '\"') // Smart quote close\n        .replace(/â€¦/g, \"...\") // Ellipsis\n        .replace(/â€\"/g, \"–\") // En dash\n        .replace(/â€\"/g, \"—\") // Em dash\n\n        // Clean up line breaks and whitespace\n        .replace(/\\r\\n/g, \"\\n\")\n        .replace(/\\r/g, \"\\n\")\n        .replace(/\\n{3,}/g, \"\\n\\n\") // Max 2 consecutive line breaks\n        .replace(/[ \\t]+$/gm, \"\") // Remove trailing whitespace from lines\n        .replace(/^[ \\t]+/gm, \"\") // Remove leading whitespace from lines (but preserve structure)\n        .trim()\n    );\n  }\n\n  /**\n   * Advanced HTML sanitization - EXACT copy from extension/src/api/api.ts\n   */\n  static advancedHTMLSanitization(content) {\n    console.log(\"🔬 Starting advanced HTML sanitization...\");\n\n    // Step 1: Preprocess content to fix obvious issues\n    let processedContent = content\n      // Fix unclosed self-closing tags first\n      .replace(\n        /<(br|hr|img|input|meta|link|area|base|col|embed|source|track|wbr)([^>]*?)(?<!\\/)\\s*>/gi,\n        \"<$1$2/>\"\n      )\n      // Ensure proper quotes around attributes\n      .replace(/(\\w+)=([^\"\\s>]+)(\\s|>)/g, '$1=\"$2\"$3')\n      // Fix common encoding issues before processing\n      .replace(/&(?![a-zA-Z0-9#]+;)/g, \"&amp;\")\n      // Remove any null bytes or control characters\n      .replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, \"\")\n      // Fix common Vietnamese encoding issues\n      .replace(/â€™/g, \"'\")\n      .replace(/â€œ/g, '\"')\n      .replace(/â€/g, '\"');\n\n    // Step 2: Basic structure validation and cleanup\n    let finalHTML = processedContent\n      // Remove empty tags that could cause issues (but keep non-breaking spaces)\n      .replace(/<(\\w+)([^>]*?)>\\s*<\\/\\1>/g, (match, tagName) => {\n        // Keep paragraph and cell tags with nbsp\n        if ([\"p\", \"td\", \"th\", \"li\"].includes(tagName.toLowerCase())) {\n          return `<${tagName}>&nbsp;</${tagName}>`;\n        }\n        return \"\"; // Remove other empty tags\n      })\n      .replace(/>\\s+</g, \"><\") // Remove spaces between tags\n      .replace(/\\s+/g, \" \") // Normalize whitespace\n      .trim();\n\n    console.log(\"✅ Advanced HTML sanitization complete\");\n    console.log(\n      `📊 Original length: ${content.length}, Final length: ${finalHTML.length}`\n    );\n\n    return finalHTML;\n  }\n\n  /**\n   * Convert all macros to mermaid-cloud macros - EXACT copy from extension/src/api/api.ts\n   */\n  static convertToMermaidCloudMacros(content) {\n    console.log(\"🔄 Converting all macros to mermaid-cloud macros...\");\n    let macroCounter = 1;\n    let macroId = 111;\n\n    // Replace all structured macros (mermaid, code, etc.) with mermaid-cloud macros\n    const convertedContent = content.replace(\n      /<ac:structured-macro[^>]*>[\\s\\S]*?<\\/ac:structured-macro>/g,\n      (match) => {\n        const filename = `k-tool-diagram-${macroCounter}`;\n        const currentId = macroId.toString();\n        macroCounter++;\n        macroId++;\n\n        console.log(\n          `🔧 Converting macro ${\n            macroCounter - 1\n          } to mermaid-cloud: ${filename}`\n        );\n\n        return `<ac:structured-macro ac:name=\"mermaid-cloud\" ac:schema-version=\"1\" ac:macro-id=\"${currentId}\">\n<ac:parameter ac:name=\"toolbar\">bottom</ac:parameter>\n<ac:parameter ac:name=\"filename\">${filename}</ac:parameter>\n<ac:parameter ac:name=\"format\">svg</ac:parameter>\n<ac:parameter ac:name=\"zoom\">fit</ac:parameter>\n<ac:parameter ac:name=\"revision\">1</ac:parameter>\n</ac:structured-macro>`;\n      }\n    );\n\n    console.log(`✅ Converted ${macroCounter - 1} macros to mermaid-cloud`);\n    return convertedContent;\n  }\n\n  /**\n   * Validate and fix XML content specifically for Confluence storage format\n   */\n  static validateAndFixXML(content) {\n    let fixed = content;\n\n    console.log(\"🔍 Validating and fixing XML content...\");\n\n    // Fix the specific issue mentioned in error: spaces in tag names\n    fixed = fixed\n      // Remove spaces at the beginning of tag names\n      .replace(/<\\s+([a-zA-Z])/g, \"<$1\")\n      // Remove spaces at the end of tag names (before attributes or closing >)\n      .replace(/([a-zA-Z])\\s+([^>]*>)/g, \"$1 $2\")\n      // Fix spaces in closing tags\n      .replace(/<\\/\\s+([a-zA-Z][^>]*?)>/g, \"</$1>\")\n      // Fix malformed attributes with spaces\n      .replace(/([a-zA-Z-]+)\\s*=\\s*\"([^\"]*)\"/g, '$1=\"$2\"')\n      // Remove multiple consecutive spaces in content\n      .replace(/\\s{2,}/g, \" \")\n      // Fix line breaks that might cause parsing issues\n      .replace(/\\r\\n/g, \"\\n\")\n      .replace(/\\r/g, \"\\n\");\n\n    // Validate specific Confluence storage format requirements\n    fixed = fixed\n      // Ensure proper ac: namespace usage\n      .replace(/<ac:([^>]+)>/g, (match, content) => {\n        return `<ac:${content.trim()}>`;\n      })\n      // Fix structured macro formatting\n      .replace(/<ac:structured-macro\\s+([^>]+)>/g, (match, attrs) => {\n        const cleanAttrs = attrs.trim().replace(/\\s+/g, \" \");\n        return `<ac:structured-macro ${cleanAttrs}>`;\n      })\n      // Ensure CDATA sections are properly formatted\n      .replace(/<!\\[CDATA\\[\\s*([\\s\\S]*?)\\s*\\]\\]>/g, \"<![CDATA[$1]]>\");\n\n    console.log(\"✅ XML validation and fixing complete\");\n    return fixed;\n  }\n\n  /**\n   * Create new Confluence page - EXACT copy logic from createPageFromGeneratedContent\n   * @param {string} title - Page title\n   * @param {string} fullStorageFormat - Page content (storage format)\n   * @param {string} spaceKey - Space key\n   * @param {string} parentPageId - Parent page ID (optional)\n   * @returns {Promise<void>} No return value, same as createPageFromGeneratedContent\n   */\n  static async createPage(\n    title,\n    fullStorageFormat,\n    spaceKey,\n    parentPageId = null\n  ) {\n    try {\n      console.log(\"🔄 Creating page from generated content...\");\n\n      // Step 0: Validate and clean title\n      const cleanTitle = this.validateAndCleanTitle(title);\n      console.log(\"📋 Original title:\", title);\n      console.log(\"📋 Clean title:\", cleanTitle);\n      console.log(\"📋 Space:\", spaceKey);\n      console.log(\"📋 Content length:\", fullStorageFormat.length);\n\n      // Step 0.5: Ensure UTF-8 encoding\n      const utf8Content = this.ensureUtf8Encoding(fullStorageFormat);\n      console.log(\"🔤 UTF-8 validation complete\");\n\n      // Show content preview for debugging\n      console.log(\"📄 Content preview (first 200 chars):\");\n      console.log(utf8Content.substring(0, 200));\n\n      // Step 1: Enhanced content cleanup with Vietnamese support\n      console.log(\"🧹 Starting enhanced content cleanup...\");\n      let processedContent = this.basicContentCleanup(utf8Content);\n\n      // Step 2: Advanced HTML sanitization and validation\n      console.log(\"🔬 Performing advanced HTML sanitization...\");\n      processedContent = this.advancedHTMLSanitization(processedContent);\n\n      // Step 3: Convert all macros to mermaid-cloud macros\n      console.log(\"🔄 Converting macros to mermaid-cloud...\");\n      processedContent = this.convertToMermaidCloudMacros(processedContent);\n\n      const finalContent = processedContent;\n      console.log(\"✅ Content processing complete\");\n      console.log(\"📄 Final content length:\", finalContent.length);\n      console.log(\"📄 Final content preview (first 200 chars):\");\n      console.log(finalContent.substring(0, 200));\n\n      // Create the page payload with clean title\n      const createPayload = {\n        type: \"page\",\n        title: cleanTitle.trim() + \"-\" + Date.now(), // Use clean title with timestamp\n        space: { key: spaceKey },\n        body: {\n          storage: {\n            value: finalContent,\n            representation: \"storage\",\n          },\n        },\n      };\n\n      // Add parent page if specified\n      if (parentPageId) {\n        createPayload.ancestors = [{ id: parentPageId }];\n        console.log(\"📁 Setting parent page ID:\", parentPageId);\n      }\n\n      console.log(\"📤 Sending page creation request...\");\n      const response = await fetch(\"/rest/api/content\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\",\n          \"X-Atlassian-Token\": \"no-check\",\n        },\n        body: JSON.stringify(createPayload),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ Page creation failed:\", errorText);\n\n        let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n\n        try {\n          const errorJson = JSON.parse(errorText);\n          if (errorJson.message) {\n            errorMessage = errorJson.message;\n          }\n\n          if (errorJson.errors && Array.isArray(errorJson.errors)) {\n            const detailedErrors = errorJson.errors\n              .map(\n                (err) =>\n                  `${err.field || \"Unknown field\"}: ${err.message || err}`\n              )\n              .join(\"\\n\");\n            errorMessage += `\\n\\nDetailed errors:\\n${detailedErrors}`;\n          }\n        } catch (parseError) {\n          console.warn(\"Could not parse error response as JSON\");\n          errorMessage += `\\n\\nRaw error: ${errorText}`;\n        }\n\n        throw new Error(errorMessage);\n      }\n\n      const result = await response.json();\n      console.log(\"✅ Page created successfully!\");\n      console.log(\"📄 Page ID:\", result.id);\n      console.log(\"🔗 Page URL:\", result._links?.webui);\n\n      let finalMessage = `✅ Tạo tài liệu thành công!\\n\\nTiêu đề: ${result.title}\\nPage ID: ${result.id}`;\n      const extractedDiagrams = getDiagramConfluenceStyles(fullStorageFormat);\n      console.log(\n        `📊 Extracted ${extractedDiagrams.length} diagrams from content`\n      );\n      // Process and save diagrams after page creation\n      if (extractedDiagrams.length > 0) {\n        console.log(\"🎨 Processing extracted diagrams...\");\n        const diagramResult = await processAndSaveDiagrams(\n          result.id,\n          extractedDiagrams\n        );\n\n        // Add diagram processing result to message\n        if (diagramResult.total > 0) {\n          finalMessage += `\\n\\n📊 Diagrams: ${diagramResult.success}/${diagramResult.total} saved successfully`;\n\n          if (diagramResult.errors.length > 0) {\n            finalMessage += `\\n⚠️ Diagram errors:\\n${diagramResult.errors.join(\n              \"\\n\"\n            )}`;\n          }\n        }\n      }\n\n      // Show final result after everything is complete\n      if (typeof window !== \"undefined\" && window[\"KToolNotificationUtils\"]) {\n        window[\"KToolNotificationUtils\"].success(\n          \"Trang đã được tạo thành công!\",\n          finalMessage.replace(/^✅\\s*/, \"\")\n        );\n      }\n\n      if (result._links?.webui) {\n        const fullUrl = `${window.location.origin}${result._links.webui}`;\n        window.open(fullUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"❌ Error creating page:\", error);\n\n      let userMessage = \"Lỗi khi tạo trang Confluence.\";\n\n      if (error instanceof Error) {\n        if (error.message.includes(\"validation failed\")) {\n          userMessage = `❌ Nội dung không hợp lệ:\\n\\n${error.message}`;\n        } else if (error.message.includes(\"HTTP 400\")) {\n          userMessage =\n            \"❌ Dữ liệu không hợp lệ. Vui lòng kiểm tra lại nội dung.\";\n        } else if (error.message.includes(\"HTTP 401\")) {\n          userMessage = \"❌ Không có quyền truy cập. Vui lòng đăng nhập lại.\";\n        } else if (error.message.includes(\"HTTP 403\")) {\n          userMessage = \"❌ Không có quyền tạo trang trong space này.\";\n        } else {\n          userMessage = `❌ ${error.message}`;\n        }\n      }\n\n      if (typeof window !== \"undefined\" && window[\"KToolNotificationUtils\"]) {\n        window[\"KToolNotificationUtils\"].error(\n          \"Lỗi tạo trang\",\n          userMessage.replace(/^❌\\s*/, \"\")\n        );\n      }\n      throw error;\n    }\n  }\n}\n","// K-Tool Extension Constants\nexport const EXTENSION_SETTINGS_KEY = \"extensionSettings\";\n\n// API URLs\nconst isLocal = true;\nconst rootUrl = isLocal\n  ? \"http://localhost:5001\"\n  : \"https://gendoc.thangnotes.dev\";\n\nexport const API_URLS = {\n  GEN_DOC: `${rootUrl}/api/generate-full-confluence-doc`,\n  GEN_DOC_STATUS: `${rootUrl}/api/generate-status`,\n  GEN_DOC_RESULT: `${rootUrl}/api/generate-result`,\n  EDIT_DIAGRAM: `${rootUrl}/api/edit-diagram`,\n  EDIT_TEXT: `${rootUrl}/api/edit-text`,\n};\n\n// Default settings\nexport const DEFAULT_SETTINGS = {\n  apiKey: \"\",\n  urlTemplate: \"\",\n  customPrompt: \"\",\n  documentUrl: \"\",\n  databaseUrl: \"\",\n  instructionUrl: \"\",\n  isEnabled: true,\n  selectedModel: \"sonar-pro\",\n};\n\n// AI Models\nexport const AI_MODELS = {\n  \"sonar-pro\": {\n    name: \"Sonar Pro\",\n    provider: \"Perplexity\",\n    description: \"Perplexity AI Sonar Pro model\",\n  },\n  gemini: {\n    name: \"Gemini 2.0 Flash\",\n    provider: \"Google\",\n    description: \"Google Gemini 2.0 Flash model\",\n  },\n};\n\n// Progress steps for document generation\nexport const PROGRESS_STEPS = [\n  { id: \"fetch\", label: \"Fetch BA Content\", status: \"pending\" },\n  { id: \"clone\", label: \"Clone Template\", status: \"pending\" },\n  { id: \"analyze\", label: \"Analyze Placeholders\", status: \"pending\" },\n  { id: \"generate\", label: \"AI Generate Document\", status: \"pending\" },\n  { id: \"complete\", label: \"Complete\", status: \"pending\" },\n];\n\n// Validation patterns\nexport const VALIDATION = {\n  URL_PATTERN: /^https?:\\/\\/.+/,\n  PLACEHOLDER_PATTERN: /<<([^>]+)>>/g,\n  MIN_PROMPT_LENGTH: 10,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// K-Tool Extension Content Script\r\nimport { ApiClient, ConfluenceApi } from \"../shared/api.js\";\r\nimport { PROGRESS_STEPS } from \"../shared/constants.js\";\r\nimport { StorageManager } from \"../shared/storage.js\";\r\nimport { ConfluenceEditor } from \"./confluenceEditor.js\";\r\nimport { MermaidAIChat } from \"./mermaidAI/mermaidAIChat.js\";\r\nimport { MermaidRenderer } from \"./utils/mermaidRenderer.js\";\r\n\r\nclass KToolContent {\r\n  constructor() {\r\n    this.settings = {};\r\n    this.isModalOpen = false;\r\n    this.currentTab = \"generate\";\r\n    this.generationJob = null;\r\n    this.progressSteps = [...PROGRESS_STEPS];\r\n    this.confluenceEditor = null;\r\n    this.mermaidAIChat = null;\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    console.log(\"🚀 K-Tool Content Script initializing...\");\r\n\r\n    // Check if already injected\r\n    if (document.getElementById(\"ktool-root\")) {\r\n      console.log(\"🔍 K-Tool already injected, skipping...\");\r\n      return;\r\n    }\r\n\r\n    // Load settings\r\n    await this.loadSettings();\r\n\r\n    // Inject UI\r\n    this.injectUI();\r\n\r\n    // Bind events\r\n    this.bindEvents();\r\n\r\n    // Initialize Confluence Editor\r\n    try {\r\n      console.log(\"🔧 Initializing ConfluenceEditor...\");\r\n      this.confluenceEditor = new ConfluenceEditor();\r\n      console.log(\"✅ ConfluenceEditor initialized:\", this.confluenceEditor);\r\n    } catch (error) {\r\n      console.error(\"❌ Error initializing ConfluenceEditor:\", error);\r\n      this.confluenceEditor = null;\r\n    }\r\n\r\n    // Initialize Mermaid AI Chat\r\n    try {\r\n      console.log(\"🎨 Initializing MermaidAIChat...\");\r\n      const $ = window.jQuery || window.$ || null;\r\n      this.mermaidAIChat = new MermaidAIChat($);\r\n      console.log(\"✅ MermaidAIChat initialized:\", this.mermaidAIChat);\r\n    } catch (error) {\r\n      console.error(\"❌ Error initializing MermaidAIChat:\", error);\r\n      this.mermaidAIChat = null;\r\n    }\r\n\r\n    // Make available globally for debugging\r\n    window.ktoolContent = this;\r\n\r\n    console.log(\"✅ K-Tool Content Script ready\");\r\n  }\r\n\r\n  async loadSettings() {\r\n    try {\r\n      this.settings = await StorageManager.getSettings();\r\n      console.log(\"⚙️ Settings loaded:\", this.settings);\r\n    } catch (error) {\r\n      console.error(\"❌ Error loading settings:\", error);\r\n    }\r\n  }\r\n\r\n  injectUI() {\r\n    // Create root container\r\n    const root = document.createElement(\"div\");\r\n    root.id = \"ktool-root\";\r\n    document.body.appendChild(root);\r\n\r\n    // Create bubble button\r\n    const bubble = this.createBubble();\r\n    root.appendChild(bubble);\r\n\r\n    // Create modal (initially hidden)\r\n    const modal = this.createModal();\r\n    root.appendChild(modal);\r\n  }\r\n\r\n  createBubble() {\r\n    const bubble = document.createElement(\"div\");\r\n    bubble.className = `ktool-bubble ${\r\n      !this.settings.isEnabled ? \"disabled\" : \"\"\r\n    }`;\r\n\r\n    bubble.innerHTML = `\r\n      <div class=\"ktool-bubble-icon\">K</div>\r\n      <div class=\"ktool-tooltip\">\r\n        ${\r\n          this.settings.isEnabled\r\n            ? \"🚀 K-Tool Document Generator<br/>Click to open document generation tool\"\r\n            : \"⚠️ K-Tool is disabled<br/>Please enable in settings\"\r\n        }\r\n      </div>\r\n    `;\r\n\r\n    bubble.addEventListener(\"click\", () => {\r\n      if (this.settings.isEnabled) {\r\n        this.openModal();\r\n      } else {\r\n        this.showNotification(\r\n          \"K-Tool is disabled. Please enable in extension settings.\",\r\n          \"warning\"\r\n        );\r\n      }\r\n    });\r\n\r\n    return bubble;\r\n  }\r\n\r\n  createModal() {\r\n    const overlay = document.createElement(\"div\");\r\n    overlay.className = \"ktool-modal-overlay\";\r\n\r\n    overlay.innerHTML = `\r\n      <div class=\"ktool-modal\">\r\n        <div class=\"ktool-modal-header\">\r\n          <h2 class=\"ktool-modal-title\">K-Tool Document Generator</h2>\r\n          <button class=\"ktool-modal-close\" type=\"button\">&times;</button>\r\n        </div>\r\n        <div class=\"ktool-modal-body\">\r\n          <div class=\"ktool-tabs\">\r\n            <button class=\"ktool-tab active\" data-tab=\"generate\">📄 Generate Document</button>\r\n            <button class=\"ktool-tab\" data-tab=\"preview\">👁️ Preview</button>\r\n            <button class=\"ktool-tab\" data-tab=\"settings\">⚙️ Settings</button>\r\n          </div>\r\n          \r\n          <!-- Generate Tab -->\r\n          <div class=\"ktool-tab-content active\" data-tab=\"generate\">\r\n            ${this.createGenerateTab()}\r\n          </div>\r\n          \r\n          <!-- Preview Tab -->\r\n          <div class=\"ktool-tab-content\" data-tab=\"preview\" id=\"previewTab\">\r\n            ${this.createPreviewTab()}\r\n          </div>\r\n          \r\n          <!-- Settings Tab -->\r\n          <div class=\"ktool-tab-content\" data-tab=\"settings\">\r\n            ${this.createSettingsTab()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    return overlay;\r\n  }\r\n\r\n  createGenerateTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div class=\"ktool-form-group\">\r\n          <label class=\"ktool-form-label\">BA Document URL *</label>\r\n          <input\r\n            type=\"url\"\r\n            class=\"ktool-form-input\"\r\n            id=\"baDocUrl\"\r\n            placeholder=\"https://confluence.com/pages/123456\"\r\n            value=\"${window.location.href}\"\r\n          >\r\n        </div>\r\n\r\n        <div class=\"ktool-form-group\">\r\n          <label class=\"ktool-form-label\">Additional Notes (Optional)</label>\r\n          <textarea\r\n            class=\"ktool-form-textarea\"\r\n            id=\"additionalNotes\"\r\n            placeholder=\"Add notes or special requirements...\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div style=\"display: flex; gap: 12px; margin-top: 20px;\">\r\n          <button class=\"ktool-btn ktool-btn-primary\" id=\"generateBtn\">\r\n            🔧 Generate Document\r\n          </button>\r\n          <button class=\"ktool-btn ktool-btn-secondary\" id=\"resetBtn\">\r\n            🔄 Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Progress Section -->\r\n      <div class=\"ktool-progress\" id=\"progressSection\" style=\"display: none;\">\r\n        <h3 style=\"margin: 0 0 16px 0; font-size: 16px;\">Document Generation Progress:</h3>\r\n        <div id=\"progressSteps\"></div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createPreviewTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\r\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">📄</div>\r\n          <h3 style=\"margin: 0 0 8px 0;\">No content available for preview</h3>\r\n          <p style=\"margin: 0;\">Please generate document first to preview.</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createSettingsTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\r\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">⚙️</div>\r\n          <h3 style=\"margin: 0 0 8px 0;\">Extension Settings</h3>\r\n          <p style=\"margin: 0 0 16px 0;\">Click the button below to open settings popup.</p>\r\n          <button class=\"ktool-btn ktool-btn-primary\" id=\"openSettingsBtn\">\r\n            🔧 Open Settings\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  bindEvents() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n\r\n    // Close modal events\r\n    modal.querySelector(\".ktool-modal-close\").addEventListener(\"click\", () => {\r\n      this.closeModal();\r\n    });\r\n\r\n    modal.addEventListener(\"click\", (e) => {\r\n      if (e.target === modal) {\r\n        this.closeModal();\r\n      }\r\n    });\r\n\r\n    // Tab switching\r\n    const tabs = modal.querySelectorAll(\".ktool-tab\");\r\n    tabs.forEach((tab) => {\r\n      tab.addEventListener(\"click\", () => {\r\n        this.switchTab(tab.dataset.tab);\r\n      });\r\n    });\r\n\r\n    // Generate button\r\n    const generateBtn = modal.querySelector(\"#generateBtn\");\r\n    generateBtn.addEventListener(\"click\", () => {\r\n      this.handleGenerate();\r\n    });\r\n\r\n    // Reset button\r\n    const resetBtn = modal.querySelector(\"#resetBtn\");\r\n    resetBtn.addEventListener(\"click\", () => {\r\n      this.handleReset();\r\n    });\r\n\r\n    // Add settings button listener\r\n    this.addSettingsButtonListener();\r\n\r\n    // Listen for settings changes from background\r\n    chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n      if (request.action === \"settingsChanged\") {\r\n        this.settings = request.settings;\r\n        this.updateBubbleState();\r\n      }\r\n    });\r\n\r\n    // Keyboard shortcuts\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      // Escape to close modal\r\n      if (e.key === \"Escape\" && this.isModalOpen) {\r\n        this.closeModal();\r\n      }\r\n\r\n      // Ctrl/Cmd + K to open modal\r\n      if ((e.ctrlKey || e.metaKey) && e.key === \"k\" && !this.isModalOpen) {\r\n        e.preventDefault();\r\n        if (this.settings.isEnabled) {\r\n          this.openModal();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n    modal.classList.add(\"show\");\r\n    this.isModalOpen = true;\r\n\r\n    // Focus first input\r\n    setTimeout(() => {\r\n      const firstInput = modal.querySelector(\".ktool-form-input\");\r\n      if (firstInput) firstInput.focus();\r\n    }, 300);\r\n  }\r\n\r\n  closeModal() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n    modal.classList.remove(\"show\");\r\n    this.isModalOpen = false;\r\n  }\r\n\r\n  addSettingsButtonListener() {\r\n    // Add listener for settings button after modal is created\r\n    setTimeout(() => {\r\n      const settingsBtn = document.querySelector(\"#openSettingsBtn\");\r\n      if (settingsBtn) {\r\n        settingsBtn.addEventListener(\"click\", () => {\r\n          this.openSettingsPopup();\r\n        });\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  openSettingsPopup() {\r\n    // Open extension popup in navbar\r\n    if (chrome.runtime && chrome.runtime.openOptionsPage) {\r\n      chrome.runtime.openOptionsPage();\r\n    } else {\r\n      // Fallback: try to open popup\r\n      chrome.action?.openPopup?.() ||\r\n        chrome.browserAction?.openPopup?.() ||\r\n        alert(\r\n          \"Please click the K-Tool icon in the browser toolbar to open settings.\"\r\n        );\r\n    }\r\n  }\r\n\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    const tabs = document.querySelectorAll(\".ktool-tab\");\r\n    tabs.forEach((tab) => {\r\n      tab.classList.toggle(\"active\", tab.dataset.tab === tabName);\r\n    });\r\n\r\n    // Update tab content\r\n    const contents = document.querySelectorAll(\".ktool-tab-content\");\r\n    contents.forEach((content) => {\r\n      content.classList.toggle(\"active\", content.dataset.tab === tabName);\r\n    });\r\n\r\n    this.currentTab = tabName;\r\n  }\r\n\r\n  updateBubbleState() {\r\n    const bubble = document.querySelector(\".ktool-bubble\");\r\n    const tooltip = bubble.querySelector(\".ktool-tooltip\");\r\n\r\n    if (this.settings.isEnabled) {\r\n      bubble.classList.remove(\"disabled\");\r\n      tooltip.innerHTML =\r\n        \"🚀 K-Tool Document Generator<br/>Click to open document generation tool\";\r\n    } else {\r\n      bubble.classList.add(\"disabled\");\r\n      tooltip.innerHTML = \"⚠️ K-Tool is disabled<br/>Please enable in settings\";\r\n    }\r\n  }\r\n\r\n  async handleGenerate() {\r\n    const baDocUrl = document.getElementById(\"baDocUrl\").value.trim();\r\n    const additionalNotes = document\r\n      .getElementById(\"additionalNotes\")\r\n      .value.trim();\r\n\r\n    if (!baDocUrl) {\r\n      this.showNotification(\"Please enter BA document URL!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    // Validate settings\r\n    const validation = StorageManager.validateSettings(this.settings);\r\n    if (!validation.isValid) {\r\n      this.showNotification(\r\n        \"Please configure all settings before generating document!\",\r\n        \"error\"\r\n      );\r\n      this.switchTab(\"settings\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Show progress\r\n      this.showProgress();\r\n      this.updateProgress(0, \"active\");\r\n\r\n      // Step 1: Extract page ID and fetch BA content\r\n      const pageId = ConfluenceApi.extractPageId(baDocUrl);\r\n      if (!pageId) {\r\n        throw new Error(\r\n          \"❌ Invalid URL! Please check the Confluence page URL.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"🔍 Fetching content for pageId:\", pageId);\r\n      const baDocument = await ConfluenceApi.fetchPageContent(pageId);\r\n      if (!baDocument) {\r\n        throw new Error(\"❌ Cannot fetch BA document content!\");\r\n      }\r\n\r\n      // Extract images from BA content (HTML) and convert all to base64\r\n      const images = await ConfluenceApi.extractImagesFromHtml(\r\n        baDocument.content\r\n      );\r\n      console.log(\"🖼️ Extracted images (all base64):\", images);\r\n\r\n      this.updateProgress(0, \"completed\");\r\n      this.updateProgress(1, \"active\");\r\n\r\n      // Step 2: Clone template structure\r\n      if (!this.settings.urlTemplate) {\r\n        throw new Error(\"⚠️ Please configure document template in settings!\");\r\n      }\r\n\r\n      console.log(\"🔄 Cloning template from:\", this.settings.urlTemplate);\r\n      const clonedTemplate = await ConfluenceApi.cloneTemplateForGeneration(\r\n        this.settings.urlTemplate\r\n      );\r\n\r\n      if (!clonedTemplate) {\r\n        throw new Error(\r\n          \"❌ Cannot clone template! Please check template URL in Settings.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"✅ Template cloned successfully:\", clonedTemplate.title);\r\n      this.updateProgress(1, \"completed\");\r\n      this.updateProgress(2, \"active\");\r\n\r\n      // Step 3: Analyze placeholders with << >>\r\n      const placeholders = ConfluenceApi.extractPlaceholders(\r\n        clonedTemplate.originalStorageFormat\r\n      );\r\n      console.log(\"🔍 Found placeholders <<>>:\", placeholders);\r\n\r\n      if (placeholders.length === 0) {\r\n        throw new Error(\r\n          \"⚠️ No placeholders found in format <<Name>>. Please check template!\"\r\n        );\r\n      }\r\n\r\n      this.updateProgress(2, \"completed\");\r\n      this.updateProgress(3, \"active\");\r\n\r\n      // Get instructions if available\r\n      let instructions = \"\";\r\n      if (this.settings.instructionUrl) {\r\n        const instructionPageId = ConfluenceApi.extractPageId(\r\n          this.settings.instructionUrl\r\n        );\r\n        if (instructionPageId) {\r\n          console.log(\r\n            \"🔍 Fetching instruction content for pageId:\",\r\n            instructionPageId\r\n          );\r\n          const instructionDoc = await ConfluenceApi.fetchPageContent(\r\n            instructionPageId\r\n          );\r\n          instructions = instructionDoc?.content || \"\";\r\n        } else {\r\n          console.warn(\r\n            \"⚠️ Invalid instruction URL:\",\r\n            this.settings.instructionUrl\r\n          );\r\n        }\r\n      }\r\n\r\n      // Step 4: AI Fill Placeholders (Send request and get job_id)\r\n      const payload = {\r\n        ba_content: baDocument.content,\r\n        template_structure: clonedTemplate.templateStructure,\r\n        original_storage_format: clonedTemplate.originalStorageFormat,\r\n        instructions: instructions,\r\n        additional_prompt: this.settings.customPrompt || \"\",\r\n        placeholders: placeholders,\r\n        selectedModel: this.settings.selectedModel,\r\n        images,\r\n        additional_notes: additionalNotes,\r\n      };\r\n\r\n      console.log(\"📤 Sending payload for placeholder filling:\", {\r\n        ba_content_length: payload.ba_content.length,\r\n        template_structure_length: payload.template_structure.length,\r\n        original_format_length: payload.original_storage_format.length,\r\n        placeholders_found: placeholders.length,\r\n        placeholders_list: placeholders,\r\n      });\r\n\r\n      // Send request and get job_id\r\n      const jobResponse = await ApiClient.generateDocument(payload);\r\n      const jobId = jobResponse.data.job_id;\r\n      if (!jobId) {\r\n        throw new Error(jobResponse.error || \"No job_id received from server!\");\r\n      }\r\n\r\n      this.currentJobId = jobId;\r\n\r\n      // Start polling for result\r\n      await this.pollGenerationResult(jobId, payload);\r\n    } catch (error) {\r\n      console.error(\"❌ Generation error:\", error);\r\n      this.showNotification(\r\n        `Document generation error: ${error.message}`,\r\n        \"error\"\r\n      );\r\n      this.hideProgress();\r\n    }\r\n  }\r\n\r\n  // These methods are now handled by ConfluenceApi class\r\n  // Keeping them for backward compatibility if needed\r\n\r\n  async pollGenerationResult(jobId, payload) {\r\n    const maxAttempts = 20; // 10 minutes max (60 * 10 seconds)\r\n    let attempts = 0;\r\n\r\n    const poll = async () => {\r\n      attempts++;\r\n\r\n      try {\r\n        console.log(\r\n          `🔄 Polling attempt ${attempts}/${maxAttempts} for job ${jobId}`\r\n        );\r\n\r\n        const statusResult = await ApiClient.checkStatus(jobId);\r\n        console.log(`statusResult: ${statusResult}`);\r\n\r\n        if (!statusResult.success) {\r\n          throw new Error(\"Error checking job status\");\r\n        }\r\n\r\n        const status = statusResult.data.status;\r\n\r\n        if (status === \"done\") {\r\n          console.log(\"✅ Generation completed!\");\r\n\r\n          const result = await ApiClient.getResult(jobId);\r\n          const resultString = JSON.stringify(result, null, 2);\r\n\r\n          console.log(`Document generate:\\n${resultString}`);\r\n          if (result.success) {\r\n            this.handleGenerationComplete(result.data.result);\r\n            return;\r\n          } else {\r\n            throw new Error(\"Error getting document generation result\");\r\n          }\r\n        } else if (status === \"error\") {\r\n          throw new Error(\"Document generation job failed on server\");\r\n        } else if (attempts >= maxAttempts) {\r\n          throw new Error(\r\n            \"⏰ Timeout: Document generation is taking too long. Please try again.\"\r\n          );\r\n        } else {\r\n          // Update progress message if available\r\n          if (statusResult.data.progress_message) {\r\n            console.log(`📝 Progress: ${statusResult.data.progress_message}`);\r\n          }\r\n\r\n          // Continue polling\r\n          setTimeout(poll, 10000); // Poll every 10 seconds\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Polling error:\", error);\r\n        this.showNotification(\r\n          `Error during document generation: ${error.message}`,\r\n          \"error\"\r\n        );\r\n        this.hideProgress();\r\n        this.currentJobId = null;\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    await poll();\r\n  }\r\n\r\n  handleGenerationComplete(result) {\r\n    this.updateProgress(3, \"completed\");\r\n    this.updateProgress(4, \"completed\");\r\n\r\n    // Store result for preview\r\n    this.generatedContent = result;\r\n    console.log(\"✅ Generated content:\", result);\r\n    // Switch to preview tab\r\n    this.switchTab(\"preview\");\r\n    this.updatePreviewTab(result);\r\n\r\n    this.showNotification(\"Document generated successfully!\", \"success\");\r\n    this.hideProgress();\r\n  }\r\n\r\n  updatePreviewTab(content) {\r\n    const previewTab = document.getElementById(\"previewTab\");\r\n    previewTab.innerHTML = `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\">\r\n          <h3 style=\"margin: 0;\">Document Preview</h3>\r\n          <div style=\"display: flex; gap: 12px;\">\r\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"editContentBtn\">\r\n              ✏️ Edit Content\r\n            </button>\r\n            <button class=\"ktool-btn ktool-btn-primary\" id=\"createPageBtn\">\r\n              📄 Create Confluence Page\r\n            </button>\r\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"downloadBtn\">\r\n              💾 Download\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"documentPreview\" style=\"border: 1px solid #e9ecef; border-radius: 8px; padding: 20px; background: #f8f9fa; max-height: 400px; overflow-y: auto; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6;\">\r\n          ${content.full_storage_format || \"<p>No content available</p>\"}\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Bind preview buttons\r\n    const editContentBtn = previewTab.querySelector(\"#editContentBtn\");\r\n    const createPageBtn = previewTab.querySelector(\"#createPageBtn\");\r\n    const downloadBtn = previewTab.querySelector(\"#downloadBtn\");\r\n\r\n    editContentBtn.addEventListener(\"click\", () =>\r\n      this.handleEditContent(content)\r\n    );\r\n    createPageBtn.addEventListener(\"click\", () => this.handleCreatePage());\r\n    downloadBtn.addEventListener(\"click\", () => this.handleDownload());\r\n\r\n    // Initialize Mermaid diagrams after content is loaded\r\n    setTimeout(() => {\r\n      this.initializeMermaid();\r\n    }, 100);\r\n  }\r\n\r\n  async handleCreatePage() {\r\n    const createBtn = document.querySelector(\"#createPageBtn\");\r\n    if (!createBtn) return;\r\n\r\n    // Save original button state\r\n    const originalText = createBtn.innerHTML;\r\n    const originalDisabled = createBtn.disabled;\r\n\r\n    try {\r\n      // Set loading state\r\n      createBtn.innerHTML = \"⏳ Creating Page...\";\r\n      createBtn.disabled = true;\r\n      createBtn.style.opacity = \"0.7\";\r\n\r\n      const spaceKey = ConfluenceApi.getCurrentSpaceKey();\r\n      if (!spaceKey) {\r\n        throw new Error(\"Cannot determine space key of current page\");\r\n      }\r\n\r\n      const title = `K-Tool Generated Document - ${new Date().toLocaleDateString()}`;\r\n      const content =\r\n        this.generatedContent.full_storage_format ||\r\n        this.generatedContent.content;\r\n\r\n      // Extract parent page ID from settings if available\r\n      let parentId = null;\r\n      if (this.settings.documentUrl) {\r\n        parentId = ConfluenceApi.extractPageId(this.settings.documentUrl);\r\n      }\r\n\r\n      await ConfluenceApi.createPage(title, content, spaceKey, parentId);\r\n\r\n      // Success state\r\n      createBtn.innerHTML = \"✅ Page Created Successfully!\";\r\n      createBtn.style.background = \"#28a745\";\r\n\r\n      this.showNotification(\"Confluence page created successfully!\", \"success\");\r\n\r\n      // Delay 1s before restore button\r\n      setTimeout(() => {\r\n        // Restore button state\r\n        createBtn.innerHTML = originalText;\r\n        createBtn.disabled = originalDisabled;\r\n        createBtn.style.opacity = \"1\";\r\n        createBtn.style.background = \"\";\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error(\"❌ Create page error:\", error);\r\n\r\n      // Error state\r\n      createBtn.innerHTML = \"❌ Creation Failed\";\r\n      createBtn.style.background = \"#dc3545\";\r\n\r\n      this.showNotification(`Error creating page: ${error.message}`, \"error\");\r\n\r\n      // Restore button after 2s\r\n      setTimeout(() => {\r\n        createBtn.innerHTML = originalText;\r\n        createBtn.disabled = originalDisabled;\r\n        createBtn.style.opacity = \"1\";\r\n        createBtn.style.background = \"\";\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  handleDownload() {\r\n    if (!this.generatedContent) {\r\n      this.showNotification(\"No content available to download!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const downloadBtn = document.querySelector(\"#downloadBtn\");\r\n    if (!downloadBtn) return;\r\n\r\n    // Save original button state\r\n    const originalText = downloadBtn.innerHTML;\r\n    const originalDisabled = downloadBtn.disabled;\r\n\r\n    try {\r\n      // Set loading state\r\n      downloadBtn.innerHTML = \"⏳ Preparing Download...\";\r\n      downloadBtn.disabled = true;\r\n      downloadBtn.style.opacity = \"0.7\";\r\n\r\n      const content =\r\n        this.generatedContent.full_storage_format ||\r\n        this.generatedContent.content;\r\n\r\n      // Create filename with title if available\r\n      const title = this.generatedContent.title || \"K-Tool Generated Document\";\r\n      const sanitizedTitle = title.replace(/[^a-z0-9]/gi, \"_\").toLowerCase();\r\n      const timestamp = new Date()\r\n        .toISOString()\r\n        .slice(0, 19)\r\n        .replace(/:/g, \"-\");\r\n      const filename = `${sanitizedTitle}_${timestamp}.html`;\r\n\r\n      const blob = new Blob([content], { type: \"text/html;charset=utf-8\" });\r\n      const url = URL.createObjectURL(blob);\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = filename;\r\n      a.style.display = \"none\";\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n\r\n      // Success state\r\n      downloadBtn.innerHTML = \"✅ Downloaded Successfully!\";\r\n      downloadBtn.style.background = \"#28a745\";\r\n\r\n      this.showNotification(\"Document downloaded successfully!\", \"success\");\r\n\r\n      // Restore button after 1s\r\n      setTimeout(() => {\r\n        downloadBtn.innerHTML = originalText;\r\n        downloadBtn.disabled = originalDisabled;\r\n        downloadBtn.style.opacity = \"1\";\r\n        downloadBtn.style.background = \"\";\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error(\"❌ Download error:\", error);\r\n\r\n      // Error state\r\n      downloadBtn.innerHTML = \"❌ Download Failed\";\r\n      downloadBtn.style.background = \"#dc3545\";\r\n\r\n      this.showNotification(`Download failed: ${error.message}`, \"error\");\r\n\r\n      // Restore button after 2s\r\n      setTimeout(() => {\r\n        downloadBtn.innerHTML = originalText;\r\n        downloadBtn.disabled = originalDisabled;\r\n        downloadBtn.style.opacity = \"1\";\r\n        downloadBtn.style.background = \"\";\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  handleEditContent(content) {\r\n    console.log(\"✏️ Opening content editor...\");\r\n    console.log(\"🔍 Content to edit:\", content);\r\n    console.log(\"🔍 ConfluenceEditor instance:\", this.confluenceEditor);\r\n\r\n    if (!this.confluenceEditor) {\r\n      console.error(\"❌ ConfluenceEditor is null or undefined\");\r\n      this.showNotification(\"Confluence Editor not initialized!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Set up save callback to update the generated content\r\n      this.confluenceEditor.setSaveCallback((updatedContent) => {\r\n        console.log(\"💾 Content updated:\", updatedContent);\r\n\r\n        // Update the stored generated content\r\n        this.generatedContent = updatedContent;\r\n\r\n        // Refresh the preview tab with updated content\r\n        this.updatePreviewTab(updatedContent);\r\n\r\n        this.showNotification(\"Content has been updated!\", \"success\");\r\n      });\r\n\r\n      // Open the editor with current content\r\n      console.log(\"🚀 Opening ConfluenceEditor...\");\r\n      this.confluenceEditor.openEditor(content, {\r\n        title: \"Edit Generated Document\",\r\n        showMermaidTools: true,\r\n      });\r\n      console.log(\"✅ ConfluenceEditor opened successfully\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error opening ConfluenceEditor:\", error);\r\n      this.showNotification(`Error opening editor: ${error.message}`, \"error\");\r\n    }\r\n  }\r\n\r\n  handleReset() {\r\n    // Auto reset form without confirm\r\n    console.log(\"🔄 Auto-resetting form...\");\r\n    document.getElementById(\"baDocUrl\").value = window.location.href;\r\n    document.getElementById(\"additionalNotes\").value = \"\";\r\n    this.hideProgress();\r\n    this.switchTab(\"generate\");\r\n  }\r\n\r\n  showProgress() {\r\n    const progressSection = document.getElementById(\"progressSection\");\r\n    const progressSteps = document.getElementById(\"progressSteps\");\r\n\r\n    progressSteps.innerHTML = this.progressSteps\r\n      .map(\r\n        (step, index) => `\r\n      <div class=\"ktool-progress-step ${step.status}\" data-step=\"${index}\">\r\n        <div class=\"ktool-progress-icon\">${index + 1}</div>\r\n        <span>${step.label}</span>\r\n      </div>\r\n    `\r\n      )\r\n      .join(\"\");\r\n\r\n    progressSection.style.display = \"block\";\r\n  }\r\n\r\n  hideProgress() {\r\n    const progressSection = document.getElementById(\"progressSection\");\r\n    progressSection.style.display = \"none\";\r\n\r\n    // Reset progress steps\r\n    this.progressSteps = this.progressSteps.map((step) => ({\r\n      ...step,\r\n      status: \"pending\",\r\n    }));\r\n  }\r\n\r\n  updateProgress(stepIndex, status) {\r\n    this.progressSteps[stepIndex].status = status;\r\n\r\n    const stepElement = document.querySelector(`[data-step=\"${stepIndex}\"]`);\r\n    if (stepElement) {\r\n      stepElement.className = `ktool-progress-step ${status}`;\r\n\r\n      const icon = stepElement.querySelector(\".ktool-progress-icon\");\r\n      if (status === \"completed\") {\r\n        icon.textContent = \"✓\";\r\n      } else if (status === \"error\") {\r\n        icon.textContent = \"✗\";\r\n      } else if (status === \"active\") {\r\n        icon.innerHTML = '<div class=\"ktool-spinning\">⏳</div>';\r\n      }\r\n    }\r\n  }\r\n\r\n  showNotification(message, type = \"info\") {\r\n    // Create notification element\r\n    const notification = document.createElement(\"div\");\r\n    notification.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      background: ${\r\n        type === \"success\"\r\n          ? \"#28a745\"\r\n          : type === \"error\"\r\n          ? \"#dc3545\"\r\n          : \"#007bff\"\r\n      };\r\n      color: white;\r\n      padding: 12px 20px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n      z-index: 1000002;\r\n      font-size: 14px;\r\n      max-width: 300px;\r\n      word-wrap: break-word;\r\n      opacity: 0;\r\n      transform: translateX(100%);\r\n      transition: all 0.3s;\r\n    `;\r\n\r\n    notification.textContent = message;\r\n    document.body.appendChild(notification);\r\n\r\n    // Animate in\r\n    setTimeout(() => {\r\n      notification.style.opacity = \"1\";\r\n      notification.style.transform = \"translateX(0)\";\r\n    }, 100);\r\n\r\n    // Auto remove\r\n    setTimeout(() => {\r\n      notification.style.opacity = \"0\";\r\n      notification.style.transform = \"translateX(100%)\";\r\n      setTimeout(() => {\r\n        if (notification.parentNode) {\r\n          notification.parentNode.removeChild(notification);\r\n        }\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  async loadMermaidScript() {\r\n    if (window.mermaid) {\r\n      console.log(\"⚡ Mermaid already loaded\");\r\n      return window.mermaid;\r\n    }\r\n\r\n    const res = await fetch(chrome.runtime.getURL(\"lib/mermaid.min.js\"));\r\n    const text = await res.text();\r\n    eval(text); // UMD will attach mermaid to window\r\n    console.log(\"✅ Mermaid loaded dynamically\");\r\n    return window.mermaid;\r\n  }\r\n\r\n  // Initialize Mermaid diagrams\r\n  async initializeMermaid() {\r\n    try {\r\n      console.log(\"🎨 Initializing Mermaid diagrams...\");\r\n\r\n      // Find all mermaid code blocks in the preview\r\n      const previewDiv = document.getElementById(\"documentPreview\");\r\n      if (!previewDiv) return;\r\n\r\n      // Look for Confluence Mermaid structured macros\r\n      const mermaidElements = previewDiv.querySelectorAll(\r\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\r\n      );\r\n\r\n      for (let index = 0; index < mermaidElements.length; index++) {\r\n        const element = mermaidElements[index];\r\n        // Get the code parameter from Confluence structured macro\r\n        const codeParam = element.querySelector(\r\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\r\n        );\r\n        if (!codeParam) {\r\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\r\n          return;\r\n        }\r\n\r\n        const mermaidCode = (\r\n          codeParam.textContent || codeParam.innerText\r\n        ).trim();\r\n        console.log(\r\n          \"🔍 Found Confluence Mermaid diagram:\",\r\n          mermaidCode.substring(0, 50) + \"...\"\r\n        );\r\n\r\n        // Always process Confluence mermaid macros (no need to check syntax)\r\n        if (mermaidCode) {\r\n          // Create a new div for the mermaid diagram\r\n          const mermaidDiv = document.createElement(\"div\");\r\n          mermaidDiv.className = \"mermaid-diagram\";\r\n          mermaidDiv.id = `mermaid-${index}`;\r\n          mermaidDiv.style.cssText =\r\n            \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\r\n\r\n          // Validate parent node before replacing\r\n          if (!element.parentNode) {\r\n            console.error(\"❌ Cannot replace Mermaid element: no parent node\");\r\n            console.error(\r\n              \"❌ Mermaid code:\",\r\n              mermaidCode.substring(0, 100) + \"...\"\r\n            );\r\n            return;\r\n          }\r\n\r\n          // Replace the original element\r\n          try {\r\n            element.parentNode.replaceChild(mermaidDiv, element);\r\n          } catch (replaceError) {\r\n            console.error(\r\n              \"❌ Failed to replace Mermaid element:\",\r\n              replaceError\r\n            );\r\n            console.error(\r\n              \"❌ Mermaid code:\",\r\n              mermaidCode.substring(0, 100) + \"...\"\r\n            );\r\n            return;\r\n          }\r\n\r\n          // Initialize Mermaid and render the diagram using MermaidRenderer\r\n          await MermaidRenderer.initializeMermaid();\r\n          const diagramId = `mermaid-svg-${index}`;\r\n          await MermaidRenderer.renderDiagram(\r\n            diagramId,\r\n            mermaidCode,\r\n            mermaidDiv\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to initialize Mermaid:\", error);\r\n    }\r\n  }\r\n\r\n  // Show Mermaid error in a nice format\r\n  showMermaidError(container, text, error) {\r\n    // Validate container before attempting to set innerHTML\r\n    if (\r\n      !container ||\r\n      !container.nodeType ||\r\n      container.nodeType !== Node.ELEMENT_NODE\r\n    ) {\r\n      console.error(\r\n        \"❌ Invalid container for Mermaid error display:\",\r\n        container\r\n      );\r\n      console.error(\"❌ Mermaid error details:\", {\r\n        message: error.message || \"Unknown error occurred\",\r\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Check if container is still in the DOM\r\n    if (!document.contains(container)) {\r\n      console.error(\"❌ Container is not in DOM, cannot display Mermaid error\");\r\n      console.error(\"❌ Mermaid error details:\", {\r\n        message: error.message || \"Unknown error occurred\",\r\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      container.innerHTML = `\r\n        <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\r\n          <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\r\n            <span style=\"margin-right: 8px;\">⚠️</span>\r\n            Mermaid Render Error\r\n          </div>\r\n          <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\r\n            ${error.message || \"Unknown error occurred\"}\r\n          </div>\r\n          <details style=\"margin-top: 10px;\">\r\n            <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\r\n            <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${\r\n              text || \"No code provided\"\r\n            }</pre>\r\n          </details>\r\n        </div>\r\n      `;\r\n    } catch (setInnerHTMLError) {\r\n      console.error(\r\n        \"❌ Failed to set error HTML in container:\",\r\n        setInnerHTMLError\r\n      );\r\n      console.error(\"❌ Original Mermaid error:\", {\r\n        message: error.message || \"Unknown error occurred\",\r\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// Initialize when DOM is ready\r\nif (document.readyState === \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    new KToolContent();\r\n  });\r\n} else {\r\n  new KToolContent();\r\n}\r\n"],"names":["XMLFormatter","formatXHTML","xmlString","indent","rootTag","wrappedXml","doc","DOMParser","parseFromString","parseErrors","getElementsByTagName","_parseErrors$","length","console","warn","error","textContent","originalLength","sample","substring","output","rootElement","documentElement","processNode","node","level","nodeType","Node","ELEMENT_NODE","nodeName","startTag","attributes","attr","name","value","Array","from","childNodes","some","child","TEXT_NODE","trim","nextLevel","forEach","replace","text","COMMENT_NODE","CDATA_SECTION_NODE","isSelfClosingTag","tag","t","startsWith","cleanXMLMarkers","content","cleaned","escapeRegex","string","ContentSynchronizer","constructor","this","diagramChanges","Map","trackDiagramChange","diagramId","newCode","log","set","code","timestamp","Date","now","getTrackedChanges","clearTrackedChanges","clear","syncAllContent","currentContent","editorContainer","mermaidDiagrams","Error","rawContent","syncFromRawEditor","finalContent","syncMermaidChanges","rawEditor","querySelector","updatedContent","full_storage_format","undefined","diagramsCount","hasContent","diagram","index","_diagram$originalCode","_diagram$code","id","hasOriginalCode","originalCode","hasCode","codeLength","updateDiagramInContent","hasNewCode","newLength","patterns","pattern","RegExp","replacement","patternMatched","i","lastIndex","test","simpleSearch","includes","validateContent","result","isValid","errors","warnings","push","xmlContent","message","createBackup","JSON","parse","stringify","restoreFromBackup","backup","DOMHelpers","container","selector","querySelectorAll","addEventListener","element","event","handler","options","removeEventListener","toggleClass","className","force","classList","toggle","addClass","add","removeClass","remove","setContent","isHTML","tagName","innerHTML","getContent","createElement","document","Object","entries","key","assign","style","setAttribute","removeElement","parentNode","removeChild","isInDOM","body","contains","scrollIntoView","behavior","block","getDimensions","width","height","top","left","rect","getBoundingClientRect","right","bottom","cloneElement","deep","cloneNode","HTMLTemplates","getEditorTemplate","getContentTabTemplate","getMermaidTabTemplate","getZoomControlsTemplate","getAIChatTemplate","applyPreviewStyles","createAIMessage","type","createMermaidContainer","mermaidDiv","cssText","StorageManager","STORAGE_KEY","AUTO_SAVE_INTERVAL","autoSaveTimer","saveContent","saveCallback","enableLocalStorage","enableCallback","showNotification","results","localStorage","callback","saveToLocalStorage","callSaveCallback","showSaveNotification","backupData","version","setItem","loadFromLocalStorage","saved","getItem","removeItem","clearLocalStorage","then","method","notification","colors","success","warning","info","background","appendChild","setTimeout","opacity","transform","startAutoSave","saveFunction","stopAutoSave","setInterval","clearInterval","hasUnsavedChanges","getBackupInfo","age","ConfluenceEditor","isEditorOpen","originalContent","onSave","mermaidDiagramsMap","currentSelectedDiagram","currentSelectedDiagramId","textEditor","previewContainer","isPreviewMode","isModified","currentZoom","dragOffset","x","y","storageManager","contentSynchronizer","openEditor","closeEditor","allowBackupRestore","backupInfo","ageMinutes","Math","floor","extractMermaidDiagrams","createEditorUI","initializeContentTab","overlay","bindEditorEvents","closeBtn","saveBtn","saveChanges","contentTab","mermaidTab","switchTab","updateContentPreview","mermaidSelector","mermaidCodeEditor","aiSendBtn","aiPromptInput","e","selectMermaidDiagram","target","updateMermaidPreview","catch","sendAIPrompt","shiftKey","preventDefault","zoomInBtn","zoomOutBtn","zoomResetBtn","zoomIn","zoomOut","resetZoom","mermaidPreview","handleWheel","handleEsc","tabName","tab","activeTab","activeContent","initializeMermaidTab","size","populateMermaidSelector","preview","updateSaveButtonState","renderContentPreview","previewElement","processedContent","renderMermaidDiagramsInPreview","initializeMermaidInPreview","MermaidRenderer","initializeMermaid","previewDiv","async","codeParam","mermaidCode","replaceChild","replaceError","renderDiagram","_this$mermaidDiagrams","_this$mermaidDiagrams2","defaultOption","addedCount","addedDiagrams","Set","diagramData","has","option","title","handleMermaidSelectorChange","selectedId","clearMermaidEditor","get","find","d","codeEditor","handleMermaidCodeChange","updateZoom","_this$currentSelected","promptInput","messagesContainer","prompt","addAIMessage","diagramInMap","currentCode","_this$currentContent","settings","ChromeStorageManager","getSettings","requestBody","diagram_code","user_request","selectedModel","response","fetch","API_URLS","EDIT_DIAGRAM","headers","ok","errorData","json","status","statusText","data","edited_diagram","cleanedDiagram","cleanAIResponse","_this$currentSelected2","currentDiagramInMap","oldCode","removeLastAIMessage","window","lines","split","nonEmptyStart","findIndex","line","nonEmptyEnd","slice","reverse","join","validStarts","firstLine","toLowerCase","start","messages","lastMessage","messageHTML","scrollTop","scrollHeight","_this$currentContent2","diagrams","diagramsMap","updateStatus","_this$editorContainer","validation","saveResults","min","max","zoomLevel","mermaidContent","transformOrigin","transition","round","deltaY","setSaveCallback","isOpen","getCurrentContent","editorContent","getValue","MermaidPreview","initialize","getElementById","updatePreview","cleanCode","cleanMermaidCode","validateMermaidCode","showError","showPlaceholder","errorMessage","trimmed","validStarters","starter","match","MermaidAIService","apiClient","ApiClient","modifyDiagram","diagramContent","userPrompt","promptValidation","validateUserPrompt","diagramValidation","validateDiagramContent","payload","diagram_content","user_prompt","context","callAI","getMockResponse","originalDiagram","explanation","getErrorMessage","MermaidApiClient","extractPageId","location","href","pathname","search","pageId","URLSearchParams","pathMatches","metaSelectors","metaTag","AJS","params","Confluence","getContentId","contentId","bodyPageId","getAttribute","extractFilename","src","pathParts","URL","origin","filenameWithExt","filename","saveFilename","getSavedFilename","fetchMermaidCode","apiUrl","Accept","Connection","Pragma","Referer","navigator","userAgent","credentials","fetchMermaidCodeFromSaved","MermaidAIChat","$","jQuery","isPopupOpen","currentMermaidContent","aiService","lastClickedElement","lastClickPosition","minZoom","maxZoom","zoomStep","isZooming","init","createPopupUI","setupMermaidDetection","setupConfluencePageChangeDetection","setupConfluenceEditorMonitoring","handleMermaidClick","position","showChatPopup","setupIframeEventListeners","setupMutationObserver","refreshIframeListeners","iframes","readyState","retryIframes","iframe","attachIframeListeners","dataset","mermaidListenerAttached","loadHandler","iframeDoc","contentDocument","contentWindow","clickHandler","classes","alt","isMermaidElement","clientX","offsetLeft","clientY","offsetTop","mermaidClickHandler","boundClickHandler","bind","mermaidLoadHandler","MutationObserver","mutations","mutation","mutationIndex","addedNodes","nodeIndex","_node$textContent","injectAIButton","_node$textContent2","observe","childList","subtree","currentUrl","checkUrlChange","panel","buttonContainer","aiButton","marginRight","loadingMessage","alert","removeButton","insertBefore","removeAIButton","removedNodes","check","bindZoomControls","ctrlKey","applyZoom","zoomDisplay","updateZoomButtonStates","disabled","root","bindPopupEvents","popup","header","sendBtn","input","makeDraggable","hideChatPopup","sendMessage","closest","dragHandle","isDragging","dragStartX","dragStartY","popupStartX","popupStartY","cursor","userSelect","onDrag","stopPropagation","deltaX","newX","newY","maxX","innerWidth","maxY","innerHeight","stopDrag","parseInt","mouseX","mouseY","popupX","popupY","leftPos","topPos","display","focus","systemMessage","addMessage","messageId","messageDiv","removeMessage","chrome","storage","sync","EXTENSION_SETTINGS_KEY","DEFAULT_SETTINGS","saveSettings","updateSetting","field","updatedSettings","resetSettings","validateSettings","_settings$apiKey","_settings$urlTemplate","_settings$documentUrl","_settings$databaseUrl","apiKey","urlTemplate","validationResult","validateConfluencePageLink","valid","documentUrl","isValidUrl","databaseUrl","keys","url","link","out","u","pageIdParam","searchParams","pagesIndex","indexOf","candidate","loadMermaidScript","mermaid","res","runtime","getURL","eval","startOnLoad","theme","securityLevel","fontFamily","htmlLabels","flowchart","deterministicIds","deterministicIDSeed","setConfig","render","tempContainer","visibility","svgCode","renderResult","svg","renderError","showMermaidError","setInnerHTMLError","detectMermaidType","macroRegex","exec","macroName","macroContent","codeMatch","langMatch","diagramRecord","originalMatch","charAt","toUpperCase","saveDiagramToAPI","diagramCode","png","errorText","request","generateDocument","GEN_DOC","checkStatus","jobId","GEN_DOC_STATUS","getResult","GEN_DOC_RESULT","editText","EDIT_TEXT","ConfluenceApi","getCurrentSpaceKey","spaceKeyMeta","spaceKeyElement","spaceKey","urlMatch","fetchPageContent","_data$body","_data$body2","_data$body3","_data$body4","hasStorage","hasView","view","storageFormat","cloneTemplateForGeneration","_data$body5","_data$body6","extractPageIdFromUrl","originalStorageFormat","templateStructure","analysisInfo","extractTemplateStructure","structureLength","analysis","emptyParagraphs","emptyTableCells","placeholders","structure","regex","matches","matchAll","totalLength","extractPlaceholders","decodedContent","allMatches","testContent","contentIndex","patternIndex","map","m","uniquePlaceholders","extractImagesFromHtml","html","images","imgTags","img","base64src","base64","fname","urlToBase64","getFilenameFromUrl","blob","Promise","resolve","reject","reader","FileReader","onloadend","onerror","readAsDataURL","lastIndexOf","validateAndCleanTitle","toLocaleDateString","ensureUtf8Encoding","encoder","TextEncoder","decoder","TextDecoder","fatal","encoded","encode","decode","basicContentCleanup","advancedHTMLSanitization","finalHTML","convertToMermaidCloudMacros","macroCounter","macroId","convertedContent","currentId","toString","validateAndFixXML","fixed","attrs","createPage","fullStorageFormat","parentPageId","_result$_links","_result$_links2","cleanTitle","utf8Content","createPayload","space","representation","ancestors","errorJson","isArray","err","parseError","_links","webui","finalMessage","extractedDiagrams","mermaidRegex","getDiagramConfluenceStyles","diagramResult","total","successCount","totalDiagrams","processedDiagrams","all","script","onload","head","svgResult","svgContent","canvas","ctx","getContext","Image","fillStyle","fillRect","drawImage","toDataURL","btoa","unescape","encodeURIComponent","convertDiagramToSvgPng","errorMsg","processAndSaveDiagrams","fullUrl","open","userMessage","rootUrl","customPrompt","instructionUrl","isEnabled","PROGRESS_STEPS","label","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","KToolContent","isModalOpen","currentTab","generationJob","progressSteps","confluenceEditor","mermaidAIChat","loadSettings","injectUI","bindEvents","ktoolContent","bubble","createBubble","modal","createModal","openModal","createGenerateTab","createPreviewTab","createSettingsTab","closeModal","handleGenerate","handleReset","addSettingsButtonListener","onMessage","addListener","sender","sendResponse","action","updateBubbleState","metaKey","firstInput","settingsBtn","openSettingsPopup","_chrome$action","_chrome$action$openPo","_chrome$browserAction","_chrome$browserAction2","openOptionsPage","openPopup","browserAction","tooltip","baDocUrl","additionalNotes","showProgress","updateProgress","baDocument","clonedTemplate","instructions","instructionPageId","instructionDoc","ba_content","template_structure","original_storage_format","additional_prompt","additional_notes","ba_content_length","template_structure_length","original_format_length","placeholders_found","placeholders_list","jobResponse","job_id","currentJobId","pollGenerationResult","hideProgress","attempts","poll","statusResult","resultString","handleGenerationComplete","progress_message","generatedContent","updatePreviewTab","previewTab","editContentBtn","createPageBtn","downloadBtn","handleEditContent","handleCreatePage","handleDownload","createBtn","originalText","originalDisabled","parentId","toISOString","Blob","createObjectURL","a","download","click","revokeObjectURL","showMermaidTools","progressSection","step","stepIndex","stepElement","icon","mermaidElements","innerText"],"sourceRoot":""}