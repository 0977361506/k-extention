{"version":3,"file":"content.js","mappings":"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","sources":["webpack://k-tool-extension-clean/./src/shared/api.js","webpack://k-tool-extension-clean/./src/content/utils/xmlFormatter.js","webpack://k-tool-extension-clean/./src/content/utils/contentSynchronizer.js","webpack://k-tool-extension-clean/./src/content/utils/domHelpers.js","webpack://k-tool-extension-clean/./src/content/utils/htmlTemplates.js","webpack://k-tool-extension-clean/./src/content/utils/storageManager.js","webpack://k-tool-extension-clean/./src/content/confluenceEditor.js","webpack://k-tool-extension-clean/./src/shared/storage.js","webpack://k-tool-extension-clean/./src/content/utils/mermaidRenderer.js","webpack://k-tool-extension-clean/./src/shared/constants.js","webpack://k-tool-extension-clean/webpack/bootstrap","webpack://k-tool-extension-clean/webpack/runtime/define property getters","webpack://k-tool-extension-clean/webpack/runtime/hasOwnProperty shorthand","webpack://k-tool-extension-clean/./src/content/content.js"],"sourcesContent":["// API utilities for K-Tool Extension\nimport { API_URLS } from \"./constants.js\";\n\nexport class ApiClient {\n  /**\n   * Make HTTP request with error handling\n   * @param {string} url - Request URL\n   * @param {Object} options - Fetch options\n   * @returns {Promise<Object>} Response data\n   */\n  static async request(url, options = {}) {\n    try {\n      const response = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return { success: true, data };\n    } catch (error) {\n      console.error(\"API request failed:\", error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  /**\n   * Generate document from BA content\n   * @param {Object} payload - Generation payload\n   * @returns {Promise<Object>} Job response\n   */\n  static async generateDocument(payload) {\n    return await this.request(API_URLS.GEN_DOC, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n\n  /**\n   * Check generation status\n   * @param {string} jobId - Job ID to check\n   * @returns {Promise<Object>} Status response\n   */\n  static async checkStatus(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_STATUS}?job_id=${jobId}`);\n  }\n\n  /**\n   * Get generation result\n   * @param {string} jobId - Job ID to get result\n   * @returns {Promise<Object>} Result response\n   */\n  static async getResult(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_RESULT}?job_id=${jobId}`);\n  }\n\n  /**\n   * Edit text using AI\n   * @param {Object} payload - Edit payload\n   * @returns {Promise<Object>} Edit response\n   */\n  static async editText(payload) {\n    return await this.request(API_URLS.EDIT_TEXT, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n}\n\n/**\n * Confluence API utilities\n */\nexport class ConfluenceApi {\n  /**\n   * Extract page ID from Confluence URL\n   * @param {string} url - Confluence page URL\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageId(url) {\n    const patterns = [/\\/pages\\/(\\d+)/, /pageId=(\\d+)/, /\\/(\\d+)$/];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Get current space key from page\n   * @returns {string|null} Space key or null\n   */\n  static getCurrentSpaceKey() {\n    // Try to get space key from various sources\n    const spaceKeyMeta = document.querySelector('meta[name=\"ajs-space-key\"]');\n    if (spaceKeyMeta) return spaceKeyMeta.content;\n\n    const spaceKeyElement = document.querySelector(\"[data-space-key]\");\n    if (spaceKeyElement) return spaceKeyElement.dataset.spaceKey;\n\n    // Try to extract from URL\n    const urlMatch = window.location.pathname.match(/\\/spaces\\/([^\\/]+)/);\n    if (urlMatch) return urlMatch[1];\n\n    return null;\n  }\n\n  /**\n   * Fetch page content from Confluence\n   * @param {string} pageId - Page ID to fetch\n   * @returns {Promise<Object>} Page content with title, content (view), and storageFormat\n   */\n  static async fetchPageContent(pageId) {\n    try {\n      console.log(\"🔍 Fetching Confluence content for pageId:\", pageId);\n\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage,body.view`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Content data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n        hasView: !!data.body?.view?.value,\n      });\n\n      return {\n        title: data.title,\n        content: data.body?.view?.value || \"\",\n        storageFormat: data.body?.storage?.value || \"\",\n      };\n    } catch (error) {\n      console.error(\"❌ Error fetching Confluence content:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clone template from URL for document generation\n   * @param {string} url - Template URL\n   * @returns {Promise<Object>} Cloned template data\n   */\n  static async cloneTemplateForGeneration(url) {\n    try {\n      console.log(\"🔍 Cloning template from URL:\", url);\n\n      if (!url || !url.trim()) {\n        console.error(\"❌ Empty URL provided\");\n        throw new Error(\"URL template không được để trống\");\n      }\n\n      // Extract pageId from URL\n      const pageId = this.extractPageIdFromUrl(url);\n      if (!pageId) {\n        console.error(\"❌ No pageId found in URL\");\n        throw new Error(\n          \"URL không chứa pageId hợp lệ. Vui lòng kiểm tra lại URL template.\"\n        );\n      }\n\n      console.log(\"📋 Fetching template pageId:\", pageId);\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Template data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n      });\n\n      if (!data.body?.storage?.value) {\n        console.error(\"❌ No storage content found in response\");\n        throw new Error(\"Template không có nội dung storage format\");\n      }\n\n      const originalStorageFormat = data.body.storage.value;\n      console.log(\n        \"📄 Original storage format length:\",\n        originalStorageFormat.length\n      );\n\n      const { templateStructure, analysisInfo } = this.extractTemplateStructure(\n        originalStorageFormat\n      );\n\n      const result = {\n        title: data.title,\n        originalStorageFormat,\n        templateStructure,\n        analysisInfo,\n      };\n\n      console.log(\"✅ Template cloned successfully:\", {\n        title: result.title,\n        originalLength: originalStorageFormat.length,\n        structureLength: templateStructure.length,\n        analysis: analysisInfo,\n      });\n\n      return result;\n    } catch (error) {\n      console.error(\"❌ Error cloning template:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Extract template structure and analyze placeholders\n   * @param {string} storageFormat - Original storage format\n   * @returns {Object} Template structure and analysis info\n   */\n  static extractTemplateStructure(storageFormat) {\n    let emptyParagraphs = 0;\n    let emptyTableCells = 0;\n    let placeholders = 0;\n\n    console.log(\"🔍 Extracting template structure...\");\n\n    const placeholderPatterns = [\n      /(<<.*?>>)/g,\n      /(\\{\\{.*?\\}\\})/g,\n      /(&lt;&lt;.*?&gt;&gt;)/g,\n      /(\\u003c\\u003c.*?\\u003e\\u003e)/g,\n    ];\n\n    let structure = storageFormat;\n\n    placeholderPatterns.forEach((regex, index) => {\n      const matches = [...structure.matchAll(regex)];\n      console.log(\n        `🎯 Placeholder pattern ${index + 1} found ${matches.length} matches`\n      );\n      placeholders += matches.length;\n    });\n\n    // Count empty paragraphs and table cells\n    emptyParagraphs = (storageFormat.match(/<p[^>]*>\\s*<\\/p>/g) || []).length;\n    emptyTableCells = (storageFormat.match(/<td[^>]*>\\s*<\\/td>/g) || []).length;\n\n    const analysisInfo = {\n      emptyParagraphs,\n      emptyTableCells,\n      placeholders,\n      totalLength: storageFormat.length,\n    };\n\n    return {\n      templateStructure: structure,\n      analysisInfo,\n    };\n  }\n\n  /**\n   * Extract pageId from various URL formats\n   * @param {string} url - URL to extract pageId from\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageIdFromUrl(url) {\n    const patterns = [\n      /\\/pages\\/(\\d+)/,\n      /pageId=(\\d+)/,\n      /\\/(\\d+)$/,\n      /viewpage\\.action\\?pageId=(\\d+)/,\n    ];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Extract placeholders from content (<<placeholder>> format)\n   * @param {string} content - Content to analyze\n   * @returns {Array} Array of placeholder strings\n   */\n  static extractPlaceholders(content) {\n    console.log(\"🔍 Analyzing content for placeholders...\");\n    console.log(\"📄 Content length:\", content.length);\n    console.log(\n      \"📄 Content preview (first 500 chars):\",\n      content.substring(0, 500)\n    );\n\n    // Helper function to decode HTML entities\n    const decodeHtmlEntities = (str) => {\n      return str\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\")\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\");\n    };\n\n    const decodedContent = decodeHtmlEntities(content);\n\n    // Patterns to find placeholders\n    const patterns = [\n      /<<([^>]+)>>/g, // Normal <<placeholder>>\n      /&lt;&lt;([^&]+)&gt;&gt;/g, // HTML encoded &lt;&lt;placeholder&gt;&gt;\n    ];\n\n    let allMatches = [];\n\n    // Test patterns on both original and decoded content\n    [content, decodedContent].forEach((testContent, contentIndex) => {\n      console.log(\n        `🔍 Testing on ${\n          contentIndex === 0 ? \"original\" : \"decoded\"\n        } content...`\n      );\n\n      patterns.forEach((regex, patternIndex) => {\n        const matches = [...testContent.matchAll(regex)];\n        console.log(\n          `🎯 Pattern ${patternIndex + 1} found ${matches.length} matches:`,\n          matches.map((m) => m[0])\n        );\n\n        if (patternIndex === 1) {\n          // For HTML encoded, decode back to normal format\n          allMatches.push(...matches.map((match) => `<<${match[1]}>>`));\n        } else {\n          allMatches.push(...matches.map((match) => match[0]));\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePlaceholders = [...new Set(allMatches)];\n    console.log(\"🎯 Unique placeholders found:\", uniquePlaceholders);\n\n    return uniquePlaceholders;\n  }\n\n  /**\n   * Extract images from HTML content and convert to base64\n   * @param {string} html - HTML content\n   * @returns {Promise<Array>} Array of image objects with base64 data\n   */\n  static async extractImagesFromHtml(html) {\n    const images = [];\n    try {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      const imgTags = doc.querySelectorAll(\"img\");\n\n      for (const img of Array.from(imgTags)) {\n        const src = img.getAttribute(\"src\");\n        let filename = undefined;\n\n        if (src) {\n          let base64src = src;\n\n          if (!src.startsWith(\"data:image\")) {\n            // Convert URL to base64 and get filename\n            const { base64, filename: fname } = await this.urlToBase64(src);\n            if (base64) {\n              base64src = base64;\n              filename = fname;\n            } else continue; // skip if failed\n          } else {\n            // If already base64, get name from alt or set default\n            filename = img.getAttribute(\"alt\")\n              ? img.getAttribute(\"alt\") + \".png\"\n              : `image_${Date.now()}.png`;\n          }\n\n          images.push({\n            src: base64src,\n            alt: img.getAttribute(\"alt\") || undefined,\n            filename,\n          });\n        }\n      }\n    } catch (e) {\n      console.warn(\"extractImagesFromHtml error:\", e);\n    }\n    return images;\n  }\n\n  /**\n   * Convert image URL to base64\n   * @param {string} url - Image URL\n   * @returns {Promise<Object>} Object with base64 data and filename\n   */\n  static async urlToBase64(url) {\n    try {\n      const response = await fetch(url);\n      if (!response.ok)\n        return { base64: null, filename: this.getFilenameFromUrl(url) };\n\n      const blob = await response.blob();\n      const filename = this.getFilenameFromUrl(url);\n\n      return await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({ base64: reader.result, filename });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n      });\n    } catch (e) {\n      console.warn(\"urlToBase64 error:\", e);\n      return { base64: null, filename: this.getFilenameFromUrl(url) };\n    }\n  }\n\n  /**\n   * Get filename from URL\n   * @param {string} url - URL to extract filename from\n   * @returns {string} Filename\n   */\n  static getFilenameFromUrl(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n      return (\n        pathname.substring(pathname.lastIndexOf(\"/\") + 1) ||\n        `image_${Date.now()}`\n      );\n    } catch {\n      return `image_${Date.now()}`;\n    }\n  }\n\n  /**\n   * Create new Confluence page\n   * @param {string} title - Page title\n   * @param {string} content - Page content (storage format)\n   * @param {string} spaceKey - Space key\n   * @param {string} parentId - Parent page ID (optional)\n   * @returns {Promise<Object>} Created page response\n   */\n  static async createPage(title, content, spaceKey, parentId = null) {\n    try {\n      const payload = {\n        type: \"page\",\n        title,\n        space: { key: spaceKey },\n        body: {\n          storage: {\n            value: content,\n            representation: \"storage\",\n          },\n        },\n      };\n\n      if (parentId) {\n        payload.ancestors = [{ id: parentId }];\n      }\n\n      const response = await fetch(\"/rest/api/content\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to create page: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error creating page:\", error);\n      throw error;\n    }\n  }\n}\n","// XML/XHTML Formatting Utilities\n// Handles XML parsing, formatting and validation\n\nexport class XMLFormatter {\n  /**\n   * Format XHTML for better readability with proper alignment\n   * @param {string} xmlString - Raw XML/XHTML string\n   * @param {string} indent - Indentation string (default: 4 spaces)\n   * @returns {string} Formatted XML/XHTML string\n   */\n  static formatXHTML(xmlString, indent = \"    \") {\n    // 1. Parse string into DOM tree\n    const parser = new DOMParser();\n\n    // Wrap content with temporary root tag if it's just a fragment\n    const rootTag = \"xml-root-fragment\";\n    const wrappedXml = `<${rootTag}>${xmlString}</${rootTag}>`;\n\n    const doc = parser.parseFromString(wrappedXml, \"text/xml\");\n\n    // Check for parsing errors\n    if (doc.getElementsByTagName(\"parsererror\").length > 0) {\n      console.error(\"XML/XHTML parsing error. Returning original string.\");\n      return xmlString;\n    }\n\n    let output = \"\";\n    let currentIndent = \"\";\n\n    // Get wrapped root element (only process its children)\n    const rootElement = doc.documentElement;\n\n    /**\n     * Recursive function to traverse and rebuild string\n     * @param {Node} node - Current node\n     * @param {string} level - Current indentation level\n     */\n    function processNode(node, level) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE: // 1: HTML/XML tags (e.g., <p>, <ac:structured-macro>)\n          const nodeName = node.nodeName;\n\n          // Start tag (e.g., <p data=\"...\">)\n          let startTag = `<${nodeName}`;\n\n          // Add attributes\n          if (node.attributes && node.attributes.length > 0) {\n            for (let attr of node.attributes) {\n              startTag += ` ${attr.name}=\"${attr.value}\"`;\n            }\n          }\n          startTag += \">\";\n\n          // Check if tag has children (excluding empty TextNodes)\n          const hasSignificantChildren = Array.from(node.childNodes).some(\n            (child) =>\n              child.nodeType !== Node.TEXT_NODE ||\n              child.textContent.trim().length > 0\n          );\n\n          if (!hasSignificantChildren) {\n            // Handle self-closing or empty tags (e.g., <br />)\n            // Note: In XHTML, <tag></tag> is more common than <tag />\n            // Here we use common logic: Open tag, close tag on same line\n            output += `${level}${startTag.replace(\">\", \"/>\")}\\n`;\n          } else {\n            // Open tag on new line\n            output += `${level}${startTag}\\n`;\n\n            // Increase indentation level and process children\n            const nextLevel = level + indent;\n            Array.from(node.childNodes).forEach((child) =>\n              processNode(child, nextLevel)\n            );\n\n            // Close tag on new line with old indentation level\n            output += `${level}</${nodeName}>\\n`;\n          }\n          break;\n\n        case Node.TEXT_NODE: // 3: Text content\n          const text = node.textContent.trim();\n          if (text.length > 0) {\n            // Handle plain text (e.g., content inside <p>)\n            // If it's plain text, add it to current line or new line\n            output += `${level}${text}\\n`;\n          }\n          break;\n\n        case Node.COMMENT_NODE: // 8: Comment (e.g., <!-- comment -->)\n          output += `${level}<!--${node.textContent}-->\\n`;\n          break;\n\n        case Node.CDATA_SECTION_NODE: // 4: CDATA Section (Safe for code in <ac:parameter>)\n          // This is the most important case for Mermaid content\n          output += `${level}<![CDATA[${node.textContent}]]>\\n`;\n          break;\n\n        // You can add other cases like DOCUMENT_TYPE_NODE, PROCESSING_INSTRUCTION_NODE if needed\n      }\n    }\n\n    // Start processing from children of temporary root tag\n    Array.from(rootElement.childNodes).forEach((node) =>\n      processNode(node, currentIndent)\n    );\n\n    return output.trim();\n  }\n\n  /**\n   * Check if a tag is self-closing\n   * @param {string} tag - HTML tag string\n   * @returns {boolean} True if self-closing\n   */\n  static isSelfClosingTag(tag) {\n    const selfClosing = [\n      \"br\",\n      \"hr\", \n      \"img\",\n      \"input\",\n      \"meta\",\n      \"link\",\n      \"source\",\n      \"track\",\n      \"wbr\",\n    ];\n    return selfClosing.some((t) => tag.startsWith(`<${t}`));\n  }\n\n  /**\n   * Clean up XML markers from content\n   * @param {string} content - Content with XML markers\n   * @returns {string} Cleaned content\n   */\n  static cleanXMLMarkers(content) {\n    if (!content) return \"\";\n    \n    // Remove ```xml and ``` markers\n    let cleaned = content.replace(/^```xml\\s*\\n?/gm, \"\");\n    cleaned = cleaned.replace(/\\n?```\\s*$/gm, \"\");\n    \n    return cleaned;\n  }\n\n  /**\n   * Escape regex special characters\n   * @param {string} string - String to escape\n   * @returns {string} Escaped string\n   */\n  static escapeRegex(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n}\n","/**\n * Content Synchronizer - Handles synchronization between different content sources\n * (Raw editor, Mermaid diagrams, etc.)\n */\nimport { XMLFormatter } from \"./xmlFormatter.js\";\n\nexport class ContentSynchronizer {\n  constructor() {\n    // Simplified - no change tracking needed\n  }\n\n  /**\n   * Sync all content sources to main content object\n   * @param {Object} currentContent - Main content object\n   * @param {HTMLElement} editorContainer - Editor container element\n   * @param {Array} mermaidDiagrams - Array of Mermaid diagrams\n   * @returns {Object} Updated content object\n   */\n  syncAllContent(currentContent, editorContainer, mermaidDiagrams = []) {\n    if (!currentContent) {\n      throw new Error(\"Current content is required\");\n    }\n\n    // 1. Sync from raw editor\n    const rawContent = this.syncFromRawEditor(currentContent, editorContainer);\n\n    // 2. Sync Mermaid changes\n    const finalContent = this.syncMermaidChanges(rawContent, mermaidDiagrams);\n\n    console.log(\"🔄 All content synchronized\");\n    return finalContent;\n  }\n\n  /**\n   * Sync content from raw editor\n   * @param {Object} currentContent - Current content object\n   * @param {HTMLElement} editorContainer - Editor container\n   * @returns {Object} Updated content object\n   */\n  syncFromRawEditor(currentContent, editorContainer) {\n    if (!editorContainer) return currentContent;\n\n    const rawEditor = editorContainer.querySelector(\"#raw-content-editor\");\n    if (!rawEditor || !rawEditor.value) return currentContent;\n\n    const updatedContent = { ...currentContent };\n    updatedContent.full_storage_format = rawEditor.value.trim();\n\n    // Also update content field if it exists\n    if (updatedContent.content !== undefined) {\n      updatedContent.content = rawEditor.value.trim();\n    }\n\n    console.log(\"📝 Synced content from raw editor\");\n    return updatedContent;\n  }\n\n  /**\n   * Sync Mermaid diagram changes back to content\n   * @param {Object} currentContent - Current content object\n   * @param {Array} mermaidDiagrams - Array of Mermaid diagrams\n   * @returns {Object} Updated content object\n   */\n  syncMermaidChanges(currentContent, mermaidDiagrams = []) {\n    console.log(\"🔄 Starting Mermaid sync...\", {\n      diagramsCount: mermaidDiagrams.length,\n      hasContent: !!currentContent,\n    });\n\n    if (!mermaidDiagrams || mermaidDiagrams.length === 0) {\n      console.log(\"⚠️ No Mermaid diagrams to sync\");\n      return currentContent;\n    }\n\n    let content =\n      currentContent.full_storage_format || currentContent.content || \"\";\n    console.log(\"📊 Processing all diagrams (no change check)...\");\n\n    // Process each diagram - always replace originalCode with code\n    mermaidDiagrams.forEach((diagram, index) => {\n      console.log(`� Processing diagram ${index}:`, {\n        id: diagram.id,\n        hasOriginalCode: !!diagram.originalCode,\n        hasCode: !!diagram.code,\n        originalLength: diagram.originalCode?.length || 0,\n        codeLength: diagram.code?.length || 0,\n      });\n\n      if (diagram.originalCode && diagram.code) {\n        console.log(`📝 Replacing code for diagram ${diagram.id || index}...`);\n        console.log(\n          `📋 Original code preview: \"${diagram.originalCode.substring(\n            0,\n            100\n          )}...\"`\n        );\n        console.log(\n          `📋 New code preview: \"${diagram.code.substring(0, 100)}...\"`\n        );\n\n        const updatedContent = this.updateDiagramInContent(\n          content,\n          diagram,\n          index\n        );\n        if (updatedContent !== content) {\n          content = updatedContent;\n          console.log(\n            `✅ Successfully replaced code for diagram ${diagram.id || index}`\n          );\n        } else {\n          console.warn(\n            `⚠️ Failed to replace code for diagram ${\n              diagram.id || index\n            } - no pattern matched`\n          );\n        }\n      } else {\n        console.log(\n          `⚠️ Skipping diagram ${\n            diagram.id || index\n          } - missing originalCode or code`\n        );\n      }\n    });\n\n    // Always return updated content\n    const updatedContent = { ...currentContent };\n    updatedContent.full_storage_format = content;\n\n    if (updatedContent.content !== undefined) {\n      updatedContent.content = content;\n    }\n\n    console.log(\"✅ Mermaid sync completed - all diagrams processed\");\n    return updatedContent;\n  }\n\n  /**\n   * Update a specific diagram in content string\n   * @param {string} content - Full content string\n   * @param {Object} diagram - Diagram object\n   * @param {number} index - Diagram index\n   * @returns {string} Updated content string\n   */\n  updateDiagramInContent(content, diagram, index) {\n    if (!content || !diagram) {\n      console.log(\"⚠️ updateDiagramInContent: Missing content or diagram\");\n      return content;\n    }\n\n    const originalCode = diagram.originalCode;\n    const newCode = diagram.code;\n\n    console.log(\"🔄 Updating diagram in content:\", {\n      index,\n      diagramId: diagram.id,\n      hasOriginalCode: !!originalCode,\n      hasNewCode: !!newCode,\n      originalLength: originalCode?.length || 0,\n      newLength: newCode?.length || 0,\n    });\n\n    if (!originalCode || !newCode) {\n      console.log(\"⚠️ Missing originalCode or newCode - skipping update\");\n      return content;\n    }\n\n    console.log(\"📋 Replacing originalCode with newCode (no equality check)\");\n    console.log(`📋 Original: \"${originalCode.substring(0, 50)}...\"`);\n    console.log(`📋 New: \"${newCode.substring(0, 50)}...\"`);\n\n    // Try multiple patterns to find and replace the diagram\n    const patterns = [\n      // Pattern 1: CDATA section in ac:parameter\n      {\n        pattern: new RegExp(\n          `(<ac:parameter[^>]*ac:name=\"code\"[^>]*>\\\\s*<\\\\!\\\\[CDATA\\\\[\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*\\\\]\\\\]>\\\\s*</ac:parameter>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n      // Pattern 2: Plain text in ac:parameter\n      {\n        pattern: new RegExp(\n          `(<ac:parameter[^>]*ac:name=\"code\"[^>]*>\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*</ac:parameter>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n      // Pattern 3: ac:plain-text-body with CDATA\n      {\n        pattern: new RegExp(\n          `(<ac:plain-text-body>\\\\s*<\\\\!\\\\[CDATA\\\\[\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*\\\\]\\\\]>\\\\s*</ac:plain-text-body>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n    ];\n\n    let updatedContent = content;\n    let patternMatched = false;\n\n    console.log(\"🔍 Trying patterns to match and replace...\");\n\n    for (let i = 0; i < patterns.length; i++) {\n      const { pattern, replacement } = patterns[i];\n\n      console.log(`🔍 Testing pattern ${i + 1}...`);\n\n      // Reset regex lastIndex to avoid issues with global flag\n      pattern.lastIndex = 0;\n\n      if (pattern.test(content)) {\n        console.log(`✅ Pattern ${i + 1} matched! Applying replacement...`);\n\n        // Reset again before replace\n        pattern.lastIndex = 0;\n        updatedContent = content.replace(pattern, replacement);\n        patternMatched = true;\n\n        console.log(`✅ Successfully updated diagram using pattern ${i + 1}`);\n        break;\n      } else {\n        console.log(`❌ Pattern ${i + 1} did not match`);\n      }\n    }\n\n    if (!patternMatched) {\n      console.warn(\n        `⚠️ Could not find pattern to update diagram ${diagram.id || index}`\n      );\n      console.log(\"🔍 Debug info:\");\n      console.log(\n        \"Original code preview:\",\n        originalCode.substring(0, 100) + \"...\"\n      );\n      console.log(\"New code preview:\", newCode.substring(0, 100) + \"...\");\n      console.log(\"Content sample:\", content.substring(0, 500) + \"...\");\n\n      // Try to find the original code manually for debugging\n      const simpleSearch = content.includes(originalCode.trim());\n      console.log(\"Simple string search found original code:\", simpleSearch);\n    } else {\n      console.log(\"✅ Pattern matching successful, content updated\");\n    }\n\n    return updatedContent;\n  }\n\n  /**\n   * Validate content structure\n   * @param {Object} content - Content to validate\n   * @returns {Object} Validation result\n   */\n  validateContent(content) {\n    const result = {\n      isValid: true,\n      errors: [],\n      warnings: [],\n    };\n\n    if (!content) {\n      result.isValid = false;\n      result.errors.push(\"Content is null or undefined\");\n      return result;\n    }\n\n    // Check required fields\n    if (!content.full_storage_format && !content.content) {\n      result.isValid = false;\n      result.errors.push(\"Missing full_storage_format or content field\");\n    }\n\n    // Check for XML validity\n    const xmlContent = content.full_storage_format || content.content;\n    if (xmlContent) {\n      try {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(\n          `<root>${xmlContent}</root>`,\n          \"text/xml\"\n        );\n        const errors = doc.getElementsByTagName(\"parsererror\");\n\n        if (errors.length > 0) {\n          result.warnings.push(\"Content may contain XML parsing issues\");\n        }\n      } catch (error) {\n        result.warnings.push(`XML validation warning: ${error.message}`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Create content backup\n   * @param {Object} content - Content to backup\n   * @returns {Object} Content backup\n   */\n  createBackup(content) {\n    return {\n      content: JSON.parse(JSON.stringify(content)),\n      timestamp: Date.now(),\n    };\n  }\n\n  /**\n   * Restore from backup\n   * @param {Object} backup - Backup to restore\n   * @returns {Object} Restored content\n   */\n  restoreFromBackup(backup) {\n    if (!backup || !backup.content) {\n      throw new Error(\"Invalid backup data\");\n    }\n\n    console.log(\"🔄 Restored content from backup\");\n    return backup.content;\n  }\n}\n","// DOM Manipulation Helpers\n// Utility functions for DOM operations and event handling\n\nexport class DOMHelpers {\n  /**\n   * Safely query selector with error handling\n   * @param {HTMLElement} container - Container element\n   * @param {string} selector - CSS selector\n   * @returns {HTMLElement|null} Found element or null\n   */\n  static querySelector(container, selector) {\n    try {\n      return container.querySelector(selector);\n    } catch (error) {\n      console.error(`Error querying selector \"${selector}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Safely query all selectors with error handling\n   * @param {HTMLElement} container - Container element\n   * @param {string} selector - CSS selector\n   * @returns {NodeList} Found elements\n   */\n  static querySelectorAll(container, selector) {\n    try {\n      return container.querySelectorAll(selector);\n    } catch (error) {\n      console.error(`Error querying selector \"${selector}\":`, error);\n      return [];\n    }\n  }\n\n  /**\n   * Add event listener with error handling\n   * @param {HTMLElement} element - Target element\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   * @param {object} options - Event options\n   */\n  static addEventListener(element, event, handler, options = {}) {\n    if (!element) {\n      console.warn(`Cannot add event listener: element is null`);\n      return;\n    }\n\n    try {\n      element.addEventListener(event, handler, options);\n    } catch (error) {\n      console.error(`Error adding event listener for \"${event}\":`, error);\n    }\n  }\n\n  /**\n   * Remove event listener with error handling\n   * @param {HTMLElement} element - Target element\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   */\n  static removeEventListener(element, event, handler) {\n    if (!element) {\n      console.warn(`Cannot remove event listener: element is null`);\n      return;\n    }\n\n    try {\n      element.removeEventListener(event, handler);\n    } catch (error) {\n      console.error(`Error removing event listener for \"${event}\":`, error);\n    }\n  }\n\n  /**\n   * Toggle class on element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to toggle\n   * @param {boolean} force - Force add/remove\n   */\n  static toggleClass(element, className, force = undefined) {\n    if (!element) {\n      console.warn(`Cannot toggle class: element is null`);\n      return;\n    }\n\n    try {\n      if (force !== undefined) {\n        element.classList.toggle(className, force);\n      } else {\n        element.classList.toggle(className);\n      }\n    } catch (error) {\n      console.error(`Error toggling class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Add class to element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to add\n   */\n  static addClass(element, className) {\n    if (!element) {\n      console.warn(`Cannot add class: element is null`);\n      return;\n    }\n\n    try {\n      element.classList.add(className);\n    } catch (error) {\n      console.error(`Error adding class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Remove class from element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to remove\n   */\n  static removeClass(element, className) {\n    if (!element) {\n      console.warn(`Cannot remove class: element is null`);\n      return;\n    }\n\n    try {\n      element.classList.remove(className);\n    } catch (error) {\n      console.error(`Error removing class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Set element content safely\n   * @param {HTMLElement} element - Target element\n   * @param {string} content - Content to set\n   * @param {boolean} isHTML - Whether content is HTML (default: false)\n   */\n  static setContent(element, content, isHTML = false) {\n    if (!element) {\n      console.warn(`Cannot set content: element is null`);\n      return;\n    }\n\n    try {\n      // Handle form elements specially\n      if (\n        element.tagName === \"INPUT\" ||\n        element.tagName === \"TEXTAREA\" ||\n        element.tagName === \"SELECT\"\n      ) {\n        element.value = content || \"\";\n        return;\n      }\n\n      if (isHTML) {\n        element.innerHTML = content;\n      } else {\n        element.textContent = content;\n      }\n    } catch (error) {\n      console.error(`Error setting content:`, error);\n    }\n  }\n\n  /**\n   * Get element content safely\n   * @param {HTMLElement} element - Target element\n   * @param {boolean} isHTML - Whether to get HTML content (default: false)\n   * @returns {string} Element content\n   */\n  static getContent(element, isHTML = false) {\n    if (!element) {\n      console.warn(`Cannot get content: element is null`);\n      return \"\";\n    }\n\n    try {\n      // Handle form elements specially\n      if (\n        element.tagName === \"INPUT\" ||\n        element.tagName === \"TEXTAREA\" ||\n        element.tagName === \"SELECT\"\n      ) {\n        return element.value || \"\";\n      }\n\n      return isHTML ? element.innerHTML : element.textContent;\n    } catch (error) {\n      console.error(`Error getting content:`, error);\n      return \"\";\n    }\n  }\n\n  /**\n   * Create element with attributes and content\n   * @param {string} tagName - HTML tag name\n   * @param {object} attributes - Element attributes\n   * @param {string} content - Element content\n   * @param {boolean} isHTML - Whether content is HTML\n   * @returns {HTMLElement} Created element\n   */\n  static createElement(tagName, attributes = {}, content = \"\", isHTML = false) {\n    try {\n      const element = document.createElement(tagName);\n\n      // Set attributes\n      Object.entries(attributes).forEach(([key, value]) => {\n        if (key === \"className\") {\n          element.className = value;\n        } else if (key === \"style\" && typeof value === \"object\") {\n          Object.assign(element.style, value);\n        } else {\n          element.setAttribute(key, value);\n        }\n      });\n\n      // Set content\n      if (content) {\n        this.setContent(element, content, isHTML);\n      }\n\n      return element;\n    } catch (error) {\n      console.error(`Error creating element \"${tagName}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Remove element safely\n   * @param {HTMLElement} element - Element to remove\n   */\n  static removeElement(element) {\n    if (!element) {\n      console.warn(`Cannot remove element: element is null`);\n      return;\n    }\n\n    try {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      } else {\n        element.remove();\n      }\n    } catch (error) {\n      console.error(`Error removing element:`, error);\n    }\n  }\n\n  /**\n   * Check if element exists in DOM\n   * @param {HTMLElement} element - Element to check\n   * @returns {boolean} True if element exists in DOM\n   */\n  static isInDOM(element) {\n    if (!element) return false;\n    return document.body.contains(element);\n  }\n\n  /**\n   * Scroll element into view smoothly\n   * @param {HTMLElement} element - Element to scroll to\n   * @param {object} options - Scroll options\n   */\n  static scrollIntoView(\n    element,\n    options = { behavior: \"smooth\", block: \"center\" }\n  ) {\n    if (!element) {\n      console.warn(`Cannot scroll: element is null`);\n      return;\n    }\n\n    try {\n      element.scrollIntoView(options);\n    } catch (error) {\n      console.error(`Error scrolling element into view:`, error);\n    }\n  }\n\n  /**\n   * Get element dimensions\n   * @param {HTMLElement} element - Target element\n   * @returns {object} Element dimensions\n   */\n  static getDimensions(element) {\n    if (!element) {\n      console.warn(`Cannot get dimensions: element is null`);\n      return { width: 0, height: 0, top: 0, left: 0 };\n    }\n\n    try {\n      const rect = element.getBoundingClientRect();\n      return {\n        width: rect.width,\n        height: rect.height,\n        top: rect.top,\n        left: rect.left,\n        right: rect.right,\n        bottom: rect.bottom,\n      };\n    } catch (error) {\n      console.error(`Error getting element dimensions:`, error);\n      return { width: 0, height: 0, top: 0, left: 0 };\n    }\n  }\n\n  /**\n   * Deep clone element\n   * @param {HTMLElement} element - Element to clone\n   * @param {boolean} deep - Whether to deep clone (default: true)\n   * @returns {HTMLElement} Cloned element\n   */\n  static cloneElement(element, deep = true) {\n    if (!element) {\n      console.warn(`Cannot clone element: element is null`);\n      return null;\n    }\n\n    try {\n      return element.cloneNode(deep);\n    } catch (error) {\n      console.error(`Error cloning element:`, error);\n      return null;\n    }\n  }\n}\n","// HTML Templates for Confluence Editor\n// Contains all HTML template strings and styling utilities\n\nexport class HTMLTemplates {\n  /**\n   * Get the main editor HTML template\n   * @returns {string} HTML template string\n   */\n  static getEditorTemplate() {\n    return `\n      <div class=\"confluence-editor-container\">\n        <div class=\"confluence-editor-header\">\n          <h2 class=\"confluence-editor-title\">\n            📝 Chỉnh sửa nội dung Confluence\n          </h2>\n          <div class=\"confluence-editor-actions\">\n            <button class=\"editor-btn editor-btn-primary\" id=\"editor-save-btn\">\n              💾 Lưu thay đổi\n            </button>\n            <button class=\"editor-btn editor-btn-secondary\" id=\"editor-close-btn\">\n              ✕ Đóng\n            </button>\n          </div>\n        </div>\n\n        <div class=\"confluence-editor-tabs\">\n          <button class=\"confluence-editor-tab active\" id=\"content-tab\">\n            📝 Chỉnh sửa nội dung\n          </button>\n          <button class=\"confluence-editor-tab\" id=\"mermaid-tab\">\n            📊 Chỉnh sửa Mermaid\n          </button>\n        </div>\n\n        <div class=\"confluence-editor-body\">\n          ${this.getContentTabTemplate()}\n          ${this.getMermaidTabTemplate()}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get content tab template\n   * @returns {string} Content tab HTML\n   */\n  static getContentTabTemplate() {\n    return `\n      <!-- Content Tab -->\n      <div class=\"tab-content active\" id=\"content-tab-content\">\n        <div class=\"content-editor-layout\">\n          <!-- Raw XHTML Editor (Left) -->\n          <div class=\"content-editor-pane\">\n            <div class=\"content-editor-header\">\n              📝 Raw XHTML Content\n            </div>\n            <div class=\"content-editor-body\">\n              <textarea class=\"raw-content-editor\" id=\"raw-content-editor\" placeholder=\"Raw XHTML content will appear here...\"></textarea>\n            </div>\n          </div>\n\n          <!-- Preview Pane (Right) -->\n          <div class=\"content-preview-pane\">\n            <div class=\"content-editor-header\">\n              👁️ Live Preview\n            </div>\n            <div class=\"content-editor-body\">\n              <div class=\"content-preview\" id=\"content-preview\">\n                <!-- Preview content will be rendered here -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get mermaid tab template\n   * @returns {string} Mermaid tab HTML\n   */\n  static getMermaidTabTemplate() {\n    return `\n      <!-- Mermaid Tab -->\n      <div class=\"tab-content\" id=\"mermaid-tab-content\">\n        <div class=\"mermaid-editor-layout\">\n          <!-- Mermaid Code Editor (Left) -->\n          <div class=\"mermaid-code-pane\">\n            <div class=\"mermaid-editor-header\">\n              📊 Mermaid Code\n              <select id=\"mermaid-selector\" class=\"mermaid-selector\">\n                <option value=\"\">Select diagram...</option>\n              </select>\n            </div>\n            <div class=\"mermaid-editor-body\">\n              <textarea class=\"mermaid-code-editor\" id=\"mermaid-code-editor\" placeholder=\"Select a Mermaid diagram to edit...\"></textarea>\n            </div>\n          </div>\n\n          <!-- Mermaid Preview (Center) -->\n          <div class=\"mermaid-preview-pane\">\n            <div class=\"mermaid-editor-header\">\n              📊 Diagram Preview\n              ${this.getZoomControlsTemplate()}\n            </div>\n            <div class=\"mermaid-editor-body\">\n              <div class=\"mermaid-preview\" id=\"mermaid-preview\">\n                <div class=\"mermaid-placeholder\">\n                  Select a diagram to preview\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- AI Chat (Right) -->\n          <div class=\"mermaid-ai-pane\">\n            <div class=\"mermaid-editor-header\">\n              🤖 AI Assistant\n            </div>\n            <div class=\"mermaid-editor-body\">\n              ${this.getAIChatTemplate()}\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get zoom controls template\n   * @returns {string} Zoom controls HTML\n   */\n  static getZoomControlsTemplate() {\n    return `\n      <div class=\"mermaid-zoom-controls\">\n        <button class=\"zoom-btn\" id=\"zoom-out\" title=\"Zoom Out\">−</button>\n        <div class=\"zoom-level\" id=\"zoom-level\">100%</div>\n        <button class=\"zoom-btn\" id=\"zoom-in\" title=\"Zoom In\">+</button>\n        <button class=\"zoom-btn\" id=\"zoom-reset\" title=\"Reset Zoom\">⌂</button>\n      </div>\n    `;\n  }\n\n  /**\n   * Get AI chat template\n   * @returns {string} AI chat HTML\n   */\n  static getAIChatTemplate() {\n    return `\n      <div class=\"ai-chat-container\">\n        <div class=\"ai-chat-messages\" id=\"ai-chat-messages\">\n          <div class=\"ai-message\">\n            <div class=\"ai-avatar\">🤖</div>\n            <div class=\"ai-text\">Hi! I can help you edit Mermaid diagrams. Select a diagram and ask me to modify it.</div>\n          </div>\n        </div>\n        <div class=\"ai-chat-input\">\n          <input type=\"text\" id=\"ai-prompt-input\" placeholder=\"Describe how you want to modify the diagram...\" />\n          <button id=\"ai-send-btn\" class=\"ai-send-btn\">Send</button>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Apply inline styles to HTML content for preview\n   * @param {string} content - Raw HTML content\n   * @returns {string} Styled HTML content\n   */\n  static applyPreviewStyles(content) {\n    return content\n      .replace(\n        /<h1>/g,\n        \"<h1 style='color: #333; margin: 24px 0 16px 0; font-size: 1.8rem; border-bottom: 2px solid #e1e5e9; padding-bottom: 8px;'>\"\n      )\n      .replace(\n        /<h2>/g,\n        \"<h2 style='color: #555; margin: 20px 0 12px 0; font-size: 1.4rem;'>\"\n      )\n      .replace(\n        /<h3>/g,\n        \"<h3 style='color: #666; margin: 16px 0 8px 0; font-size: 1.2rem;'>\"\n      )\n      .replace(\n        /<p>/g,\n        \"<p style='margin: 12px 0; line-height: 1.6; color: #333;'>\"\n      )\n      .replace(/<ul>/g, \"<ul style='margin: 12px 0; padding-left: 24px;'>\")\n      .replace(/<li>/g, \"<li style='margin: 4px 0; line-height: 1.5;'>\")\n      .replace(\n        /<table>/g,\n        \"<table style='border-collapse: collapse; width: 100%; margin: 20px 0; box-shadow: 0 1px 3px rgba(0,0,0,0.1);'>\"\n      )\n      .replace(\n        /<th>/g,\n        \"<th style='border: 1px solid #ddd; padding: 12px; background: #f8f9fa; font-weight: 600; text-align: left;'>\"\n      )\n      .replace(\n        /<td>/g,\n        \"<td style='border: 1px solid #ddd; padding: 12px; vertical-align: top;'>\"\n      )\n      .replace(/<strong>/g, \"<strong style='color: #2c3e50;'>\")\n      .replace(\n        /<code>/g,\n        \"<code style='background: #f1f3f4; padding: 2px 4px; border-radius: 3px; font-family: monospace; font-size: 0.9em;'>\"\n      );\n  }\n\n  /**\n   * Create AI message HTML\n   * @param {string} type - Message type ('user' or 'ai')\n   * @param {string} text - Message text\n   * @returns {string} AI message HTML\n   */\n  static createAIMessage(type, text) {\n    const avatar = type === \"user\" ? \"👤\" : \"🤖\";\n    const bgColor = type === \"user\" ? \"#e5e7eb\" : \"#3b82f6\";\n\n    return `\n      <div class=\"ai-message\">\n        <div class=\"ai-avatar\" style=\"background: ${bgColor};\">${avatar}</div>\n        <div class=\"ai-text\">${text}</div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create mermaid diagram container with styling\n   * @param {number} index - Diagram index\n   * @returns {HTMLElement} Mermaid container element\n   */\n  static createMermaidContainer(index) {\n    const mermaidDiv = document.createElement(\"div\");\n    mermaidDiv.className = \"mermaid-diagram\";\n    mermaidDiv.id = `preview-mermaid-${index}`;\n    mermaidDiv.style.cssText =\n      \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\n    return mermaidDiv;\n  }\n}\n","/**\n * Storage Manager - Handles saving and loading content changes\n * Supports both callback-based saving and localStorage backup\n */\nexport class StorageManager {\n  constructor() {\n    this.STORAGE_KEY = 'confluence_editor_backup';\n    this.AUTO_SAVE_INTERVAL = 30000; // 30 seconds\n    this.autoSaveTimer = null;\n  }\n\n  /**\n   * Save content with multiple strategies\n   * @param {Object} content - Content to save\n   * @param {Function} saveCallback - Optional callback for external save\n   * @param {Object} options - Save options\n   */\n  async saveContent(content, saveCallback = null, options = {}) {\n    const { \n      enableLocalStorage = true, \n      enableCallback = true,\n      showNotification = true \n    } = options;\n\n    const results = {\n      localStorage: false,\n      callback: false,\n      errors: []\n    };\n\n    // 1. Save to localStorage as backup\n    if (enableLocalStorage) {\n      try {\n        this.saveToLocalStorage(content);\n        results.localStorage = true;\n        console.log('✅ Content saved to localStorage');\n      } catch (error) {\n        console.error('❌ Failed to save to localStorage:', error);\n        results.errors.push(`localStorage: ${error.message}`);\n      }\n    }\n\n    // 2. Call external save callback\n    if (enableCallback && saveCallback) {\n      try {\n        await this.callSaveCallback(saveCallback, content);\n        results.callback = true;\n        console.log('✅ Content saved via callback');\n      } catch (error) {\n        console.error('❌ Failed to save via callback:', error);\n        results.errors.push(`callback: ${error.message}`);\n      }\n    }\n\n    // 3. Show notification\n    if (showNotification) {\n      this.showSaveNotification(results);\n    }\n\n    return results;\n  }\n\n  /**\n   * Save content to localStorage\n   * @param {Object} content - Content to save\n   */\n  saveToLocalStorage(content) {\n    const backupData = {\n      content: content,\n      timestamp: Date.now(),\n      version: '1.0'\n    };\n\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(backupData));\n  }\n\n  /**\n   * Load content from localStorage\n   * @returns {Object|null} Saved content or null\n   */\n  loadFromLocalStorage() {\n    try {\n      const saved = localStorage.getItem(this.STORAGE_KEY);\n      if (!saved) return null;\n\n      const backupData = JSON.parse(saved);\n      \n      // Check if backup is recent (within 24 hours)\n      const age = Date.now() - backupData.timestamp;\n      const maxAge = 24 * 60 * 60 * 1000; // 24 hours\n      \n      if (age > maxAge) {\n        console.log('🗑️ Removing old localStorage backup');\n        localStorage.removeItem(this.STORAGE_KEY);\n        return null;\n      }\n\n      console.log('📦 Loaded content from localStorage backup');\n      return backupData.content;\n    } catch (error) {\n      console.error('❌ Failed to load from localStorage:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Clear localStorage backup\n   */\n  clearLocalStorage() {\n    localStorage.removeItem(this.STORAGE_KEY);\n    console.log('🗑️ Cleared localStorage backup');\n  }\n\n  /**\n   * Call external save callback\n   * @param {Function} callback - Save callback function\n   * @param {Object} content - Content to save\n   */\n  async callSaveCallback(callback, content) {\n    if (typeof callback !== 'function') {\n      throw new Error('Save callback is not a function');\n    }\n\n    // Handle both sync and async callbacks\n    const result = callback(content);\n    if (result && typeof result.then === 'function') {\n      await result;\n    }\n  }\n\n  /**\n   * Show save notification\n   * @param {Object} results - Save results\n   */\n  showSaveNotification(results) {\n    const { localStorage, callback, errors } = results;\n    \n    if (localStorage && callback) {\n      this.showNotification('✅ Đã lưu thay đổi thành công', 'success');\n    } else if (localStorage || callback) {\n      const method = localStorage ? 'localStorage' : 'callback';\n      this.showNotification(`⚠️ Đã lưu qua ${method} (một phần)`, 'warning');\n    } else {\n      this.showNotification('❌ Không thể lưu thay đổi', 'error');\n    }\n\n    if (errors.length > 0) {\n      console.warn('Save errors:', errors);\n    }\n  }\n\n  /**\n   * Show notification to user\n   * @param {string} message - Notification message\n   * @param {string} type - Notification type (success, warning, error)\n   */\n  showNotification(message, type = 'info') {\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `confluence-editor-notification ${type}`;\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 12px 20px;\n      border-radius: 6px;\n      color: white;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      z-index: 10001;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      transition: all 0.3s ease;\n      max-width: 300px;\n    `;\n\n    // Set background color based on type\n    const colors = {\n      success: '#28a745',\n      warning: '#ffc107',\n      error: '#dc3545',\n      info: '#17a2b8'\n    };\n    notification.style.background = colors[type] || colors.info;\n\n    notification.textContent = message;\n    document.body.appendChild(notification);\n\n    // Auto remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentNode) {\n        notification.style.opacity = '0';\n        notification.style.transform = 'translateX(100%)';\n        setTimeout(() => {\n          notification.remove();\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * Start auto-save timer\n   * @param {Function} saveFunction - Function to call for auto-save\n   */\n  startAutoSave(saveFunction) {\n    this.stopAutoSave();\n    \n    this.autoSaveTimer = setInterval(() => {\n      try {\n        saveFunction();\n        console.log('🔄 Auto-save completed');\n      } catch (error) {\n        console.error('❌ Auto-save failed:', error);\n      }\n    }, this.AUTO_SAVE_INTERVAL);\n\n    console.log('⏰ Auto-save started (every 30 seconds)');\n  }\n\n  /**\n   * Stop auto-save timer\n   */\n  stopAutoSave() {\n    if (this.autoSaveTimer) {\n      clearInterval(this.autoSaveTimer);\n      this.autoSaveTimer = null;\n      console.log('⏹️ Auto-save stopped');\n    }\n  }\n\n  /**\n   * Check if there are unsaved changes in localStorage\n   * @param {Object} currentContent - Current content to compare\n   * @returns {boolean} True if there are unsaved changes\n   */\n  hasUnsavedChanges(currentContent) {\n    const saved = this.loadFromLocalStorage();\n    if (!saved) return false;\n\n    try {\n      const currentStr = JSON.stringify(currentContent);\n      const savedStr = JSON.stringify(saved);\n      return currentStr !== savedStr;\n    } catch (error) {\n      console.error('❌ Error comparing content:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get backup info\n   * @returns {Object|null} Backup information\n   */\n  getBackupInfo() {\n    try {\n      const saved = localStorage.getItem(this.STORAGE_KEY);\n      if (!saved) return null;\n\n      const backupData = JSON.parse(saved);\n      return {\n        timestamp: backupData.timestamp,\n        age: Date.now() - backupData.timestamp,\n        version: backupData.version\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n}\n","// Confluence Content Editor with Rich Text Editing\r\n// Handles editing interface when Confluence content is returned from API\r\n\r\nimport { ContentSynchronizer } from \"./utils/contentSynchronizer.js\";\r\nimport { DOMHelpers } from \"./utils/domHelpers.js\";\r\nimport { HTMLTemplates } from \"./utils/htmlTemplates.js\";\r\nimport { MermaidRenderer } from \"./utils/mermaidRenderer.js\";\r\nimport { StorageManager } from \"./utils/storageManager.js\";\r\nimport { XMLFormatter } from \"./utils/xmlFormatter.js\";\r\n\r\nclass ConfluenceEditor {\r\n  constructor() {\r\n    this.isEditorOpen = false;\r\n    this.currentContent = null;\r\n    this.originalContent = null;\r\n    this.onSave = null;\r\n    this.mermaidDiagrams = [];\r\n    this.mermaidDiagramsMap = new Map();\r\n    this.currentSelectedDiagram = null;\r\n    this.currentSelectedDiagramId = null;\r\n    this.editorContainer = null;\r\n    this.textEditor = null; // CodeMirror instance\r\n    this.previewContainer = null;\r\n    this.isPreviewMode = false;\r\n    this.autoSaveTimer = null;\r\n    this.isModified = false;\r\n\r\n    // Zoom controls\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n\r\n    // Initialize utility classes\r\n    this.storageManager = new StorageManager();\r\n    this.contentSynchronizer = new ContentSynchronizer();\r\n  }\r\n\r\n  openEditor(content, options = {}) {\r\n    if (this.isEditorOpen) {\r\n      this.closeEditor();\r\n    }\r\n\r\n    console.log(\"📝 Opening Confluence Editor with content:\", content);\r\n\r\n    // Auto-restore from localStorage backup if available (no confirm)\r\n    const backup = this.storageManager.loadFromLocalStorage();\r\n    if (backup && options.allowBackupRestore !== false) {\r\n      const backupInfo = this.storageManager.getBackupInfo();\r\n      const ageMinutes = Math.floor(backupInfo.age / (1000 * 60));\r\n\r\n      // Auto-restore if backup is recent (less than 30 minutes)\r\n      if (ageMinutes < 30) {\r\n        this.currentContent = backup;\r\n        console.log(\r\n          `📦 Auto-restored content from backup (${ageMinutes} minutes old)`\r\n        );\r\n      } else {\r\n        this.currentContent = content;\r\n        this.storageManager.clearLocalStorage();\r\n        console.log(\r\n          `📦 Backup too old (${ageMinutes} minutes), using original content`\r\n        );\r\n      }\r\n    } else {\r\n      this.currentContent = content;\r\n    }\r\n\r\n    this.originalContent = JSON.parse(JSON.stringify(content)); // Deep copy of original\r\n    this.isEditorOpen = true;\r\n\r\n    // Extract Mermaid diagrams from content\r\n    this.extractMermaidDiagrams();\r\n\r\n    // Create editor UI\r\n    this.createEditorUI(options);\r\n\r\n    // Initialize content tab (default)\r\n    this.initializeContentTab();\r\n  }\r\n\r\n  createEditorUI() {\r\n    const overlay = DOMHelpers.createElement(\"div\", {\r\n      className: \"confluence-editor-overlay\",\r\n    });\r\n\r\n    DOMHelpers.setContent(overlay, HTMLTemplates.getEditorTemplate(), true);\r\n    document.body.appendChild(overlay);\r\n    this.editorContainer = overlay;\r\n\r\n    // Bind events\r\n    this.bindEditorEvents();\r\n  }\r\n\r\n  bindEditorEvents() {\r\n    if (!this.editorContainer) return;\r\n\r\n    // Close button\r\n    const closeBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-close-btn\"\r\n    );\r\n    console.log(\"🔍 Close button found:\", !!closeBtn);\r\n    if (closeBtn) {\r\n      DOMHelpers.addEventListener(closeBtn, \"click\", () => {\r\n        console.log(\"🔄 Close button clicked\");\r\n        this.closeEditor();\r\n      });\r\n    } else {\r\n      console.error(\"❌ Close button not found!\");\r\n    }\r\n\r\n    // Save button\r\n    const saveBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-save-btn\"\r\n    );\r\n    console.log(\"🔍 Save button found:\", !!saveBtn);\r\n    if (saveBtn) {\r\n      DOMHelpers.addEventListener(saveBtn, \"click\", () => {\r\n        console.log(\"💾 Save button clicked\");\r\n        this.saveChanges();\r\n      });\r\n    } else {\r\n      console.error(\"❌ Save button not found!\");\r\n    }\r\n\r\n    // Tab buttons\r\n    const contentTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#content-tab\"\r\n    );\r\n    const mermaidTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-tab\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(contentTab, \"click\", () =>\r\n      this.switchTab(\"content\")\r\n    );\r\n    DOMHelpers.addEventListener(mermaidTab, \"click\", () =>\r\n      this.switchTab(\"mermaid\")\r\n    );\r\n\r\n    // Content tab elements\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n    DOMHelpers.addEventListener(rawEditor, \"input\", () =>\r\n      this.updateContentPreview()\r\n    );\r\n\r\n    // Mermaid tab elements\r\n    const mermaidSelector = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-selector\"\r\n    );\r\n    const mermaidCodeEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const aiSendBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-send-btn\"\r\n    );\r\n    const aiPromptInput = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-prompt-input\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(mermaidSelector, \"change\", (e) =>\r\n      this.selectMermaidDiagram(e.target.value)\r\n    );\r\n\r\n    DOMHelpers.addEventListener(mermaidCodeEditor, \"input\", () =>\r\n      this.updateMermaidPreview()\r\n    );\r\n\r\n    DOMHelpers.addEventListener(aiSendBtn, \"click\", () => this.sendAIPrompt());\r\n\r\n    DOMHelpers.addEventListener(aiPromptInput, \"keypress\", (e) => {\r\n      if (e.key === \"Enter\") this.sendAIPrompt();\r\n    });\r\n\r\n    // Zoom controls\r\n    const zoomInBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-in\"\r\n    );\r\n    const zoomOutBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-out\"\r\n    );\r\n    const zoomResetBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-reset\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(zoomInBtn, \"click\", () => this.zoomIn());\r\n    DOMHelpers.addEventListener(zoomOutBtn, \"click\", () => this.zoomOut());\r\n    DOMHelpers.addEventListener(zoomResetBtn, \"click\", () => this.resetZoom());\r\n\r\n    // Add wheel zoom to mermaid preview\r\n    const mermaidPreview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-preview\"\r\n    );\r\n    DOMHelpers.addEventListener(mermaidPreview, \"wheel\", (e) =>\r\n      this.handleWheel(e)\r\n    );\r\n\r\n    // Close on overlay click\r\n    DOMHelpers.addEventListener(this.editorContainer, \"click\", (e) => {\r\n      if (e.target === this.editorContainer) {\r\n        this.closeEditor();\r\n      }\r\n    });\r\n\r\n    // ESC key to close\r\n    const handleEsc = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        this.closeEditor();\r\n        DOMHelpers.removeEventListener(document, \"keydown\", handleEsc);\r\n      }\r\n    };\r\n    DOMHelpers.addEventListener(document, \"keydown\", handleEsc);\r\n  }\r\n\r\n  // Switch between tabs\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    const tabs = DOMHelpers.querySelectorAll(\r\n      this.editorContainer,\r\n      \".confluence-editor-tab\"\r\n    );\r\n    tabs.forEach((tab) => DOMHelpers.removeClass(tab, \"active\"));\r\n\r\n    const activeTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      `#${tabName}-tab`\r\n    );\r\n    DOMHelpers.addClass(activeTab, \"active\");\r\n\r\n    // Update tab content\r\n    const tabContents = DOMHelpers.querySelectorAll(\r\n      this.editorContainer,\r\n      \".tab-content\"\r\n    );\r\n    tabContents.forEach((content) => DOMHelpers.removeClass(content, \"active\"));\r\n\r\n    const activeContent = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      `#${tabName}-tab-content`\r\n    );\r\n    DOMHelpers.addClass(activeContent, \"active\");\r\n\r\n    // Initialize tab-specific content\r\n    if (tabName === \"content\") {\r\n      this.initializeContentTab();\r\n    } else if (tabName === \"mermaid\") {\r\n      this.initializeMermaidTab();\r\n    }\r\n\r\n    console.log(`Switched to ${tabName} tab`);\r\n  }\r\n\r\n  // Initialize content tab\r\n  initializeContentTab() {\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n\r\n    console.log(\"🔍 Initializing content tab...\");\r\n    console.log(\"Raw editor found:\", !!rawEditor);\r\n    console.log(\"Current content exists:\", !!this.currentContent);\r\n\r\n    if (rawEditor && this.currentContent) {\r\n      // Get raw content and clean up ```xml markers\r\n      let rawContent =\r\n        this.currentContent.full_storage_format ||\r\n        this.currentContent.content ||\r\n        \"\";\r\n\r\n      console.log(\"Raw content length:\", rawContent.length);\r\n\r\n      // Clean XML markers and format for better readability\r\n      rawContent = XMLFormatter.cleanXMLMarkers(rawContent);\r\n      rawContent = XMLFormatter.formatXHTML(rawContent);\r\n\r\n      console.log(\"Formatted content length:\", rawContent.length);\r\n\r\n      // Set content using direct assignment and DOMHelpers\r\n      rawEditor.value = rawContent;\r\n      DOMHelpers.setContent(rawEditor, rawContent);\r\n\r\n      console.log(\"✅ Content set to raw editor\");\r\n      this.updateContentPreview();\r\n    } else {\r\n      console.warn(\r\n        \"⚠️ Cannot initialize content tab - missing rawEditor or currentContent\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // Initialize mermaid tab\r\n  initializeMermaidTab() {\r\n    console.log(\"🔍 Initializing mermaid tab...\");\r\n\r\n    // Always extract diagrams to ensure sync with current content\r\n    console.log(\"📊 Extracting diagrams from current content...\");\r\n    this.extractMermaidDiagrams();\r\n\r\n    console.log(\"Diagrams available:\", this.mermaidDiagrams.length);\r\n    console.log(\"DiagramsMap size:\", this.mermaidDiagramsMap.size);\r\n    this.populateMermaidSelector();\r\n  }\r\n\r\n  // Update content preview\r\n  updateContentPreview() {\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n    const preview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#content-preview\"\r\n    );\r\n\r\n    if (!rawEditor || !preview) return;\r\n\r\n    const content = DOMHelpers.getContent(rawEditor);\r\n\r\n    // Update current content\r\n    if (this.currentContent) {\r\n      this.currentContent.full_storage_format = content;\r\n      // Mark as modified if content changed\r\n      if (\r\n        this.originalContent &&\r\n        content !== this.originalContent.full_storage_format\r\n      ) {\r\n        this.isModified = true;\r\n        this.updateSaveButtonState();\r\n      }\r\n    }\r\n\r\n    // Render preview\r\n    this.renderContentPreview(content, preview);\r\n  }\r\n\r\n  // Render content preview\r\n  renderContentPreview(content, previewElement) {\r\n    // Apply inline styles for preview\r\n    const processedContent = HTMLTemplates.applyPreviewStyles(content);\r\n\r\n    // Set the processed content to preview element\r\n    DOMHelpers.setContent(previewElement, processedContent, true);\r\n\r\n    // Render Mermaid diagrams\r\n    this.renderMermaidDiagramsInPreview();\r\n  }\r\n\r\n  // Render Mermaid diagrams in preview\r\n  renderMermaidDiagramsInPreview() {\r\n    // Use the new comprehensive Mermaid initialization\r\n    setTimeout(() => {\r\n      this.initializeMermaidInPreview();\r\n    }, 100);\r\n  }\r\n\r\n  // Initialize Mermaid diagrams in preview\r\n  async initializeMermaidInPreview() {\r\n    try {\r\n      // Initialize Mermaid\r\n      await MermaidRenderer.initializeMermaid();\r\n\r\n      console.log(\"🎨 Initializing Mermaid diagrams in preview...\");\r\n\r\n      // Find all mermaid code blocks in the preview\r\n      const previewDiv = DOMHelpers.querySelector(\r\n        this.editorContainer,\r\n        \"#content-preview\"\r\n      );\r\n      if (!previewDiv) return;\r\n\r\n      // Look for Confluence Mermaid structured macros\r\n      const mermaidElements = DOMHelpers.querySelectorAll(\r\n        previewDiv,\r\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\r\n      );\r\n\r\n      mermaidElements.forEach(async (element, index) => {\r\n        // Get the code parameter from Confluence structured macro\r\n        const codeParam = DOMHelpers.querySelector(\r\n          element,\r\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\r\n        );\r\n        if (!codeParam) {\r\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\r\n          return;\r\n        }\r\n\r\n        const mermaidCode = DOMHelpers.getContent(codeParam).trim();\r\n        console.log(\r\n          \"🔍 Found Confluence Mermaid diagram:\",\r\n          mermaidCode.substring(0, 50) + \"...\"\r\n        );\r\n\r\n        // Always process Confluence mermaid macros\r\n        if (mermaidCode) {\r\n          // Create a new div for the mermaid diagram\r\n          const mermaidDiv = HTMLTemplates.createMermaidContainer(index);\r\n\r\n          // Replace the original element\r\n          element.parentNode.replaceChild(mermaidDiv, element);\r\n\r\n          // Render the diagram\r\n          const diagramId = `preview-mermaid-svg-${index}`;\r\n          await MermaidRenderer.renderDiagram(\r\n            diagramId,\r\n            mermaidCode,\r\n            mermaidDiv\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to initialize Mermaid in preview:\", error);\r\n    }\r\n  }\r\n\r\n  // Populate mermaid selector using Map\r\n  populateMermaidSelector() {\r\n    const selector = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-selector\"\r\n    );\r\n    if (!selector) {\r\n      console.error(\"❌ Mermaid selector not found\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"🔄 Populating Mermaid selector...\");\r\n    console.log(`📊 DiagramsMap size: ${this.mermaidDiagramsMap?.size || 0}`);\r\n    console.log(`📊 Current options count: ${selector.options.length}`);\r\n\r\n    // Clear existing options\r\n    DOMHelpers.setContent(\r\n      selector,\r\n      '<option value=\"\">📊 Select diagram to edit...</option>',\r\n      true\r\n    );\r\n\r\n    console.log(`📊 After clear, options count: ${selector.options.length}`);\r\n\r\n    // Add diagram options from Map\r\n    if (this.mermaidDiagramsMap && this.mermaidDiagramsMap.size > 0) {\r\n      let addedCount = 0;\r\n      this.mermaidDiagramsMap.forEach((diagramData, diagramId) => {\r\n        const option = document.createElement(\"option\");\r\n        option.value = diagramId;\r\n        option.textContent = `${diagramData.title} (${diagramData.type})`;\r\n        selector.appendChild(option);\r\n        addedCount++;\r\n        console.log(\r\n          `📊 Added option ${addedCount}: ${diagramData.title} (${diagramData.type})`\r\n        );\r\n      });\r\n\r\n      console.log(\r\n        `✅ Added ${addedCount} diagrams to selector (total options: ${selector.options.length})`\r\n      );\r\n    } else {\r\n      console.warn(\"⚠️ No Mermaid diagrams found to populate selector\");\r\n    }\r\n\r\n    // Add event listener for selector change\r\n    selector.removeEventListener(\"change\", this.handleMermaidSelectorChange);\r\n    this.handleMermaidSelectorChange = (e) => {\r\n      const selectedId = e.target.value;\r\n      console.log(`🎯 Selected diagram: ${selectedId}`);\r\n      this.selectMermaidDiagram(selectedId);\r\n    };\r\n    selector.addEventListener(\"change\", this.handleMermaidSelectorChange);\r\n\r\n    console.log(\r\n      `✅ Populated ${this.mermaidDiagramsMap?.size || 0} diagrams in selector`\r\n    );\r\n  }\r\n\r\n  // Select mermaid diagram\r\n  selectMermaidDiagram(diagramId) {\r\n    if (!diagramId) {\r\n      this.clearMermaidEditor();\r\n      return;\r\n    }\r\n\r\n    // Get diagram from Map\r\n    const diagramData = this.mermaidDiagramsMap.get(diagramId);\r\n    if (!diagramData) {\r\n      console.error(`❌ Diagram not found in map: ${diagramId}`);\r\n      return;\r\n    }\r\n\r\n    // Find full diagram record from array\r\n    const diagram = this.mermaidDiagrams.find((d) => d.id === diagramId);\r\n    if (!diagram) {\r\n      console.error(`❌ Diagram not found in array: ${diagramId}`);\r\n      return;\r\n    }\r\n\r\n    // Update code editor\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    if (codeEditor) {\r\n      codeEditor.value = diagramData.content;\r\n      this.currentSelectedDiagram = diagram;\r\n      this.currentSelectedDiagramId = diagramId;\r\n      this.updateMermaidPreview();\r\n\r\n      // Add event listener for code changes\r\n      codeEditor.removeEventListener(\"input\", this.handleMermaidCodeChange);\r\n      this.handleMermaidCodeChange = () => {\r\n        if (this.currentSelectedDiagram && this.currentSelectedDiagramId) {\r\n          const newCode = codeEditor.value;\r\n          console.log(\"new code\", newCode);\r\n          // Update diagram code in memory (both array and map)\r\n          this.currentSelectedDiagram.code = newCode;\r\n          this.mermaidDiagramsMap.get(this.currentSelectedDiagramId).content =\r\n            newCode;\r\n\r\n          // Track the change for synchronization\r\n          this.contentSynchronizer.trackDiagramChange(\r\n            this.currentSelectedDiagramId,\r\n            newCode\r\n          );\r\n\r\n          // Update preview\r\n          this.updateMermaidPreview();\r\n\r\n          // Mark as modified\r\n          this.isModified = true;\r\n          this.updateSaveButtonState();\r\n\r\n          console.log(`📝 Updated diagram ${this.currentSelectedDiagramId}`);\r\n        }\r\n      };\r\n      codeEditor.addEventListener(\"input\", this.handleMermaidCodeChange);\r\n    }\r\n\r\n    console.log(`✅ Selected diagram: ${diagramId} (${diagramData.type})`);\r\n  }\r\n\r\n  // Clear mermaid editor\r\n  clearMermaidEditor() {\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n\r\n    if (codeEditor) codeEditor.value = \"\";\r\n    if (preview) {\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Select a diagram to preview</div>';\r\n    }\r\n\r\n    this.currentSelectedDiagram = null;\r\n  }\r\n\r\n  // Update mermaid preview\r\n  updateMermaidPreview() {\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n\r\n    if (!codeEditor || !preview) return;\r\n\r\n    const code = codeEditor.value.trim();\r\n    if (!code) {\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Enter Mermaid code to preview</div>';\r\n      return;\r\n    }\r\n\r\n    // Update current diagram\r\n    if (this.currentSelectedDiagram) {\r\n      this.currentSelectedDiagram.code = code;\r\n    }\r\n\r\n    // Render mermaid\r\n    preview.innerHTML = `<div class=\"mermaid\">${code}</div>`;\r\n\r\n    // Initialize mermaid rendering\r\n    if (window.mermaid) {\r\n      window.mermaid.init(undefined, preview.querySelector(\".mermaid\"));\r\n      // Apply current zoom after rendering\r\n      setTimeout(() => {\r\n        this.updateZoom();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  // Send AI prompt\r\n  sendAIPrompt() {\r\n    const promptInput = this.editorContainer.querySelector(\"#ai-prompt-input\");\r\n    const messagesContainer =\r\n      this.editorContainer.querySelector(\"#ai-chat-messages\");\r\n\r\n    if (!promptInput || !messagesContainer) return;\r\n\r\n    const prompt = promptInput.value.trim();\r\n    if (!prompt) return;\r\n\r\n    // Add user message\r\n    this.addAIMessage(\"user\", prompt);\r\n\r\n    // Clear input\r\n    promptInput.value = \"\";\r\n\r\n    // TODO: Integrate with AI API\r\n    // For now, show a placeholder response\r\n    setTimeout(() => {\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        \"AI integration coming soon! I will help you modify Mermaid diagrams based on your prompts.\"\r\n      );\r\n    }, 1000);\r\n  }\r\n\r\n  // Add AI message\r\n  addAIMessage(type, text) {\r\n    const messagesContainer = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-chat-messages\"\r\n    );\r\n    if (!messagesContainer) return;\r\n\r\n    const messageHTML = HTMLTemplates.createAIMessage(type, text);\r\n    DOMHelpers.setContent(\r\n      messagesContainer,\r\n      DOMHelpers.getContent(messagesContainer) + messageHTML,\r\n      true\r\n    );\r\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n  }\r\n\r\n  extractMermaidDiagrams() {\r\n    if (!this.currentContent?.full_storage_format) {\r\n      this.mermaidDiagrams = [];\r\n      this.mermaidDiagramsMap = new Map();\r\n      return;\r\n    }\r\n\r\n    const { diagrams, diagramsMap } = MermaidRenderer.extractMermaidDiagrams(\r\n      this.currentContent.full_storage_format\r\n    );\r\n\r\n    this.mermaidDiagrams = diagrams;\r\n    this.mermaidDiagramsMap = diagramsMap;\r\n  }\r\n\r\n  updateStatus(message) {\r\n    const status = this.editorContainer?.querySelector(\"#editor-status\");\r\n    if (status) {\r\n      status.textContent = message;\r\n      setTimeout(() => {\r\n        status.textContent = \"Sẵn sàng\";\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  async saveChanges() {\r\n    console.log(\"💾 Saving changes...\");\r\n\r\n    try {\r\n      // Sync all content sources\r\n      this.currentContent = this.contentSynchronizer.syncAllContent(\r\n        this.currentContent,\r\n        this.editorContainer,\r\n        this.mermaidDiagrams\r\n      );\r\n\r\n      // Validate content before saving\r\n      const validation = this.contentSynchronizer.validateContent(\r\n        this.currentContent\r\n      );\r\n      if (!validation.isValid) {\r\n        throw new Error(\r\n          `Content validation failed: ${validation.errors.join(\", \")}`\r\n        );\r\n      }\r\n\r\n      // Save using storage manager (supports both callback and localStorage)\r\n      const saveResults = await this.storageManager.saveContent(\r\n        this.currentContent,\r\n        this.onSave,\r\n        {\r\n          enableLocalStorage: true,\r\n          enableCallback: true,\r\n          showNotification: true,\r\n        }\r\n      );\r\n\r\n      // Reset modified state and update button\r\n      this.isModified = false;\r\n      this.updateSaveButtonState();\r\n\r\n      // Update original content to new saved state\r\n      this.originalContent = JSON.parse(JSON.stringify(this.currentContent));\r\n\r\n      // Don't re-extract diagrams after save to avoid duplicates\r\n      console.log(\"✅ Skipping diagram re-extraction to prevent duplicates\");\r\n\r\n      console.log(\"✅ Changes saved successfully\", saveResults);\r\n\r\n      // Save completed - auto close editor immediately\r\n      console.log(\"💾 Save completed - closing editor...\");\r\n      this.closeEditor();\r\n    } catch (error) {\r\n      console.error(\"❌ Error saving changes:\", error);\r\n      this.storageManager.showNotification(\r\n        `❌ Lỗi khi lưu: ${error.message}`,\r\n        \"error\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // Update save button state based on modifications\r\n  updateSaveButtonState() {\r\n    const saveBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-save-btn\"\r\n    );\r\n    if (!saveBtn) return;\r\n\r\n    if (this.isModified) {\r\n      DOMHelpers.setContent(saveBtn, \"💾 Lưu thay đổi *\");\r\n      saveBtn.style.background = \"#28a745\";\r\n      saveBtn.title = \"Có thay đổi chưa lưu\";\r\n    } else {\r\n      DOMHelpers.setContent(saveBtn, \"💾 Lưu thay đổi\");\r\n      saveBtn.style.background = \"#007bff\";\r\n      saveBtn.title = \"Lưu thay đổi\";\r\n    }\r\n  }\r\n\r\n  // Zoom controls methods\r\n  zoomIn() {\r\n    this.currentZoom = Math.min(this.currentZoom * 1.2, 3);\r\n    this.updateZoom();\r\n  }\r\n\r\n  zoomOut() {\r\n    this.currentZoom = Math.max(this.currentZoom / 1.2, 0.3);\r\n    this.updateZoom();\r\n  }\r\n\r\n  resetZoom() {\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n    this.updateZoom();\r\n  }\r\n\r\n  updateZoom() {\r\n    const preview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-preview\"\r\n    );\r\n    const zoomLevel = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-level\"\r\n    );\r\n\r\n    if (preview) {\r\n      const mermaidContent = DOMHelpers.querySelector(preview, \".mermaid, svg\");\r\n      if (mermaidContent) {\r\n        mermaidContent.style.transform = `scale(${this.currentZoom}) translate(${this.dragOffset.x}px, ${this.dragOffset.y}px)`;\r\n        mermaidContent.style.transformOrigin = \"center center\";\r\n        mermaidContent.style.transition = \"transform 0.2s ease\";\r\n      }\r\n    }\r\n\r\n    if (zoomLevel) {\r\n      DOMHelpers.setContent(\r\n        zoomLevel,\r\n        `${Math.round(this.currentZoom * 100)}%`\r\n      );\r\n    }\r\n  }\r\n\r\n  handleWheel(e) {\r\n    e.preventDefault();\r\n    if (e.deltaY < 0) {\r\n      this.zoomIn();\r\n    } else {\r\n      this.zoomOut();\r\n    }\r\n  }\r\n\r\n  closeEditor() {\r\n    console.log(\"🔄 Closing editor...\");\r\n\r\n    // Stop auto-save\r\n    this.storageManager.stopAutoSave();\r\n\r\n    if (this.editorContainer) {\r\n      DOMHelpers.removeElement(this.editorContainer);\r\n      this.editorContainer = null;\r\n    }\r\n\r\n    this.isEditorOpen = false;\r\n    this.currentContent = null;\r\n    this.originalContent = null;\r\n    this.mermaidDiagrams = [];\r\n    this.mermaidDiagramsMap = new Map();\r\n    this.currentSelectedDiagram = null;\r\n    this.currentSelectedDiagramId = null;\r\n    this.isModified = false;\r\n\r\n    // Reset zoom state\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n\r\n    console.log(\"✅ Editor closed\");\r\n  }\r\n\r\n  // Public method to set save callback\r\n  setSaveCallback(callback) {\r\n    this.onSave = callback;\r\n  }\r\n\r\n  // Check if editor is currently open\r\n  isOpen() {\r\n    return this.isEditorOpen;\r\n  }\r\n\r\n  // Get current content\r\n  getCurrentContent() {\r\n    if (this.textEditor) {\r\n      // Update content from editor\r\n      const editorContent = this.textEditor.getValue();\r\n      if (this.currentContent) {\r\n        this.currentContent.full_storage_format = editorContent;\r\n      }\r\n    }\r\n    return this.currentContent;\r\n  }\r\n}\r\n\r\n// Export for use in content.js\r\nexport { ConfluenceEditor };\r\n","// Chrome Storage Management\nimport { DEFAULT_SETTINGS, EXTENSION_SETTINGS_KEY } from \"./constants.js\";\n\nexport class StorageManager {\n  /**\n   * Load settings from Chrome storage\n   * @returns {Promise<Object>} Settings object\n   */\n  static async getSettings() {\n    try {\n      const result = await chrome.storage.sync.get([EXTENSION_SETTINGS_KEY]);\n      return result[EXTENSION_SETTINGS_KEY] || DEFAULT_SETTINGS;\n    } catch (error) {\n      console.error(\"Error loading settings:\", error);\n      return DEFAULT_SETTINGS;\n    }\n  }\n\n  /**\n   * Save settings to Chrome storage\n   * @param {Object} settings - Settings object to save\n   * @returns {Promise<boolean>} Success status\n   */\n  static async saveSettings(settings) {\n    try {\n      await chrome.storage.sync.set({ [EXTENSION_SETTINGS_KEY]: settings });\n      return true;\n    } catch (error) {\n      console.error(\"Error saving settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Update specific setting field\n   * @param {string} field - Field name to update\n   * @param {any} value - New value\n   * @returns {Promise<boolean>} Success status\n   */\n  static async updateSetting(field, value) {\n    try {\n      const currentSettings = await this.getSettings();\n      const updatedSettings = { ...currentSettings, [field]: value };\n      return await this.saveSettings(updatedSettings);\n    } catch (error) {\n      console.error(\"Error updating setting:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Reset settings to default\n   * @returns {Promise<boolean>} Success status\n   */\n  static async resetSettings() {\n    try {\n      await chrome.storage.sync.remove([EXTENSION_SETTINGS_KEY]);\n      return true;\n    } catch (error) {\n      console.error(\"Error resetting settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Validate settings object\n   * @param {Object} settings - Settings to validate\n   * @returns {Object} Validation result with errors\n   */\n  static validateSettings(settings) {\n    const errors = {};\n\n    if (!settings.apiKey?.trim()) {\n      errors.apiKey = \"API Key là bắt buộc\";\n    }\n\n    if (!settings.urlTemplate?.trim()) {\n      errors.urlTemplate = \"URL Template là bắt buộc\";\n    } else {\n      const validationResult = this.validateConfluencePageLink(\n        settings.urlTemplate\n      );\n\n      if (!validationResult.valid) {\n        errors.urlTemplate =\n          validationResult.error || \"URL Template không hợp lệ.\";\n      }\n    }\n    if (!settings.documentUrl?.trim()) {\n      errors.documentUrl = \"URL thư mục lưu tài liệu là bắt buộc\";\n    } else if (!this.isValidUrl(settings.documentUrl)) {\n      errors.documentUrl = \"URL không hợp lệ\";\n    }\n\n    if (!settings.databaseUrl?.trim()) {\n      errors.databaseUrl = \"URL thư mục database là bắt buộc\";\n    } else if (!this.isValidUrl(settings.databaseUrl)) {\n      errors.databaseUrl = \"URL không hợp lệ\";\n    }\n\n    // if (!settings.customPrompt?.trim()) {\n    //   errors.customPrompt = \"Custom Prompt là bắt buộc\";\n    // } else if (settings.customPrompt.trim().length < 10) {\n    //   errors.customPrompt = \"Custom Prompt phải có ít nhất 10 ký tự\";\n    // }\n\n    return {\n      isValid: Object.keys(errors).length === 0,\n      errors,\n    };\n  }\n\n  /**\n   * Check if URL is valid\n   * @param {string} url - URL to validate\n   * @returns {boolean} Is valid URL\n   */\n  static isValidUrl(url) {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Validate Confluence page link (có pageId)\n   * @param {string} link - Link Confluence để kiểm tra\n   * @returns {Object} { valid: boolean, error?: string, pageId?: string }\n   */\n  static validateConfluencePageLink(link) {\n    const out = { valid: false, error: null, pageId: null };\n\n    if (!link || typeof link !== \"string\" || !link.trim()) {\n      out.error = \"URL là bắt buộc\";\n      return out;\n    }\n\n    let u;\n    try {\n      u = new URL(link.trim());\n    } catch {\n      out.error = \"URL không hợp lệ\";\n      return out;\n    }\n\n    // check pageId in query param\n    const pageIdParam = u.searchParams.get(\"pageId\");\n    if (pageIdParam && /^\\d+$/.test(pageIdParam)) {\n      out.valid = true;\n      out.pageId = pageIdParam;\n      return out;\n    }\n\n    // check pageId in path (/pages/{id})\n    const pathParts = u.pathname.split(\"/\");\n    const pagesIndex = pathParts.indexOf(\"pages\");\n    if (pagesIndex >= 0 && pathParts.length > pagesIndex + 1) {\n      const candidate = pathParts[pagesIndex + 1];\n      if (/^\\d+$/.test(candidate)) {\n        out.valid = true;\n        out.pageId = candidate;\n        return out;\n      }\n    }\n\n    out.error = \"Không tìm thấy pageId trong URL\";\n    return out;\n  }\n}\n","// Mermaid Rendering Utilities\n// Handles Mermaid diagram loading, rendering and error handling\n\nexport class MermaidRenderer {\n  /**\n   * Load Mermaid script dynamically\n   * @returns {Promise<object>} Mermaid instance\n   */\n  static async loadMermaidScript() {\n    if (window.mermaid) {\n      console.log(\"⚡ Mermaid already loaded\");\n      return window.mermaid;\n    }\n\n    const res = await fetch(chrome.runtime.getURL(\"lib/mermaid.min.js\"));\n    const text = await res.text();\n    eval(text); // UMD will attach mermaid to window\n    console.log(\"✅ Mermaid loaded dynamically\");\n    return window.mermaid;\n  }\n\n  /**\n   * Initialize Mermaid with proper configuration\n   * @returns {Promise<void>}\n   */\n  static async initializeMermaid() {\n    await this.loadMermaidScript();\n\n    // Configure Mermaid with proper DOM context\n    window.mermaid.initialize({\n      startOnLoad: false,\n      theme: \"default\",\n      securityLevel: \"loose\",\n      fontFamily: \"Arial, sans-serif\",\n      // Ensure proper DOM context\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true,\n      },\n      // Set the document context explicitly\n      deterministicIds: true,\n      deterministicIDSeed: \"mermaid-diagram-preview\",\n    });\n\n    // Ensure mermaid has access to document\n    if (window.mermaid.setConfig) {\n      window.mermaid.setConfig({\n        securityLevel: \"loose\",\n        theme: \"default\",\n      });\n    }\n  }\n\n  /**\n   * Render a single Mermaid diagram\n   * @param {string} diagramId - Unique ID for the diagram\n   * @param {string} mermaidCode - Mermaid diagram code\n   * @param {HTMLElement} container - Container element\n   * @returns {Promise<void>}\n   */\n  static async renderDiagram(diagramId, mermaidCode, container) {\n    try {\n      // Create a temporary container in the document to ensure proper DOM context\n      const tempContainer = document.createElement(\"div\");\n      tempContainer.style.position = \"absolute\";\n      tempContainer.style.left = \"-9999px\";\n      tempContainer.style.top = \"-9999px\";\n      document.body.appendChild(tempContainer);\n\n      // Modern mermaid.render returns a promise\n      if (window.mermaid.render && typeof window.mermaid.render === \"function\") {\n        try {\n          // Try modern API first\n          const renderResult = window.mermaid.render(diagramId, mermaidCode);\n\n          if (renderResult && typeof renderResult.then === \"function\") {\n            // Promise-based API\n            const result = await renderResult;\n            \n            // Clean up temp container\n            if (document.body.contains(tempContainer)) {\n              document.body.removeChild(tempContainer);\n            }\n\n            // Handle different return formats\n            let svgCode;\n            if (typeof result === \"string\") {\n              svgCode = result;\n            } else if (result && result.svg) {\n              svgCode = result.svg;\n            } else {\n              svgCode = String(result);\n            }\n\n            container.innerHTML = svgCode;\n            console.log(\"✅ Mermaid diagram rendered successfully (promise API)\");\n          } else {\n            // Synchronous return or callback-based API\n            if (typeof renderResult === \"string\") {\n              // Clean up temp container\n              if (document.body.contains(tempContainer)) {\n                document.body.removeChild(tempContainer);\n              }\n              container.innerHTML = renderResult;\n              console.log(\"✅ Mermaid diagram rendered successfully (sync API)\");\n            } else {\n              // Try callback-based API\n              window.mermaid.render(diagramId, mermaidCode, (svgCode) => {\n                // Clean up temp container\n                if (document.body.contains(tempContainer)) {\n                  document.body.removeChild(tempContainer);\n                }\n                container.innerHTML = svgCode;\n                console.log(\"✅ Mermaid diagram rendered successfully (callback API)\");\n              });\n            }\n          }\n        } catch (renderError) {\n          // Clean up temp container\n          if (document.body.contains(tempContainer)) {\n            document.body.removeChild(tempContainer);\n          }\n          throw renderError;\n        }\n      } else {\n        throw new Error(\"Mermaid render function not available\");\n      }\n    } catch (error) {\n      console.error(\"❌ Mermaid render error:\", error);\n      this.showMermaidError(container, mermaidCode, error);\n    }\n  }\n\n  /**\n   * Show Mermaid error in a nice format\n   * @param {HTMLElement} container - Container element\n   * @param {string} text - Mermaid code that failed\n   * @param {Error} error - Error object\n   */\n  static showMermaidError(container, text, error) {\n    container.innerHTML = `\n      <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\n        <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\n          <span style=\"margin-right: 8px;\">⚠️</span>\n          Mermaid Render Error\n        </div>\n        <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\n          ${error.message || \"Unknown error occurred\"}\n        </div>\n        <details style=\"margin-top: 10px;\">\n          <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\n          <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${text}</pre>\n        </details>\n      </div>\n    `;\n  }\n\n  /**\n   * Detect Mermaid diagram type from code\n   * @param {string} code - Mermaid diagram code\n   * @returns {string} Diagram type\n   */\n  static detectMermaidType(code) {\n    const firstLine = code.trim().split(\"\\n\")[0].toLowerCase();\n    if (firstLine.includes(\"graph\")) return \"graph\";\n    if (firstLine.includes(\"flowchart\")) return \"flowchart\";\n    if (firstLine.includes(\"sequencediagram\")) return \"sequence\";\n    if (firstLine.includes(\"classDiagram\")) return \"class\";\n    if (firstLine.includes(\"stateDiagram\")) return \"state\";\n    if (firstLine.includes(\"erDiagram\")) return \"er\";\n    if (firstLine.includes(\"gantt\")) return \"gantt\";\n    if (firstLine.includes(\"pie\")) return \"pie\";\n    return \"graph\";\n  }\n\n  /**\n   * Extract Mermaid diagrams from Confluence content\n   * @param {string} content - Confluence storage format content\n   * @returns {Array} Array of diagram objects\n   */\n  static extractMermaidDiagrams(content) {\n    const diagrams = [];\n    const diagramsMap = new Map();\n\n    if (!content) return { diagrams, diagramsMap };\n\n    // Regex to find all <ac:structured-macro ...> ... </ac:structured-macro>\n    const macroRegex =\n      /<ac:structured-macro[^>]*ac:name=\"(mermaid|code)\"[^>]*>([\\s\\S]*?)<\\/ac:structured-macro>/gi;\n\n    let match;\n    let index = 0;\n\n    while ((match = macroRegex.exec(content)) !== null) {\n      const macroName = match[1];\n      const macroContent = match[2];\n\n      // Check code parameter\n      const codeMatch = macroContent.match(\n        /<ac:parameter[^>]*ac:name=\"code\">([\\s\\S]*?)<\\/ac:parameter>/\n      );\n      if (!codeMatch) continue;\n\n      const code = codeMatch[1].trim();\n      if (!code) continue;\n\n      // If it's code macro, check language\n      if (macroName === \"code\") {\n        const langMatch = macroContent.match(\n          /<ac:parameter[^>]*ac:name=\"language\">([\\s\\S]*?)<\\/ac:parameter>/\n        );\n        if (!langMatch || langMatch[1].trim() !== \"mermaid\") continue;\n      }\n\n      const type = this.detectMermaidType(code);\n      const diagramId = `mermaid-diagram-${index}`;\n\n      const diagramRecord = {\n        id: diagramId,\n        code: code,\n        originalCode: code,\n        originalMatch: match[0],\n        index: index,\n        type: type,\n        title: `${type.charAt(0).toUpperCase() + type.slice(1)} Diagram ${\n          index + 1\n        }`,\n      };\n\n      diagrams.push(diagramRecord);\n      diagramsMap.set(diagramId, {\n        content: code,\n        type: type,\n        index: index,\n        title: diagramRecord.title,\n      });\n\n      console.log(`✅ Extracted diagram ${index}:`, {\n        type,\n        code: code.substring(0, 50) + \"...\",\n      });\n\n      index++;\n    }\n\n    console.log(\"🎨 Extracted Mermaid diagrams:\", diagrams);\n    return { diagrams, diagramsMap };\n  }\n}\n","// K-Tool Extension Constants\nexport const EXTENSION_SETTINGS_KEY = 'extensionSettings';\n\n// API URLs\nconst isLocal = true;\nconst rootUrl = isLocal ? 'http://localhost:5001' : 'https://gendoc.thangnotes.dev';\n\nexport const API_URLS = {\n  GEN_DOC: `${rootUrl}/api/generate-full-confluence-doc`,\n  GEN_DOC_STATUS: `${rootUrl}/api/generate-status`,\n  GEN_DOC_RESULT: `${rootUrl}/api/generate-result`,\n  EDIT_DIAGRAM: `${rootUrl}/api/edit-diagram`,\n  EDIT_TEXT: `${rootUrl}/api/edit-text`\n};\n\n// Default settings\nexport const DEFAULT_SETTINGS = {\n  apiKey: '',\n  urlTemplate: '',\n  customPrompt: '',\n  documentUrl: '',\n  databaseUrl: '',\n  instructionUrl: '',\n  isEnabled: true,\n  selectedModel: 'sonar-pro'\n};\n\n// AI Models\nexport const AI_MODELS = {\n  'sonar-pro': {\n    name: 'Sonar Pro',\n    provider: 'Perplexity',\n    description: 'Perplexity AI Sonar Pro model'\n  },\n  'gemini': {\n    name: 'Gemini 2.0 Flash',\n    provider: 'Google',\n    description: 'Google Gemini 2.0 Flash model'\n  }\n};\n\n// Progress steps for document generation\nexport const PROGRESS_STEPS = [\n  { id: 'fetch', label: 'Lấy nội dung BA', status: 'pending' },\n  { id: 'clone', label: 'Clone template', status: 'pending' },\n  { id: 'analyze', label: 'Phân tích placeholders', status: 'pending' },\n  { id: 'generate', label: 'AI sinh tài liệu', status: 'pending' },\n  { id: 'complete', label: 'Hoàn thành', status: 'pending' }\n];\n\n// Validation patterns\nexport const VALIDATION = {\n  URL_PATTERN: /^https?:\\/\\/.+/,\n  PLACEHOLDER_PATTERN: /<<([^>]+)>>/g,\n  MIN_PROMPT_LENGTH: 10\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// K-Tool Extension Content Script\r\nimport { ApiClient, ConfluenceApi } from \"../shared/api.js\";\r\nimport { PROGRESS_STEPS } from \"../shared/constants.js\";\r\nimport { StorageManager } from \"../shared/storage.js\";\r\nimport { ConfluenceEditor } from \"./confluenceEditor.js\";\r\n\r\nclass KToolContent {\r\n  constructor() {\r\n    this.settings = {};\r\n    this.isModalOpen = false;\r\n    this.currentTab = \"generate\";\r\n    this.generationJob = null;\r\n    this.progressSteps = [...PROGRESS_STEPS];\r\n    this.confluenceEditor = null;\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    console.log(\"🚀 K-Tool Content Script initializing...\");\r\n\r\n    // Check if already injected\r\n    if (document.getElementById(\"ktool-root\")) {\r\n      console.log(\"🔍 K-Tool already injected, skipping...\");\r\n      return;\r\n    }\r\n\r\n    // Load settings\r\n    await this.loadSettings();\r\n\r\n    // Inject UI\r\n    this.injectUI();\r\n\r\n    // Bind events\r\n    this.bindEvents();\r\n\r\n    // Initialize Confluence Editor\r\n    try {\r\n      console.log(\"🔧 Initializing ConfluenceEditor...\");\r\n      this.confluenceEditor = new ConfluenceEditor();\r\n      console.log(\"✅ ConfluenceEditor initialized:\", this.confluenceEditor);\r\n    } catch (error) {\r\n      console.error(\"❌ Error initializing ConfluenceEditor:\", error);\r\n      this.confluenceEditor = null;\r\n    }\r\n\r\n    // Make available globally for debugging\r\n    window.ktoolContent = this;\r\n\r\n    console.log(\"✅ K-Tool Content Script ready\");\r\n  }\r\n\r\n  async loadSettings() {\r\n    try {\r\n      this.settings = await StorageManager.getSettings();\r\n      console.log(\"⚙️ Settings loaded:\", this.settings);\r\n    } catch (error) {\r\n      console.error(\"❌ Error loading settings:\", error);\r\n    }\r\n  }\r\n\r\n  injectUI() {\r\n    // Create root container\r\n    const root = document.createElement(\"div\");\r\n    root.id = \"ktool-root\";\r\n    document.body.appendChild(root);\r\n\r\n    // Create bubble button\r\n    const bubble = this.createBubble();\r\n    root.appendChild(bubble);\r\n\r\n    // Create modal (initially hidden)\r\n    const modal = this.createModal();\r\n    root.appendChild(modal);\r\n  }\r\n\r\n  createBubble() {\r\n    const bubble = document.createElement(\"div\");\r\n    bubble.className = `ktool-bubble ${\r\n      !this.settings.isEnabled ? \"disabled\" : \"\"\r\n    }`;\r\n\r\n    bubble.innerHTML = `\r\n      <div class=\"ktool-bubble-icon\">K</div>\r\n      <div class=\"ktool-tooltip\">\r\n        ${\r\n          this.settings.isEnabled\r\n            ? \"🚀 K-Tool Document Generator<br/>Click để mở công cụ sinh tài liệu\"\r\n            : \"⚠️ K-Tool đã tắt<br/>Vui lòng bật trong settings\"\r\n        }\r\n      </div>\r\n    `;\r\n\r\n    bubble.addEventListener(\"click\", () => {\r\n      if (this.settings.isEnabled) {\r\n        this.openModal();\r\n      } else {\r\n        this.showNotification(\r\n          \"K-Tool đã tắt. Vui lòng bật trong extension settings.\",\r\n          \"warning\"\r\n        );\r\n      }\r\n    });\r\n\r\n    return bubble;\r\n  }\r\n\r\n  createModal() {\r\n    const overlay = document.createElement(\"div\");\r\n    overlay.className = \"ktool-modal-overlay\";\r\n\r\n    overlay.innerHTML = `\r\n      <div class=\"ktool-modal\">\r\n        <div class=\"ktool-modal-header\">\r\n          <h2 class=\"ktool-modal-title\">K-Tool Document Generator</h2>\r\n          <button class=\"ktool-modal-close\" type=\"button\">&times;</button>\r\n        </div>\r\n        <div class=\"ktool-modal-body\">\r\n          <div class=\"ktool-tabs\">\r\n            <button class=\"ktool-tab active\" data-tab=\"generate\">📄 Sinh tài liệu</button>\r\n            <button class=\"ktool-tab\" data-tab=\"preview\">👁️ Preview</button>\r\n            <button class=\"ktool-tab\" data-tab=\"settings\">⚙️ Settings</button>\r\n          </div>\r\n          \r\n          <!-- Generate Tab -->\r\n          <div class=\"ktool-tab-content active\" data-tab=\"generate\">\r\n            ${this.createGenerateTab()}\r\n          </div>\r\n          \r\n          <!-- Preview Tab -->\r\n          <div class=\"ktool-tab-content\" data-tab=\"preview\" id=\"previewTab\">\r\n            ${this.createPreviewTab()}\r\n          </div>\r\n          \r\n          <!-- Settings Tab -->\r\n          <div class=\"ktool-tab-content\" data-tab=\"settings\">\r\n            ${this.createSettingsTab()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    return overlay;\r\n  }\r\n\r\n  createGenerateTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div class=\"ktool-form-group\">\r\n          <label class=\"ktool-form-label\">URL tài liệu BA *</label>\r\n          <input \r\n            type=\"url\" \r\n            class=\"ktool-form-input\" \r\n            id=\"baDocUrl\" \r\n            placeholder=\"https://confluence.com/pages/123456\"\r\n            value=\"${window.location.href}\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"ktool-form-group\">\r\n          <label class=\"ktool-form-label\">Ghi chú thêm (tùy chọn)</label>\r\n          <textarea \r\n            class=\"ktool-form-textarea\" \r\n            id=\"additionalNotes\" \r\n            placeholder=\"Thêm ghi chú hoặc yêu cầu đặc biệt...\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div style=\"display: flex; gap: 12px; margin-top: 20px;\">\r\n          <button class=\"ktool-btn ktool-btn-primary\" id=\"generateBtn\">\r\n            🔧 Tạo tài liệu\r\n          </button>\r\n          <button class=\"ktool-btn ktool-btn-secondary\" id=\"resetBtn\">\r\n            🔄 Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Progress Section -->\r\n      <div class=\"ktool-progress\" id=\"progressSection\" style=\"display: none;\">\r\n        <h3 style=\"margin: 0 0 16px 0; font-size: 16px;\">Tiến trình sinh tài liệu:</h3>\r\n        <div id=\"progressSteps\"></div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createPreviewTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\r\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">📄</div>\r\n          <h3 style=\"margin: 0 0 8px 0;\">Chưa có nội dung để preview</h3>\r\n          <p style=\"margin: 0;\">Vui lòng sinh tài liệu trước khi preview.</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createSettingsTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\r\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">⚙️</div>\r\n          <h3 style=\"margin: 0 0 8px 0;\">Cài đặt Extension</h3>\r\n          <p style=\"margin: 0 0 16px 0;\">Click vào icon extension trên toolbar để cài đặt.</p>\r\n          <button class=\"ktool-btn ktool-btn-primary\" onclick=\"chrome.runtime.openOptionsPage?.() || alert('Vui lòng click vào icon K-Tool trên toolbar để cài đặt')\">\r\n            🔧 Mở Settings\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  bindEvents() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n\r\n    // Close modal events\r\n    modal.querySelector(\".ktool-modal-close\").addEventListener(\"click\", () => {\r\n      this.closeModal();\r\n    });\r\n\r\n    modal.addEventListener(\"click\", (e) => {\r\n      if (e.target === modal) {\r\n        this.closeModal();\r\n      }\r\n    });\r\n\r\n    // Tab switching\r\n    const tabs = modal.querySelectorAll(\".ktool-tab\");\r\n    tabs.forEach((tab) => {\r\n      tab.addEventListener(\"click\", () => {\r\n        this.switchTab(tab.dataset.tab);\r\n      });\r\n    });\r\n\r\n    // Generate button\r\n    const generateBtn = modal.querySelector(\"#generateBtn\");\r\n    generateBtn.addEventListener(\"click\", () => {\r\n      this.handleGenerate();\r\n    });\r\n\r\n    // Reset button\r\n    const resetBtn = modal.querySelector(\"#resetBtn\");\r\n    resetBtn.addEventListener(\"click\", () => {\r\n      this.handleReset();\r\n    });\r\n\r\n    // Listen for settings changes from background\r\n    chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n      if (request.action === \"settingsChanged\") {\r\n        this.settings = request.settings;\r\n        this.updateBubbleState();\r\n      }\r\n    });\r\n\r\n    // Keyboard shortcuts\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      // Escape to close modal\r\n      if (e.key === \"Escape\" && this.isModalOpen) {\r\n        this.closeModal();\r\n      }\r\n\r\n      // Ctrl/Cmd + K to open modal\r\n      if ((e.ctrlKey || e.metaKey) && e.key === \"k\" && !this.isModalOpen) {\r\n        e.preventDefault();\r\n        if (this.settings.isEnabled) {\r\n          this.openModal();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n    modal.classList.add(\"show\");\r\n    this.isModalOpen = true;\r\n\r\n    // Focus first input\r\n    setTimeout(() => {\r\n      const firstInput = modal.querySelector(\".ktool-form-input\");\r\n      if (firstInput) firstInput.focus();\r\n    }, 300);\r\n  }\r\n\r\n  closeModal() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n    modal.classList.remove(\"show\");\r\n    this.isModalOpen = false;\r\n  }\r\n\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    const tabs = document.querySelectorAll(\".ktool-tab\");\r\n    tabs.forEach((tab) => {\r\n      tab.classList.toggle(\"active\", tab.dataset.tab === tabName);\r\n    });\r\n\r\n    // Update tab content\r\n    const contents = document.querySelectorAll(\".ktool-tab-content\");\r\n    contents.forEach((content) => {\r\n      content.classList.toggle(\"active\", content.dataset.tab === tabName);\r\n    });\r\n\r\n    this.currentTab = tabName;\r\n  }\r\n\r\n  updateBubbleState() {\r\n    const bubble = document.querySelector(\".ktool-bubble\");\r\n    const tooltip = bubble.querySelector(\".ktool-tooltip\");\r\n\r\n    if (this.settings.isEnabled) {\r\n      bubble.classList.remove(\"disabled\");\r\n      tooltip.innerHTML =\r\n        \"🚀 K-Tool Document Generator<br/>Click để mở công cụ sinh tài liệu\";\r\n    } else {\r\n      bubble.classList.add(\"disabled\");\r\n      tooltip.innerHTML = \"⚠️ K-Tool đã tắt<br/>Vui lòng bật trong settings\";\r\n    }\r\n  }\r\n\r\n  async handleGenerate() {\r\n    const baDocUrl = document.getElementById(\"baDocUrl\").value.trim();\r\n    const additionalNotes = document\r\n      .getElementById(\"additionalNotes\")\r\n      .value.trim();\r\n\r\n    if (!baDocUrl) {\r\n      this.showNotification(\"Vui lòng nhập URL tài liệu BA!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    // Validate settings\r\n    const validation = StorageManager.validateSettings(this.settings);\r\n    if (!validation.isValid) {\r\n      this.showNotification(\r\n        \"Vui lòng cấu hình đầy đủ settings trước khi sinh tài liệu!\",\r\n        \"error\"\r\n      );\r\n      this.switchTab(\"settings\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Show progress\r\n      this.showProgress();\r\n      this.updateProgress(0, \"active\");\r\n\r\n      // Step 1: Extract page ID and fetch BA content\r\n      const pageId = ConfluenceApi.extractPageId(baDocUrl);\r\n      if (!pageId) {\r\n        throw new Error(\r\n          \"❌ URL không hợp lệ! Vui lòng kiểm tra lại URL Confluence page.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"🔍 Fetching content for pageId:\", pageId);\r\n      const baDocument = await ConfluenceApi.fetchPageContent(pageId);\r\n      if (!baDocument) {\r\n        throw new Error(\"❌ Không thể lấy nội dung tài liệu BA!\");\r\n      }\r\n\r\n      // Extract images from BA content (HTML) and convert all to base64\r\n      const images = await ConfluenceApi.extractImagesFromHtml(\r\n        baDocument.content\r\n      );\r\n      console.log(\"🖼️ Extracted images (all base64):\", images);\r\n\r\n      this.updateProgress(0, \"completed\");\r\n      this.updateProgress(1, \"active\");\r\n\r\n      // Step 2: Clone template structure\r\n      if (!this.settings.urlTemplate) {\r\n        throw new Error(\"⚠️ Vui lòng setting template của tài liệu!\");\r\n      }\r\n\r\n      console.log(\"🔄 Cloning template from:\", this.settings.urlTemplate);\r\n      const clonedTemplate = await ConfluenceApi.cloneTemplateForGeneration(\r\n        this.settings.urlTemplate\r\n      );\r\n\r\n      if (!clonedTemplate) {\r\n        throw new Error(\r\n          \"❌ Không thể clone template! Vui lòng kiểm tra URL template trong Settings.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"✅ Template cloned successfully:\", clonedTemplate.title);\r\n      this.updateProgress(1, \"completed\");\r\n      this.updateProgress(2, \"active\");\r\n\r\n      // Step 3: Analyze placeholders with << >>\r\n      const placeholders = ConfluenceApi.extractPlaceholders(\r\n        clonedTemplate.originalStorageFormat\r\n      );\r\n      console.log(\"🔍 Found placeholders <<>>:\", placeholders);\r\n\r\n      if (placeholders.length === 0) {\r\n        throw new Error(\r\n          \"⚠️ Không tìm thấy placeholder nào có dạng <<Tên>>. Vui lòng kiểm tra template!\"\r\n        );\r\n      }\r\n\r\n      this.updateProgress(2, \"completed\");\r\n      this.updateProgress(3, \"active\");\r\n\r\n      // Get instructions if available\r\n      let instructions = \"\";\r\n      if (this.settings.instructionUrl) {\r\n        const instructionPageId = ConfluenceApi.extractPageId(\r\n          this.settings.instructionUrl\r\n        );\r\n        if (instructionPageId) {\r\n          console.log(\r\n            \"🔍 Fetching instruction content for pageId:\",\r\n            instructionPageId\r\n          );\r\n          const instructionDoc = await ConfluenceApi.fetchPageContent(\r\n            instructionPageId\r\n          );\r\n          instructions = instructionDoc?.content || \"\";\r\n        } else {\r\n          console.warn(\r\n            \"⚠️ Invalid instruction URL:\",\r\n            this.settings.instructionUrl\r\n          );\r\n        }\r\n      }\r\n\r\n      // Step 4: AI Fill Placeholders (Send request and get job_id)\r\n      const payload = {\r\n        ba_content: baDocument.content,\r\n        template_structure: clonedTemplate.templateStructure,\r\n        original_storage_format: clonedTemplate.originalStorageFormat,\r\n        instructions: instructions,\r\n        additional_prompt: this.settings.customPrompt || \"\",\r\n        placeholders: placeholders,\r\n        selectedModel: this.settings.selectedModel,\r\n        images,\r\n        additional_notes: additionalNotes,\r\n      };\r\n\r\n      console.log(\"📤 Sending payload for placeholder filling:\", {\r\n        ba_content_length: payload.ba_content.length,\r\n        template_structure_length: payload.template_structure.length,\r\n        original_format_length: payload.original_storage_format.length,\r\n        placeholders_found: placeholders.length,\r\n        placeholders_list: placeholders,\r\n      });\r\n\r\n      // Send request and get job_id\r\n      const jobResponse = await ApiClient.generateDocument(payload);\r\n      const jobId = jobResponse.data.job_id;\r\n      if (!jobId) {\r\n        throw new Error(\r\n          jobResponse.error || \"Không nhận được job_id từ server!\"\r\n        );\r\n      }\r\n\r\n      this.currentJobId = jobId;\r\n\r\n      // Start polling for result\r\n      await this.pollGenerationResult(jobId, payload);\r\n    } catch (error) {\r\n      console.error(\"❌ Generation error:\", error);\r\n      this.showNotification(`Lỗi sinh tài liệu: ${error.message}`, \"error\");\r\n      this.hideProgress();\r\n    }\r\n  }\r\n\r\n  // These methods are now handled by ConfluenceApi class\r\n  // Keeping them for backward compatibility if needed\r\n\r\n  async pollGenerationResult(jobId, payload) {\r\n    const maxAttempts = 20; // 10 minutes max (60 * 10 seconds)\r\n    let attempts = 0;\r\n\r\n    const poll = async () => {\r\n      attempts++;\r\n\r\n      try {\r\n        console.log(\r\n          `🔄 Polling attempt ${attempts}/${maxAttempts} for job ${jobId}`\r\n        );\r\n\r\n        const statusResult = await ApiClient.checkStatus(jobId);\r\n        console.log(`statusResult: ${statusResult}`);\r\n\r\n        if (!statusResult.success) {\r\n          throw new Error(\"Lỗi kiểm tra trạng thái job\");\r\n        }\r\n\r\n        const status = statusResult.data.status;\r\n\r\n        if (status === \"done\") {\r\n          console.log(\"✅ Generation completed!\");\r\n\r\n          const result = await ApiClient.getResult(jobId);\r\n          const resultString = JSON.stringify(result, null, 2);\r\n\r\n          console.log(`Document generate:\\n${resultString}`);\r\n          if (result.success) {\r\n            this.handleGenerationComplete(result.data.result);\r\n            return;\r\n          } else {\r\n            throw new Error(\"Lỗi lấy kết quả sinh tài liệu\");\r\n          }\r\n        } else if (status === \"error\") {\r\n          throw new Error(\"Job sinh tài liệu thất bại trên server\");\r\n        } else if (attempts >= maxAttempts) {\r\n          throw new Error(\r\n            \"⏰ Timeout: Quá trình sinh tài liệu mất quá nhiều thời gian. Vui lòng thử lại.\"\r\n          );\r\n        } else {\r\n          // Update progress message if available\r\n          if (statusResult.data.progress_message) {\r\n            console.log(`📝 Progress: ${statusResult.data.progress_message}`);\r\n          }\r\n\r\n          // Continue polling\r\n          setTimeout(poll, 10000); // Poll every 10 seconds\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Polling error:\", error);\r\n        this.showNotification(\r\n          `Lỗi trong quá trình sinh tài liệu: ${error.message}`,\r\n          \"error\"\r\n        );\r\n        this.hideProgress();\r\n        this.currentJobId = null;\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    await poll();\r\n  }\r\n\r\n  handleGenerationComplete(result) {\r\n    this.updateProgress(3, \"completed\");\r\n    this.updateProgress(4, \"completed\");\r\n\r\n    // Store result for preview\r\n    this.generatedContent = result;\r\n    console.log(\"✅ Generated content:\", result);\r\n    // Switch to preview tab\r\n    this.switchTab(\"preview\");\r\n    this.updatePreviewTab(result);\r\n\r\n    this.showNotification(\"Sinh tài liệu thành công!\", \"success\");\r\n    this.hideProgress();\r\n  }\r\n\r\n  updatePreviewTab(content) {\r\n    const previewTab = document.getElementById(\"previewTab\");\r\n    previewTab.innerHTML = `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\">\r\n          <h3 style=\"margin: 0;\">Preview Tài liệu</h3>\r\n          <div style=\"display: flex; gap: 12px;\">\r\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"editContentBtn\">\r\n              ✏️ Chỉnh sửa nội dung\r\n            </button>\r\n            <button class=\"ktool-btn ktool-btn-primary\" id=\"createPageBtn\">\r\n              📄 Tạo trang Confluence\r\n            </button>\r\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"downloadBtn\">\r\n              💾 Tải xuống\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"documentPreview\" style=\"border: 1px solid #e9ecef; border-radius: 8px; padding: 20px; background: #f8f9fa; max-height: 400px; overflow-y: auto; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6;\">\r\n          ${content.full_storage_format || \"<p>Không có nội dung</p>\"}\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Bind preview buttons\r\n    const editContentBtn = previewTab.querySelector(\"#editContentBtn\");\r\n    const createPageBtn = previewTab.querySelector(\"#createPageBtn\");\r\n    const downloadBtn = previewTab.querySelector(\"#downloadBtn\");\r\n\r\n    editContentBtn.addEventListener(\"click\", () =>\r\n      this.handleEditContent(content)\r\n    );\r\n    createPageBtn.addEventListener(\"click\", () => this.handleCreatePage());\r\n    downloadBtn.addEventListener(\"click\", () => this.handleDownload());\r\n\r\n    // Initialize Mermaid diagrams after content is loaded\r\n    setTimeout(() => {\r\n      this.initializeMermaid();\r\n    }, 100);\r\n  }\r\n\r\n  async handleCreatePage() {\r\n    try {\r\n      const spaceKey = ConfluenceApi.getCurrentSpaceKey();\r\n      if (!spaceKey) {\r\n        throw new Error(\"Không thể xác định space key của trang hiện tại\");\r\n      }\r\n\r\n      const title = `K-Tool Generated Document - ${new Date().toLocaleDateString()}`;\r\n      const content =\r\n        this.generatedContent.full_storage_format ||\r\n        this.generatedContent.content;\r\n\r\n      // Extract parent page ID from settings if available\r\n      let parentId = null;\r\n      if (this.settings.documentUrl) {\r\n        parentId = ConfluenceApi.extractPageId(this.settings.documentUrl);\r\n      }\r\n\r\n      const result = await ConfluenceApi.createPage(\r\n        title,\r\n        content,\r\n        spaceKey,\r\n        parentId\r\n      );\r\n\r\n      this.showNotification(\"Tạo trang Confluence thành công!\", \"success\");\r\n\r\n      // Auto redirect to new page\r\n      if (result.id) {\r\n        const newPageUrl = `${window.location.origin}/pages/${result.id}`;\r\n        console.log(\"🔗 Auto-opening new page:\", newPageUrl);\r\n        window.open(newPageUrl, \"_blank\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Create page error:\", error);\r\n      this.showNotification(`Lỗi tạo trang: ${error.message}`, \"error\");\r\n    }\r\n  }\r\n\r\n  handleDownload() {\r\n    const content =\r\n      this.generatedContent.full_storage_format ||\r\n      this.generatedContent.content;\r\n    const blob = new Blob([content], { type: \"text/html\" });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `ktool-document-${Date.now()}.html`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n\r\n    this.showNotification(\"Tải xuống thành công!\", \"success\");\r\n  }\r\n\r\n  handleEditContent(content) {\r\n    console.log(\"✏️ Opening content editor...\");\r\n    console.log(\"🔍 Content to edit:\", content);\r\n    console.log(\"🔍 ConfluenceEditor instance:\", this.confluenceEditor);\r\n\r\n    if (!this.confluenceEditor) {\r\n      console.error(\"❌ ConfluenceEditor is null or undefined\");\r\n      this.showNotification(\"Confluence Editor chưa được khởi tạo!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Set up save callback to update the generated content\r\n      this.confluenceEditor.setSaveCallback((updatedContent) => {\r\n        console.log(\"💾 Content updated:\", updatedContent);\r\n\r\n        // Update the stored generated content\r\n        this.generatedContent = updatedContent;\r\n\r\n        // Refresh the preview tab with updated content\r\n        this.updatePreviewTab(updatedContent);\r\n\r\n        this.showNotification(\"Nội dung đã được cập nhật!\", \"success\");\r\n      });\r\n\r\n      // Open the editor with current content\r\n      console.log(\"🚀 Opening ConfluenceEditor...\");\r\n      this.confluenceEditor.openEditor(content, {\r\n        title: \"Chỉnh sửa tài liệu đã sinh\",\r\n        showMermaidTools: true,\r\n      });\r\n      console.log(\"✅ ConfluenceEditor opened successfully\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error opening ConfluenceEditor:\", error);\r\n      this.showNotification(`Lỗi mở editor: ${error.message}`, \"error\");\r\n    }\r\n  }\r\n\r\n  handleReset() {\r\n    // Auto reset form without confirm\r\n    console.log(\"🔄 Auto-resetting form...\");\r\n    document.getElementById(\"baDocUrl\").value = window.location.href;\r\n    document.getElementById(\"additionalNotes\").value = \"\";\r\n    this.hideProgress();\r\n    this.switchTab(\"generate\");\r\n  }\r\n\r\n  showProgress() {\r\n    const progressSection = document.getElementById(\"progressSection\");\r\n    const progressSteps = document.getElementById(\"progressSteps\");\r\n\r\n    progressSteps.innerHTML = this.progressSteps\r\n      .map(\r\n        (step, index) => `\r\n      <div class=\"ktool-progress-step ${step.status}\" data-step=\"${index}\">\r\n        <div class=\"ktool-progress-icon\">${index + 1}</div>\r\n        <span>${step.label}</span>\r\n      </div>\r\n    `\r\n      )\r\n      .join(\"\");\r\n\r\n    progressSection.style.display = \"block\";\r\n  }\r\n\r\n  hideProgress() {\r\n    const progressSection = document.getElementById(\"progressSection\");\r\n    progressSection.style.display = \"none\";\r\n\r\n    // Reset progress steps\r\n    this.progressSteps = this.progressSteps.map((step) => ({\r\n      ...step,\r\n      status: \"pending\",\r\n    }));\r\n  }\r\n\r\n  updateProgress(stepIndex, status) {\r\n    this.progressSteps[stepIndex].status = status;\r\n\r\n    const stepElement = document.querySelector(`[data-step=\"${stepIndex}\"]`);\r\n    if (stepElement) {\r\n      stepElement.className = `ktool-progress-step ${status}`;\r\n\r\n      const icon = stepElement.querySelector(\".ktool-progress-icon\");\r\n      if (status === \"completed\") {\r\n        icon.textContent = \"✓\";\r\n      } else if (status === \"error\") {\r\n        icon.textContent = \"✗\";\r\n      } else if (status === \"active\") {\r\n        icon.innerHTML = '<div class=\"ktool-spinning\">⏳</div>';\r\n      }\r\n    }\r\n  }\r\n\r\n  showNotification(message, type = \"info\") {\r\n    // Create notification element\r\n    const notification = document.createElement(\"div\");\r\n    notification.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      background: ${\r\n        type === \"success\"\r\n          ? \"#28a745\"\r\n          : type === \"error\"\r\n          ? \"#dc3545\"\r\n          : \"#007bff\"\r\n      };\r\n      color: white;\r\n      padding: 12px 20px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n      z-index: 1000002;\r\n      font-size: 14px;\r\n      max-width: 300px;\r\n      word-wrap: break-word;\r\n      opacity: 0;\r\n      transform: translateX(100%);\r\n      transition: all 0.3s;\r\n    `;\r\n\r\n    notification.textContent = message;\r\n    document.body.appendChild(notification);\r\n\r\n    // Animate in\r\n    setTimeout(() => {\r\n      notification.style.opacity = \"1\";\r\n      notification.style.transform = \"translateX(0)\";\r\n    }, 100);\r\n\r\n    // Auto remove\r\n    setTimeout(() => {\r\n      notification.style.opacity = \"0\";\r\n      notification.style.transform = \"translateX(100%)\";\r\n      setTimeout(() => {\r\n        if (notification.parentNode) {\r\n          notification.parentNode.removeChild(notification);\r\n        }\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  async loadMermaidScript() {\r\n    if (window.mermaid) {\r\n      console.log(\"⚡ Mermaid already loaded\");\r\n      return window.mermaid;\r\n    }\r\n\r\n    const res = await fetch(chrome.runtime.getURL(\"lib/mermaid.min.js\"));\r\n    const text = await res.text();\r\n    eval(text); // UMD sẽ gắn mermaid vào window\r\n    console.log(\"✅ Mermaid loaded dynamically\");\r\n    return window.mermaid;\r\n  }\r\n\r\n  // Initialize Mermaid diagrams\r\n  async initializeMermaid() {\r\n    try {\r\n      // Load Mermaid if not already loaded\r\n      await this.loadMermaidScript();\r\n\r\n      console.log(\"🎨 Initializing Mermaid diagrams...\");\r\n\r\n      // Configure Mermaid with proper DOM context\r\n      window.mermaid.initialize({\r\n        startOnLoad: false,\r\n        theme: \"default\",\r\n        securityLevel: \"loose\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        // Ensure proper DOM context\r\n        htmlLabels: true,\r\n        flowchart: {\r\n          htmlLabels: true,\r\n        },\r\n        // Set the document context explicitly\r\n        deterministicIds: true,\r\n        deterministicIDSeed: \"mermaid-diagram\",\r\n      });\r\n\r\n      // Ensure mermaid has access to document\r\n      if (window.mermaid.setConfig) {\r\n        window.mermaid.setConfig({\r\n          securityLevel: \"loose\",\r\n          theme: \"default\",\r\n        });\r\n      }\r\n\r\n      // Find all mermaid code blocks in the preview\r\n      const previewDiv = document.getElementById(\"documentPreview\");\r\n      if (!previewDiv) return;\r\n\r\n      // Look for Confluence Mermaid structured macros\r\n      const mermaidElements = previewDiv.querySelectorAll(\r\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\r\n      );\r\n\r\n      mermaidElements.forEach((element, index) => {\r\n        // Get the code parameter from Confluence structured macro\r\n        const codeParam = element.querySelector(\r\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\r\n        );\r\n        if (!codeParam) {\r\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\r\n          return;\r\n        }\r\n\r\n        const mermaidCode = (\r\n          codeParam.textContent || codeParam.innerText\r\n        ).trim();\r\n        console.log(\r\n          \"🔍 Found Confluence Mermaid diagram:\",\r\n          mermaidCode.substring(0, 50) + \"...\"\r\n        );\r\n\r\n        // Always process Confluence mermaid macros (no need to check syntax)\r\n        if (mermaidCode) {\r\n          // Create a new div for the mermaid diagram\r\n          const mermaidDiv = document.createElement(\"div\");\r\n          mermaidDiv.className = \"mermaid-diagram\";\r\n          mermaidDiv.id = `mermaid-${index}`;\r\n          mermaidDiv.style.cssText =\r\n            \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\r\n\r\n          // Replace the original element\r\n          element.parentNode.replaceChild(mermaidDiv, element);\r\n\r\n          // Render the diagram with proper DOM context\r\n          try {\r\n            const diagramId = `mermaid-svg-${index}`;\r\n\r\n            // Create a temporary container in the document to ensure proper DOM context\r\n            const tempContainer = document.createElement(\"div\");\r\n            tempContainer.style.position = \"absolute\";\r\n            tempContainer.style.left = \"-9999px\";\r\n            tempContainer.style.top = \"-9999px\";\r\n            document.body.appendChild(tempContainer);\r\n\r\n            // Modern mermaid.render returns a promise\r\n            if (\r\n              window.mermaid.render &&\r\n              typeof window.mermaid.render === \"function\"\r\n            ) {\r\n              try {\r\n                // Try modern API first\r\n                const renderResult = window.mermaid.render(\r\n                  diagramId,\r\n                  mermaidCode\r\n                );\r\n\r\n                if (renderResult && typeof renderResult.then === \"function\") {\r\n                  // Promise-based API\r\n                  renderResult\r\n                    .then((result) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n\r\n                      // Handle different return formats\r\n                      let svgCode;\r\n                      if (typeof result === \"string\") {\r\n                        svgCode = result;\r\n                      } else if (result && result.svg) {\r\n                        svgCode = result.svg;\r\n                      } else {\r\n                        svgCode = String(result);\r\n                      }\r\n\r\n                      mermaidDiv.innerHTML = svgCode;\r\n                      console.log(\r\n                        \"✅ Mermaid diagram rendered successfully (promise API)\"\r\n                      );\r\n                    })\r\n                    .catch((error) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n                      console.error(\r\n                        \"❌ Mermaid render error (promise API):\",\r\n                        error\r\n                      );\r\n                      this.showMermaidError(mermaidDiv, mermaidCode, error);\r\n                    });\r\n                } else {\r\n                  // Synchronous return or callback-based API\r\n                  if (typeof renderResult === \"string\") {\r\n                    // Clean up temp container\r\n                    if (document.body.contains(tempContainer)) {\r\n                      document.body.removeChild(tempContainer);\r\n                    }\r\n                    mermaidDiv.innerHTML = renderResult;\r\n                    console.log(\r\n                      \"✅ Mermaid diagram rendered successfully (sync API)\"\r\n                    );\r\n                  } else {\r\n                    // Try callback-based API\r\n                    window.mermaid.render(diagramId, mermaidCode, (svgCode) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n                      mermaidDiv.innerHTML = svgCode;\r\n                      console.log(\r\n                        \"✅ Mermaid diagram rendered successfully (callback API)\"\r\n                      );\r\n                    });\r\n                  }\r\n                }\r\n              } catch (renderError) {\r\n                // Clean up temp container\r\n                if (document.body.contains(tempContainer)) {\r\n                  document.body.removeChild(tempContainer);\r\n                }\r\n                throw renderError;\r\n              }\r\n            } else {\r\n              throw new Error(\"Mermaid render function not available\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\"❌ Mermaid render error:\", error);\r\n            this.showMermaidError(mermaidDiv, mermaidCode, error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to initialize Mermaid:\", error);\r\n    }\r\n  }\r\n\r\n  // Show Mermaid error in a nice format\r\n  showMermaidError(container, text, error) {\r\n    container.innerHTML = `\r\n      <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\r\n        <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\r\n          <span style=\"margin-right: 8px;\">⚠️</span>\r\n          Mermaid Render Error\r\n        </div>\r\n        <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\r\n          ${error.message || \"Unknown error occurred\"}\r\n        </div>\r\n        <details style=\"margin-top: 10px;\">\r\n          <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\r\n          <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${text}</pre>\r\n        </details>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n// Initialize when DOM is ready\r\nif (document.readyState === \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    new KToolContent();\r\n  });\r\n} else {\r\n  new KToolContent();\r\n}\r\n"],"names":["ApiClient","request","url","options","response","fetch","headers","ok","Error","status","statusText","success","data","json","error","console","message","generateDocument","payload","this","API_URLS","GEN_DOC","method","body","JSON","stringify","checkStatus","jobId","GEN_DOC_STATUS","getResult","GEN_DOC_RESULT","editText","EDIT_TEXT","ConfluenceApi","extractPageId","patterns","pattern","match","getCurrentSpaceKey","spaceKeyMeta","document","querySelector","content","spaceKeyElement","dataset","spaceKey","urlMatch","window","location","pathname","fetchPageContent","pageId","_data$body","_data$body2","_data$body3","_data$body4","log","apiUrl","Accept","errorText","text","id","title","hasStorage","storage","value","hasView","view","storageFormat","cloneTemplateForGeneration","_data$body5","_data$body6","trim","extractPageIdFromUrl","originalStorageFormat","length","templateStructure","analysisInfo","extractTemplateStructure","result","originalLength","structureLength","analysis","emptyParagraphs","emptyTableCells","placeholders","structure","forEach","regex","index","matches","matchAll","totalLength","extractPlaceholders","substring","decodedContent","replace","allMatches","testContent","contentIndex","patternIndex","map","m","push","uniquePlaceholders","Set","extractImagesFromHtml","html","images","imgTags","DOMParser","parseFromString","querySelectorAll","img","Array","from","src","getAttribute","filename","base64src","startsWith","Date","now","base64","fname","urlToBase64","alt","undefined","e","warn","getFilenameFromUrl","blob","Promise","resolve","reject","reader","FileReader","onloadend","onerror","readAsDataURL","URL","lastIndexOf","createPage","parentId","type","space","key","representation","ancestors","XMLFormatter","formatXHTML","xmlString","indent","rootTag","wrappedXml","doc","getElementsByTagName","output","rootElement","documentElement","processNode","node","level","nodeType","Node","ELEMENT_NODE","nodeName","startTag","attributes","attr","name","childNodes","some","child","TEXT_NODE","textContent","nextLevel","COMMENT_NODE","CDATA_SECTION_NODE","isSelfClosingTag","tag","t","cleanXMLMarkers","cleaned","escapeRegex","string","ContentSynchronizer","constructor","syncAllContent","currentContent","editorContainer","mermaidDiagrams","rawContent","syncFromRawEditor","finalContent","syncMermaidChanges","rawEditor","updatedContent","full_storage_format","diagramsCount","hasContent","diagram","_diagram$originalCode","_diagram$code","hasOriginalCode","originalCode","hasCode","code","codeLength","updateDiagramInContent","newCode","diagramId","hasNewCode","newLength","RegExp","replacement","patternMatched","i","lastIndex","test","simpleSearch","includes","validateContent","isValid","errors","warnings","xmlContent","createBackup","parse","timestamp","restoreFromBackup","backup","DOMHelpers","container","selector","addEventListener","element","event","handler","removeEventListener","toggleClass","className","force","classList","toggle","addClass","add","removeClass","remove","setContent","isHTML","tagName","innerHTML","getContent","createElement","Object","entries","assign","style","setAttribute","removeElement","parentNode","removeChild","isInDOM","contains","scrollIntoView","behavior","block","getDimensions","width","height","top","left","rect","getBoundingClientRect","right","bottom","cloneElement","deep","cloneNode","HTMLTemplates","getEditorTemplate","getContentTabTemplate","getMermaidTabTemplate","getZoomControlsTemplate","getAIChatTemplate","applyPreviewStyles","createAIMessage","createMermaidContainer","mermaidDiv","cssText","StorageManager","STORAGE_KEY","AUTO_SAVE_INTERVAL","autoSaveTimer","saveContent","saveCallback","enableLocalStorage","enableCallback","showNotification","results","localStorage","callback","saveToLocalStorage","callSaveCallback","showSaveNotification","backupData","version","setItem","loadFromLocalStorage","saved","getItem","removeItem","clearLocalStorage","then","notification","colors","warning","info","background","appendChild","setTimeout","opacity","transform","startAutoSave","saveFunction","stopAutoSave","setInterval","clearInterval","hasUnsavedChanges","getBackupInfo","age","ConfluenceEditor","isEditorOpen","originalContent","onSave","mermaidDiagramsMap","Map","currentSelectedDiagram","currentSelectedDiagramId","textEditor","previewContainer","isPreviewMode","isModified","currentZoom","dragOffset","x","y","storageManager","contentSynchronizer","openEditor","closeEditor","allowBackupRestore","backupInfo","ageMinutes","Math","floor","extractMermaidDiagrams","createEditorUI","initializeContentTab","overlay","bindEditorEvents","closeBtn","saveBtn","saveChanges","contentTab","mermaidTab","switchTab","updateContentPreview","mermaidSelector","mermaidCodeEditor","aiSendBtn","aiPromptInput","selectMermaidDiagram","target","updateMermaidPreview","sendAIPrompt","zoomInBtn","zoomOutBtn","zoomResetBtn","zoomIn","zoomOut","resetZoom","mermaidPreview","handleWheel","handleEsc","tabName","tab","activeTab","activeContent","initializeMermaidTab","size","populateMermaidSelector","preview","updateSaveButtonState","renderContentPreview","previewElement","processedContent","renderMermaidDiagramsInPreview","initializeMermaidInPreview","MermaidRenderer","initializeMermaid","previewDiv","async","codeParam","mermaidCode","replaceChild","renderDiagram","_this$mermaidDiagrams","_this$mermaidDiagrams2","addedCount","diagramData","option","handleMermaidSelectorChange","selectedId","clearMermaidEditor","get","find","d","codeEditor","handleMermaidCodeChange","trackDiagramChange","mermaid","init","updateZoom","promptInput","messagesContainer","prompt","addAIMessage","messageHTML","scrollTop","scrollHeight","_this$currentContent","diagrams","diagramsMap","updateStatus","_this$editorContainer","validation","join","saveResults","min","max","zoomLevel","mermaidContent","transformOrigin","transition","round","preventDefault","deltaY","setSaveCallback","isOpen","getCurrentContent","editorContent","getValue","getSettings","chrome","sync","EXTENSION_SETTINGS_KEY","DEFAULT_SETTINGS","saveSettings","settings","set","updateSetting","field","updatedSettings","resetSettings","validateSettings","_settings$apiKey","_settings$urlTemplate","_settings$documentUrl","_settings$databaseUrl","apiKey","urlTemplate","validationResult","validateConfluencePageLink","valid","documentUrl","isValidUrl","databaseUrl","keys","link","out","u","pageIdParam","searchParams","pathParts","split","pagesIndex","indexOf","candidate","loadMermaidScript","res","runtime","getURL","eval","initialize","startOnLoad","theme","securityLevel","fontFamily","htmlLabels","flowchart","deterministicIds","deterministicIDSeed","setConfig","tempContainer","position","render","renderResult","svgCode","svg","String","renderError","showMermaidError","detectMermaidType","firstLine","toLowerCase","macroRegex","exec","macroName","macroContent","codeMatch","langMatch","diagramRecord","originalMatch","charAt","toUpperCase","slice","rootUrl","EDIT_DIAGRAM","customPrompt","instructionUrl","isEnabled","selectedModel","PROGRESS_STEPS","label","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","KToolContent","isModalOpen","currentTab","generationJob","progressSteps","confluenceEditor","getElementById","loadSettings","injectUI","bindEvents","ktoolContent","root","bubble","createBubble","modal","createModal","openModal","createGenerateTab","createPreviewTab","createSettingsTab","href","closeModal","handleGenerate","handleReset","onMessage","addListener","sender","sendResponse","action","updateBubbleState","ctrlKey","metaKey","firstInput","focus","tooltip","baDocUrl","additionalNotes","showProgress","updateProgress","baDocument","clonedTemplate","instructions","instructionPageId","instructionDoc","ba_content","template_structure","original_storage_format","additional_prompt","additional_notes","ba_content_length","template_structure_length","original_format_length","placeholders_found","placeholders_list","jobResponse","job_id","currentJobId","pollGenerationResult","hideProgress","attempts","poll","statusResult","resultString","handleGenerationComplete","progress_message","generatedContent","updatePreviewTab","previewTab","editContentBtn","createPageBtn","downloadBtn","handleEditContent","handleCreatePage","handleDownload","toLocaleDateString","newPageUrl","origin","open","Blob","createObjectURL","a","download","click","revokeObjectURL","showMermaidTools","progressSection","step","display","stepIndex","stepElement","icon","innerText","catch","readyState"],"sourceRoot":""}