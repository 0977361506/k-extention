{"version":3,"file":"content.js","mappings":"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","sources":["webpack://k-tool-extension-clean/./src/content/utils/xmlFormatter.js","webpack://k-tool-extension-clean/./src/content/utils/contentSynchronizer.js","webpack://k-tool-extension-clean/./src/content/utils/domHelpers.js","webpack://k-tool-extension-clean/./src/content/utils/htmlTemplates.js","webpack://k-tool-extension-clean/./src/content/utils/storageManager.js","webpack://k-tool-extension-clean/./src/content/confluenceEditor.js","webpack://k-tool-extension-clean/./src/shared/storage.js","webpack://k-tool-extension-clean/./src/content/utils/mermaidRenderer.js","webpack://k-tool-extension-clean/./src/content/services/mermaidAIChat.js","webpack://k-tool-extension-clean/./src/shared/diagramUtils.js","webpack://k-tool-extension-clean/./src/shared/api.js","webpack://k-tool-extension-clean/./src/shared/constants.js","webpack://k-tool-extension-clean/webpack/bootstrap","webpack://k-tool-extension-clean/webpack/runtime/define property getters","webpack://k-tool-extension-clean/webpack/runtime/hasOwnProperty shorthand","webpack://k-tool-extension-clean/./src/content/content.js"],"sourcesContent":["// XML/XHTML Formatting Utilities\n// Handles XML parsing, formatting and validation\n\nexport class XMLFormatter {\n  /**\n   * Format XHTML for better readability with proper alignment\n   * @param {string} xmlString - Raw XML/XHTML string\n   * @param {string} indent - Indentation string (default: 4 spaces)\n   * @returns {string} Formatted XML/XHTML string\n   */\n  static formatXHTML(xmlString, indent = \"    \") {\n    // 1. Parse string into DOM tree\n    const parser = new DOMParser();\n\n    // Wrap content with temporary root tag if it's just a fragment\n    const rootTag = \"xml-root-fragment\";\n    const wrappedXml = `<${rootTag}>${xmlString}</${rootTag}>`;\n\n    const doc = parser.parseFromString(wrappedXml, \"text/xml\");\n\n    // Check for parsing errors\n    if (doc.getElementsByTagName(\"parsererror\").length > 0) {\n      console.error(\"XML/XHTML parsing error. Returning original string.\");\n      return xmlString;\n    }\n\n    let output = \"\";\n    let currentIndent = \"\";\n\n    // Get wrapped root element (only process its children)\n    const rootElement = doc.documentElement;\n\n    /**\n     * Recursive function to traverse and rebuild string\n     * @param {Node} node - Current node\n     * @param {string} level - Current indentation level\n     */\n    function processNode(node, level) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE: // 1: HTML/XML tags (e.g., <p>, <ac:structured-macro>)\n          const nodeName = node.nodeName;\n\n          // Start tag (e.g., <p data=\"...\">)\n          let startTag = `<${nodeName}`;\n\n          // Add attributes\n          if (node.attributes && node.attributes.length > 0) {\n            for (let attr of node.attributes) {\n              startTag += ` ${attr.name}=\"${attr.value}\"`;\n            }\n          }\n          startTag += \">\";\n\n          // Check if tag has children (excluding empty TextNodes)\n          const hasSignificantChildren = Array.from(node.childNodes).some(\n            (child) =>\n              child.nodeType !== Node.TEXT_NODE ||\n              child.textContent.trim().length > 0\n          );\n\n          if (!hasSignificantChildren) {\n            // Handle self-closing or empty tags (e.g., <br />)\n            // Note: In XHTML, <tag></tag> is more common than <tag />\n            // Here we use common logic: Open tag, close tag on same line\n            output += `${level}${startTag.replace(\">\", \"/>\")}\\n`;\n          } else {\n            // Open tag on new line\n            output += `${level}${startTag}\\n`;\n\n            // Increase indentation level and process children\n            const nextLevel = level + indent;\n            Array.from(node.childNodes).forEach((child) =>\n              processNode(child, nextLevel)\n            );\n\n            // Close tag on new line with old indentation level\n            output += `${level}</${nodeName}>\\n`;\n          }\n          break;\n\n        case Node.TEXT_NODE: // 3: Text content\n          const text = node.textContent.trim();\n          if (text.length > 0) {\n            // Handle plain text (e.g., content inside <p>)\n            // If it's plain text, add it to current line or new line\n            output += `${level}${text}\\n`;\n          }\n          break;\n\n        case Node.COMMENT_NODE: // 8: Comment (e.g., <!-- comment -->)\n          output += `${level}<!--${node.textContent}-->\\n`;\n          break;\n\n        case Node.CDATA_SECTION_NODE: // 4: CDATA Section (Safe for code in <ac:parameter>)\n          // This is the most important case for Mermaid content\n          output += `${level}<![CDATA[${node.textContent}]]>\\n`;\n          break;\n\n        // You can add other cases like DOCUMENT_TYPE_NODE, PROCESSING_INSTRUCTION_NODE if needed\n      }\n    }\n\n    // Start processing from children of temporary root tag\n    Array.from(rootElement.childNodes).forEach((node) =>\n      processNode(node, currentIndent)\n    );\n\n    return output.trim();\n  }\n\n  /**\n   * Check if a tag is self-closing\n   * @param {string} tag - HTML tag string\n   * @returns {boolean} True if self-closing\n   */\n  static isSelfClosingTag(tag) {\n    const selfClosing = [\n      \"br\",\n      \"hr\", \n      \"img\",\n      \"input\",\n      \"meta\",\n      \"link\",\n      \"source\",\n      \"track\",\n      \"wbr\",\n    ];\n    return selfClosing.some((t) => tag.startsWith(`<${t}`));\n  }\n\n  /**\n   * Clean up XML markers from content\n   * @param {string} content - Content with XML markers\n   * @returns {string} Cleaned content\n   */\n  static cleanXMLMarkers(content) {\n    if (!content) return \"\";\n    \n    // Remove ```xml and ``` markers\n    let cleaned = content.replace(/^```xml\\s*\\n?/gm, \"\");\n    cleaned = cleaned.replace(/\\n?```\\s*$/gm, \"\");\n    \n    return cleaned;\n  }\n\n  /**\n   * Escape regex special characters\n   * @param {string} string - String to escape\n   * @returns {string} Escaped string\n   */\n  static escapeRegex(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n}\n","/**\n * Content Synchronizer - Handles synchronization between different content sources\n * (Raw editor, Mermaid diagrams, etc.)\n */\nimport { XMLFormatter } from \"./xmlFormatter.js\";\n\nexport class ContentSynchronizer {\n  constructor() {\n    // Simplified - no change tracking needed\n  }\n\n  /**\n   * Sync all content sources to main content object\n   * @param {Object} currentContent - Main content object\n   * @param {HTMLElement} editorContainer - Editor container element\n   * @param {Array} mermaidDiagrams - Array of Mermaid diagrams\n   * @returns {Object} Updated content object\n   */\n  syncAllContent(currentContent, editorContainer, mermaidDiagrams = []) {\n    if (!currentContent) {\n      throw new Error(\"Current content is required\");\n    }\n\n    // 1. Sync from raw editor\n    const rawContent = this.syncFromRawEditor(currentContent, editorContainer);\n\n    // 2. Sync Mermaid changes\n    const finalContent = this.syncMermaidChanges(rawContent, mermaidDiagrams);\n\n    console.log(\"🔄 All content synchronized\");\n    return finalContent;\n  }\n\n  /**\n   * Sync content from raw editor\n   * @param {Object} currentContent - Current content object\n   * @param {HTMLElement} editorContainer - Editor container\n   * @returns {Object} Updated content object\n   */\n  syncFromRawEditor(currentContent, editorContainer) {\n    if (!editorContainer) return currentContent;\n\n    const rawEditor = editorContainer.querySelector(\"#raw-content-editor\");\n    if (!rawEditor || !rawEditor.value) return currentContent;\n\n    const updatedContent = { ...currentContent };\n    updatedContent.full_storage_format = rawEditor.value.trim();\n\n    // Also update content field if it exists\n    if (updatedContent.content !== undefined) {\n      updatedContent.content = rawEditor.value.trim();\n    }\n\n    console.log(\"📝 Synced content from raw editor\");\n    return updatedContent;\n  }\n\n  /**\n   * Sync Mermaid diagram changes back to content\n   * @param {Object} currentContent - Current content object\n   * @param {Array} mermaidDiagrams - Array of Mermaid diagrams\n   * @returns {Object} Updated content object\n   */\n  syncMermaidChanges(currentContent, mermaidDiagrams = []) {\n    console.log(\"🔄 Starting Mermaid sync...\", {\n      diagramsCount: mermaidDiagrams.length,\n      hasContent: !!currentContent,\n    });\n\n    if (!mermaidDiagrams || mermaidDiagrams.length === 0) {\n      console.log(\"⚠️ No Mermaid diagrams to sync\");\n      return currentContent;\n    }\n\n    let content =\n      currentContent.full_storage_format || currentContent.content || \"\";\n    console.log(\"📊 Processing all diagrams (no change check)...\");\n\n    // Process each diagram - always replace originalCode with code\n    mermaidDiagrams.forEach((diagram, index) => {\n      console.log(`� Processing diagram ${index}:`, {\n        id: diagram.id,\n        hasOriginalCode: !!diagram.originalCode,\n        hasCode: !!diagram.code,\n        originalLength: diagram.originalCode?.length || 0,\n        codeLength: diagram.code?.length || 0,\n      });\n\n      if (diagram.originalCode && diagram.code) {\n        console.log(`📝 Replacing code for diagram ${diagram.id || index}...`);\n        console.log(\n          `📋 Original code preview: \"${diagram.originalCode.substring(\n            0,\n            100\n          )}...\"`\n        );\n        console.log(\n          `📋 New code preview: \"${diagram.code.substring(0, 100)}...\"`\n        );\n\n        const updatedContent = this.updateDiagramInContent(\n          content,\n          diagram,\n          index\n        );\n        if (updatedContent !== content) {\n          content = updatedContent;\n          console.log(\n            `✅ Successfully replaced code for diagram ${diagram.id || index}`\n          );\n        } else {\n          console.warn(\n            `⚠️ Failed to replace code for diagram ${\n              diagram.id || index\n            } - no pattern matched`\n          );\n        }\n      } else {\n        console.log(\n          `⚠️ Skipping diagram ${\n            diagram.id || index\n          } - missing originalCode or code`\n        );\n      }\n    });\n\n    // Always return updated content\n    const updatedContent = { ...currentContent };\n    updatedContent.full_storage_format = content;\n\n    if (updatedContent.content !== undefined) {\n      updatedContent.content = content;\n    }\n\n    console.log(\"✅ Mermaid sync completed - all diagrams processed\");\n    return updatedContent;\n  }\n\n  /**\n   * Update a specific diagram in content string\n   * @param {string} content - Full content string\n   * @param {Object} diagram - Diagram object\n   * @param {number} index - Diagram index\n   * @returns {string} Updated content string\n   */\n  updateDiagramInContent(content, diagram, index) {\n    if (!content || !diagram) {\n      console.log(\"⚠️ updateDiagramInContent: Missing content or diagram\");\n      return content;\n    }\n\n    const originalCode = diagram.originalCode;\n    const newCode = diagram.code;\n\n    console.log(\"🔄 Updating diagram in content:\", {\n      index,\n      diagramId: diagram.id,\n      hasOriginalCode: !!originalCode,\n      hasNewCode: !!newCode,\n      originalLength: originalCode?.length || 0,\n      newLength: newCode?.length || 0,\n    });\n\n    if (!originalCode || !newCode) {\n      console.log(\"⚠️ Missing originalCode or newCode - skipping update\");\n      return content;\n    }\n\n    console.log(\"📋 Replacing originalCode with newCode (no equality check)\");\n    console.log(`📋 Original: \"${originalCode.substring(0, 50)}...\"`);\n    console.log(`📋 New: \"${newCode.substring(0, 50)}...\"`);\n\n    // Try multiple patterns to find and replace the diagram\n    const patterns = [\n      // Pattern 1: CDATA section in ac:parameter\n      {\n        pattern: new RegExp(\n          `(<ac:parameter[^>]*ac:name=\"code\"[^>]*>\\\\s*<\\\\!\\\\[CDATA\\\\[\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*\\\\]\\\\]>\\\\s*</ac:parameter>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n      // Pattern 2: Plain text in ac:parameter\n      {\n        pattern: new RegExp(\n          `(<ac:parameter[^>]*ac:name=\"code\"[^>]*>\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*</ac:parameter>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n      // Pattern 3: ac:plain-text-body with CDATA\n      {\n        pattern: new RegExp(\n          `(<ac:plain-text-body>\\\\s*<\\\\!\\\\[CDATA\\\\[\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*\\\\]\\\\]>\\\\s*</ac:plain-text-body>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n    ];\n\n    let updatedContent = content;\n    let patternMatched = false;\n\n    console.log(\"🔍 Trying patterns to match and replace...\");\n\n    for (let i = 0; i < patterns.length; i++) {\n      const { pattern, replacement } = patterns[i];\n\n      console.log(`🔍 Testing pattern ${i + 1}...`);\n\n      // Reset regex lastIndex to avoid issues with global flag\n      pattern.lastIndex = 0;\n\n      if (pattern.test(content)) {\n        console.log(`✅ Pattern ${i + 1} matched! Applying replacement...`);\n\n        // Reset again before replace\n        pattern.lastIndex = 0;\n        updatedContent = content.replace(pattern, replacement);\n        patternMatched = true;\n\n        console.log(`✅ Successfully updated diagram using pattern ${i + 1}`);\n        break;\n      } else {\n        console.log(`❌ Pattern ${i + 1} did not match`);\n      }\n    }\n\n    if (!patternMatched) {\n      console.warn(\n        `⚠️ Could not find pattern to update diagram ${diagram.id || index}`\n      );\n      console.log(\"🔍 Debug info:\");\n      console.log(\n        \"Original code preview:\",\n        originalCode.substring(0, 100) + \"...\"\n      );\n      console.log(\"New code preview:\", newCode.substring(0, 100) + \"...\");\n      console.log(\"Content sample:\", content.substring(0, 500) + \"...\");\n\n      // Try to find the original code manually for debugging\n      const simpleSearch = content.includes(originalCode.trim());\n      console.log(\"Simple string search found original code:\", simpleSearch);\n    } else {\n      console.log(\"✅ Pattern matching successful, content updated\");\n    }\n\n    return updatedContent;\n  }\n\n  /**\n   * Validate content structure\n   * @param {Object} content - Content to validate\n   * @returns {Object} Validation result\n   */\n  validateContent(content) {\n    const result = {\n      isValid: true,\n      errors: [],\n      warnings: [],\n    };\n\n    if (!content) {\n      result.isValid = false;\n      result.errors.push(\"Content is null or undefined\");\n      return result;\n    }\n\n    // Check required fields\n    if (!content.full_storage_format && !content.content) {\n      result.isValid = false;\n      result.errors.push(\"Missing full_storage_format or content field\");\n    }\n\n    // Check for XML validity\n    const xmlContent = content.full_storage_format || content.content;\n    if (xmlContent) {\n      try {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(\n          `<root>${xmlContent}</root>`,\n          \"text/xml\"\n        );\n        const errors = doc.getElementsByTagName(\"parsererror\");\n\n        if (errors.length > 0) {\n          result.warnings.push(\"Content may contain XML parsing issues\");\n        }\n      } catch (error) {\n        result.warnings.push(`XML validation warning: ${error.message}`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Create content backup\n   * @param {Object} content - Content to backup\n   * @returns {Object} Content backup\n   */\n  createBackup(content) {\n    return {\n      content: JSON.parse(JSON.stringify(content)),\n      timestamp: Date.now(),\n    };\n  }\n\n  /**\n   * Restore from backup\n   * @param {Object} backup - Backup to restore\n   * @returns {Object} Restored content\n   */\n  restoreFromBackup(backup) {\n    if (!backup || !backup.content) {\n      throw new Error(\"Invalid backup data\");\n    }\n\n    console.log(\"🔄 Restored content from backup\");\n    return backup.content;\n  }\n}\n","// DOM Manipulation Helpers\n// Utility functions for DOM operations and event handling\n\nexport class DOMHelpers {\n  /**\n   * Safely query selector with error handling\n   * @param {HTMLElement} container - Container element\n   * @param {string} selector - CSS selector\n   * @returns {HTMLElement|null} Found element or null\n   */\n  static querySelector(container, selector) {\n    try {\n      return container.querySelector(selector);\n    } catch (error) {\n      console.error(`Error querying selector \"${selector}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Safely query all selectors with error handling\n   * @param {HTMLElement} container - Container element\n   * @param {string} selector - CSS selector\n   * @returns {NodeList} Found elements\n   */\n  static querySelectorAll(container, selector) {\n    try {\n      return container.querySelectorAll(selector);\n    } catch (error) {\n      console.error(`Error querying selector \"${selector}\":`, error);\n      return [];\n    }\n  }\n\n  /**\n   * Add event listener with error handling\n   * @param {HTMLElement} element - Target element\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   * @param {object} options - Event options\n   */\n  static addEventListener(element, event, handler, options = {}) {\n    if (!element) {\n      console.warn(`Cannot add event listener: element is null`);\n      return;\n    }\n\n    try {\n      element.addEventListener(event, handler, options);\n    } catch (error) {\n      console.error(`Error adding event listener for \"${event}\":`, error);\n    }\n  }\n\n  /**\n   * Remove event listener with error handling\n   * @param {HTMLElement} element - Target element\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   */\n  static removeEventListener(element, event, handler) {\n    if (!element) {\n      console.warn(`Cannot remove event listener: element is null`);\n      return;\n    }\n\n    try {\n      element.removeEventListener(event, handler);\n    } catch (error) {\n      console.error(`Error removing event listener for \"${event}\":`, error);\n    }\n  }\n\n  /**\n   * Toggle class on element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to toggle\n   * @param {boolean} force - Force add/remove\n   */\n  static toggleClass(element, className, force = undefined) {\n    if (!element) {\n      console.warn(`Cannot toggle class: element is null`);\n      return;\n    }\n\n    try {\n      if (force !== undefined) {\n        element.classList.toggle(className, force);\n      } else {\n        element.classList.toggle(className);\n      }\n    } catch (error) {\n      console.error(`Error toggling class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Add class to element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to add\n   */\n  static addClass(element, className) {\n    if (!element) {\n      console.warn(`Cannot add class: element is null`);\n      return;\n    }\n\n    try {\n      element.classList.add(className);\n    } catch (error) {\n      console.error(`Error adding class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Remove class from element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to remove\n   */\n  static removeClass(element, className) {\n    if (!element) {\n      console.warn(`Cannot remove class: element is null`);\n      return;\n    }\n\n    try {\n      element.classList.remove(className);\n    } catch (error) {\n      console.error(`Error removing class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Set element content safely\n   * @param {HTMLElement} element - Target element\n   * @param {string} content - Content to set\n   * @param {boolean} isHTML - Whether content is HTML (default: false)\n   */\n  static setContent(element, content, isHTML = false) {\n    if (!element) {\n      console.warn(`Cannot set content: element is null`);\n      return;\n    }\n\n    try {\n      // Handle form elements specially\n      if (\n        element.tagName === \"INPUT\" ||\n        element.tagName === \"TEXTAREA\" ||\n        element.tagName === \"SELECT\"\n      ) {\n        element.value = content || \"\";\n        return;\n      }\n\n      if (isHTML) {\n        element.innerHTML = content;\n      } else {\n        element.textContent = content;\n      }\n    } catch (error) {\n      console.error(`Error setting content:`, error);\n    }\n  }\n\n  /**\n   * Get element content safely\n   * @param {HTMLElement} element - Target element\n   * @param {boolean} isHTML - Whether to get HTML content (default: false)\n   * @returns {string} Element content\n   */\n  static getContent(element, isHTML = false) {\n    if (!element) {\n      console.warn(`Cannot get content: element is null`);\n      return \"\";\n    }\n\n    try {\n      // Handle form elements specially\n      if (\n        element.tagName === \"INPUT\" ||\n        element.tagName === \"TEXTAREA\" ||\n        element.tagName === \"SELECT\"\n      ) {\n        return element.value || \"\";\n      }\n\n      return isHTML ? element.innerHTML : element.textContent;\n    } catch (error) {\n      console.error(`Error getting content:`, error);\n      return \"\";\n    }\n  }\n\n  /**\n   * Create element with attributes and content\n   * @param {string} tagName - HTML tag name\n   * @param {object} attributes - Element attributes\n   * @param {string} content - Element content\n   * @param {boolean} isHTML - Whether content is HTML\n   * @returns {HTMLElement} Created element\n   */\n  static createElement(tagName, attributes = {}, content = \"\", isHTML = false) {\n    try {\n      const element = document.createElement(tagName);\n\n      // Set attributes\n      Object.entries(attributes).forEach(([key, value]) => {\n        if (key === \"className\") {\n          element.className = value;\n        } else if (key === \"style\" && typeof value === \"object\") {\n          Object.assign(element.style, value);\n        } else {\n          element.setAttribute(key, value);\n        }\n      });\n\n      // Set content\n      if (content) {\n        this.setContent(element, content, isHTML);\n      }\n\n      return element;\n    } catch (error) {\n      console.error(`Error creating element \"${tagName}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Remove element safely\n   * @param {HTMLElement} element - Element to remove\n   */\n  static removeElement(element) {\n    if (!element) {\n      console.warn(`Cannot remove element: element is null`);\n      return;\n    }\n\n    try {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      } else {\n        element.remove();\n      }\n    } catch (error) {\n      console.error(`Error removing element:`, error);\n    }\n  }\n\n  /**\n   * Check if element exists in DOM\n   * @param {HTMLElement} element - Element to check\n   * @returns {boolean} True if element exists in DOM\n   */\n  static isInDOM(element) {\n    if (!element) return false;\n    return document.body.contains(element);\n  }\n\n  /**\n   * Scroll element into view smoothly\n   * @param {HTMLElement} element - Element to scroll to\n   * @param {object} options - Scroll options\n   */\n  static scrollIntoView(\n    element,\n    options = { behavior: \"smooth\", block: \"center\" }\n  ) {\n    if (!element) {\n      console.warn(`Cannot scroll: element is null`);\n      return;\n    }\n\n    try {\n      element.scrollIntoView(options);\n    } catch (error) {\n      console.error(`Error scrolling element into view:`, error);\n    }\n  }\n\n  /**\n   * Get element dimensions\n   * @param {HTMLElement} element - Target element\n   * @returns {object} Element dimensions\n   */\n  static getDimensions(element) {\n    if (!element) {\n      console.warn(`Cannot get dimensions: element is null`);\n      return { width: 0, height: 0, top: 0, left: 0 };\n    }\n\n    try {\n      const rect = element.getBoundingClientRect();\n      return {\n        width: rect.width,\n        height: rect.height,\n        top: rect.top,\n        left: rect.left,\n        right: rect.right,\n        bottom: rect.bottom,\n      };\n    } catch (error) {\n      console.error(`Error getting element dimensions:`, error);\n      return { width: 0, height: 0, top: 0, left: 0 };\n    }\n  }\n\n  /**\n   * Deep clone element\n   * @param {HTMLElement} element - Element to clone\n   * @param {boolean} deep - Whether to deep clone (default: true)\n   * @returns {HTMLElement} Cloned element\n   */\n  static cloneElement(element, deep = true) {\n    if (!element) {\n      console.warn(`Cannot clone element: element is null`);\n      return null;\n    }\n\n    try {\n      return element.cloneNode(deep);\n    } catch (error) {\n      console.error(`Error cloning element:`, error);\n      return null;\n    }\n  }\n}\n","// HTML Templates for Confluence Editor\n// Contains all HTML template strings and styling utilities\n\nexport class HTMLTemplates {\n  /**\n   * Get the main editor HTML template\n   * @returns {string} HTML template string\n   */\n  static getEditorTemplate() {\n    return `\n      <div class=\"confluence-editor-container\">\n        <div class=\"confluence-editor-header\">\n          <h2 class=\"confluence-editor-title\">\n            📝 Chỉnh sửa nội dung Confluence\n          </h2>\n          <div class=\"confluence-editor-actions\">\n            <button class=\"editor-btn editor-btn-primary\" id=\"editor-save-btn\">\n              💾 Lưu thay đổi\n            </button>\n            <button class=\"editor-btn editor-btn-secondary\" id=\"editor-close-btn\">\n              ✕ Đóng\n            </button>\n          </div>\n        </div>\n\n        <div class=\"confluence-editor-tabs\">\n          <button class=\"confluence-editor-tab active\" id=\"content-tab\">\n            📝 Chỉnh sửa nội dung\n          </button>\n          <button class=\"confluence-editor-tab\" id=\"mermaid-tab\">\n            📊 Chỉnh sửa Mermaid\n          </button>\n        </div>\n\n        <div class=\"confluence-editor-body\">\n          ${this.getContentTabTemplate()}\n          ${this.getMermaidTabTemplate()}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get content tab template\n   * @returns {string} Content tab HTML\n   */\n  static getContentTabTemplate() {\n    return `\n      <!-- Content Tab -->\n      <div class=\"tab-content active\" id=\"content-tab-content\">\n        <div class=\"content-editor-layout\">\n          <!-- Raw XHTML Editor (Left) -->\n          <div class=\"content-editor-pane\">\n            <div class=\"content-editor-header\">\n              📝 Raw XHTML Content\n            </div>\n            <div class=\"content-editor-body\">\n              <textarea class=\"raw-content-editor\" id=\"raw-content-editor\" placeholder=\"Raw XHTML content will appear here...\"></textarea>\n            </div>\n          </div>\n\n          <!-- Preview Pane (Right) -->\n          <div class=\"content-preview-pane\">\n            <div class=\"content-editor-header\">\n              👁️ Live Preview\n            </div>\n            <div class=\"content-editor-body\">\n              <div class=\"content-preview\" id=\"content-preview\">\n                <!-- Preview content will be rendered here -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get mermaid tab template\n   * @returns {string} Mermaid tab HTML\n   */\n  static getMermaidTabTemplate() {\n    return `\n      <!-- Mermaid Tab -->\n      <div class=\"tab-content\" id=\"mermaid-tab-content\">\n        <div class=\"mermaid-editor-layout\">\n          <!-- Mermaid Code Editor (Left) -->\n          <div class=\"mermaid-code-pane\">\n            <div class=\"mermaid-editor-header\">\n              📊 Mermaid Code\n              <select id=\"mermaid-selector\" class=\"mermaid-selector\">\n                <option value=\"\">Select diagram...</option>\n              </select>\n            </div>\n            <div class=\"mermaid-editor-body\">\n              <textarea class=\"mermaid-code-editor\" id=\"mermaid-code-editor\" placeholder=\"Select a Mermaid diagram to edit...\"></textarea>\n            </div>\n          </div>\n\n          <!-- Mermaid Preview (Center) -->\n          <div class=\"mermaid-preview-pane\">\n            <div class=\"mermaid-editor-header\">\n              📊 Diagram Preview\n              ${this.getZoomControlsTemplate()}\n            </div>\n            <div class=\"mermaid-editor-body\">\n              <div class=\"mermaid-preview\" id=\"mermaid-preview\">\n                <div class=\"mermaid-placeholder\">\n                  Select a diagram to preview\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- AI Chat (Right) -->\n          <div class=\"mermaid-ai-pane\">\n            <div class=\"mermaid-editor-header\">\n              🤖 AI Assistant\n            </div>\n            <div class=\"mermaid-editor-body\">\n              ${this.getAIChatTemplate()}\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get zoom controls template\n   * @returns {string} Zoom controls HTML\n   */\n  static getZoomControlsTemplate() {\n    return `\n      <div class=\"mermaid-zoom-controls\">\n        <button class=\"zoom-btn\" id=\"zoom-out\" title=\"Zoom Out\">−</button>\n        <div class=\"zoom-level\" id=\"zoom-level\">100%</div>\n        <button class=\"zoom-btn\" id=\"zoom-in\" title=\"Zoom In\">+</button>\n        <button class=\"zoom-btn\" id=\"zoom-reset\" title=\"Reset Zoom\">⌂</button>\n      </div>\n    `;\n  }\n\n  /**\n   * Get AI chat template - Enhanced version similar to extension\n   * @returns {string} AI chat HTML\n   */\n  static getAIChatTemplate() {\n    return `\n      <div class=\"ai-chat-container\">\n        <div class=\"ai-chat-header\">\n          <div class=\"ai-header-title\">\n            <span class=\"ai-icon\">🤖</span>\n            <span>AI Diagram Assistant</span>\n          </div>\n          <div class=\"ai-header-status\">Ready</div>\n        </div>\n        <div class=\"ai-chat-messages\" id=\"ai-chat-messages\">\n          <div class=\"ai-message\">\n            <div class=\"ai-avatar\">🤖</div>\n            <div class=\"ai-text\">\n              <strong>Hi! I'm your AI Diagram Assistant.</strong><br/><br/>\n              I can help you modify Mermaid diagrams with natural language commands:<br/>\n              • \"Add a new node called 'Database'\"<br/>\n              • \"Change the color of node A to blue\"<br/>\n              • \"Add an arrow from A to B\"<br/>\n              • \"Make this flowchart more detailed\"<br/><br/>\n              <em>Select a diagram above and describe what you want to change!</em>\n            </div>\n          </div>\n        </div>\n        <div class=\"ai-chat-input\">\n          <div class=\"ai-input-container\">\n            <textarea\n              id=\"ai-prompt-input\"\n              placeholder=\"Describe how you want to modify the diagram...\"\n              rows=\"2\"\n            ></textarea>\n            <button id=\"ai-send-btn\" class=\"ai-send-btn\" title=\"Send message (Enter)\">\n              <span class=\"send-icon\">📤</span>\n            </button>\n          </div>\n          <div class=\"ai-input-tips\">\n            💡 <strong>Tips:</strong> Be specific about changes you want. Press Enter to send.\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Apply inline styles to HTML content for preview\n   * @param {string} content - Raw HTML content\n   * @returns {string} Styled HTML content\n   */\n  static applyPreviewStyles(content) {\n    return content\n      .replace(\n        /<h1>/g,\n        \"<h1 style='color: #333; margin: 24px 0 16px 0; font-size: 1.8rem; border-bottom: 2px solid #e1e5e9; padding-bottom: 8px;'>\"\n      )\n      .replace(\n        /<h2>/g,\n        \"<h2 style='color: #555; margin: 20px 0 12px 0; font-size: 1.4rem;'>\"\n      )\n      .replace(\n        /<h3>/g,\n        \"<h3 style='color: #666; margin: 16px 0 8px 0; font-size: 1.2rem;'>\"\n      )\n      .replace(\n        /<p>/g,\n        \"<p style='margin: 12px 0; line-height: 1.6; color: #333;'>\"\n      )\n      .replace(/<ul>/g, \"<ul style='margin: 12px 0; padding-left: 24px;'>\")\n      .replace(/<li>/g, \"<li style='margin: 4px 0; line-height: 1.5;'>\")\n      .replace(\n        /<table>/g,\n        \"<table style='border-collapse: collapse; width: 100%; margin: 20px 0; box-shadow: 0 1px 3px rgba(0,0,0,0.1);'>\"\n      )\n      .replace(\n        /<th>/g,\n        \"<th style='border: 1px solid #ddd; padding: 12px; background: #f8f9fa; font-weight: 600; text-align: left;'>\"\n      )\n      .replace(\n        /<td>/g,\n        \"<td style='border: 1px solid #ddd; padding: 12px; vertical-align: top;'>\"\n      )\n      .replace(/<strong>/g, \"<strong style='color: #2c3e50;'>\")\n      .replace(\n        /<code>/g,\n        \"<code style='background: #f1f3f4; padding: 2px 4px; border-radius: 3px; font-family: monospace; font-size: 0.9em;'>\"\n      );\n  }\n\n  /**\n   * Create AI message HTML\n   * @param {string} type - Message type ('user' or 'ai')\n   * @param {string} text - Message text\n   * @returns {string} AI message HTML\n   */\n  static createAIMessage(type, text) {\n    const avatar = type === \"user\" ? \"👤\" : \"🤖\";\n    const bgColor = type === \"user\" ? \"#e5e7eb\" : \"#3b82f6\";\n\n    return `\n      <div class=\"ai-message\">\n        <div class=\"ai-avatar\" style=\"background: ${bgColor};\">${avatar}</div>\n        <div class=\"ai-text\">${text}</div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create mermaid diagram container with styling\n   * @param {number} index - Diagram index\n   * @returns {HTMLElement} Mermaid container element\n   */\n  static createMermaidContainer(index) {\n    const mermaidDiv = document.createElement(\"div\");\n    mermaidDiv.className = \"mermaid-diagram\";\n    mermaidDiv.id = `preview-mermaid-${index}`;\n    mermaidDiv.style.cssText =\n      \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\n    return mermaidDiv;\n  }\n}\n","/**\n * Storage Manager - Handles saving and loading content changes\n * Supports both callback-based saving and localStorage backup\n */\nexport class StorageManager {\n  constructor() {\n    this.STORAGE_KEY = 'confluence_editor_backup';\n    this.AUTO_SAVE_INTERVAL = 30000; // 30 seconds\n    this.autoSaveTimer = null;\n  }\n\n  /**\n   * Save content with multiple strategies\n   * @param {Object} content - Content to save\n   * @param {Function} saveCallback - Optional callback for external save\n   * @param {Object} options - Save options\n   */\n  async saveContent(content, saveCallback = null, options = {}) {\n    const { \n      enableLocalStorage = true, \n      enableCallback = true,\n      showNotification = true \n    } = options;\n\n    const results = {\n      localStorage: false,\n      callback: false,\n      errors: []\n    };\n\n    // 1. Save to localStorage as backup\n    if (enableLocalStorage) {\n      try {\n        this.saveToLocalStorage(content);\n        results.localStorage = true;\n        console.log('✅ Content saved to localStorage');\n      } catch (error) {\n        console.error('❌ Failed to save to localStorage:', error);\n        results.errors.push(`localStorage: ${error.message}`);\n      }\n    }\n\n    // 2. Call external save callback\n    if (enableCallback && saveCallback) {\n      try {\n        await this.callSaveCallback(saveCallback, content);\n        results.callback = true;\n        console.log('✅ Content saved via callback');\n      } catch (error) {\n        console.error('❌ Failed to save via callback:', error);\n        results.errors.push(`callback: ${error.message}`);\n      }\n    }\n\n    // 3. Show notification\n    if (showNotification) {\n      this.showSaveNotification(results);\n    }\n\n    return results;\n  }\n\n  /**\n   * Save content to localStorage\n   * @param {Object} content - Content to save\n   */\n  saveToLocalStorage(content) {\n    const backupData = {\n      content: content,\n      timestamp: Date.now(),\n      version: '1.0'\n    };\n\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(backupData));\n  }\n\n  /**\n   * Load content from localStorage\n   * @returns {Object|null} Saved content or null\n   */\n  loadFromLocalStorage() {\n    try {\n      const saved = localStorage.getItem(this.STORAGE_KEY);\n      if (!saved) return null;\n\n      const backupData = JSON.parse(saved);\n      \n      // Check if backup is recent (within 24 hours)\n      const age = Date.now() - backupData.timestamp;\n      const maxAge = 24 * 60 * 60 * 1000; // 24 hours\n      \n      if (age > maxAge) {\n        console.log('🗑️ Removing old localStorage backup');\n        localStorage.removeItem(this.STORAGE_KEY);\n        return null;\n      }\n\n      console.log('📦 Loaded content from localStorage backup');\n      return backupData.content;\n    } catch (error) {\n      console.error('❌ Failed to load from localStorage:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Clear localStorage backup\n   */\n  clearLocalStorage() {\n    localStorage.removeItem(this.STORAGE_KEY);\n    console.log('🗑️ Cleared localStorage backup');\n  }\n\n  /**\n   * Call external save callback\n   * @param {Function} callback - Save callback function\n   * @param {Object} content - Content to save\n   */\n  async callSaveCallback(callback, content) {\n    if (typeof callback !== 'function') {\n      throw new Error('Save callback is not a function');\n    }\n\n    // Handle both sync and async callbacks\n    const result = callback(content);\n    if (result && typeof result.then === 'function') {\n      await result;\n    }\n  }\n\n  /**\n   * Show save notification\n   * @param {Object} results - Save results\n   */\n  showSaveNotification(results) {\n    const { localStorage, callback, errors } = results;\n    \n    if (localStorage && callback) {\n      this.showNotification('✅ Đã lưu thay đổi thành công', 'success');\n    } else if (localStorage || callback) {\n      const method = localStorage ? 'localStorage' : 'callback';\n      this.showNotification(`⚠️ Đã lưu qua ${method} (một phần)`, 'warning');\n    } else {\n      this.showNotification('❌ Không thể lưu thay đổi', 'error');\n    }\n\n    if (errors.length > 0) {\n      console.warn('Save errors:', errors);\n    }\n  }\n\n  /**\n   * Show notification to user\n   * @param {string} message - Notification message\n   * @param {string} type - Notification type (success, warning, error)\n   */\n  showNotification(message, type = 'info') {\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `confluence-editor-notification ${type}`;\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 12px 20px;\n      border-radius: 6px;\n      color: white;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      z-index: 10001;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      transition: all 0.3s ease;\n      max-width: 300px;\n    `;\n\n    // Set background color based on type\n    const colors = {\n      success: '#28a745',\n      warning: '#ffc107',\n      error: '#dc3545',\n      info: '#17a2b8'\n    };\n    notification.style.background = colors[type] || colors.info;\n\n    notification.textContent = message;\n    document.body.appendChild(notification);\n\n    // Auto remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentNode) {\n        notification.style.opacity = '0';\n        notification.style.transform = 'translateX(100%)';\n        setTimeout(() => {\n          notification.remove();\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * Start auto-save timer\n   * @param {Function} saveFunction - Function to call for auto-save\n   */\n  startAutoSave(saveFunction) {\n    this.stopAutoSave();\n    \n    this.autoSaveTimer = setInterval(() => {\n      try {\n        saveFunction();\n        console.log('🔄 Auto-save completed');\n      } catch (error) {\n        console.error('❌ Auto-save failed:', error);\n      }\n    }, this.AUTO_SAVE_INTERVAL);\n\n    console.log('⏰ Auto-save started (every 30 seconds)');\n  }\n\n  /**\n   * Stop auto-save timer\n   */\n  stopAutoSave() {\n    if (this.autoSaveTimer) {\n      clearInterval(this.autoSaveTimer);\n      this.autoSaveTimer = null;\n      console.log('⏹️ Auto-save stopped');\n    }\n  }\n\n  /**\n   * Check if there are unsaved changes in localStorage\n   * @param {Object} currentContent - Current content to compare\n   * @returns {boolean} True if there are unsaved changes\n   */\n  hasUnsavedChanges(currentContent) {\n    const saved = this.loadFromLocalStorage();\n    if (!saved) return false;\n\n    try {\n      const currentStr = JSON.stringify(currentContent);\n      const savedStr = JSON.stringify(saved);\n      return currentStr !== savedStr;\n    } catch (error) {\n      console.error('❌ Error comparing content:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get backup info\n   * @returns {Object|null} Backup information\n   */\n  getBackupInfo() {\n    try {\n      const saved = localStorage.getItem(this.STORAGE_KEY);\n      if (!saved) return null;\n\n      const backupData = JSON.parse(saved);\n      return {\n        timestamp: backupData.timestamp,\n        age: Date.now() - backupData.timestamp,\n        version: backupData.version\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n}\n","// Confluence Content Editor with Rich Text Editing\r\n// Handles editing interface when Confluence content is returned from API\r\n\r\nimport { API_URLS } from \"../shared/constants.js\";\r\nimport { StorageManager as ChromeStorageManager } from \"../shared/storage.js\";\r\nimport { ContentSynchronizer } from \"./utils/contentSynchronizer.js\";\r\nimport { DOMHelpers } from \"./utils/domHelpers.js\";\r\nimport { HTMLTemplates } from \"./utils/htmlTemplates.js\";\r\nimport { MermaidRenderer } from \"./utils/mermaidRenderer.js\";\r\nimport { StorageManager } from \"./utils/storageManager.js\";\r\nimport { XMLFormatter } from \"./utils/xmlFormatter.js\";\r\n\r\nclass ConfluenceEditor {\r\n  constructor() {\r\n    this.isEditorOpen = false;\r\n    this.currentContent = null;\r\n    this.originalContent = null;\r\n    this.onSave = null;\r\n    this.mermaidDiagrams = [];\r\n    this.mermaidDiagramsMap = new Map();\r\n    this.currentSelectedDiagram = null;\r\n    this.currentSelectedDiagramId = null;\r\n    this.editorContainer = null;\r\n    this.textEditor = null; // CodeMirror instance\r\n    this.previewContainer = null;\r\n    this.isPreviewMode = false;\r\n    this.autoSaveTimer = null;\r\n    this.isModified = false;\r\n\r\n    // Zoom controls\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n\r\n    // Initialize utility classes\r\n    this.storageManager = new StorageManager();\r\n    this.contentSynchronizer = new ContentSynchronizer();\r\n  }\r\n\r\n  openEditor(content, options = {}) {\r\n    if (this.isEditorOpen) {\r\n      this.closeEditor();\r\n    }\r\n\r\n    console.log(\"📝 Opening Confluence Editor with content:\", content);\r\n\r\n    // Auto-restore from localStorage backup if available (no confirm)\r\n    const backup = this.storageManager.loadFromLocalStorage();\r\n    if (backup && options.allowBackupRestore !== false) {\r\n      const backupInfo = this.storageManager.getBackupInfo();\r\n      const ageMinutes = Math.floor(backupInfo.age / (1000 * 60));\r\n\r\n      // Auto-restore if backup is recent (less than 30 minutes)\r\n      if (ageMinutes < 30) {\r\n        this.currentContent = backup;\r\n        console.log(\r\n          `📦 Auto-restored content from backup (${ageMinutes} minutes old)`\r\n        );\r\n      } else {\r\n        this.currentContent = content;\r\n        this.storageManager.clearLocalStorage();\r\n        console.log(\r\n          `📦 Backup too old (${ageMinutes} minutes), using original content`\r\n        );\r\n      }\r\n    } else {\r\n      this.currentContent = content;\r\n    }\r\n\r\n    this.originalContent = JSON.parse(JSON.stringify(content)); // Deep copy of original\r\n    this.isEditorOpen = true;\r\n\r\n    // Extract Mermaid diagrams from content\r\n    this.extractMermaidDiagrams();\r\n\r\n    // Create editor UI\r\n    this.createEditorUI(options);\r\n\r\n    // Initialize content tab (default)\r\n    this.initializeContentTab();\r\n  }\r\n\r\n  createEditorUI() {\r\n    const overlay = DOMHelpers.createElement(\"div\", {\r\n      className: \"confluence-editor-overlay\",\r\n    });\r\n\r\n    DOMHelpers.setContent(overlay, HTMLTemplates.getEditorTemplate(), true);\r\n    document.body.appendChild(overlay);\r\n    this.editorContainer = overlay;\r\n\r\n    // Bind events\r\n    this.bindEditorEvents();\r\n  }\r\n\r\n  bindEditorEvents() {\r\n    if (!this.editorContainer) return;\r\n\r\n    // Close button\r\n    const closeBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-close-btn\"\r\n    );\r\n    console.log(\"🔍 Close button found:\", !!closeBtn);\r\n    if (closeBtn) {\r\n      DOMHelpers.addEventListener(closeBtn, \"click\", () => {\r\n        console.log(\"🔄 Close button clicked\");\r\n        this.closeEditor();\r\n      });\r\n    } else {\r\n      console.error(\"❌ Close button not found!\");\r\n    }\r\n\r\n    // Save button\r\n    const saveBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-save-btn\"\r\n    );\r\n    console.log(\"🔍 Save button found:\", !!saveBtn);\r\n    if (saveBtn) {\r\n      DOMHelpers.addEventListener(saveBtn, \"click\", () => {\r\n        console.log(\"💾 Save button clicked\");\r\n        this.saveChanges();\r\n      });\r\n    } else {\r\n      console.error(\"❌ Save button not found!\");\r\n    }\r\n\r\n    // Tab buttons\r\n    const contentTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#content-tab\"\r\n    );\r\n    const mermaidTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-tab\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(contentTab, \"click\", () =>\r\n      this.switchTab(\"content\")\r\n    );\r\n    DOMHelpers.addEventListener(mermaidTab, \"click\", () =>\r\n      this.switchTab(\"mermaid\")\r\n    );\r\n\r\n    // Content tab elements\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n    DOMHelpers.addEventListener(rawEditor, \"input\", () =>\r\n      this.updateContentPreview()\r\n    );\r\n\r\n    // Mermaid tab elements\r\n    const mermaidSelector = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-selector\"\r\n    );\r\n    const mermaidCodeEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const aiSendBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-send-btn\"\r\n    );\r\n    const aiPromptInput = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-prompt-input\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(mermaidSelector, \"change\", (e) =>\r\n      this.selectMermaidDiagram(e.target.value)\r\n    );\r\n\r\n    DOMHelpers.addEventListener(mermaidCodeEditor, \"input\", () =>\r\n      this.updateMermaidPreview()\r\n    );\r\n\r\n    DOMHelpers.addEventListener(aiSendBtn, \"click\", () => this.sendAIPrompt());\r\n\r\n    DOMHelpers.addEventListener(aiPromptInput, \"keypress\", (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        e.preventDefault();\r\n        this.sendAIPrompt();\r\n      }\r\n    });\r\n\r\n    // Zoom controls\r\n    const zoomInBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-in\"\r\n    );\r\n    const zoomOutBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-out\"\r\n    );\r\n    const zoomResetBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-reset\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(zoomInBtn, \"click\", () => this.zoomIn());\r\n    DOMHelpers.addEventListener(zoomOutBtn, \"click\", () => this.zoomOut());\r\n    DOMHelpers.addEventListener(zoomResetBtn, \"click\", () => this.resetZoom());\r\n\r\n    // Add wheel zoom to mermaid preview\r\n    const mermaidPreview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-preview\"\r\n    );\r\n    DOMHelpers.addEventListener(mermaidPreview, \"wheel\", (e) =>\r\n      this.handleWheel(e)\r\n    );\r\n\r\n    // Close on overlay click\r\n    DOMHelpers.addEventListener(this.editorContainer, \"click\", (e) => {\r\n      if (e.target === this.editorContainer) {\r\n        this.closeEditor();\r\n      }\r\n    });\r\n\r\n    // ESC key to close\r\n    const handleEsc = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        this.closeEditor();\r\n        DOMHelpers.removeEventListener(document, \"keydown\", handleEsc);\r\n      }\r\n    };\r\n    DOMHelpers.addEventListener(document, \"keydown\", handleEsc);\r\n  }\r\n\r\n  // Switch between tabs\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    const tabs = DOMHelpers.querySelectorAll(\r\n      this.editorContainer,\r\n      \".confluence-editor-tab\"\r\n    );\r\n    tabs.forEach((tab) => DOMHelpers.removeClass(tab, \"active\"));\r\n\r\n    const activeTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      `#${tabName}-tab`\r\n    );\r\n    DOMHelpers.addClass(activeTab, \"active\");\r\n\r\n    // Update tab content\r\n    const tabContents = DOMHelpers.querySelectorAll(\r\n      this.editorContainer,\r\n      \".tab-content\"\r\n    );\r\n    tabContents.forEach((content) => DOMHelpers.removeClass(content, \"active\"));\r\n\r\n    const activeContent = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      `#${tabName}-tab-content`\r\n    );\r\n    DOMHelpers.addClass(activeContent, \"active\");\r\n\r\n    // Initialize tab-specific content\r\n    if (tabName === \"content\") {\r\n      this.initializeContentTab();\r\n    } else if (tabName === \"mermaid\") {\r\n      this.initializeMermaidTab();\r\n    }\r\n\r\n    console.log(`Switched to ${tabName} tab`);\r\n  }\r\n\r\n  // Initialize content tab\r\n  initializeContentTab() {\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n\r\n    console.log(\"🔍 Initializing content tab...\");\r\n    console.log(\"Raw editor found:\", !!rawEditor);\r\n    console.log(\"Current content exists:\", !!this.currentContent);\r\n\r\n    if (rawEditor && this.currentContent) {\r\n      // Get raw content and clean up ```xml markers\r\n      let rawContent =\r\n        this.currentContent.full_storage_format ||\r\n        this.currentContent.content ||\r\n        \"\";\r\n\r\n      console.log(\"Raw content length:\", rawContent.length);\r\n\r\n      // Clean XML markers and format for better readability\r\n      rawContent = XMLFormatter.cleanXMLMarkers(rawContent);\r\n      rawContent = XMLFormatter.formatXHTML(rawContent);\r\n\r\n      console.log(\"Formatted content length:\", rawContent.length);\r\n\r\n      // Set content using direct assignment and DOMHelpers\r\n      rawEditor.value = rawContent;\r\n      DOMHelpers.setContent(rawEditor, rawContent);\r\n\r\n      console.log(\"✅ Content set to raw editor\");\r\n      this.updateContentPreview();\r\n    } else {\r\n      console.warn(\r\n        \"⚠️ Cannot initialize content tab - missing rawEditor or currentContent\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // Initialize mermaid tab\r\n  initializeMermaidTab() {\r\n    console.log(\"🔍 Initializing mermaid tab...\");\r\n\r\n    // Always extract diagrams to ensure sync with current content\r\n    console.log(\"📊 Extracting diagrams from current content...\");\r\n    this.extractMermaidDiagrams();\r\n\r\n    console.log(\"Diagrams available:\", this.mermaidDiagrams.length);\r\n    console.log(\"DiagramsMap size:\", this.mermaidDiagramsMap.size);\r\n    this.populateMermaidSelector();\r\n  }\r\n\r\n  // Update content preview\r\n  updateContentPreview() {\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n    const preview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#content-preview\"\r\n    );\r\n\r\n    if (!rawEditor || !preview) return;\r\n\r\n    const content = DOMHelpers.getContent(rawEditor);\r\n\r\n    // Update current content\r\n    if (this.currentContent) {\r\n      this.currentContent.full_storage_format = content;\r\n      // Mark as modified if content changed\r\n      if (\r\n        this.originalContent &&\r\n        content !== this.originalContent.full_storage_format\r\n      ) {\r\n        this.isModified = true;\r\n        this.updateSaveButtonState();\r\n      }\r\n    }\r\n\r\n    // Render preview\r\n    this.renderContentPreview(content, preview);\r\n  }\r\n\r\n  // Render content preview\r\n  renderContentPreview(content, previewElement) {\r\n    // Apply inline styles for preview\r\n    const processedContent = HTMLTemplates.applyPreviewStyles(content);\r\n\r\n    // Set the processed content to preview element\r\n    DOMHelpers.setContent(previewElement, processedContent, true);\r\n\r\n    // Render Mermaid diagrams\r\n    this.renderMermaidDiagramsInPreview();\r\n  }\r\n\r\n  // Render Mermaid diagrams in preview\r\n  renderMermaidDiagramsInPreview() {\r\n    // Use the new comprehensive Mermaid initialization\r\n    setTimeout(() => {\r\n      this.initializeMermaidInPreview();\r\n    }, 100);\r\n  }\r\n\r\n  // Initialize Mermaid diagrams in preview\r\n  async initializeMermaidInPreview() {\r\n    try {\r\n      // Initialize Mermaid\r\n      await MermaidRenderer.initializeMermaid();\r\n\r\n      console.log(\"🎨 Initializing Mermaid diagrams in preview...\");\r\n\r\n      // Find all mermaid code blocks in the preview\r\n      const previewDiv = DOMHelpers.querySelector(\r\n        this.editorContainer,\r\n        \"#content-preview\"\r\n      );\r\n      if (!previewDiv) return;\r\n\r\n      // Look for Confluence Mermaid structured macros\r\n      const mermaidElements = DOMHelpers.querySelectorAll(\r\n        previewDiv,\r\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\r\n      );\r\n\r\n      mermaidElements.forEach(async (element, index) => {\r\n        // Get the code parameter from Confluence structured macro\r\n        const codeParam = DOMHelpers.querySelector(\r\n          element,\r\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\r\n        );\r\n        if (!codeParam) {\r\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\r\n          return;\r\n        }\r\n\r\n        const mermaidCode = DOMHelpers.getContent(codeParam).trim();\r\n        console.log(\r\n          \"🔍 Found Confluence Mermaid diagram:\",\r\n          mermaidCode.substring(0, 50) + \"...\"\r\n        );\r\n\r\n        // Always process Confluence mermaid macros\r\n        if (mermaidCode) {\r\n          // Create a new div for the mermaid diagram\r\n          const mermaidDiv = HTMLTemplates.createMermaidContainer(index);\r\n\r\n          // Replace the original element\r\n          element.parentNode.replaceChild(mermaidDiv, element);\r\n\r\n          // Render the diagram\r\n          const diagramId = `preview-mermaid-svg-${index}`;\r\n          await MermaidRenderer.renderDiagram(\r\n            diagramId,\r\n            mermaidCode,\r\n            mermaidDiv\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to initialize Mermaid in preview:\", error);\r\n    }\r\n  }\r\n\r\n  // Populate mermaid selector using Map\r\n  populateMermaidSelector() {\r\n    const selector = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-selector\"\r\n    );\r\n    if (!selector) {\r\n      console.error(\"❌ Mermaid selector not found\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"🔄 Populating Mermaid selector...\");\r\n    console.log(`📊 DiagramsMap size: ${this.mermaidDiagramsMap?.size || 0}`);\r\n    console.log(`📊 Current options count: ${selector.options.length}`);\r\n\r\n    // Clear ALL existing options completely\r\n    selector.innerHTML = \"\";\r\n\r\n    // Add default option\r\n    const defaultOption = document.createElement(\"option\");\r\n    defaultOption.value = \"\";\r\n    defaultOption.textContent = \"📊 Select diagram to edit...\";\r\n    selector.appendChild(defaultOption);\r\n\r\n    console.log(`📊 After clear, options count: ${selector.options.length}`);\r\n\r\n    // Only add diagrams that actually exist in current content\r\n    if (this.mermaidDiagramsMap && this.mermaidDiagramsMap.size > 0) {\r\n      let addedCount = 0;\r\n\r\n      // Create a Set to track added diagram IDs to prevent duplicates\r\n      const addedDiagrams = new Set();\r\n\r\n      this.mermaidDiagramsMap.forEach((diagramData, diagramId) => {\r\n        // Only add if not already added and has valid content\r\n        if (\r\n          !addedDiagrams.has(diagramId) &&\r\n          diagramData.content &&\r\n          diagramData.content.trim()\r\n        ) {\r\n          const option = document.createElement(\"option\");\r\n          option.value = diagramId;\r\n          option.textContent = `${diagramData.title} (${diagramData.type})`;\r\n          selector.appendChild(option);\r\n          addedDiagrams.add(diagramId);\r\n          addedCount++;\r\n          console.log(\r\n            `📊 Added option ${addedCount}: ${diagramData.title} (${diagramData.type})`\r\n          );\r\n        }\r\n      });\r\n\r\n      console.log(\r\n        `✅ Added ${addedCount} unique diagrams to selector (total options: ${selector.options.length})`\r\n      );\r\n    } else {\r\n      console.warn(\"⚠️ No Mermaid diagrams found to populate selector\");\r\n    }\r\n\r\n    // Remove existing event listener to prevent duplicates\r\n    if (this.handleMermaidSelectorChange) {\r\n      selector.removeEventListener(\"change\", this.handleMermaidSelectorChange);\r\n    }\r\n\r\n    // Add fresh event listener\r\n    this.handleMermaidSelectorChange = (e) => {\r\n      const selectedId = e.target.value;\r\n      console.log(`🎯 Selected diagram: ${selectedId}`);\r\n      this.selectMermaidDiagram(selectedId);\r\n    };\r\n    selector.addEventListener(\"change\", this.handleMermaidSelectorChange);\r\n\r\n    console.log(\r\n      `✅ Populated ${this.mermaidDiagramsMap?.size || 0} diagrams in selector`\r\n    );\r\n  }\r\n\r\n  // Select mermaid diagram\r\n  selectMermaidDiagram(diagramId) {\r\n    if (!diagramId) {\r\n      this.clearMermaidEditor();\r\n      return;\r\n    }\r\n\r\n    // Get diagram from Map\r\n    const diagramData = this.mermaidDiagramsMap.get(diagramId);\r\n    if (!diagramData) {\r\n      console.error(`❌ Diagram not found in map: ${diagramId}`);\r\n      return;\r\n    }\r\n\r\n    // Find full diagram record from array\r\n    const diagram = this.mermaidDiagrams.find((d) => d.id === diagramId);\r\n    if (!diagram) {\r\n      console.error(`❌ Diagram not found in array: ${diagramId}`);\r\n      return;\r\n    }\r\n\r\n    // Update code editor\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    if (codeEditor) {\r\n      codeEditor.value = diagramData.content;\r\n      this.currentSelectedDiagram = diagram;\r\n      this.currentSelectedDiagramId = diagramId;\r\n      this.updateMermaidPreview();\r\n\r\n      // Add event listener for code changes\r\n      codeEditor.removeEventListener(\"input\", this.handleMermaidCodeChange);\r\n      this.handleMermaidCodeChange = () => {\r\n        if (this.currentSelectedDiagram && this.currentSelectedDiagramId) {\r\n          const newCode = codeEditor.value;\r\n          console.log(\"new code\", newCode);\r\n          // Update diagram code in memory (both array and map)\r\n          this.currentSelectedDiagram.code = newCode;\r\n          this.mermaidDiagramsMap.get(this.currentSelectedDiagramId).content =\r\n            newCode;\r\n\r\n          // Track the change for synchronization\r\n          this.contentSynchronizer.trackDiagramChange(\r\n            this.currentSelectedDiagramId,\r\n            newCode\r\n          );\r\n\r\n          // Update preview\r\n          this.updateMermaidPreview();\r\n\r\n          // Mark as modified\r\n          this.isModified = true;\r\n          this.updateSaveButtonState();\r\n\r\n          console.log(`📝 Updated diagram ${this.currentSelectedDiagramId}`);\r\n        }\r\n      };\r\n      codeEditor.addEventListener(\"input\", this.handleMermaidCodeChange);\r\n    }\r\n\r\n    console.log(`✅ Selected diagram: ${diagramId} (${diagramData.type})`);\r\n  }\r\n\r\n  // Clear mermaid editor\r\n  clearMermaidEditor() {\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n\r\n    if (codeEditor) codeEditor.value = \"\";\r\n    if (preview) {\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Select a diagram to preview</div>';\r\n    }\r\n\r\n    this.currentSelectedDiagram = null;\r\n  }\r\n\r\n  // Update mermaid preview\r\n  updateMermaidPreview() {\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n\r\n    if (!codeEditor || !preview) return;\r\n\r\n    const code = codeEditor.value.trim();\r\n    if (!code) {\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Enter Mermaid code to preview</div>';\r\n      return;\r\n    }\r\n\r\n    // Update current diagram\r\n    if (this.currentSelectedDiagram) {\r\n      this.currentSelectedDiagram.code = code;\r\n    }\r\n\r\n    // Render mermaid\r\n    preview.innerHTML = `<div class=\"mermaid\">${code}</div>`;\r\n\r\n    // Initialize mermaid rendering\r\n    if (window.mermaid) {\r\n      window.mermaid.init(undefined, preview.querySelector(\".mermaid\"));\r\n      // Apply current zoom after rendering\r\n      setTimeout(() => {\r\n        this.updateZoom();\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  // Send AI prompt - EXACT copy from extension logic\r\n  async sendAIPrompt() {\r\n    const promptInput = this.editorContainer.querySelector(\"#ai-prompt-input\");\r\n    const messagesContainer =\r\n      this.editorContainer.querySelector(\"#ai-chat-messages\");\r\n\r\n    if (!promptInput || !messagesContainer) return;\r\n\r\n    const prompt = promptInput.value.trim();\r\n    if (!prompt) return;\r\n\r\n    // Check if a diagram is selected and validate it\r\n    if (!this.currentSelectedDiagram || !this.currentSelectedDiagramId) {\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        \"⚠️ Please select a Mermaid diagram first to edit it.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Double-check the selected diagram exists in the map\r\n    const diagramInMap = this.mermaidDiagramsMap.get(\r\n      this.currentSelectedDiagramId\r\n    );\r\n    if (!diagramInMap) {\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        \"❌ Selected diagram not found. Please select a valid diagram.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    console.log(`🎯 AI editing diagram: ${this.currentSelectedDiagramId}`, {\r\n      title: diagramInMap.title,\r\n      type: diagramInMap.type,\r\n      currentCode: this.currentSelectedDiagram.code?.substring(0, 50) + \"...\",\r\n    });\r\n\r\n    // Add user message\r\n    this.addAIMessage(\"user\", prompt);\r\n\r\n    // Clear input and show loading\r\n    promptInput.value = \"\";\r\n    this.addAIMessage(\"ai\", \"🤖 Processing your request...\");\r\n\r\n    try {\r\n      // Get current settings for AI model\r\n      const settings = await ChromeStorageManager.getSettings();\r\n\r\n      // Prepare request payload similar to extension\r\n      const requestBody = {\r\n        content: this.currentContent?.full_storage_format || \"\",\r\n        diagram_code: this.currentSelectedDiagram.code,\r\n        user_request: prompt,\r\n        selectedModel: settings.selectedModel || \"sonar-pro\",\r\n      };\r\n\r\n      console.log(\"🤖 Sending AI request:\", requestBody);\r\n\r\n      // Call AI API (same endpoint as extension)\r\n      const response = await fetch(API_URLS.EDIT_DIAGRAM, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          errorData.error || `HTTP ${response.status}: ${response.statusText}`\r\n        );\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success && data.edited_diagram) {\r\n        // Clean and validate the AI response\r\n        const cleanedDiagram = this.cleanAIResponse(data.edited_diagram);\r\n\r\n        if (cleanedDiagram && cleanedDiagram.trim()) {\r\n          // Validate we're still editing the same diagram\r\n          const currentDiagramInMap = this.mermaidDiagramsMap.get(\r\n            this.currentSelectedDiagramId\r\n          );\r\n          if (!currentDiagramInMap) {\r\n            throw new Error(\"Selected diagram no longer exists\");\r\n          }\r\n\r\n          console.log(`🔄 Updating diagram ${this.currentSelectedDiagramId}:`, {\r\n            oldCode: this.currentSelectedDiagram.code?.substring(0, 30) + \"...\",\r\n            newCode: cleanedDiagram.substring(0, 30) + \"...\",\r\n          });\r\n\r\n          // Update ONLY the selected diagram\r\n          this.currentSelectedDiagram.code = cleanedDiagram;\r\n          currentDiagramInMap.content = cleanedDiagram;\r\n\r\n          // Update the code editor to reflect the change\r\n          const codeEditor = this.editorContainer.querySelector(\r\n            \"#mermaid-code-editor\"\r\n          );\r\n          if (codeEditor) {\r\n            codeEditor.value = cleanedDiagram;\r\n            console.log(\"✅ Code editor updated with AI response\");\r\n          }\r\n\r\n          // Update preview for this specific diagram\r\n          this.updateMermaidPreview();\r\n\r\n          // Mark content as modified for synchronization\r\n          console.log(\r\n            `🔄 Diagram ${this.currentSelectedDiagramId} updated by AI`\r\n          );\r\n\r\n          // Update the content will be handled by syncAllContent when saving\r\n\r\n          // Remove loading message and add success message\r\n          this.removeLastAIMessage();\r\n          this.addAIMessage(\"ai\", `✅ Updated diagram: ${prompt}`);\r\n\r\n          // Show success notification\r\n          if (\r\n            typeof window !== \"undefined\" &&\r\n            window[\"KToolNotificationUtils\"]\r\n          ) {\r\n            window[\"KToolNotificationUtils\"].success(\r\n              \"AI Assistant\",\r\n              \"Diagram updated successfully!\"\r\n            );\r\n          }\r\n        } else {\r\n          throw new Error(\"Invalid Mermaid syntax in AI response\");\r\n        }\r\n      } else {\r\n        throw new Error(\"Invalid response format or missing edited_diagram\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ AI API Error:\", error);\r\n\r\n      // Remove loading message and add error message\r\n      this.removeLastAIMessage();\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        `❌ Error: ${error.message}\\n\\n🔄 Please try again or adjust your request.`\r\n      );\r\n\r\n      // Show error notification\r\n      if (typeof window !== \"undefined\" && window[\"KToolNotificationUtils\"]) {\r\n        window[\"KToolNotificationUtils\"].error(\r\n          \"AI Assistant\",\r\n          `Error: ${error.message}`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // Clean AI response - enhanced validation\r\n  cleanAIResponse(response) {\r\n    if (!response) return \"\";\r\n\r\n    console.log(\"🧹 Cleaning AI response:\", response.substring(0, 100) + \"...\");\r\n\r\n    // Remove markdown code blocks and common AI response patterns\r\n    let cleaned = response\r\n      .replace(/```mermaid\\n?/gi, \"\")\r\n      .replace(/```\\n?/g, \"\")\r\n      .replace(/^Here's the updated.*?:\\s*/i, \"\")\r\n      .replace(/^Updated diagram.*?:\\s*/i, \"\")\r\n      .replace(/^The modified.*?:\\s*/i, \"\");\r\n\r\n    // Remove extra whitespace and newlines at start/end\r\n    cleaned = cleaned.trim();\r\n\r\n    // Split by lines and remove empty lines at start/end\r\n    const lines = cleaned.split(\"\\n\");\r\n    const nonEmptyStart = lines.findIndex((line) => line.trim() !== \"\");\r\n    const nonEmptyEnd = lines\r\n      .slice()\r\n      .reverse()\r\n      .findIndex((line) => line.trim() !== \"\");\r\n\r\n    if (nonEmptyStart !== -1 && nonEmptyEnd !== -1) {\r\n      cleaned = lines\r\n        .slice(nonEmptyStart, lines.length - nonEmptyEnd)\r\n        .join(\"\\n\");\r\n    }\r\n\r\n    // Basic validation - should start with a mermaid diagram type\r\n    const validStarts = [\r\n      \"graph\",\r\n      \"flowchart\",\r\n      \"sequenceDiagram\",\r\n      \"classDiagram\",\r\n      \"stateDiagram\",\r\n      \"erDiagram\",\r\n      \"journey\",\r\n      \"gantt\",\r\n      \"pie\",\r\n      \"gitgraph\",\r\n      \"mindmap\",\r\n      \"timeline\",\r\n    ];\r\n\r\n    const firstLine = cleaned.split(\"\\n\")[0].trim().toLowerCase();\r\n    const hasValidStart = validStarts.some((start) =>\r\n      firstLine.startsWith(start.toLowerCase())\r\n    );\r\n\r\n    if (!hasValidStart) {\r\n      console.warn(\r\n        \"⚠️ AI response may not be valid Mermaid syntax:\",\r\n        firstLine\r\n      );\r\n      console.warn(\"Expected to start with one of:\", validStarts.join(\", \"));\r\n    }\r\n\r\n    console.log(\"✅ Cleaned AI response:\", cleaned.substring(0, 100) + \"...\");\r\n    return cleaned;\r\n  }\r\n\r\n  // Remove last AI message (for loading states)\r\n  removeLastAIMessage() {\r\n    const messagesContainer =\r\n      this.editorContainer.querySelector(\"#ai-chat-messages\");\r\n    if (!messagesContainer) return;\r\n\r\n    const messages = messagesContainer.querySelectorAll(\".ai-message\");\r\n    if (messages.length > 0) {\r\n      const lastMessage = messages[messages.length - 1];\r\n      if (\r\n        lastMessage.querySelector(\".ai-text\").textContent.includes(\"Processing\")\r\n      ) {\r\n        lastMessage.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add AI message\r\n  addAIMessage(type, text) {\r\n    const messagesContainer = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-chat-messages\"\r\n    );\r\n    if (!messagesContainer) return;\r\n\r\n    const messageHTML = HTMLTemplates.createAIMessage(type, text);\r\n    DOMHelpers.setContent(\r\n      messagesContainer,\r\n      DOMHelpers.getContent(messagesContainer) + messageHTML,\r\n      true\r\n    );\r\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n  }\r\n\r\n  extractMermaidDiagrams() {\r\n    if (!this.currentContent?.full_storage_format) {\r\n      this.mermaidDiagrams = [];\r\n      this.mermaidDiagramsMap = new Map();\r\n      return;\r\n    }\r\n\r\n    const { diagrams, diagramsMap } = MermaidRenderer.extractMermaidDiagrams(\r\n      this.currentContent.full_storage_format\r\n    );\r\n\r\n    this.mermaidDiagrams = diagrams;\r\n    this.mermaidDiagramsMap = diagramsMap;\r\n  }\r\n\r\n  updateStatus(message) {\r\n    const status = this.editorContainer?.querySelector(\"#editor-status\");\r\n    if (status) {\r\n      status.textContent = message;\r\n      setTimeout(() => {\r\n        status.textContent = \"Sẵn sàng\";\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  async saveChanges() {\r\n    console.log(\"💾 Saving changes...\");\r\n\r\n    try {\r\n      // Sync all content sources\r\n      this.currentContent = this.contentSynchronizer.syncAllContent(\r\n        this.currentContent,\r\n        this.editorContainer,\r\n        this.mermaidDiagrams\r\n      );\r\n\r\n      // Validate content before saving\r\n      const validation = this.contentSynchronizer.validateContent(\r\n        this.currentContent\r\n      );\r\n      if (!validation.isValid) {\r\n        throw new Error(\r\n          `Content validation failed: ${validation.errors.join(\", \")}`\r\n        );\r\n      }\r\n\r\n      // Save using storage manager (supports both callback and localStorage)\r\n      const saveResults = await this.storageManager.saveContent(\r\n        this.currentContent,\r\n        this.onSave,\r\n        {\r\n          enableLocalStorage: true,\r\n          enableCallback: true,\r\n          showNotification: true,\r\n        }\r\n      );\r\n\r\n      // Reset modified state and update button\r\n      this.isModified = false;\r\n      this.updateSaveButtonState();\r\n\r\n      // Update original content to new saved state\r\n      this.originalContent = JSON.parse(JSON.stringify(this.currentContent));\r\n\r\n      // Don't re-extract diagrams after save to avoid duplicates\r\n      console.log(\"✅ Skipping diagram re-extraction to prevent duplicates\");\r\n\r\n      console.log(\"✅ Changes saved successfully\", saveResults);\r\n\r\n      // Save completed - auto close editor immediately\r\n      console.log(\"💾 Save completed - closing editor...\");\r\n      this.closeEditor();\r\n    } catch (error) {\r\n      console.error(\"❌ Error saving changes:\", error);\r\n      this.storageManager.showNotification(\r\n        `❌ Lỗi khi lưu: ${error.message}`,\r\n        \"error\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // Update save button state based on modifications\r\n  updateSaveButtonState() {\r\n    const saveBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-save-btn\"\r\n    );\r\n    if (!saveBtn) return;\r\n\r\n    if (this.isModified) {\r\n      DOMHelpers.setContent(saveBtn, \"💾 Lưu thay đổi *\");\r\n      saveBtn.style.background = \"#28a745\";\r\n      saveBtn.title = \"Có thay đổi chưa lưu\";\r\n    } else {\r\n      DOMHelpers.setContent(saveBtn, \"💾 Lưu thay đổi\");\r\n      saveBtn.style.background = \"#007bff\";\r\n      saveBtn.title = \"Lưu thay đổi\";\r\n    }\r\n  }\r\n\r\n  // Zoom controls methods\r\n  zoomIn() {\r\n    this.currentZoom = Math.min(this.currentZoom * 1.2, 3);\r\n    this.updateZoom();\r\n  }\r\n\r\n  zoomOut() {\r\n    this.currentZoom = Math.max(this.currentZoom / 1.2, 0.3);\r\n    this.updateZoom();\r\n  }\r\n\r\n  resetZoom() {\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n    this.updateZoom();\r\n  }\r\n\r\n  updateZoom() {\r\n    const preview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-preview\"\r\n    );\r\n    const zoomLevel = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-level\"\r\n    );\r\n\r\n    if (preview) {\r\n      const mermaidContent = DOMHelpers.querySelector(preview, \".mermaid, svg\");\r\n      if (mermaidContent) {\r\n        mermaidContent.style.transform = `scale(${this.currentZoom}) translate(${this.dragOffset.x}px, ${this.dragOffset.y}px)`;\r\n        mermaidContent.style.transformOrigin = \"center center\";\r\n        mermaidContent.style.transition = \"transform 0.2s ease\";\r\n      }\r\n    }\r\n\r\n    if (zoomLevel) {\r\n      DOMHelpers.setContent(\r\n        zoomLevel,\r\n        `${Math.round(this.currentZoom * 100)}%`\r\n      );\r\n    }\r\n  }\r\n\r\n  handleWheel(e) {\r\n    e.preventDefault();\r\n    if (e.deltaY < 0) {\r\n      this.zoomIn();\r\n    } else {\r\n      this.zoomOut();\r\n    }\r\n  }\r\n\r\n  closeEditor() {\r\n    console.log(\"🔄 Closing editor...\");\r\n\r\n    // Stop auto-save\r\n    this.storageManager.stopAutoSave();\r\n\r\n    if (this.editorContainer) {\r\n      DOMHelpers.removeElement(this.editorContainer);\r\n      this.editorContainer = null;\r\n    }\r\n\r\n    this.isEditorOpen = false;\r\n    this.currentContent = null;\r\n    this.originalContent = null;\r\n    this.mermaidDiagrams = [];\r\n    this.mermaidDiagramsMap = new Map();\r\n    this.currentSelectedDiagram = null;\r\n    this.currentSelectedDiagramId = null;\r\n    this.isModified = false;\r\n\r\n    // Reset zoom state\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n\r\n    console.log(\"✅ Editor closed\");\r\n  }\r\n\r\n  // Public method to set save callback\r\n  setSaveCallback(callback) {\r\n    this.onSave = callback;\r\n  }\r\n\r\n  // Check if editor is currently open\r\n  isOpen() {\r\n    return this.isEditorOpen;\r\n  }\r\n\r\n  // Get current content\r\n  getCurrentContent() {\r\n    if (this.textEditor) {\r\n      // Update content from editor\r\n      const editorContent = this.textEditor.getValue();\r\n      if (this.currentContent) {\r\n        this.currentContent.full_storage_format = editorContent;\r\n      }\r\n    }\r\n    return this.currentContent;\r\n  }\r\n}\r\n\r\n// Export for use in content.js\r\nexport { ConfluenceEditor };\r\n","// Chrome Storage Management\nimport { DEFAULT_SETTINGS, EXTENSION_SETTINGS_KEY } from \"./constants.js\";\n\nexport class StorageManager {\n  /**\n   * Load settings from Chrome storage\n   * @returns {Promise<Object>} Settings object\n   */\n  static async getSettings() {\n    try {\n      const result = await chrome.storage.sync.get([EXTENSION_SETTINGS_KEY]);\n      return result[EXTENSION_SETTINGS_KEY] || DEFAULT_SETTINGS;\n    } catch (error) {\n      console.error(\"Error loading settings:\", error);\n      return DEFAULT_SETTINGS;\n    }\n  }\n\n  /**\n   * Save settings to Chrome storage\n   * @param {Object} settings - Settings object to save\n   * @returns {Promise<boolean>} Success status\n   */\n  static async saveSettings(settings) {\n    try {\n      await chrome.storage.sync.set({ [EXTENSION_SETTINGS_KEY]: settings });\n      return true;\n    } catch (error) {\n      console.error(\"Error saving settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Update specific setting field\n   * @param {string} field - Field name to update\n   * @param {any} value - New value\n   * @returns {Promise<boolean>} Success status\n   */\n  static async updateSetting(field, value) {\n    try {\n      const currentSettings = await this.getSettings();\n      const updatedSettings = { ...currentSettings, [field]: value };\n      return await this.saveSettings(updatedSettings);\n    } catch (error) {\n      console.error(\"Error updating setting:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Reset settings to default\n   * @returns {Promise<boolean>} Success status\n   */\n  static async resetSettings() {\n    try {\n      await chrome.storage.sync.remove([EXTENSION_SETTINGS_KEY]);\n      return true;\n    } catch (error) {\n      console.error(\"Error resetting settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Validate settings object\n   * @param {Object} settings - Settings to validate\n   * @returns {Object} Validation result with errors\n   */\n  static validateSettings(settings) {\n    const errors = {};\n\n    if (!settings.apiKey?.trim()) {\n      errors.apiKey = \"API Key là bắt buộc\";\n    }\n\n    if (!settings.urlTemplate?.trim()) {\n      errors.urlTemplate = \"URL Template là bắt buộc\";\n    } else {\n      const validationResult = this.validateConfluencePageLink(\n        settings.urlTemplate\n      );\n\n      if (!validationResult.valid) {\n        errors.urlTemplate =\n          validationResult.error || \"URL Template không hợp lệ.\";\n      }\n    }\n    if (!settings.documentUrl?.trim()) {\n      errors.documentUrl = \"URL thư mục lưu tài liệu là bắt buộc\";\n    } else if (!this.isValidUrl(settings.documentUrl)) {\n      errors.documentUrl = \"URL không hợp lệ\";\n    }\n\n    if (!settings.databaseUrl?.trim()) {\n      errors.databaseUrl = \"URL thư mục database là bắt buộc\";\n    } else if (!this.isValidUrl(settings.databaseUrl)) {\n      errors.databaseUrl = \"URL không hợp lệ\";\n    }\n\n    // if (!settings.customPrompt?.trim()) {\n    //   errors.customPrompt = \"Custom Prompt là bắt buộc\";\n    // } else if (settings.customPrompt.trim().length < 10) {\n    //   errors.customPrompt = \"Custom Prompt phải có ít nhất 10 ký tự\";\n    // }\n\n    return {\n      isValid: Object.keys(errors).length === 0,\n      errors,\n    };\n  }\n\n  /**\n   * Check if URL is valid\n   * @param {string} url - URL to validate\n   * @returns {boolean} Is valid URL\n   */\n  static isValidUrl(url) {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Validate Confluence page link (có pageId)\n   * @param {string} link - Link Confluence để kiểm tra\n   * @returns {Object} { valid: boolean, error?: string, pageId?: string }\n   */\n  static validateConfluencePageLink(link) {\n    const out = { valid: false, error: null, pageId: null };\n\n    if (!link || typeof link !== \"string\" || !link.trim()) {\n      out.error = \"URL là bắt buộc\";\n      return out;\n    }\n\n    let u;\n    try {\n      u = new URL(link.trim());\n    } catch {\n      out.error = \"URL không hợp lệ\";\n      return out;\n    }\n\n    // check pageId in query param\n    const pageIdParam = u.searchParams.get(\"pageId\");\n    if (pageIdParam && /^\\d+$/.test(pageIdParam)) {\n      out.valid = true;\n      out.pageId = pageIdParam;\n      return out;\n    }\n\n    // check pageId in path (/pages/{id})\n    const pathParts = u.pathname.split(\"/\");\n    const pagesIndex = pathParts.indexOf(\"pages\");\n    if (pagesIndex >= 0 && pathParts.length > pagesIndex + 1) {\n      const candidate = pathParts[pagesIndex + 1];\n      if (/^\\d+$/.test(candidate)) {\n        out.valid = true;\n        out.pageId = candidate;\n        return out;\n      }\n    }\n\n    out.error = \"Không tìm thấy pageId trong URL\";\n    return out;\n  }\n}\n","// Mermaid Rendering Utilities\n// Handles Mermaid diagram loading, rendering and error handling\n\nexport class MermaidRenderer {\n  /**\n   * Load Mermaid script dynamically\n   * @returns {Promise<object>} Mermaid instance\n   */\n  static async loadMermaidScript() {\n    if (window.mermaid) {\n      console.log(\"⚡ Mermaid already loaded\");\n      return window.mermaid;\n    }\n\n    const res = await fetch(chrome.runtime.getURL(\"lib/mermaid.min.js\"));\n    const text = await res.text();\n    eval(text); // UMD will attach mermaid to window\n    console.log(\"✅ Mermaid loaded dynamically\");\n    return window.mermaid;\n  }\n\n  /**\n   * Initialize Mermaid with proper configuration\n   * @returns {Promise<void>}\n   */\n  static async initializeMermaid() {\n    await this.loadMermaidScript();\n\n    // Configure Mermaid with proper DOM context\n    window.mermaid.initialize({\n      startOnLoad: false,\n      theme: \"default\",\n      securityLevel: \"loose\",\n      fontFamily: \"Arial, sans-serif\",\n      // Ensure proper DOM context\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true,\n      },\n      // Set the document context explicitly\n      deterministicIds: true,\n      deterministicIDSeed: \"mermaid-diagram-preview\",\n    });\n\n    // Ensure mermaid has access to document\n    if (window.mermaid.setConfig) {\n      window.mermaid.setConfig({\n        securityLevel: \"loose\",\n        theme: \"default\",\n      });\n    }\n  }\n\n  /**\n   * Render a single Mermaid diagram\n   * @param {string} diagramId - Unique ID for the diagram\n   * @param {string} mermaidCode - Mermaid diagram code\n   * @param {HTMLElement} container - Container element\n   * @returns {Promise<void>}\n   */\n  static async renderDiagram(diagramId, mermaidCode, container) {\n    try {\n      // Create a temporary container in the document to ensure proper DOM context\n      const tempContainer = document.createElement(\"div\");\n      tempContainer.style.position = \"absolute\";\n      tempContainer.style.left = \"-9999px\";\n      tempContainer.style.top = \"-9999px\";\n      document.body.appendChild(tempContainer);\n\n      // Modern mermaid.render returns a promise\n      if (window.mermaid.render && typeof window.mermaid.render === \"function\") {\n        try {\n          // Try modern API first\n          const renderResult = window.mermaid.render(diagramId, mermaidCode);\n\n          if (renderResult && typeof renderResult.then === \"function\") {\n            // Promise-based API\n            const result = await renderResult;\n            \n            // Clean up temp container\n            if (document.body.contains(tempContainer)) {\n              document.body.removeChild(tempContainer);\n            }\n\n            // Handle different return formats\n            let svgCode;\n            if (typeof result === \"string\") {\n              svgCode = result;\n            } else if (result && result.svg) {\n              svgCode = result.svg;\n            } else {\n              svgCode = String(result);\n            }\n\n            container.innerHTML = svgCode;\n            console.log(\"✅ Mermaid diagram rendered successfully (promise API)\");\n          } else {\n            // Synchronous return or callback-based API\n            if (typeof renderResult === \"string\") {\n              // Clean up temp container\n              if (document.body.contains(tempContainer)) {\n                document.body.removeChild(tempContainer);\n              }\n              container.innerHTML = renderResult;\n              console.log(\"✅ Mermaid diagram rendered successfully (sync API)\");\n            } else {\n              // Try callback-based API\n              window.mermaid.render(diagramId, mermaidCode, (svgCode) => {\n                // Clean up temp container\n                if (document.body.contains(tempContainer)) {\n                  document.body.removeChild(tempContainer);\n                }\n                container.innerHTML = svgCode;\n                console.log(\"✅ Mermaid diagram rendered successfully (callback API)\");\n              });\n            }\n          }\n        } catch (renderError) {\n          // Clean up temp container\n          if (document.body.contains(tempContainer)) {\n            document.body.removeChild(tempContainer);\n          }\n          throw renderError;\n        }\n      } else {\n        throw new Error(\"Mermaid render function not available\");\n      }\n    } catch (error) {\n      console.error(\"❌ Mermaid render error:\", error);\n      this.showMermaidError(container, mermaidCode, error);\n    }\n  }\n\n  /**\n   * Show Mermaid error in a nice format\n   * @param {HTMLElement} container - Container element\n   * @param {string} text - Mermaid code that failed\n   * @param {Error} error - Error object\n   */\n  static showMermaidError(container, text, error) {\n    container.innerHTML = `\n      <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\n        <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\n          <span style=\"margin-right: 8px;\">⚠️</span>\n          Mermaid Render Error\n        </div>\n        <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\n          ${error.message || \"Unknown error occurred\"}\n        </div>\n        <details style=\"margin-top: 10px;\">\n          <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\n          <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${text}</pre>\n        </details>\n      </div>\n    `;\n  }\n\n  /**\n   * Detect Mermaid diagram type from code\n   * @param {string} code - Mermaid diagram code\n   * @returns {string} Diagram type\n   */\n  static detectMermaidType(code) {\n    const firstLine = code.trim().split(\"\\n\")[0].toLowerCase();\n    if (firstLine.includes(\"graph\")) return \"graph\";\n    if (firstLine.includes(\"flowchart\")) return \"flowchart\";\n    if (firstLine.includes(\"sequencediagram\")) return \"sequence\";\n    if (firstLine.includes(\"classDiagram\")) return \"class\";\n    if (firstLine.includes(\"stateDiagram\")) return \"state\";\n    if (firstLine.includes(\"erDiagram\")) return \"er\";\n    if (firstLine.includes(\"gantt\")) return \"gantt\";\n    if (firstLine.includes(\"pie\")) return \"pie\";\n    return \"graph\";\n  }\n\n  /**\n   * Extract Mermaid diagrams from Confluence content\n   * @param {string} content - Confluence storage format content\n   * @returns {Array} Array of diagram objects\n   */\n  static extractMermaidDiagrams(content) {\n    const diagrams = [];\n    const diagramsMap = new Map();\n\n    if (!content) return { diagrams, diagramsMap };\n\n    // Regex to find all <ac:structured-macro ...> ... </ac:structured-macro>\n    const macroRegex =\n      /<ac:structured-macro[^>]*ac:name=\"(mermaid|code)\"[^>]*>([\\s\\S]*?)<\\/ac:structured-macro>/gi;\n\n    let match;\n    let index = 0;\n\n    while ((match = macroRegex.exec(content)) !== null) {\n      const macroName = match[1];\n      const macroContent = match[2];\n\n      // Check code parameter\n      const codeMatch = macroContent.match(\n        /<ac:parameter[^>]*ac:name=\"code\">([\\s\\S]*?)<\\/ac:parameter>/\n      );\n      if (!codeMatch) continue;\n\n      const code = codeMatch[1].trim();\n      if (!code) continue;\n\n      // If it's code macro, check language\n      if (macroName === \"code\") {\n        const langMatch = macroContent.match(\n          /<ac:parameter[^>]*ac:name=\"language\">([\\s\\S]*?)<\\/ac:parameter>/\n        );\n        if (!langMatch || langMatch[1].trim() !== \"mermaid\") continue;\n      }\n\n      const type = this.detectMermaidType(code);\n      const diagramId = `mermaid-diagram-${index}`;\n\n      const diagramRecord = {\n        id: diagramId,\n        code: code,\n        originalCode: code,\n        originalMatch: match[0],\n        index: index,\n        type: type,\n        title: `${type.charAt(0).toUpperCase() + type.slice(1)} Diagram ${\n          index + 1\n        }`,\n      };\n\n      diagrams.push(diagramRecord);\n      diagramsMap.set(diagramId, {\n        content: code,\n        type: type,\n        index: index,\n        title: diagramRecord.title,\n      });\n\n      console.log(`✅ Extracted diagram ${index}:`, {\n        type,\n        code: code.substring(0, 50) + \"...\",\n      });\n\n      index++;\n    }\n\n    console.log(\"🎨 Extracted Mermaid diagrams:\", diagrams);\n    return { diagrams, diagramsMap };\n  }\n}\n","// Mermaid AI Chat Service for K-Tool Extension\nimport { ApiClient } from \"../../shared/api.js\";\n\nexport class MermaidAIChat {\n  constructor($) {\n    this.$ = $ || window.jQuery || window.$; // jQuery instance từ AJS hoặc fallback\n    this.isPopupOpen = false;\n    this.currentMermaidContent = \"\";\n    this.currentMermaidElement = null;\n\n    // Lưu element và tọa độ được click\n    this.lastClickedElement = null;\n    this.lastClickPosition = { x: 0, y: 0 };\n\n    console.log(\"🚀 Mermaid AI Chat initializing with AJS/jQuery:\", !!this.$);\n    this.init();\n  }\n\n  async init() {\n    console.log(\"🚀 AJS: Mermaid AI Chat initializing...\");\n\n    // Check if already injected\n    if (document.getElementById(\"mermaid-ai-chat-root\")) {\n      console.log(\"🔍 AJS: Mermaid AI Chat already injected, skipping...\");\n      return;\n    }\n\n    // Create popup UI first\n    this.createPopupUI();\n\n    // Setup detection - AJS.toInit đảm bảo DOM ready\n    this.setupMermaidDetection();\n\n    // Setup page change detection để handle SPA navigation\n    this.setupConfluencePageChangeDetection();\n\n    console.log(\"✅ AJS: Mermaid AI Chat ready\");\n  }\n\n  setupMermaidDetection() {\n    console.log(\"🔍 SIMPLE: Setting up iframe click detection...\");\n\n    // Chỉ setup iframe event listeners\n    this.setupIframeEventListeners();\n\n    // Setup MutationObserver để detect iframe mới (chỉ observe DOM cha)\n    this.setupMutationObserver();\n\n    console.log(\"✅ SIMPLE: Setup completed\");\n  }\n\n  setupIframeEventListeners() {\n    console.log(\"🔍 IFRAME: Setting up iframe event listeners...\");\n    this.refreshIframeListeners();\n  }\n\n  refreshIframeListeners() {\n    // Tìm tất cả iframes hiện tại\n    const iframes = document.querySelectorAll(\"iframe\");\n    console.log(\"🔍 IFRAME REFRESH: Found\", iframes.length, \"iframes\");\n\n    if (iframes.length === 0) {\n      console.log(\"⚠️ IFRAME REFRESH: No iframes found on page\");\n      console.log(\n        \"⚠️ IFRAME REFRESH: Document ready state:\",\n        document.readyState\n      );\n\n      // Try again after a delay\n      setTimeout(() => {\n        console.log(\"🔍 IFRAME REFRESH: Retrying iframe search after delay...\");\n        const retryIframes = document.querySelectorAll(\"iframe\");\n        console.log(\n          \"🔍 IFRAME REFRESH: Retry found\",\n          retryIframes.length,\n          \"iframes\"\n        );\n        if (retryIframes.length > 0) {\n          retryIframes.forEach((iframe, index) => {\n            console.log(\n              `🔍 IFRAME REFRESH RETRY ${index}: Processing iframe:`,\n              iframe.src || iframe.id || \"no-src\"\n            );\n            this.attachIframeListeners(iframe, `refresh-retry-${index}`);\n          });\n        }\n      }, 1000);\n    } else {\n      iframes.forEach((iframe, index) => {\n        console.log(\n          `🔍 IFRAME REFRESH ${index}: Processing iframe:`,\n          iframe.src || iframe.id || \"no-src\"\n        );\n        this.attachIframeListeners(iframe, `refresh-${index}`);\n      });\n    }\n  }\n\n  attachIframeListeners(iframe, index) {\n    try {\n      // Kiểm tra nếu iframe đã có listener để tránh duplicate\n      if (iframe.dataset.mermaidListenerAttached === \"true\") {\n        console.log(\n          `⚠️ IFRAME ${index}: Listener already attached, skipping...`\n        );\n        return;\n      }\n\n      // Đánh dấu iframe đã có listener\n      iframe.dataset.mermaidListenerAttached = \"true\";\n\n      // Đợi iframe load xong\n      const loadHandler = () => {\n        console.log(\n          `🔍 IFRAME ${index}: Iframe loaded, attaching listeners...`\n        );\n        try {\n          const iframeDoc =\n            iframe.contentDocument || iframe.contentWindow.document;\n\n          if (!iframeDoc) {\n            console.log(\n              `⚠️ IFRAME ${index}: Cannot access iframe document (cross-origin?)`\n            );\n            return;\n          }\n\n          console.log(\n            `✅ IFRAME ${index}: Iframe document accessible, adding click listeners...`\n          );\n\n          // Click handler: Lưu element và tọa độ nếu là ảnh\n          const clickHandler = (event) => {\n            console.log(`🖱️ IFRAME ${index} CLICK: Element clicked:`, {\n              tag: event.target.tagName,\n              classes: event.target.className,\n              id: event.target.id,\n              src: event.target.src || \"N/A\",\n              alt: event.target.alt || \"N/A\",\n              element: event.target,\n            });\n\n            // Nếu click vào ảnh (IMG hoặc SVG) thì lưu lại\n            if (\n              event.target.tagName === \"IMG\" ||\n              event.target.tagName === \"SVG\"\n            ) {\n              console.log(\n                `🎯 SAVING: Image clicked - saving element and position`\n              );\n\n              // Lưu element\n              this.lastClickedElement = event.target;\n\n              // Lưu tọa độ click\n              this.lastClickPosition = {\n                x: event.clientX,\n                y: event.clientY,\n              };\n\n              console.log(`🎯 SAVED: Element:`, this.lastClickedElement);\n              console.log(`🎯 SAVED: Position:`, this.lastClickPosition);\n            }\n          };\n\n          // Remove existing listener nếu có\n          if (iframeDoc.mermaidClickHandler) {\n            iframeDoc.removeEventListener(\n              \"click\",\n              iframeDoc.mermaidClickHandler,\n              true\n            );\n          }\n\n          // Add new listener\n          const boundClickHandler = clickHandler.bind(this);\n          iframeDoc.addEventListener(\"click\", boundClickHandler, true);\n\n          // Store reference để có thể remove sau này\n          iframeDoc.mermaidClickHandler = boundClickHandler;\n        } catch (e) {\n          console.log(\n            `❌ IFRAME ${index}: Error accessing iframe content:`,\n            e.message\n          );\n        }\n      };\n\n      // Remove existing load listener nếu có\n      if (iframe.mermaidLoadHandler) {\n        iframe.removeEventListener(\"load\", iframe.mermaidLoadHandler);\n      }\n\n      // Add load listener\n      iframe.addEventListener(\"load\", loadHandler);\n      iframe.mermaidLoadHandler = loadHandler;\n\n      // Nếu iframe đã load rồi thì gọi handler ngay\n      if (\n        iframe.contentDocument &&\n        iframe.contentDocument.readyState === \"complete\"\n      ) {\n        loadHandler();\n      }\n    } catch (e) {\n      console.log(\n        `❌ IFRAME ${index}: Error setting up iframe listener:`,\n        e.message\n      );\n    }\n  }\n\n  setupMutationObserver() {\n    console.log(\n      \"🔍 MUTATION: Setting up observer to track ALL DOM changes in parent...\"\n    );\n\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation, mutationIndex) => {\n        console.log(`🔍 MUTATION ${mutationIndex}: Type: ${mutation.type}`);\n        if (mutation.type === \"childList\") {\n          // Log ADDED nodes\n          if (mutation.addedNodes.length > 0) {\n            console.log(\n              `➕ MUTATION ${mutationIndex}: ${mutation.addedNodes.length} nodes ADDED:`\n            );\n            mutation.addedNodes.forEach((node, nodeIndex) => {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                console.log(`➕ Added ${nodeIndex}: ${node.tagName}`, {\n                  tag: node.tagName,\n                  classes: node.className || \"N/A\",\n                  id: node.id || \"N/A\",\n                  textContent: node.textContent?.substring(0, 50) || \"N/A\",\n                  element: node,\n                });\n\n                // Nếu là iframe thì attach listeners\n                if (node.tagName === \"IFRAME\") {\n                  console.log(\n                    \"🎯 MUTATION: IFRAME detected, attaching listeners...\"\n                  );\n                  this.attachIframeListeners(node, \"new\");\n                }\n\n                this.injectAIButton();\n              } else if (node.nodeType === Node.TEXT_NODE) {\n                console.log(`➕ Added ${nodeIndex}: TEXT_NODE`, {\n                  content: node.textContent?.substring(0, 50) || \"N/A\",\n                });\n              }\n            });\n          }\n        }\n      });\n    });\n\n    // Observe DOM cha với tất cả types\n    observer.observe(document.body, {\n      childList: true,\n      subtree: false,\n    });\n  }\n\n  setupConfluencePageChangeDetection() {\n    console.log(\n      \"🔍 PAGE CHANGE: Setting up Confluence page change detection...\"\n    );\n\n    // Method 1: Listen for Confluence-specific events\n    if (window.AJS && AJS.bind) {\n      // Editor events\n      AJS.bind(\"init.rte\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Confluence RTE initialized - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n\n      AJS.bind(\"rte-ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Confluence RTE ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n\n      // Page events\n      AJS.bind(\"page.edit.ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Page edit ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1500);\n      });\n\n      AJS.bind(\"page.view.ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Page view ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n    }\n\n    // Method 2: Watch for URL changes (SPA navigation)\n    let currentUrl = window.location.href;\n    const checkUrlChange = () => {\n      if (window.location.href !== currentUrl) {\n        console.log(\n          \"🔄 PAGE CHANGE: URL changed from\",\n          currentUrl,\n          \"to\",\n          window.location.href\n        );\n        currentUrl = window.location.href;\n\n        // Re-setup after URL change\n        setTimeout(() => {\n          console.log(\n            \"🔄 PAGE CHANGE: Re-setting up iframe listeners after URL change\"\n          );\n          this.setupIframeEventListeners();\n        }, 2000);\n      }\n    };\n\n    setInterval(checkUrlChange, 1000);\n\n    console.log(\n      \"✅ PAGE CHANGE: Confluence page change detection setup completed\"\n    );\n  }\n\n  injectAIButton() {\n    var panel = document.getElementById(\"property-panel\");\n    if (!panel) return;\n\n    var buttonContainer = panel.querySelector(\".panel-buttons\");\n    if (!buttonContainer) return;\n\n    // Kiểm tra nếu nút AI đã có\n    if (\n      buttonContainer.querySelector(\n        \".macro-placeholder-property-panel-ai-button\"\n      )\n    )\n      return;\n\n    console.log(\"✨ Thêm nút AI vào property panel...\");\n\n    // Tạo thẻ <a> mới\n    var aiButton = document.createElement(\"a\");\n    aiButton.href = \"#\";\n    aiButton.className =\n      \"aui-button macro-placeholder-property-panel-ai-button\";\n    aiButton.setAttribute(\"tabindex\", \"0\");\n    aiButton.setAttribute(\"role\", \"button\");\n    aiButton.setAttribute(\"aria-label\", \"AI\");\n    aiButton.style.marginRight = \"4px\";\n\n    // Icon + Text\n    aiButton.innerHTML = `<span class=\"icon\"></span><span class=\"panel-button-text\">AI</span>`;\n\n    // Thêm sự kiện click\n    aiButton.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      console.log(\"🤖 AI Button clicked - checking saved element...\");\n\n      // DEBUG: Kiểm tra context và values\n      console.log(\"🔍 DEBUG AI BUTTON: this:\", this);\n      console.log(\n        \"🔍 DEBUG AI BUTTON: this.lastClickedElement:\",\n        this.lastClickedElement\n      );\n      console.log(\n        \"🔍 DEBUG AI BUTTON: this.lastClickPosition:\",\n        this.lastClickPosition\n      );\n      console.log(\n        \"🔍 DEBUG AI BUTTON: typeof this.lastClickedElement:\",\n        typeof this.lastClickedElement\n      );\n      console.log(\n        \"🔍 DEBUG AI BUTTON: Boolean check:\",\n        !!(this.lastClickedElement && this.lastClickPosition)\n      );\n\n      if (this.lastClickedElement && this.lastClickPosition) {\n        console.log(\n          \"🤖 Found saved element - showing chat popup at position:\",\n          this.lastClickPosition\n        );\n        console.log(\"🤖 Saved element:\", this.lastClickedElement);\n\n        // Gọi showChatPopup với tọa độ đã lưu\n        this.showChatPopup(this.lastClickPosition.x, this.lastClickPosition.y);\n      } else {\n        console.log(\n          \"⚠️ No saved element found - please click on an image first\"\n        );\n        console.log(\n          \"⚠️ DEBUG: lastClickedElement is:\",\n          this.lastClickedElement\n        );\n        console.log(\"⚠️ DEBUG: lastClickPosition is:\", this.lastClickPosition);\n        alert(\"⚠️ Vui lòng click vào một hình ảnh trước khi sử dụng AI Chat!\");\n      }\n    });\n\n    // Chèn vào trước nút Remove\n    var removeButton = buttonContainer.querySelector(\n      \".macro-placeholder-property-panel-remove-button\"\n    );\n    if (removeButton) {\n      buttonContainer.insertBefore(aiButton, removeButton);\n    } else {\n      buttonContainer.appendChild(aiButton);\n    }\n\n    console.log(\"✅ Đã chèn nút AI thành công.\");\n  }\n\n  createPopupUI() {\n    const root = document.createElement(\"div\");\n    root.id = \"mermaid-ai-chat-root\";\n    root.innerHTML = `\n      <div id=\"mermaid-ai-chat-popup\" class=\"mermaid-ai-chat-popup\" style=\"display: none;\">\n        <div class=\"mermaid-ai-chat-header\">\n          <h3>🤖 Chat with AI about this Mermaid diagram</h3>\n          <button class=\"mermaid-ai-chat-close\">&times;</button>\n        </div>\n        <div class=\"mermaid-ai-chat-body\">\n          <div class=\"mermaid-ai-chat-messages\" id=\"mermaid-ai-chat-messages\">\n            <div class=\"mermaid-ai-chat-message system\">\n              <div class=\"message-content\">\n                <p>👋 Hi! I can help you modify this Mermaid diagram. What would you like to change?</p>\n              </div>\n            </div>\n          </div>\n          <div class=\"mermaid-ai-chat-input-container\">\n            <textarea\n              id=\"mermaid-ai-chat-input\"\n              class=\"mermaid-ai-chat-input\"\n              placeholder=\"Describe how you want to modify the diagram...\"\n              rows=\"3\"\n            ></textarea>\n            <button id=\"mermaid-ai-chat-send\" class=\"mermaid-ai-chat-send\">\n              📤 Send\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n\n    document.body.appendChild(root);\n    this.bindPopupEvents();\n  }\n\n  bindPopupEvents() {\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    const header = popup.querySelector(\".mermaid-ai-chat-header\");\n    const closeBtn = popup.querySelector(\".mermaid-ai-chat-close\");\n    const sendBtn = document.getElementById(\"mermaid-ai-chat-send\");\n    const input = document.getElementById(\"mermaid-ai-chat-input\");\n\n    // Make popup draggable\n    this.makeDraggable(popup, header);\n\n    // Close popup\n    closeBtn.addEventListener(\"click\", () => {\n      this.hideChatPopup();\n    });\n\n    // Send message\n    sendBtn.addEventListener(\"click\", () => {\n      this.sendMessage();\n    });\n\n    // Send on Enter (Ctrl+Enter for new line)\n    input.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" && !e.ctrlKey && !e.shiftKey) {\n        e.preventDefault();\n        this.sendMessage();\n      }\n    });\n\n    // Click outside to close - with proper event handling\n    setTimeout(() => {\n      const handleClickOutside = (e) => {\n        // Skip if popup is not open\n        if (!this.isPopupOpen) return;\n\n        // Skip if clicking on AI button (to prevent immediate close)\n        if (e.target.closest(\".macro-placeholder-property-panel-ai-button\")) {\n          return;\n        }\n\n        // Skip if clicking inside popup\n        if (popup.contains(e.target)) {\n          return;\n        }\n\n        console.log(\"🖱️ Click outside popup detected, closing...\");\n        this.hideChatPopup();\n      };\n\n      document.addEventListener(\"click\", handleClickOutside, true);\n    }, 300); // Delay to prevent immediate close after opening\n  }\n\n  makeDraggable(popup, dragHandle) {\n    let isDragging = false;\n    let dragStartX = 0;\n    let dragStartY = 0;\n    let popupStartX = 0;\n    let popupStartY = 0;\n\n    console.log(\"🎯 DRAG: Setting up draggable popup...\");\n\n    // Style the drag handle\n    dragHandle.style.cursor = \"move\";\n    dragHandle.style.userSelect = \"none\";\n\n    const startDrag = (e) => {\n      // Don't drag if clicking on close button\n      if (e.target.classList.contains(\"mermaid-ai-chat-close\")) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation(); // Prevent event bubbling\n\n      isDragging = true;\n\n      // Get mouse position\n      dragStartX = e.clientX;\n      dragStartY = e.clientY;\n\n      // Get popup current position (from style, not getBoundingClientRect)\n      popupStartX = parseInt(popup.style.left) || 0;\n      popupStartY = parseInt(popup.style.top) || 0;\n\n      console.log(\"🎯 DRAG: Started\", {\n        mouseX: dragStartX,\n        mouseY: dragStartY,\n        popupX: popupStartX,\n        popupY: popupStartY,\n      });\n\n      // Add global event listeners\n      document.addEventListener(\"mousemove\", onDrag, true);\n      document.addEventListener(\"mouseup\", stopDrag, true);\n\n      // Prevent text selection during drag\n      document.body.style.userSelect = \"none\";\n    };\n\n    const onDrag = (e) => {\n      if (!isDragging) return;\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      // Calculate mouse movement\n      const deltaX = e.clientX - dragStartX;\n      const deltaY = e.clientY - dragStartY;\n\n      // Calculate new popup position\n      let newX = popupStartX + deltaX;\n      let newY = popupStartY + deltaY;\n\n      // Constrain to viewport (with some padding)\n      const padding = 10;\n      const maxX = window.innerWidth - 400 - padding; // 400 is popup width\n      const maxY = window.innerHeight - 300 - padding; // estimated popup height\n\n      newX = Math.max(padding, Math.min(newX, maxX));\n      newY = Math.max(padding, Math.min(newY, maxY));\n\n      // Apply position\n      popup.style.left = newX + \"px\";\n      popup.style.top = newY + \"px\";\n    };\n\n    const stopDrag = (e) => {\n      if (!isDragging) return;\n\n      console.log(\"🎯 DRAG: Stopped\");\n      isDragging = false;\n\n      // Remove global event listeners\n      document.removeEventListener(\"mousemove\", onDrag, true);\n      document.removeEventListener(\"mouseup\", stopDrag, true);\n\n      // Restore text selection\n      document.body.style.userSelect = \"\";\n\n      e.stopPropagation(); // Prevent click outside from firing\n    };\n\n    // Attach drag to header\n    dragHandle.addEventListener(\"mousedown\", startDrag);\n\n    console.log(\"✅ DRAG: Setup completed\");\n  }\n\n  showChatPopup(x, y) {\n    console.log(\"🎉 STEP 8: showChatPopup called with coordinates:\", { x, y });\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    console.log(\"🎉 STEP 8.1: Found popup element:\", popup);\n\n    if (!popup) {\n      console.error(\"❌ STEP 8.1: Popup element not found!\");\n      return;\n    }\n\n    const leftPos = Math.min(x, window.innerWidth - 400);\n    const topPos = Math.min(y, window.innerHeight - 300);\n\n    console.log(\"🎉 STEP 8.2: Setting popup position:\", { leftPos, topPos });\n    console.log(\"🎉 STEP 8.2: Window dimensions:\", {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n\n    popup.style.display = \"block\";\n    popup.style.left = leftPos + \"px\";\n    popup.style.top = topPos + \"px\";\n\n    console.log(\"🎉 STEP 8.3: Popup styles applied:\", {\n      display: popup.style.display,\n      left: popup.style.left,\n      top: popup.style.top,\n    });\n\n    this.isPopupOpen = true;\n    console.log(\"🎉 STEP 8.4: isPopupOpen set to:\", this.isPopupOpen);\n\n    // Focus input\n    setTimeout(() => {\n      const input = document.getElementById(\"mermaid-ai-chat-input\");\n      console.log(\"🎉 STEP 8.5: Focusing input element:\", input);\n      if (input) {\n        input.focus();\n        console.log(\"✅ STEP 8.5: Input focused successfully\");\n      } else {\n        console.error(\"❌ STEP 8.5: Input element not found!\");\n      }\n    }, 100);\n\n    console.log(\"✅ STEP 8: showChatPopup completed\");\n  }\n\n  hideChatPopup() {\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    popup.style.display = \"none\";\n    this.isPopupOpen = false;\n\n    // Clear messages except system message\n    const messagesContainer = document.getElementById(\n      \"mermaid-ai-chat-messages\"\n    );\n    const systemMessage = messagesContainer.querySelector(\".system\");\n    messagesContainer.innerHTML = \"\";\n    messagesContainer.appendChild(systemMessage);\n\n    // Clear input\n    document.getElementById(\"mermaid-ai-chat-input\").value = \"\";\n\n    console.log(\"✅ Chat popup closed\");\n  }\n\n  async sendMessage() {\n    const input = document.getElementById(\"mermaid-ai-chat-input\");\n    const message = input.value.trim();\n\n    // Validate user prompt\n    const promptValidation = ApiClient.validateUserPrompt(message);\n    if (!promptValidation.isValid) {\n      this.addMessage(\"assistant\", `⚠️ ${promptValidation.error}`);\n      return;\n    }\n\n    // Validate diagram content\n    const diagramValidation = ApiClient.validateDiagramContent(\n      this.currentMermaidContent\n    );\n    if (!diagramValidation.isValid) {\n      this.addMessage(\"assistant\", `⚠️ ${diagramValidation.error}`);\n      return;\n    }\n\n    // Add user message to chat\n    this.addMessage(\"user\", message);\n\n    // Clear input\n    input.value = \"\";\n\n    // Show loading\n    const loadingId = this.addMessage(\"assistant\", \"🤔 Thinking...\");\n\n    try {\n      // Call AI API\n      const response = await this.callAI(message);\n\n      // Remove loading message\n      this.removeMessage(loadingId);\n\n      // Add AI response\n      this.addMessage(\"assistant\", response);\n    } catch (error) {\n      console.error(\"❌ AI API error:\", error);\n\n      // Remove loading message\n      this.removeMessage(loadingId);\n\n      // Get user-friendly error message\n      const errorMessage = ApiClient.getErrorMessage({\n        success: false,\n        error: error.message,\n      });\n      this.addMessage(\"assistant\", errorMessage);\n    }\n  }\n\n  addMessage(type, content) {\n    const messagesContainer = document.getElementById(\n      \"mermaid-ai-chat-messages\"\n    );\n    const messageId = \"msg-\" + Date.now();\n\n    const messageDiv = document.createElement(\"div\");\n    messageDiv.className = `mermaid-ai-chat-message ${type}`;\n    messageDiv.id = messageId;\n    messageDiv.innerHTML = `\n      <div class=\"message-content\">\n        <p>${content}</p>\n      </div>\n    `;\n\n    messagesContainer.appendChild(messageDiv);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n    return messageId;\n  }\n\n  removeMessage(messageId) {\n    const message = document.getElementById(messageId);\n    if (message) {\n      message.remove();\n    }\n  }\n\n  async callAI(userPrompt) {\n    // Prepare payload similar to the original extension\n    const payload = {\n      diagram_content: this.currentMermaidContent,\n      user_prompt: userPrompt,\n      context: \"mermaid_diagram_editing\",\n    };\n\n    console.log(\"📤 Sending AI request:\", payload);\n\n    // Use the API client from shared module\n    const response = await ApiClient.editDiagram(payload);\n\n    if (response.success) {\n      return (\n        response.data.result ||\n        response.data.response ||\n        \"✅ Diagram updated successfully!\"\n      );\n    } else {\n      throw new Error(response.error || \"Unknown error occurred\");\n    }\n  }\n}\n\n// Export for use as service in K-Tool Extension\n// Initialization will be handled by the main content.js\n","/**\n * Diagram processing utilities for Confluence page creation\n * Ported from extension/src/api/api.ts and extension/src/utils/mermaidExporter.ts\n */\n\n/**\n * DiagramData interface equivalent for JavaScript\n * @typedef {Object} DiagramData\n * @property {string} filename - The filename for the diagram\n * @property {string} macroId - The macro ID\n * @property {string} diagramCode - The mermaid diagram code\n * @property {string} [svg] - The SVG content\n * @property {string} [png] - The PNG base64 content\n */\n\n/**\n * Extract diagrams from Confluence storage format - EXACT copy from extension\n * @param {string} storage - The storage format content\n * @returns {DiagramData[]} Array of extracted diagrams\n */\nexport function getDiagramConfluenceStyles(storage) {\n  let macroCounter = 1;\n  const extractedDiagrams = [];\n  \n  // Find all mermaid macros in storage content\n  const mermaidRegex = /<ac:structured-macro[^>]*ac:name=\"mermaid\"[^>]*>[\\s\\S]*?<ac:parameter[^>]*ac:name=\"code\"[^>]*>(?:<!\\[CDATA\\[([\\s\\S]*?)\\]\\]>|([\\s\\S]*?))<\\/ac:parameter>[\\s\\S]*?<\\/ac:structured-macro>/g;\n  \n  let match;\n  while ((match = mermaidRegex.exec(storage)) !== null) {\n    const code = (match[1] || match[2] || '').trim();\n    \n    if (code) {\n      extractedDiagrams.push({\n        filename: `k-tool-diagram-${macroCounter}`,\n        macroId: (110 + macroCounter).toString(),\n        diagramCode: code\n      });\n      macroCounter++;\n    }\n  }\n\n  return extractedDiagrams;\n}\n\n/**\n * Load mermaid script dynamically if not already loaded\n * @returns {Promise<void>}\n */\nasync function loadMermaidScript() {\n  if (typeof window !== 'undefined' && window.mermaid) {\n    return; // Already loaded\n  }\n\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.src = 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.min.js';\n    script.onload = () => {\n      // Initialize mermaid\n      if (window.mermaid) {\n        window.mermaid.initialize({ \n          startOnLoad: false, \n          securityLevel: 'loose',\n          theme: 'default'\n        });\n      }\n      resolve();\n    };\n    script.onerror = reject;\n    document.head.appendChild(script);\n  });\n}\n\n/**\n * Convert diagram code to SVG and PNG using mermaid - EXACT copy from extension\n * @param {DiagramData} diagram - The diagram data\n * @returns {Promise<DiagramData>} The diagram with SVG and PNG data\n */\nexport async function convertDiagramToSvgPng(diagram) {\n  try {\n    console.log(`🎨 Converting diagram to SVG/PNG: ${diagram.filename}`);\n    console.log(`🎨 Converting diagram to SVG/PNG: ${diagram.diagramCode}`);\n\n    // Ensure mermaid is loaded\n    await loadMermaidScript();\n\n    // Use mermaid to render SVG\n    const svgResult = await window.mermaid.render(`diagram-${diagram.macroId}`, diagram.diagramCode);\n    \n    // Handle different return types from mermaid.render\n    let svgContent;\n    if (typeof svgResult === 'string') {\n      svgContent = svgResult;\n    } else if (svgResult && typeof svgResult === 'object' && svgResult.svg) {\n      svgContent = svgResult.svg;\n    } else {\n      throw new Error('Invalid SVG result from mermaid.render');\n    }\n    \n    diagram.svg = svgContent;\n    \n    // Convert SVG to PNG using canvas\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const img = new Image();\n    \n    await new Promise((resolve, reject) => {\n      img.onload = () => {\n        canvas.width = img.width || 800;\n        canvas.height = img.height || 600;\n        \n        if (ctx) {\n          ctx.fillStyle = 'white';\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0);\n          diagram.png = canvas.toDataURL('image/png').split(',')[1]; // Remove data:image/png;base64,\n        }\n        resolve(true);\n      };\n      \n      img.onerror = reject;\n      img.src = 'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgContent)));\n    });\n    \n    console.log(`✅ Successfully converted ${diagram.filename} to SVG/PNG`);\n    return diagram;\n    \n  } catch (error) {\n    console.error(`❌ Failed to convert diagram ${diagram.filename}:`, error);\n    \n    // Create fallback PNG data\n    diagram.png = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==';\n    return diagram;\n  }\n}\n\n/**\n * Save diagram to mermaid-cloud API - EXACT copy from extension\n * @param {DiagramData} diagram - The diagram data\n * @param {string} pageId - The page ID\n * @returns {Promise<boolean>} Success status\n */\nexport async function saveDiagramToAPI(diagram, pageId) {\n  try {\n    console.log(`💾 Saving diagram ${diagram.filename} to API for page ${pageId}`);\n    \n    const payload = {\n      filename: diagram.filename,\n      data: diagram.diagramCode,\n      svg: diagram.svg || '',\n      png: diagram.png || ''\n    };\n    \n    const response = await fetch(`/rest/mermaidrest/1.0/mermaid/${pageId}`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/javascript, */*; q=0.01',\n        'Content-Type': 'application/json; charset=UTF-8',\n        'X-Requested-With': 'XMLHttpRequest'\n      },\n      body: JSON.stringify(payload)\n    });\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(`❌ Failed to save diagram ${diagram.filename}:`, response.status, errorText);\n      return false;\n    }\n    \n    console.log(`✅ Successfully saved diagram ${diagram.filename} to API`);\n    return true;\n    \n  } catch (error) {\n    console.error(`❌ Error saving diagram ${diagram.filename}:`, error);\n    return false;\n  }\n}\n\n/**\n * Process all extracted diagrams and save them to API sequentially - EXACT copy from extension\n * @param {string} pageId - The page ID\n * @param {DiagramData[]} extractedDiagrams - Array of diagrams to process\n * @returns {Promise<{success: number, total: number, errors: string[]}>} Processing result\n */\nexport async function processAndSaveDiagrams(pageId, extractedDiagrams) {\n  if (extractedDiagrams.length === 0) {\n    console.log('ℹ️ No diagrams to process');\n    return { success: 0, total: 0, errors: [] };\n  }\n  \n  console.log(`🔄 Processing ${extractedDiagrams.length} diagrams for page ${pageId}`);\n  \n  let successCount = 0;\n  const errors = [];\n  const totalDiagrams = extractedDiagrams.length;\n  \n  try {\n    // Convert all diagrams to SVG/PNG first\n    console.log('🎨 Converting diagrams to SVG/PNG...');\n    const processedDiagrams = await Promise.all(\n      extractedDiagrams.map(diagram => convertDiagramToSvgPng(diagram))\n    );\n    \n    // Save diagrams sequentially (one by one)\n    console.log('💾 Saving diagrams sequentially...');\n    for (let i = 0; i < processedDiagrams.length; i++) {\n      const diagram = processedDiagrams[i];\n      console.log(`📊 Saving diagram ${i + 1}/${processedDiagrams.length}: ${diagram.filename}`);\n      \n      try {\n        const success = await saveDiagramToAPI(diagram, pageId);\n        if (success) {\n          successCount++;\n          console.log(`✅ Diagram ${i + 1}/${processedDiagrams.length} saved successfully`);\n        } else {\n          errors.push(`Failed to save diagram: ${diagram.filename}`);\n          console.error(`❌ Diagram ${i + 1}/${processedDiagrams.length} failed to save`);\n        }\n      } catch (error) {\n        const errorMsg = `Error saving diagram ${diagram.filename}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n        errors.push(errorMsg);\n        console.error(`❌ Diagram ${i + 1}/${processedDiagrams.length} error:`, error);\n      }\n      \n      // Add small delay between saves to avoid overwhelming the API\n      if (i < processedDiagrams.length - 1) {\n        await new Promise(resolve => setTimeout(resolve, 500));\n      }\n    }\n    \n  } catch (error) {\n    console.error('❌ Error during diagram processing:', error);\n    errors.push(`Processing error: ${error instanceof Error ? error.message : 'Unknown error'}`);\n  }\n  \n  const result = {\n    success: successCount,\n    total: totalDiagrams,\n    errors\n  };\n  \n  console.log(`📊 Diagram processing complete: ${successCount}/${totalDiagrams} successful`);\n  if (errors.length > 0) {\n    console.warn('⚠️ Diagram processing errors:', errors);\n  }\n  \n  return result;\n}\n","// API utilities for K-Tool Extension\nimport { API_URLS } from \"./constants.js\";\nimport {\n  getDiagramConfluenceStyles,\n  processAndSaveDiagrams,\n} from \"./diagramUtils.js\";\n\nexport class ApiClient {\n  /**\n   * Make HTTP request with error handling\n   * @param {string} url - Request URL\n   * @param {Object} options - Fetch options\n   * @returns {Promise<Object>} Response data\n   */\n  static async request(url, options = {}) {\n    try {\n      const response = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return { success: true, data };\n    } catch (error) {\n      console.error(\"API request failed:\", error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  /**\n   * Generate document from BA content\n   * @param {Object} payload - Generation payload\n   * @returns {Promise<Object>} Job response\n   */\n  static async generateDocument(payload) {\n    return await this.request(API_URLS.GEN_DOC, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n\n  /**\n   * Check generation status\n   * @param {string} jobId - Job ID to check\n   * @returns {Promise<Object>} Status response\n   */\n  static async checkStatus(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_STATUS}?job_id=${jobId}`);\n  }\n\n  /**\n   * Get generation result\n   * @param {string} jobId - Job ID to get result\n   * @returns {Promise<Object>} Result response\n   */\n  static async getResult(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_RESULT}?job_id=${jobId}`);\n  }\n\n  /**\n   * Edit text using AI\n   * @param {Object} payload - Edit payload\n   * @returns {Promise<Object>} Edit response\n   */\n  static async editText(payload) {\n    return await this.request(API_URLS.EDIT_TEXT, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n}\n\n/**\n * Confluence API utilities\n */\nexport class ConfluenceApi {\n  /**\n   * Extract page ID from Confluence URL\n   * @param {string} url - Confluence page URL\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageId(url) {\n    const patterns = [/\\/pages\\/(\\d+)/, /pageId=(\\d+)/, /\\/(\\d+)$/];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Get current space key from page\n   * @returns {string|null} Space key or null\n   */\n  static getCurrentSpaceKey() {\n    // Try to get space key from various sources\n    const spaceKeyMeta = document.querySelector('meta[name=\"ajs-space-key\"]');\n    if (spaceKeyMeta) return spaceKeyMeta.content;\n\n    const spaceKeyElement = document.querySelector(\"[data-space-key]\");\n    if (spaceKeyElement) return spaceKeyElement.dataset.spaceKey;\n\n    // Try to extract from URL\n    const urlMatch = window.location.pathname.match(/\\/spaces\\/([^\\/]+)/);\n    if (urlMatch) return urlMatch[1];\n\n    return null;\n  }\n\n  /**\n   * Fetch page content from Confluence\n   * @param {string} pageId - Page ID to fetch\n   * @returns {Promise<Object>} Page content with title, content (view), and storageFormat\n   */\n  static async fetchPageContent(pageId) {\n    try {\n      console.log(\"🔍 Fetching Confluence content for pageId:\", pageId);\n\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage,body.view`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Content data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n        hasView: !!data.body?.view?.value,\n      });\n\n      return {\n        title: data.title,\n        content: data.body?.view?.value || \"\",\n        storageFormat: data.body?.storage?.value || \"\",\n      };\n    } catch (error) {\n      console.error(\"❌ Error fetching Confluence content:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clone template from URL for document generation\n   * @param {string} url - Template URL\n   * @returns {Promise<Object>} Cloned template data\n   */\n  static async cloneTemplateForGeneration(url) {\n    try {\n      console.log(\"🔍 Cloning template from URL:\", url);\n\n      if (!url || !url.trim()) {\n        console.error(\"❌ Empty URL provided\");\n        throw new Error(\"URL template không được để trống\");\n      }\n\n      // Extract pageId from URL\n      const pageId = this.extractPageIdFromUrl(url);\n      if (!pageId) {\n        console.error(\"❌ No pageId found in URL\");\n        throw new Error(\n          \"URL không chứa pageId hợp lệ. Vui lòng kiểm tra lại URL template.\"\n        );\n      }\n\n      console.log(\"📋 Fetching template pageId:\", pageId);\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Template data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n      });\n\n      if (!data.body?.storage?.value) {\n        console.error(\"❌ No storage content found in response\");\n        throw new Error(\"Template không có nội dung storage format\");\n      }\n\n      const originalStorageFormat = data.body.storage.value;\n      console.log(\n        \"📄 Original storage format length:\",\n        originalStorageFormat.length\n      );\n\n      const { templateStructure, analysisInfo } = this.extractTemplateStructure(\n        originalStorageFormat\n      );\n\n      const result = {\n        title: data.title,\n        originalStorageFormat,\n        templateStructure,\n        analysisInfo,\n      };\n\n      console.log(\"✅ Template cloned successfully:\", {\n        title: result.title,\n        originalLength: originalStorageFormat.length,\n        structureLength: templateStructure.length,\n        analysis: analysisInfo,\n      });\n\n      return result;\n    } catch (error) {\n      console.error(\"❌ Error cloning template:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Extract template structure and analyze placeholders\n   * @param {string} storageFormat - Original storage format\n   * @returns {Object} Template structure and analysis info\n   */\n  static extractTemplateStructure(storageFormat) {\n    let emptyParagraphs = 0;\n    let emptyTableCells = 0;\n    let placeholders = 0;\n\n    console.log(\"🔍 Extracting template structure...\");\n\n    const placeholderPatterns = [\n      /(<<.*?>>)/g,\n      /(\\{\\{.*?\\}\\})/g,\n      /(&lt;&lt;.*?&gt;&gt;)/g,\n      /(\\u003c\\u003c.*?\\u003e\\u003e)/g,\n    ];\n\n    let structure = storageFormat;\n\n    placeholderPatterns.forEach((regex, index) => {\n      const matches = [...structure.matchAll(regex)];\n      console.log(\n        `🎯 Placeholder pattern ${index + 1} found ${matches.length} matches`\n      );\n      placeholders += matches.length;\n    });\n\n    // Count empty paragraphs and table cells\n    emptyParagraphs = (storageFormat.match(/<p[^>]*>\\s*<\\/p>/g) || []).length;\n    emptyTableCells = (storageFormat.match(/<td[^>]*>\\s*<\\/td>/g) || []).length;\n\n    const analysisInfo = {\n      emptyParagraphs,\n      emptyTableCells,\n      placeholders,\n      totalLength: storageFormat.length,\n    };\n\n    return {\n      templateStructure: structure,\n      analysisInfo,\n    };\n  }\n\n  /**\n   * Extract pageId from various URL formats\n   * @param {string} url - URL to extract pageId from\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageIdFromUrl(url) {\n    const patterns = [\n      /\\/pages\\/(\\d+)/,\n      /pageId=(\\d+)/,\n      /\\/(\\d+)$/,\n      /viewpage\\.action\\?pageId=(\\d+)/,\n    ];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Extract placeholders from content (<<placeholder>> format)\n   * @param {string} content - Content to analyze\n   * @returns {Array} Array of placeholder strings\n   */\n  static extractPlaceholders(content) {\n    console.log(\"🔍 Analyzing content for placeholders...\");\n    console.log(\"📄 Content length:\", content.length);\n    console.log(\n      \"📄 Content preview (first 500 chars):\",\n      content.substring(0, 500)\n    );\n\n    // Helper function to decode HTML entities\n    const decodeHtmlEntities = (str) => {\n      return str\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\")\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\");\n    };\n\n    const decodedContent = decodeHtmlEntities(content);\n\n    // Patterns to find placeholders\n    const patterns = [\n      /<<([^>]+)>>/g, // Normal <<placeholder>>\n      /&lt;&lt;([^&]+)&gt;&gt;/g, // HTML encoded &lt;&lt;placeholder&gt;&gt;\n    ];\n\n    let allMatches = [];\n\n    // Test patterns on both original and decoded content\n    [content, decodedContent].forEach((testContent, contentIndex) => {\n      console.log(\n        `🔍 Testing on ${\n          contentIndex === 0 ? \"original\" : \"decoded\"\n        } content...`\n      );\n\n      patterns.forEach((regex, patternIndex) => {\n        const matches = [...testContent.matchAll(regex)];\n        console.log(\n          `🎯 Pattern ${patternIndex + 1} found ${matches.length} matches:`,\n          matches.map((m) => m[0])\n        );\n\n        if (patternIndex === 1) {\n          // For HTML encoded, decode back to normal format\n          allMatches.push(...matches.map((match) => `<<${match[1]}>>`));\n        } else {\n          allMatches.push(...matches.map((match) => match[0]));\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePlaceholders = [...new Set(allMatches)];\n    console.log(\"🎯 Unique placeholders found:\", uniquePlaceholders);\n\n    return uniquePlaceholders;\n  }\n\n  /**\n   * Extract images from HTML content and convert to base64\n   * @param {string} html - HTML content\n   * @returns {Promise<Array>} Array of image objects with base64 data\n   */\n  static async extractImagesFromHtml(html) {\n    const images = [];\n    try {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      const imgTags = doc.querySelectorAll(\"img\");\n\n      for (const img of Array.from(imgTags)) {\n        const src = img.getAttribute(\"src\");\n        let filename = undefined;\n\n        if (src) {\n          let base64src = src;\n\n          if (!src.startsWith(\"data:image\")) {\n            // Convert URL to base64 and get filename\n            const { base64, filename: fname } = await this.urlToBase64(src);\n            if (base64) {\n              base64src = base64;\n              filename = fname;\n            } else continue; // skip if failed\n          } else {\n            // If already base64, get name from alt or set default\n            filename = img.getAttribute(\"alt\")\n              ? img.getAttribute(\"alt\") + \".png\"\n              : `image_${Date.now()}.png`;\n          }\n\n          images.push({\n            src: base64src,\n            alt: img.getAttribute(\"alt\") || undefined,\n            filename,\n          });\n        }\n      }\n    } catch (e) {\n      console.warn(\"extractImagesFromHtml error:\", e);\n    }\n    return images;\n  }\n\n  /**\n   * Convert image URL to base64\n   * @param {string} url - Image URL\n   * @returns {Promise<Object>} Object with base64 data and filename\n   */\n  static async urlToBase64(url) {\n    try {\n      const response = await fetch(url);\n      if (!response.ok)\n        return { base64: null, filename: this.getFilenameFromUrl(url) };\n\n      const blob = await response.blob();\n      const filename = this.getFilenameFromUrl(url);\n\n      return await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({ base64: reader.result, filename });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n      });\n    } catch (e) {\n      console.warn(\"urlToBase64 error:\", e);\n      return { base64: null, filename: this.getFilenameFromUrl(url) };\n    }\n  }\n\n  /**\n   * Get filename from URL\n   * @param {string} url - URL to extract filename from\n   * @returns {string} Filename\n   */\n  static getFilenameFromUrl(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n      return (\n        pathname.substring(pathname.lastIndexOf(\"/\") + 1) ||\n        `image_${Date.now()}`\n      );\n    } catch {\n      return `image_${Date.now()}`;\n    }\n  }\n\n  /**\n   * Validate and clean page title to prevent font/encoding issues\n   */\n  static validateAndCleanTitle(title) {\n    return (\n      title\n        // Remove control characters and invalid XML characters\n        .replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, \"\")\n        // Fix common encoding issues\n        .replace(/â€™/g, \"'\")\n        .replace(/â€œ/g, '\"')\n        .replace(/â€/g, '\"')\n        .replace(/â€¦/g, \"...\")\n        // Clean up whitespace\n        .replace(/\\s+/g, \" \")\n        .trim() ||\n      // Ensure title is not empty and has reasonable length\n      `Generated Document - ${new Date().toLocaleDateString()}`\n    );\n  }\n\n  /**\n   * Ensure UTF-8 encoding for content\n   */\n  static ensureUtf8Encoding(content) {\n    try {\n      // Try to encode and decode to ensure proper UTF-8\n      const encoder = new TextEncoder();\n      const decoder = new TextDecoder(\"utf-8\", { fatal: false });\n      const encoded = encoder.encode(content);\n      return decoder.decode(encoded);\n    } catch (error) {\n      console.warn(\"UTF-8 encoding issue, using original content:\", error);\n      return content;\n    }\n  }\n\n  /**\n   * Basic content cleanup - EXACT copy from extension/src/api/api.ts\n   */\n  static basicContentCleanup(content) {\n    return (\n      content\n        // Remove code block prefixes\n        .replace(/^```\\w*\\s*/g, \"\")\n        .replace(/```\\s*$/g, \"\")\n        .trim()\n\n        // Enhanced character cleanup for Vietnamese and UTF-8\n        .replace(/^\\uFEFF/, \"\") // Remove BOM\n        .replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, \"\") // Remove control characters\n\n        // Fix common encoding issues\n        .replace(/â€™/g, \"'\") // Smart apostrophe\n        .replace(/â€œ/g, '\"') // Smart quote open\n        .replace(/â€/g, '\"') // Smart quote close\n        .replace(/â€¦/g, \"...\") // Ellipsis\n        .replace(/â€\"/g, \"–\") // En dash\n        .replace(/â€\"/g, \"—\") // Em dash\n\n        // Clean up line breaks and whitespace\n        .replace(/\\r\\n/g, \"\\n\")\n        .replace(/\\r/g, \"\\n\")\n        .replace(/\\n{3,}/g, \"\\n\\n\") // Max 2 consecutive line breaks\n        .replace(/[ \\t]+$/gm, \"\") // Remove trailing whitespace from lines\n        .replace(/^[ \\t]+/gm, \"\") // Remove leading whitespace from lines (but preserve structure)\n        .trim()\n    );\n  }\n\n  /**\n   * Advanced HTML sanitization - EXACT copy from extension/src/api/api.ts\n   */\n  static advancedHTMLSanitization(content) {\n    console.log(\"🔬 Starting advanced HTML sanitization...\");\n\n    // Step 1: Preprocess content to fix obvious issues\n    let processedContent = content\n      // Fix unclosed self-closing tags first\n      .replace(\n        /<(br|hr|img|input|meta|link|area|base|col|embed|source|track|wbr)([^>]*?)(?<!\\/)\\s*>/gi,\n        \"<$1$2/>\"\n      )\n      // Ensure proper quotes around attributes\n      .replace(/(\\w+)=([^\"\\s>]+)(\\s|>)/g, '$1=\"$2\"$3')\n      // Fix common encoding issues before processing\n      .replace(/&(?![a-zA-Z0-9#]+;)/g, \"&amp;\")\n      // Remove any null bytes or control characters\n      .replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, \"\")\n      // Fix common Vietnamese encoding issues\n      .replace(/â€™/g, \"'\")\n      .replace(/â€œ/g, '\"')\n      .replace(/â€/g, '\"');\n\n    // Step 2: Basic structure validation and cleanup\n    let finalHTML = processedContent\n      // Remove empty tags that could cause issues (but keep non-breaking spaces)\n      .replace(/<(\\w+)([^>]*?)>\\s*<\\/\\1>/g, (match, tagName) => {\n        // Keep paragraph and cell tags with nbsp\n        if ([\"p\", \"td\", \"th\", \"li\"].includes(tagName.toLowerCase())) {\n          return `<${tagName}>&nbsp;</${tagName}>`;\n        }\n        return \"\"; // Remove other empty tags\n      })\n      .replace(/>\\s+</g, \"><\") // Remove spaces between tags\n      .replace(/\\s+/g, \" \") // Normalize whitespace\n      .trim();\n\n    console.log(\"✅ Advanced HTML sanitization complete\");\n    console.log(\n      `📊 Original length: ${content.length}, Final length: ${finalHTML.length}`\n    );\n\n    return finalHTML;\n  }\n\n  /**\n   * Convert all macros to mermaid-cloud macros - EXACT copy from extension/src/api/api.ts\n   */\n  static convertToMermaidCloudMacros(content) {\n    console.log(\"🔄 Converting all macros to mermaid-cloud macros...\");\n    let macroCounter = 1;\n    let macroId = 111;\n\n    // Replace all structured macros (mermaid, code, etc.) with mermaid-cloud macros\n    const convertedContent = content.replace(\n      /<ac:structured-macro[^>]*>[\\s\\S]*?<\\/ac:structured-macro>/g,\n      (match) => {\n        const filename = `k-tool-diagram-${macroCounter}`;\n        const currentId = macroId.toString();\n        macroCounter++;\n        macroId++;\n\n        console.log(\n          `🔧 Converting macro ${\n            macroCounter - 1\n          } to mermaid-cloud: ${filename}`\n        );\n\n        return `<ac:structured-macro ac:name=\"mermaid-cloud\" ac:schema-version=\"1\" ac:macro-id=\"${currentId}\">\n<ac:parameter ac:name=\"toolbar\">bottom</ac:parameter>\n<ac:parameter ac:name=\"filename\">${filename}</ac:parameter>\n<ac:parameter ac:name=\"format\">svg</ac:parameter>\n<ac:parameter ac:name=\"zoom\">fit</ac:parameter>\n<ac:parameter ac:name=\"revision\">1</ac:parameter>\n</ac:structured-macro>`;\n      }\n    );\n\n    console.log(`✅ Converted ${macroCounter - 1} macros to mermaid-cloud`);\n    return convertedContent;\n  }\n\n  /**\n   * Validate and fix XML content specifically for Confluence storage format\n   */\n  static validateAndFixXML(content) {\n    let fixed = content;\n\n    console.log(\"🔍 Validating and fixing XML content...\");\n\n    // Fix the specific issue mentioned in error: spaces in tag names\n    fixed = fixed\n      // Remove spaces at the beginning of tag names\n      .replace(/<\\s+([a-zA-Z])/g, \"<$1\")\n      // Remove spaces at the end of tag names (before attributes or closing >)\n      .replace(/([a-zA-Z])\\s+([^>]*>)/g, \"$1 $2\")\n      // Fix spaces in closing tags\n      .replace(/<\\/\\s+([a-zA-Z][^>]*?)>/g, \"</$1>\")\n      // Fix malformed attributes with spaces\n      .replace(/([a-zA-Z-]+)\\s*=\\s*\"([^\"]*)\"/g, '$1=\"$2\"')\n      // Remove multiple consecutive spaces in content\n      .replace(/\\s{2,}/g, \" \")\n      // Fix line breaks that might cause parsing issues\n      .replace(/\\r\\n/g, \"\\n\")\n      .replace(/\\r/g, \"\\n\");\n\n    // Validate specific Confluence storage format requirements\n    fixed = fixed\n      // Ensure proper ac: namespace usage\n      .replace(/<ac:([^>]+)>/g, (match, content) => {\n        return `<ac:${content.trim()}>`;\n      })\n      // Fix structured macro formatting\n      .replace(/<ac:structured-macro\\s+([^>]+)>/g, (match, attrs) => {\n        const cleanAttrs = attrs.trim().replace(/\\s+/g, \" \");\n        return `<ac:structured-macro ${cleanAttrs}>`;\n      })\n      // Ensure CDATA sections are properly formatted\n      .replace(/<!\\[CDATA\\[\\s*([\\s\\S]*?)\\s*\\]\\]>/g, \"<![CDATA[$1]]>\");\n\n    console.log(\"✅ XML validation and fixing complete\");\n    return fixed;\n  }\n\n  /**\n   * Create new Confluence page - EXACT copy logic from createPageFromGeneratedContent\n   * @param {string} title - Page title\n   * @param {string} fullStorageFormat - Page content (storage format)\n   * @param {string} spaceKey - Space key\n   * @param {string} parentPageId - Parent page ID (optional)\n   * @returns {Promise<void>} No return value, same as createPageFromGeneratedContent\n   */\n  static async createPage(\n    title,\n    fullStorageFormat,\n    spaceKey,\n    parentPageId = null\n  ) {\n    try {\n      console.log(\"🔄 Creating page from generated content...\");\n\n      // Step 0: Validate and clean title\n      const cleanTitle = this.validateAndCleanTitle(title);\n      console.log(\"📋 Original title:\", title);\n      console.log(\"📋 Clean title:\", cleanTitle);\n      console.log(\"📋 Space:\", spaceKey);\n      console.log(\"📋 Content length:\", fullStorageFormat.length);\n\n      // Step 0.5: Ensure UTF-8 encoding\n      const utf8Content = this.ensureUtf8Encoding(fullStorageFormat);\n      console.log(\"🔤 UTF-8 validation complete\");\n\n      // Show content preview for debugging\n      console.log(\"📄 Content preview (first 200 chars):\");\n      console.log(utf8Content.substring(0, 200));\n\n      // Step 1: Enhanced content cleanup with Vietnamese support\n      console.log(\"🧹 Starting enhanced content cleanup...\");\n      let processedContent = this.basicContentCleanup(utf8Content);\n\n      // Step 2: Advanced HTML sanitization and validation\n      console.log(\"🔬 Performing advanced HTML sanitization...\");\n      processedContent = this.advancedHTMLSanitization(processedContent);\n\n      // Step 3: Convert all macros to mermaid-cloud macros\n      console.log(\"🔄 Converting macros to mermaid-cloud...\");\n      processedContent = this.convertToMermaidCloudMacros(processedContent);\n\n      const finalContent = processedContent;\n      console.log(\"✅ Content processing complete\");\n      console.log(\"📄 Final content length:\", finalContent.length);\n      console.log(\"📄 Final content preview (first 200 chars):\");\n      console.log(finalContent.substring(0, 200));\n\n      // Create the page payload with clean title\n      const createPayload = {\n        type: \"page\",\n        title: cleanTitle.trim() + \"-\" + Date.now(), // Use clean title with timestamp\n        space: { key: spaceKey },\n        body: {\n          storage: {\n            value: finalContent,\n            representation: \"storage\",\n          },\n        },\n      };\n\n      // Add parent page if specified\n      if (parentPageId) {\n        createPayload.ancestors = [{ id: parentPageId }];\n        console.log(\"📁 Setting parent page ID:\", parentPageId);\n      }\n\n      console.log(\"📤 Sending page creation request...\");\n      const response = await fetch(\"/rest/api/content\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\",\n          \"X-Atlassian-Token\": \"no-check\",\n        },\n        body: JSON.stringify(createPayload),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ Page creation failed:\", errorText);\n\n        let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n\n        try {\n          const errorJson = JSON.parse(errorText);\n          if (errorJson.message) {\n            errorMessage = errorJson.message;\n          }\n\n          if (errorJson.errors && Array.isArray(errorJson.errors)) {\n            const detailedErrors = errorJson.errors\n              .map(\n                (err) =>\n                  `${err.field || \"Unknown field\"}: ${err.message || err}`\n              )\n              .join(\"\\n\");\n            errorMessage += `\\n\\nDetailed errors:\\n${detailedErrors}`;\n          }\n        } catch (parseError) {\n          console.warn(\"Could not parse error response as JSON\");\n          errorMessage += `\\n\\nRaw error: ${errorText}`;\n        }\n\n        throw new Error(errorMessage);\n      }\n\n      const result = await response.json();\n      console.log(\"✅ Page created successfully!\");\n      console.log(\"📄 Page ID:\", result.id);\n      console.log(\"🔗 Page URL:\", result._links?.webui);\n\n      let finalMessage = `✅ Tạo tài liệu thành công!\\n\\nTiêu đề: ${result.title}\\nPage ID: ${result.id}`;\n      const extractedDiagrams = getDiagramConfluenceStyles(fullStorageFormat);\n      console.log(\n        `📊 Extracted ${extractedDiagrams.length} diagrams from content`\n      );\n      // Process and save diagrams after page creation\n      if (extractedDiagrams.length > 0) {\n        console.log(\"🎨 Processing extracted diagrams...\");\n        const diagramResult = await processAndSaveDiagrams(\n          result.id,\n          extractedDiagrams\n        );\n\n        // Add diagram processing result to message\n        if (diagramResult.total > 0) {\n          finalMessage += `\\n\\n📊 Diagrams: ${diagramResult.success}/${diagramResult.total} saved successfully`;\n\n          if (diagramResult.errors.length > 0) {\n            finalMessage += `\\n⚠️ Diagram errors:\\n${diagramResult.errors.join(\n              \"\\n\"\n            )}`;\n          }\n        }\n      }\n\n      // Show final result after everything is complete\n      if (typeof window !== \"undefined\" && window[\"KToolNotificationUtils\"]) {\n        window[\"KToolNotificationUtils\"].success(\n          \"Trang đã được tạo thành công!\",\n          finalMessage.replace(/^✅\\s*/, \"\")\n        );\n      }\n\n      if (result._links?.webui) {\n        const fullUrl = `${window.location.origin}${result._links.webui}`;\n        window.open(fullUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"❌ Error creating page:\", error);\n\n      let userMessage = \"Lỗi khi tạo trang Confluence.\";\n\n      if (error instanceof Error) {\n        if (error.message.includes(\"validation failed\")) {\n          userMessage = `❌ Nội dung không hợp lệ:\\n\\n${error.message}`;\n        } else if (error.message.includes(\"HTTP 400\")) {\n          userMessage =\n            \"❌ Dữ liệu không hợp lệ. Vui lòng kiểm tra lại nội dung.\";\n        } else if (error.message.includes(\"HTTP 401\")) {\n          userMessage = \"❌ Không có quyền truy cập. Vui lòng đăng nhập lại.\";\n        } else if (error.message.includes(\"HTTP 403\")) {\n          userMessage = \"❌ Không có quyền tạo trang trong space này.\";\n        } else {\n          userMessage = `❌ ${error.message}`;\n        }\n      }\n\n      if (typeof window !== \"undefined\" && window[\"KToolNotificationUtils\"]) {\n        window[\"KToolNotificationUtils\"].error(\n          \"Lỗi tạo trang\",\n          userMessage.replace(/^❌\\s*/, \"\")\n        );\n      }\n      throw error;\n    }\n  }\n}\n","// K-Tool Extension Constants\nexport const EXTENSION_SETTINGS_KEY = \"extensionSettings\";\n\n// API URLs\nconst isLocal = true;\nconst rootUrl = isLocal\n  ? \"http://localhost:5001\"\n  : \"https://gendoc.thangnotes.dev\";\n\nexport const API_URLS = {\n  GEN_DOC: `${rootUrl}/api/generate-full-confluence-doc`,\n  GEN_DOC_STATUS: `${rootUrl}/api/generate-status`,\n  GEN_DOC_RESULT: `${rootUrl}/api/generate-result`,\n  EDIT_DIAGRAM: `${rootUrl}/api/edit-diagram`,\n  EDIT_TEXT: `${rootUrl}/api/edit-text`,\n};\n\n// Default settings\nexport const DEFAULT_SETTINGS = {\n  apiKey: \"\",\n  urlTemplate: \"\",\n  customPrompt: \"\",\n  documentUrl: \"\",\n  databaseUrl: \"\",\n  instructionUrl: \"\",\n  isEnabled: true,\n  selectedModel: \"sonar-pro\",\n};\n\n// AI Models\nexport const AI_MODELS = {\n  \"sonar-pro\": {\n    name: \"Sonar Pro\",\n    provider: \"Perplexity\",\n    description: \"Perplexity AI Sonar Pro model\",\n  },\n  gemini: {\n    name: \"Gemini 2.0 Flash\",\n    provider: \"Google\",\n    description: \"Google Gemini 2.0 Flash model\",\n  },\n};\n\n// Progress steps for document generation\nexport const PROGRESS_STEPS = [\n  { id: \"fetch\", label: \"Fetch BA Content\", status: \"pending\" },\n  { id: \"clone\", label: \"Clone Template\", status: \"pending\" },\n  { id: \"analyze\", label: \"Analyze Placeholders\", status: \"pending\" },\n  { id: \"generate\", label: \"AI Generate Document\", status: \"pending\" },\n  { id: \"complete\", label: \"Complete\", status: \"pending\" },\n];\n\n// Validation patterns\nexport const VALIDATION = {\n  URL_PATTERN: /^https?:\\/\\/.+/,\n  PLACEHOLDER_PATTERN: /<<([^>]+)>>/g,\n  MIN_PROMPT_LENGTH: 10,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// K-Tool Extension Content Script\r\nimport { ApiClient, ConfluenceApi } from \"../shared/api.js\";\r\nimport { PROGRESS_STEPS } from \"../shared/constants.js\";\r\nimport { StorageManager } from \"../shared/storage.js\";\r\nimport { ConfluenceEditor } from \"./confluenceEditor.js\";\r\nimport { MermaidAIChat } from \"./services/mermaidAIChat.js\";\r\n\r\nclass KToolContent {\r\n  constructor() {\r\n    this.settings = {};\r\n    this.isModalOpen = false;\r\n    this.currentTab = \"generate\";\r\n    this.generationJob = null;\r\n    this.progressSteps = [...PROGRESS_STEPS];\r\n    this.confluenceEditor = null;\r\n    this.mermaidAIChat = null;\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    console.log(\"🚀 K-Tool Content Script initializing...\");\r\n\r\n    // Check if already injected\r\n    if (document.getElementById(\"ktool-root\")) {\r\n      console.log(\"🔍 K-Tool already injected, skipping...\");\r\n      return;\r\n    }\r\n\r\n    // Load settings\r\n    await this.loadSettings();\r\n\r\n    // Inject UI\r\n    this.injectUI();\r\n\r\n    // Bind events\r\n    this.bindEvents();\r\n\r\n    // Initialize Confluence Editor\r\n    try {\r\n      console.log(\"🔧 Initializing ConfluenceEditor...\");\r\n      this.confluenceEditor = new ConfluenceEditor();\r\n      console.log(\"✅ ConfluenceEditor initialized:\", this.confluenceEditor);\r\n    } catch (error) {\r\n      console.error(\"❌ Error initializing ConfluenceEditor:\", error);\r\n      this.confluenceEditor = null;\r\n    }\r\n\r\n    // Initialize Mermaid AI Chat\r\n    try {\r\n      console.log(\"🎨 Initializing MermaidAIChat...\");\r\n      const $ = window.jQuery || window.$ || null;\r\n      this.mermaidAIChat = new MermaidAIChat($);\r\n      console.log(\"✅ MermaidAIChat initialized:\", this.mermaidAIChat);\r\n    } catch (error) {\r\n      console.error(\"❌ Error initializing MermaidAIChat:\", error);\r\n      this.mermaidAIChat = null;\r\n    }\r\n\r\n    // Make available globally for debugging\r\n    window.ktoolContent = this;\r\n\r\n    console.log(\"✅ K-Tool Content Script ready\");\r\n  }\r\n\r\n  async loadSettings() {\r\n    try {\r\n      this.settings = await StorageManager.getSettings();\r\n      console.log(\"⚙️ Settings loaded:\", this.settings);\r\n    } catch (error) {\r\n      console.error(\"❌ Error loading settings:\", error);\r\n    }\r\n  }\r\n\r\n  injectUI() {\r\n    // Create root container\r\n    const root = document.createElement(\"div\");\r\n    root.id = \"ktool-root\";\r\n    document.body.appendChild(root);\r\n\r\n    // Create bubble button\r\n    const bubble = this.createBubble();\r\n    root.appendChild(bubble);\r\n\r\n    // Create modal (initially hidden)\r\n    const modal = this.createModal();\r\n    root.appendChild(modal);\r\n  }\r\n\r\n  createBubble() {\r\n    const bubble = document.createElement(\"div\");\r\n    bubble.className = `ktool-bubble ${\r\n      !this.settings.isEnabled ? \"disabled\" : \"\"\r\n    }`;\r\n\r\n    bubble.innerHTML = `\r\n      <div class=\"ktool-bubble-icon\">K</div>\r\n      <div class=\"ktool-tooltip\">\r\n        ${\r\n          this.settings.isEnabled\r\n            ? \"🚀 K-Tool Document Generator<br/>Click to open document generation tool\"\r\n            : \"⚠️ K-Tool is disabled<br/>Please enable in settings\"\r\n        }\r\n      </div>\r\n    `;\r\n\r\n    bubble.addEventListener(\"click\", () => {\r\n      if (this.settings.isEnabled) {\r\n        this.openModal();\r\n      } else {\r\n        this.showNotification(\r\n          \"K-Tool is disabled. Please enable in extension settings.\",\r\n          \"warning\"\r\n        );\r\n      }\r\n    });\r\n\r\n    return bubble;\r\n  }\r\n\r\n  createModal() {\r\n    const overlay = document.createElement(\"div\");\r\n    overlay.className = \"ktool-modal-overlay\";\r\n\r\n    overlay.innerHTML = `\r\n      <div class=\"ktool-modal\">\r\n        <div class=\"ktool-modal-header\">\r\n          <h2 class=\"ktool-modal-title\">K-Tool Document Generator</h2>\r\n          <button class=\"ktool-modal-close\" type=\"button\">&times;</button>\r\n        </div>\r\n        <div class=\"ktool-modal-body\">\r\n          <div class=\"ktool-tabs\">\r\n            <button class=\"ktool-tab active\" data-tab=\"generate\">📄 Generate Document</button>\r\n            <button class=\"ktool-tab\" data-tab=\"preview\">👁️ Preview</button>\r\n            <button class=\"ktool-tab\" data-tab=\"settings\">⚙️ Settings</button>\r\n          </div>\r\n          \r\n          <!-- Generate Tab -->\r\n          <div class=\"ktool-tab-content active\" data-tab=\"generate\">\r\n            ${this.createGenerateTab()}\r\n          </div>\r\n          \r\n          <!-- Preview Tab -->\r\n          <div class=\"ktool-tab-content\" data-tab=\"preview\" id=\"previewTab\">\r\n            ${this.createPreviewTab()}\r\n          </div>\r\n          \r\n          <!-- Settings Tab -->\r\n          <div class=\"ktool-tab-content\" data-tab=\"settings\">\r\n            ${this.createSettingsTab()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    return overlay;\r\n  }\r\n\r\n  createGenerateTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div class=\"ktool-form-group\">\r\n          <label class=\"ktool-form-label\">BA Document URL *</label>\r\n          <input\r\n            type=\"url\"\r\n            class=\"ktool-form-input\"\r\n            id=\"baDocUrl\"\r\n            placeholder=\"https://confluence.com/pages/123456\"\r\n            value=\"${window.location.href}\"\r\n          >\r\n        </div>\r\n\r\n        <div class=\"ktool-form-group\">\r\n          <label class=\"ktool-form-label\">Additional Notes (Optional)</label>\r\n          <textarea\r\n            class=\"ktool-form-textarea\"\r\n            id=\"additionalNotes\"\r\n            placeholder=\"Add notes or special requirements...\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div style=\"display: flex; gap: 12px; margin-top: 20px;\">\r\n          <button class=\"ktool-btn ktool-btn-primary\" id=\"generateBtn\">\r\n            🔧 Generate Document\r\n          </button>\r\n          <button class=\"ktool-btn ktool-btn-secondary\" id=\"resetBtn\">\r\n            🔄 Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Progress Section -->\r\n      <div class=\"ktool-progress\" id=\"progressSection\" style=\"display: none;\">\r\n        <h3 style=\"margin: 0 0 16px 0; font-size: 16px;\">Document Generation Progress:</h3>\r\n        <div id=\"progressSteps\"></div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createPreviewTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\r\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">📄</div>\r\n          <h3 style=\"margin: 0 0 8px 0;\">No content available for preview</h3>\r\n          <p style=\"margin: 0;\">Please generate document first to preview.</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createSettingsTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\r\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">⚙️</div>\r\n          <h3 style=\"margin: 0 0 8px 0;\">Extension Settings</h3>\r\n          <p style=\"margin: 0 0 16px 0;\">Click the button below to open settings popup.</p>\r\n          <button class=\"ktool-btn ktool-btn-primary\" id=\"openSettingsBtn\">\r\n            🔧 Open Settings\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  bindEvents() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n\r\n    // Close modal events\r\n    modal.querySelector(\".ktool-modal-close\").addEventListener(\"click\", () => {\r\n      this.closeModal();\r\n    });\r\n\r\n    modal.addEventListener(\"click\", (e) => {\r\n      if (e.target === modal) {\r\n        this.closeModal();\r\n      }\r\n    });\r\n\r\n    // Tab switching\r\n    const tabs = modal.querySelectorAll(\".ktool-tab\");\r\n    tabs.forEach((tab) => {\r\n      tab.addEventListener(\"click\", () => {\r\n        this.switchTab(tab.dataset.tab);\r\n      });\r\n    });\r\n\r\n    // Generate button\r\n    const generateBtn = modal.querySelector(\"#generateBtn\");\r\n    generateBtn.addEventListener(\"click\", () => {\r\n      this.handleGenerate();\r\n    });\r\n\r\n    // Reset button\r\n    const resetBtn = modal.querySelector(\"#resetBtn\");\r\n    resetBtn.addEventListener(\"click\", () => {\r\n      this.handleReset();\r\n    });\r\n\r\n    // Add settings button listener\r\n    this.addSettingsButtonListener();\r\n\r\n    // Listen for settings changes from background\r\n    chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n      if (request.action === \"settingsChanged\") {\r\n        this.settings = request.settings;\r\n        this.updateBubbleState();\r\n      }\r\n    });\r\n\r\n    // Keyboard shortcuts\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      // Escape to close modal\r\n      if (e.key === \"Escape\" && this.isModalOpen) {\r\n        this.closeModal();\r\n      }\r\n\r\n      // Ctrl/Cmd + K to open modal\r\n      if ((e.ctrlKey || e.metaKey) && e.key === \"k\" && !this.isModalOpen) {\r\n        e.preventDefault();\r\n        if (this.settings.isEnabled) {\r\n          this.openModal();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n    modal.classList.add(\"show\");\r\n    this.isModalOpen = true;\r\n\r\n    // Focus first input\r\n    setTimeout(() => {\r\n      const firstInput = modal.querySelector(\".ktool-form-input\");\r\n      if (firstInput) firstInput.focus();\r\n    }, 300);\r\n  }\r\n\r\n  closeModal() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n    modal.classList.remove(\"show\");\r\n    this.isModalOpen = false;\r\n  }\r\n\r\n  addSettingsButtonListener() {\r\n    // Add listener for settings button after modal is created\r\n    setTimeout(() => {\r\n      const settingsBtn = document.querySelector(\"#openSettingsBtn\");\r\n      if (settingsBtn) {\r\n        settingsBtn.addEventListener(\"click\", () => {\r\n          this.openSettingsPopup();\r\n        });\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  openSettingsPopup() {\r\n    // Open extension popup in navbar\r\n    if (chrome.runtime && chrome.runtime.openOptionsPage) {\r\n      chrome.runtime.openOptionsPage();\r\n    } else {\r\n      // Fallback: try to open popup\r\n      chrome.action?.openPopup?.() ||\r\n        chrome.browserAction?.openPopup?.() ||\r\n        alert(\r\n          \"Please click the K-Tool icon in the browser toolbar to open settings.\"\r\n        );\r\n    }\r\n  }\r\n\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    const tabs = document.querySelectorAll(\".ktool-tab\");\r\n    tabs.forEach((tab) => {\r\n      tab.classList.toggle(\"active\", tab.dataset.tab === tabName);\r\n    });\r\n\r\n    // Update tab content\r\n    const contents = document.querySelectorAll(\".ktool-tab-content\");\r\n    contents.forEach((content) => {\r\n      content.classList.toggle(\"active\", content.dataset.tab === tabName);\r\n    });\r\n\r\n    this.currentTab = tabName;\r\n  }\r\n\r\n  updateBubbleState() {\r\n    const bubble = document.querySelector(\".ktool-bubble\");\r\n    const tooltip = bubble.querySelector(\".ktool-tooltip\");\r\n\r\n    if (this.settings.isEnabled) {\r\n      bubble.classList.remove(\"disabled\");\r\n      tooltip.innerHTML =\r\n        \"🚀 K-Tool Document Generator<br/>Click to open document generation tool\";\r\n    } else {\r\n      bubble.classList.add(\"disabled\");\r\n      tooltip.innerHTML = \"⚠️ K-Tool is disabled<br/>Please enable in settings\";\r\n    }\r\n  }\r\n\r\n  async handleGenerate() {\r\n    const baDocUrl = document.getElementById(\"baDocUrl\").value.trim();\r\n    const additionalNotes = document\r\n      .getElementById(\"additionalNotes\")\r\n      .value.trim();\r\n\r\n    if (!baDocUrl) {\r\n      this.showNotification(\"Please enter BA document URL!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    // Validate settings\r\n    const validation = StorageManager.validateSettings(this.settings);\r\n    if (!validation.isValid) {\r\n      this.showNotification(\r\n        \"Please configure all settings before generating document!\",\r\n        \"error\"\r\n      );\r\n      this.switchTab(\"settings\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Show progress\r\n      this.showProgress();\r\n      this.updateProgress(0, \"active\");\r\n\r\n      // Step 1: Extract page ID and fetch BA content\r\n      const pageId = ConfluenceApi.extractPageId(baDocUrl);\r\n      if (!pageId) {\r\n        throw new Error(\r\n          \"❌ Invalid URL! Please check the Confluence page URL.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"🔍 Fetching content for pageId:\", pageId);\r\n      const baDocument = await ConfluenceApi.fetchPageContent(pageId);\r\n      if (!baDocument) {\r\n        throw new Error(\"❌ Cannot fetch BA document content!\");\r\n      }\r\n\r\n      // Extract images from BA content (HTML) and convert all to base64\r\n      const images = await ConfluenceApi.extractImagesFromHtml(\r\n        baDocument.content\r\n      );\r\n      console.log(\"🖼️ Extracted images (all base64):\", images);\r\n\r\n      this.updateProgress(0, \"completed\");\r\n      this.updateProgress(1, \"active\");\r\n\r\n      // Step 2: Clone template structure\r\n      if (!this.settings.urlTemplate) {\r\n        throw new Error(\"⚠️ Please configure document template in settings!\");\r\n      }\r\n\r\n      console.log(\"🔄 Cloning template from:\", this.settings.urlTemplate);\r\n      const clonedTemplate = await ConfluenceApi.cloneTemplateForGeneration(\r\n        this.settings.urlTemplate\r\n      );\r\n\r\n      if (!clonedTemplate) {\r\n        throw new Error(\r\n          \"❌ Cannot clone template! Please check template URL in Settings.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"✅ Template cloned successfully:\", clonedTemplate.title);\r\n      this.updateProgress(1, \"completed\");\r\n      this.updateProgress(2, \"active\");\r\n\r\n      // Step 3: Analyze placeholders with << >>\r\n      const placeholders = ConfluenceApi.extractPlaceholders(\r\n        clonedTemplate.originalStorageFormat\r\n      );\r\n      console.log(\"🔍 Found placeholders <<>>:\", placeholders);\r\n\r\n      if (placeholders.length === 0) {\r\n        throw new Error(\r\n          \"⚠️ No placeholders found in format <<Name>>. Please check template!\"\r\n        );\r\n      }\r\n\r\n      this.updateProgress(2, \"completed\");\r\n      this.updateProgress(3, \"active\");\r\n\r\n      // Get instructions if available\r\n      let instructions = \"\";\r\n      if (this.settings.instructionUrl) {\r\n        const instructionPageId = ConfluenceApi.extractPageId(\r\n          this.settings.instructionUrl\r\n        );\r\n        if (instructionPageId) {\r\n          console.log(\r\n            \"🔍 Fetching instruction content for pageId:\",\r\n            instructionPageId\r\n          );\r\n          const instructionDoc = await ConfluenceApi.fetchPageContent(\r\n            instructionPageId\r\n          );\r\n          instructions = instructionDoc?.content || \"\";\r\n        } else {\r\n          console.warn(\r\n            \"⚠️ Invalid instruction URL:\",\r\n            this.settings.instructionUrl\r\n          );\r\n        }\r\n      }\r\n\r\n      // Step 4: AI Fill Placeholders (Send request and get job_id)\r\n      const payload = {\r\n        ba_content: baDocument.content,\r\n        template_structure: clonedTemplate.templateStructure,\r\n        original_storage_format: clonedTemplate.originalStorageFormat,\r\n        instructions: instructions,\r\n        additional_prompt: this.settings.customPrompt || \"\",\r\n        placeholders: placeholders,\r\n        selectedModel: this.settings.selectedModel,\r\n        images,\r\n        additional_notes: additionalNotes,\r\n      };\r\n\r\n      console.log(\"📤 Sending payload for placeholder filling:\", {\r\n        ba_content_length: payload.ba_content.length,\r\n        template_structure_length: payload.template_structure.length,\r\n        original_format_length: payload.original_storage_format.length,\r\n        placeholders_found: placeholders.length,\r\n        placeholders_list: placeholders,\r\n      });\r\n\r\n      // Send request and get job_id\r\n      const jobResponse = await ApiClient.generateDocument(payload);\r\n      const jobId = jobResponse.data.job_id;\r\n      if (!jobId) {\r\n        throw new Error(jobResponse.error || \"No job_id received from server!\");\r\n      }\r\n\r\n      this.currentJobId = jobId;\r\n\r\n      // Start polling for result\r\n      await this.pollGenerationResult(jobId, payload);\r\n    } catch (error) {\r\n      console.error(\"❌ Generation error:\", error);\r\n      this.showNotification(\r\n        `Document generation error: ${error.message}`,\r\n        \"error\"\r\n      );\r\n      this.hideProgress();\r\n    }\r\n  }\r\n\r\n  // These methods are now handled by ConfluenceApi class\r\n  // Keeping them for backward compatibility if needed\r\n\r\n  async pollGenerationResult(jobId, payload) {\r\n    const maxAttempts = 20; // 10 minutes max (60 * 10 seconds)\r\n    let attempts = 0;\r\n\r\n    const poll = async () => {\r\n      attempts++;\r\n\r\n      try {\r\n        console.log(\r\n          `🔄 Polling attempt ${attempts}/${maxAttempts} for job ${jobId}`\r\n        );\r\n\r\n        const statusResult = await ApiClient.checkStatus(jobId);\r\n        console.log(`statusResult: ${statusResult}`);\r\n\r\n        if (!statusResult.success) {\r\n          throw new Error(\"Error checking job status\");\r\n        }\r\n\r\n        const status = statusResult.data.status;\r\n\r\n        if (status === \"done\") {\r\n          console.log(\"✅ Generation completed!\");\r\n\r\n          const result = await ApiClient.getResult(jobId);\r\n          const resultString = JSON.stringify(result, null, 2);\r\n\r\n          console.log(`Document generate:\\n${resultString}`);\r\n          if (result.success) {\r\n            this.handleGenerationComplete(result.data.result);\r\n            return;\r\n          } else {\r\n            throw new Error(\"Error getting document generation result\");\r\n          }\r\n        } else if (status === \"error\") {\r\n          throw new Error(\"Document generation job failed on server\");\r\n        } else if (attempts >= maxAttempts) {\r\n          throw new Error(\r\n            \"⏰ Timeout: Document generation is taking too long. Please try again.\"\r\n          );\r\n        } else {\r\n          // Update progress message if available\r\n          if (statusResult.data.progress_message) {\r\n            console.log(`📝 Progress: ${statusResult.data.progress_message}`);\r\n          }\r\n\r\n          // Continue polling\r\n          setTimeout(poll, 10000); // Poll every 10 seconds\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Polling error:\", error);\r\n        this.showNotification(\r\n          `Error during document generation: ${error.message}`,\r\n          \"error\"\r\n        );\r\n        this.hideProgress();\r\n        this.currentJobId = null;\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    await poll();\r\n  }\r\n\r\n  handleGenerationComplete(result) {\r\n    this.updateProgress(3, \"completed\");\r\n    this.updateProgress(4, \"completed\");\r\n\r\n    // Store result for preview\r\n    this.generatedContent = result;\r\n    console.log(\"✅ Generated content:\", result);\r\n    // Switch to preview tab\r\n    this.switchTab(\"preview\");\r\n    this.updatePreviewTab(result);\r\n\r\n    this.showNotification(\"Document generated successfully!\", \"success\");\r\n    this.hideProgress();\r\n  }\r\n\r\n  updatePreviewTab(content) {\r\n    const previewTab = document.getElementById(\"previewTab\");\r\n    previewTab.innerHTML = `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\">\r\n          <h3 style=\"margin: 0;\">Document Preview</h3>\r\n          <div style=\"display: flex; gap: 12px;\">\r\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"editContentBtn\">\r\n              ✏️ Edit Content\r\n            </button>\r\n            <button class=\"ktool-btn ktool-btn-primary\" id=\"createPageBtn\">\r\n              📄 Create Confluence Page\r\n            </button>\r\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"downloadBtn\">\r\n              💾 Download\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"documentPreview\" style=\"border: 1px solid #e9ecef; border-radius: 8px; padding: 20px; background: #f8f9fa; max-height: 400px; overflow-y: auto; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6;\">\r\n          ${content.full_storage_format || \"<p>No content available</p>\"}\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Bind preview buttons\r\n    const editContentBtn = previewTab.querySelector(\"#editContentBtn\");\r\n    const createPageBtn = previewTab.querySelector(\"#createPageBtn\");\r\n    const downloadBtn = previewTab.querySelector(\"#downloadBtn\");\r\n\r\n    editContentBtn.addEventListener(\"click\", () =>\r\n      this.handleEditContent(content)\r\n    );\r\n    createPageBtn.addEventListener(\"click\", () => this.handleCreatePage());\r\n    downloadBtn.addEventListener(\"click\", () => this.handleDownload());\r\n\r\n    // Initialize Mermaid diagrams after content is loaded\r\n    setTimeout(() => {\r\n      this.initializeMermaid();\r\n    }, 100);\r\n  }\r\n\r\n  async handleCreatePage() {\r\n    const createBtn = document.querySelector(\"#createPageBtn\");\r\n    if (!createBtn) return;\r\n\r\n    // Save original button state\r\n    const originalText = createBtn.innerHTML;\r\n    const originalDisabled = createBtn.disabled;\r\n\r\n    try {\r\n      // Set loading state\r\n      createBtn.innerHTML = \"⏳ Creating Page...\";\r\n      createBtn.disabled = true;\r\n      createBtn.style.opacity = \"0.7\";\r\n\r\n      const spaceKey = ConfluenceApi.getCurrentSpaceKey();\r\n      if (!spaceKey) {\r\n        throw new Error(\"Cannot determine space key of current page\");\r\n      }\r\n\r\n      const title = `K-Tool Generated Document - ${new Date().toLocaleDateString()}`;\r\n      const content =\r\n        this.generatedContent.full_storage_format ||\r\n        this.generatedContent.content;\r\n\r\n      // Extract parent page ID from settings if available\r\n      let parentId = null;\r\n      if (this.settings.documentUrl) {\r\n        parentId = ConfluenceApi.extractPageId(this.settings.documentUrl);\r\n      }\r\n\r\n      await ConfluenceApi.createPage(title, content, spaceKey, parentId);\r\n\r\n      // Success state\r\n      createBtn.innerHTML = \"✅ Page Created Successfully!\";\r\n      createBtn.style.background = \"#28a745\";\r\n\r\n      this.showNotification(\"Confluence page created successfully!\", \"success\");\r\n\r\n      // Delay 1s before restore button\r\n      setTimeout(() => {\r\n        // Restore button state\r\n        createBtn.innerHTML = originalText;\r\n        createBtn.disabled = originalDisabled;\r\n        createBtn.style.opacity = \"1\";\r\n        createBtn.style.background = \"\";\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error(\"❌ Create page error:\", error);\r\n\r\n      // Error state\r\n      createBtn.innerHTML = \"❌ Creation Failed\";\r\n      createBtn.style.background = \"#dc3545\";\r\n\r\n      this.showNotification(`Error creating page: ${error.message}`, \"error\");\r\n\r\n      // Restore button after 2s\r\n      setTimeout(() => {\r\n        createBtn.innerHTML = originalText;\r\n        createBtn.disabled = originalDisabled;\r\n        createBtn.style.opacity = \"1\";\r\n        createBtn.style.background = \"\";\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  handleDownload() {\r\n    if (!this.generatedContent) {\r\n      this.showNotification(\"No content available to download!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const downloadBtn = document.querySelector(\"#downloadBtn\");\r\n    if (!downloadBtn) return;\r\n\r\n    // Save original button state\r\n    const originalText = downloadBtn.innerHTML;\r\n    const originalDisabled = downloadBtn.disabled;\r\n\r\n    try {\r\n      // Set loading state\r\n      downloadBtn.innerHTML = \"⏳ Preparing Download...\";\r\n      downloadBtn.disabled = true;\r\n      downloadBtn.style.opacity = \"0.7\";\r\n\r\n      const content =\r\n        this.generatedContent.full_storage_format ||\r\n        this.generatedContent.content;\r\n\r\n      // Create filename with title if available\r\n      const title = this.generatedContent.title || \"K-Tool Generated Document\";\r\n      const sanitizedTitle = title.replace(/[^a-z0-9]/gi, \"_\").toLowerCase();\r\n      const timestamp = new Date()\r\n        .toISOString()\r\n        .slice(0, 19)\r\n        .replace(/:/g, \"-\");\r\n      const filename = `${sanitizedTitle}_${timestamp}.html`;\r\n\r\n      const blob = new Blob([content], { type: \"text/html;charset=utf-8\" });\r\n      const url = URL.createObjectURL(blob);\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = filename;\r\n      a.style.display = \"none\";\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n\r\n      // Success state\r\n      downloadBtn.innerHTML = \"✅ Downloaded Successfully!\";\r\n      downloadBtn.style.background = \"#28a745\";\r\n\r\n      this.showNotification(\"Document downloaded successfully!\", \"success\");\r\n\r\n      // Restore button after 1s\r\n      setTimeout(() => {\r\n        downloadBtn.innerHTML = originalText;\r\n        downloadBtn.disabled = originalDisabled;\r\n        downloadBtn.style.opacity = \"1\";\r\n        downloadBtn.style.background = \"\";\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error(\"❌ Download error:\", error);\r\n\r\n      // Error state\r\n      downloadBtn.innerHTML = \"❌ Download Failed\";\r\n      downloadBtn.style.background = \"#dc3545\";\r\n\r\n      this.showNotification(`Download failed: ${error.message}`, \"error\");\r\n\r\n      // Restore button after 2s\r\n      setTimeout(() => {\r\n        downloadBtn.innerHTML = originalText;\r\n        downloadBtn.disabled = originalDisabled;\r\n        downloadBtn.style.opacity = \"1\";\r\n        downloadBtn.style.background = \"\";\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  handleEditContent(content) {\r\n    console.log(\"✏️ Opening content editor...\");\r\n    console.log(\"🔍 Content to edit:\", content);\r\n    console.log(\"🔍 ConfluenceEditor instance:\", this.confluenceEditor);\r\n\r\n    if (!this.confluenceEditor) {\r\n      console.error(\"❌ ConfluenceEditor is null or undefined\");\r\n      this.showNotification(\"Confluence Editor not initialized!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Set up save callback to update the generated content\r\n      this.confluenceEditor.setSaveCallback((updatedContent) => {\r\n        console.log(\"💾 Content updated:\", updatedContent);\r\n\r\n        // Update the stored generated content\r\n        this.generatedContent = updatedContent;\r\n\r\n        // Refresh the preview tab with updated content\r\n        this.updatePreviewTab(updatedContent);\r\n\r\n        this.showNotification(\"Content has been updated!\", \"success\");\r\n      });\r\n\r\n      // Open the editor with current content\r\n      console.log(\"🚀 Opening ConfluenceEditor...\");\r\n      this.confluenceEditor.openEditor(content, {\r\n        title: \"Edit Generated Document\",\r\n        showMermaidTools: true,\r\n      });\r\n      console.log(\"✅ ConfluenceEditor opened successfully\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error opening ConfluenceEditor:\", error);\r\n      this.showNotification(`Error opening editor: ${error.message}`, \"error\");\r\n    }\r\n  }\r\n\r\n  handleReset() {\r\n    // Auto reset form without confirm\r\n    console.log(\"🔄 Auto-resetting form...\");\r\n    document.getElementById(\"baDocUrl\").value = window.location.href;\r\n    document.getElementById(\"additionalNotes\").value = \"\";\r\n    this.hideProgress();\r\n    this.switchTab(\"generate\");\r\n  }\r\n\r\n  showProgress() {\r\n    const progressSection = document.getElementById(\"progressSection\");\r\n    const progressSteps = document.getElementById(\"progressSteps\");\r\n\r\n    progressSteps.innerHTML = this.progressSteps\r\n      .map(\r\n        (step, index) => `\r\n      <div class=\"ktool-progress-step ${step.status}\" data-step=\"${index}\">\r\n        <div class=\"ktool-progress-icon\">${index + 1}</div>\r\n        <span>${step.label}</span>\r\n      </div>\r\n    `\r\n      )\r\n      .join(\"\");\r\n\r\n    progressSection.style.display = \"block\";\r\n  }\r\n\r\n  hideProgress() {\r\n    const progressSection = document.getElementById(\"progressSection\");\r\n    progressSection.style.display = \"none\";\r\n\r\n    // Reset progress steps\r\n    this.progressSteps = this.progressSteps.map((step) => ({\r\n      ...step,\r\n      status: \"pending\",\r\n    }));\r\n  }\r\n\r\n  updateProgress(stepIndex, status) {\r\n    this.progressSteps[stepIndex].status = status;\r\n\r\n    const stepElement = document.querySelector(`[data-step=\"${stepIndex}\"]`);\r\n    if (stepElement) {\r\n      stepElement.className = `ktool-progress-step ${status}`;\r\n\r\n      const icon = stepElement.querySelector(\".ktool-progress-icon\");\r\n      if (status === \"completed\") {\r\n        icon.textContent = \"✓\";\r\n      } else if (status === \"error\") {\r\n        icon.textContent = \"✗\";\r\n      } else if (status === \"active\") {\r\n        icon.innerHTML = '<div class=\"ktool-spinning\">⏳</div>';\r\n      }\r\n    }\r\n  }\r\n\r\n  showNotification(message, type = \"info\") {\r\n    // Create notification element\r\n    const notification = document.createElement(\"div\");\r\n    notification.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      background: ${\r\n        type === \"success\"\r\n          ? \"#28a745\"\r\n          : type === \"error\"\r\n          ? \"#dc3545\"\r\n          : \"#007bff\"\r\n      };\r\n      color: white;\r\n      padding: 12px 20px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n      z-index: 1000002;\r\n      font-size: 14px;\r\n      max-width: 300px;\r\n      word-wrap: break-word;\r\n      opacity: 0;\r\n      transform: translateX(100%);\r\n      transition: all 0.3s;\r\n    `;\r\n\r\n    notification.textContent = message;\r\n    document.body.appendChild(notification);\r\n\r\n    // Animate in\r\n    setTimeout(() => {\r\n      notification.style.opacity = \"1\";\r\n      notification.style.transform = \"translateX(0)\";\r\n    }, 100);\r\n\r\n    // Auto remove\r\n    setTimeout(() => {\r\n      notification.style.opacity = \"0\";\r\n      notification.style.transform = \"translateX(100%)\";\r\n      setTimeout(() => {\r\n        if (notification.parentNode) {\r\n          notification.parentNode.removeChild(notification);\r\n        }\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  async loadMermaidScript() {\r\n    if (window.mermaid) {\r\n      console.log(\"⚡ Mermaid already loaded\");\r\n      return window.mermaid;\r\n    }\r\n\r\n    const res = await fetch(chrome.runtime.getURL(\"lib/mermaid.min.js\"));\r\n    const text = await res.text();\r\n    eval(text); // UMD will attach mermaid to window\r\n    console.log(\"✅ Mermaid loaded dynamically\");\r\n    return window.mermaid;\r\n  }\r\n\r\n  // Initialize Mermaid diagrams\r\n  async initializeMermaid() {\r\n    try {\r\n      // Load Mermaid if not already loaded\r\n      await this.loadMermaidScript();\r\n\r\n      console.log(\"🎨 Initializing Mermaid diagrams...\");\r\n\r\n      // Configure Mermaid with proper DOM context\r\n      window.mermaid.initialize({\r\n        startOnLoad: false,\r\n        theme: \"default\",\r\n        securityLevel: \"loose\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        // Ensure proper DOM context\r\n        htmlLabels: true,\r\n        flowchart: {\r\n          htmlLabels: true,\r\n        },\r\n        // Set the document context explicitly\r\n        deterministicIds: true,\r\n        deterministicIDSeed: \"mermaid-diagram\",\r\n      });\r\n\r\n      // Ensure mermaid has access to document\r\n      if (window.mermaid.setConfig) {\r\n        window.mermaid.setConfig({\r\n          securityLevel: \"loose\",\r\n          theme: \"default\",\r\n        });\r\n      }\r\n\r\n      // Find all mermaid code blocks in the preview\r\n      const previewDiv = document.getElementById(\"documentPreview\");\r\n      if (!previewDiv) return;\r\n\r\n      // Look for Confluence Mermaid structured macros\r\n      const mermaidElements = previewDiv.querySelectorAll(\r\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\r\n      );\r\n\r\n      mermaidElements.forEach((element, index) => {\r\n        // Get the code parameter from Confluence structured macro\r\n        const codeParam = element.querySelector(\r\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\r\n        );\r\n        if (!codeParam) {\r\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\r\n          return;\r\n        }\r\n\r\n        const mermaidCode = (\r\n          codeParam.textContent || codeParam.innerText\r\n        ).trim();\r\n        console.log(\r\n          \"🔍 Found Confluence Mermaid diagram:\",\r\n          mermaidCode.substring(0, 50) + \"...\"\r\n        );\r\n\r\n        // Always process Confluence mermaid macros (no need to check syntax)\r\n        if (mermaidCode) {\r\n          // Create a new div for the mermaid diagram\r\n          const mermaidDiv = document.createElement(\"div\");\r\n          mermaidDiv.className = \"mermaid-diagram\";\r\n          mermaidDiv.id = `mermaid-${index}`;\r\n          mermaidDiv.style.cssText =\r\n            \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\r\n\r\n          // Replace the original element\r\n          element.parentNode.replaceChild(mermaidDiv, element);\r\n\r\n          // Render the diagram with proper DOM context\r\n          try {\r\n            const diagramId = `mermaid-svg-${index}`;\r\n\r\n            // Create a temporary container in the document to ensure proper DOM context\r\n            const tempContainer = document.createElement(\"div\");\r\n            tempContainer.style.position = \"absolute\";\r\n            tempContainer.style.left = \"-9999px\";\r\n            tempContainer.style.top = \"-9999px\";\r\n            document.body.appendChild(tempContainer);\r\n\r\n            // Modern mermaid.render returns a promise\r\n            if (\r\n              window.mermaid.render &&\r\n              typeof window.mermaid.render === \"function\"\r\n            ) {\r\n              try {\r\n                // Try modern API first\r\n                const renderResult = window.mermaid.render(\r\n                  diagramId,\r\n                  mermaidCode\r\n                );\r\n\r\n                if (renderResult && typeof renderResult.then === \"function\") {\r\n                  // Promise-based API\r\n                  renderResult\r\n                    .then((result) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n\r\n                      // Handle different return formats\r\n                      let svgCode;\r\n                      if (typeof result === \"string\") {\r\n                        svgCode = result;\r\n                      } else if (result && result.svg) {\r\n                        svgCode = result.svg;\r\n                      } else {\r\n                        svgCode = String(result);\r\n                      }\r\n\r\n                      mermaidDiv.innerHTML = svgCode;\r\n                      console.log(\r\n                        \"✅ Mermaid diagram rendered successfully (promise API)\"\r\n                      );\r\n                    })\r\n                    .catch((error) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n                      console.error(\r\n                        \"❌ Mermaid render error (promise API):\",\r\n                        error\r\n                      );\r\n                      this.showMermaidError(mermaidDiv, mermaidCode, error);\r\n                    });\r\n                } else {\r\n                  // Synchronous return or callback-based API\r\n                  if (typeof renderResult === \"string\") {\r\n                    // Clean up temp container\r\n                    if (document.body.contains(tempContainer)) {\r\n                      document.body.removeChild(tempContainer);\r\n                    }\r\n                    mermaidDiv.innerHTML = renderResult;\r\n                    console.log(\r\n                      \"✅ Mermaid diagram rendered successfully (sync API)\"\r\n                    );\r\n                  } else {\r\n                    // Try callback-based API\r\n                    window.mermaid.render(diagramId, mermaidCode, (svgCode) => {\r\n                      // Clean up temp container\r\n                      if (document.body.contains(tempContainer)) {\r\n                        document.body.removeChild(tempContainer);\r\n                      }\r\n                      mermaidDiv.innerHTML = svgCode;\r\n                      console.log(\r\n                        \"✅ Mermaid diagram rendered successfully (callback API)\"\r\n                      );\r\n                    });\r\n                  }\r\n                }\r\n              } catch (renderError) {\r\n                // Clean up temp container\r\n                if (document.body.contains(tempContainer)) {\r\n                  document.body.removeChild(tempContainer);\r\n                }\r\n                throw renderError;\r\n              }\r\n            } else {\r\n              throw new Error(\"Mermaid render function not available\");\r\n            }\r\n          } catch (error) {\r\n            console.error(\"❌ Mermaid render error:\", error);\r\n            this.showMermaidError(mermaidDiv, mermaidCode, error);\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to initialize Mermaid:\", error);\r\n    }\r\n  }\r\n\r\n  // Show Mermaid error in a nice format\r\n  showMermaidError(container, text, error) {\r\n    container.innerHTML = `\r\n      <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\r\n        <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\r\n          <span style=\"margin-right: 8px;\">⚠️</span>\r\n          Mermaid Render Error\r\n        </div>\r\n        <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\r\n          ${error.message || \"Unknown error occurred\"}\r\n        </div>\r\n        <details style=\"margin-top: 10px;\">\r\n          <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\r\n          <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${text}</pre>\r\n        </details>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n// Initialize when DOM is ready\r\nif (document.readyState === \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    new KToolContent();\r\n  });\r\n} else {\r\n  new KToolContent();\r\n}\r\n"],"names":["XMLFormatter","formatXHTML","xmlString","indent","rootTag","wrappedXml","doc","DOMParser","parseFromString","getElementsByTagName","length","console","error","output","rootElement","documentElement","processNode","node","level","nodeType","Node","ELEMENT_NODE","nodeName","startTag","attributes","attr","name","value","Array","from","childNodes","some","child","TEXT_NODE","textContent","trim","nextLevel","forEach","replace","text","COMMENT_NODE","CDATA_SECTION_NODE","isSelfClosingTag","tag","t","startsWith","cleanXMLMarkers","content","cleaned","escapeRegex","string","ContentSynchronizer","constructor","syncAllContent","currentContent","editorContainer","mermaidDiagrams","Error","rawContent","this","syncFromRawEditor","finalContent","syncMermaidChanges","log","rawEditor","querySelector","updatedContent","full_storage_format","undefined","diagramsCount","hasContent","diagram","index","_diagram$originalCode","_diagram$code","id","hasOriginalCode","originalCode","hasCode","code","originalLength","codeLength","substring","updateDiagramInContent","warn","newCode","diagramId","hasNewCode","newLength","patterns","pattern","RegExp","replacement","patternMatched","i","lastIndex","test","simpleSearch","includes","validateContent","result","isValid","errors","warnings","push","xmlContent","message","createBackup","JSON","parse","stringify","timestamp","Date","now","restoreFromBackup","backup","DOMHelpers","container","selector","querySelectorAll","addEventListener","element","event","handler","options","removeEventListener","toggleClass","className","force","classList","toggle","addClass","add","removeClass","remove","setContent","isHTML","tagName","innerHTML","getContent","createElement","document","Object","entries","key","assign","style","setAttribute","removeElement","parentNode","removeChild","isInDOM","body","contains","scrollIntoView","behavior","block","getDimensions","width","height","top","left","rect","getBoundingClientRect","right","bottom","cloneElement","deep","cloneNode","HTMLTemplates","getEditorTemplate","getContentTabTemplate","getMermaidTabTemplate","getZoomControlsTemplate","getAIChatTemplate","applyPreviewStyles","createAIMessage","type","createMermaidContainer","mermaidDiv","cssText","StorageManager","STORAGE_KEY","AUTO_SAVE_INTERVAL","autoSaveTimer","saveContent","saveCallback","enableLocalStorage","enableCallback","showNotification","results","localStorage","callback","saveToLocalStorage","callSaveCallback","showSaveNotification","backupData","version","setItem","loadFromLocalStorage","saved","getItem","removeItem","clearLocalStorage","then","method","notification","colors","success","warning","info","background","appendChild","setTimeout","opacity","transform","startAutoSave","saveFunction","stopAutoSave","setInterval","clearInterval","hasUnsavedChanges","getBackupInfo","age","ConfluenceEditor","isEditorOpen","originalContent","onSave","mermaidDiagramsMap","Map","currentSelectedDiagram","currentSelectedDiagramId","textEditor","previewContainer","isPreviewMode","isModified","currentZoom","dragOffset","x","y","storageManager","contentSynchronizer","openEditor","closeEditor","allowBackupRestore","backupInfo","ageMinutes","Math","floor","extractMermaidDiagrams","createEditorUI","initializeContentTab","overlay","bindEditorEvents","closeBtn","saveBtn","saveChanges","contentTab","mermaidTab","switchTab","updateContentPreview","mermaidSelector","mermaidCodeEditor","aiSendBtn","aiPromptInput","e","selectMermaidDiagram","target","updateMermaidPreview","sendAIPrompt","shiftKey","preventDefault","zoomInBtn","zoomOutBtn","zoomResetBtn","zoomIn","zoomOut","resetZoom","mermaidPreview","handleWheel","handleEsc","tabName","tab","activeTab","activeContent","initializeMermaidTab","size","populateMermaidSelector","preview","updateSaveButtonState","renderContentPreview","previewElement","processedContent","renderMermaidDiagramsInPreview","initializeMermaidInPreview","MermaidRenderer","initializeMermaid","previewDiv","async","codeParam","mermaidCode","replaceChild","renderDiagram","_this$mermaidDiagrams","_this$mermaidDiagrams2","defaultOption","addedCount","addedDiagrams","Set","diagramData","has","option","title","handleMermaidSelectorChange","selectedId","clearMermaidEditor","get","find","d","codeEditor","handleMermaidCodeChange","trackDiagramChange","window","mermaid","init","updateZoom","_this$currentSelected","promptInput","messagesContainer","prompt","addAIMessage","diagramInMap","currentCode","_this$currentContent","settings","ChromeStorageManager","getSettings","requestBody","diagram_code","user_request","selectedModel","response","fetch","API_URLS","EDIT_DIAGRAM","headers","ok","errorData","json","status","statusText","data","edited_diagram","cleanedDiagram","cleanAIResponse","_this$currentSelected2","currentDiagramInMap","oldCode","removeLastAIMessage","lines","split","nonEmptyStart","findIndex","line","nonEmptyEnd","slice","reverse","join","validStarts","firstLine","toLowerCase","start","messages","lastMessage","messageHTML","scrollTop","scrollHeight","_this$currentContent2","diagrams","diagramsMap","updateStatus","_this$editorContainer","validation","saveResults","min","max","zoomLevel","mermaidContent","transformOrigin","transition","round","deltaY","setSaveCallback","isOpen","getCurrentContent","editorContent","getValue","chrome","storage","sync","EXTENSION_SETTINGS_KEY","DEFAULT_SETTINGS","saveSettings","set","updateSetting","field","updatedSettings","resetSettings","validateSettings","_settings$apiKey","_settings$urlTemplate","_settings$documentUrl","_settings$databaseUrl","apiKey","urlTemplate","validationResult","validateConfluencePageLink","valid","documentUrl","isValidUrl","databaseUrl","keys","url","URL","link","out","pageId","u","pageIdParam","searchParams","pathParts","pathname","pagesIndex","indexOf","candidate","loadMermaidScript","res","runtime","getURL","eval","initialize","startOnLoad","theme","securityLevel","fontFamily","htmlLabels","flowchart","deterministicIds","deterministicIDSeed","setConfig","tempContainer","position","render","renderResult","svgCode","svg","String","renderError","showMermaidError","detectMermaidType","macroRegex","match","exec","macroName","macroContent","codeMatch","langMatch","diagramRecord","originalMatch","charAt","toUpperCase","MermaidAIChat","$","jQuery","isPopupOpen","currentMermaidContent","currentMermaidElement","lastClickedElement","lastClickPosition","getElementById","createPopupUI","setupMermaidDetection","setupConfluencePageChangeDetection","setupIframeEventListeners","setupMutationObserver","refreshIframeListeners","iframes","readyState","retryIframes","iframe","src","attachIframeListeners","dataset","mermaidListenerAttached","loadHandler","iframeDoc","contentDocument","contentWindow","clickHandler","classes","alt","clientX","clientY","mermaidClickHandler","boundClickHandler","bind","mermaidLoadHandler","MutationObserver","mutations","mutation","mutationIndex","addedNodes","nodeIndex","_node$textContent","injectAIButton","_node$textContent2","observe","childList","subtree","AJS","currentUrl","location","href","checkUrlChange","panel","buttonContainer","aiButton","marginRight","showChatPopup","alert","removeButton","insertBefore","root","bindPopupEvents","popup","header","sendBtn","input","makeDraggable","hideChatPopup","sendMessage","ctrlKey","closest","dragHandle","isDragging","dragStartX","dragStartY","popupStartX","popupStartY","cursor","userSelect","onDrag","stopPropagation","deltaX","newX","newY","maxX","innerWidth","maxY","innerHeight","stopDrag","parseInt","mouseX","mouseY","popupX","popupY","leftPos","topPos","display","focus","systemMessage","promptValidation","ApiClient","validateUserPrompt","addMessage","diagramValidation","validateDiagramContent","loadingId","callAI","removeMessage","errorMessage","getErrorMessage","messageId","messageDiv","userPrompt","payload","diagram_content","user_prompt","context","editDiagram","saveDiagramToAPI","filename","diagramCode","png","errorText","request","generateDocument","GEN_DOC","checkStatus","jobId","GEN_DOC_STATUS","getResult","GEN_DOC_RESULT","editText","EDIT_TEXT","ConfluenceApi","extractPageId","getCurrentSpaceKey","spaceKeyMeta","spaceKeyElement","spaceKey","urlMatch","fetchPageContent","_data$body","_data$body2","_data$body3","_data$body4","apiUrl","Accept","hasStorage","hasView","view","storageFormat","cloneTemplateForGeneration","_data$body5","_data$body6","extractPageIdFromUrl","originalStorageFormat","templateStructure","analysisInfo","extractTemplateStructure","structureLength","analysis","emptyParagraphs","emptyTableCells","placeholders","structure","regex","matches","matchAll","totalLength","extractPlaceholders","decodedContent","allMatches","testContent","contentIndex","patternIndex","map","m","uniquePlaceholders","extractImagesFromHtml","html","images","imgTags","img","getAttribute","base64src","base64","fname","urlToBase64","getFilenameFromUrl","blob","Promise","resolve","reject","reader","FileReader","onloadend","onerror","readAsDataURL","lastIndexOf","validateAndCleanTitle","toLocaleDateString","ensureUtf8Encoding","encoder","TextEncoder","decoder","TextDecoder","fatal","encoded","encode","decode","basicContentCleanup","advancedHTMLSanitization","finalHTML","convertToMermaidCloudMacros","macroCounter","macroId","convertedContent","currentId","toString","validateAndFixXML","fixed","attrs","createPage","fullStorageFormat","parentPageId","_result$_links","_result$_links2","cleanTitle","utf8Content","createPayload","space","representation","ancestors","errorJson","isArray","err","parseError","_links","webui","finalMessage","extractedDiagrams","mermaidRegex","getDiagramConfluenceStyles","diagramResult","total","successCount","totalDiagrams","processedDiagrams","all","script","onload","head","svgResult","svgContent","canvas","ctx","getContext","Image","fillStyle","fillRect","drawImage","toDataURL","btoa","unescape","encodeURIComponent","convertDiagramToSvgPng","errorMsg","processAndSaveDiagrams","fullUrl","origin","open","userMessage","rootUrl","customPrompt","instructionUrl","isEnabled","PROGRESS_STEPS","label","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","KToolContent","isModalOpen","currentTab","generationJob","progressSteps","confluenceEditor","mermaidAIChat","loadSettings","injectUI","bindEvents","ktoolContent","bubble","createBubble","modal","createModal","openModal","createGenerateTab","createPreviewTab","createSettingsTab","closeModal","handleGenerate","handleReset","addSettingsButtonListener","onMessage","addListener","sender","sendResponse","action","updateBubbleState","metaKey","firstInput","settingsBtn","openSettingsPopup","_chrome$action","_chrome$action$openPo","_chrome$browserAction","_chrome$browserAction2","openOptionsPage","openPopup","browserAction","tooltip","baDocUrl","additionalNotes","showProgress","updateProgress","baDocument","clonedTemplate","instructions","instructionPageId","instructionDoc","ba_content","template_structure","original_storage_format","additional_prompt","additional_notes","ba_content_length","template_structure_length","original_format_length","placeholders_found","placeholders_list","jobResponse","job_id","currentJobId","pollGenerationResult","hideProgress","attempts","poll","statusResult","resultString","handleGenerationComplete","progress_message","generatedContent","updatePreviewTab","previewTab","editContentBtn","createPageBtn","downloadBtn","handleEditContent","handleCreatePage","handleDownload","createBtn","originalText","originalDisabled","disabled","parentId","toISOString","Blob","createObjectURL","a","download","click","revokeObjectURL","showMermaidTools","progressSection","step","stepIndex","stepElement","icon","innerText","catch"],"sourceRoot":""}