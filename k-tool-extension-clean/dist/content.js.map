{"version":3,"file":"content.js","mappings":"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","sources":["webpack://k-tool-extension-clean/./src/content/utils/mermaidRenderer.js","webpack://k-tool-extension-clean/webpack/bootstrap","webpack://k-tool-extension-clean/webpack/runtime/define property getters","webpack://k-tool-extension-clean/webpack/runtime/hasOwnProperty shorthand","webpack://k-tool-extension-clean/./src/shared/constants.js","webpack://k-tool-extension-clean/./src/shared/diagramUtils.js","webpack://k-tool-extension-clean/./src/shared/api.js","webpack://k-tool-extension-clean/./src/shared/storage.js","webpack://k-tool-extension-clean/./src/content/utils/xmlFormatter.js","webpack://k-tool-extension-clean/./src/content/utils/contentSynchronizer.js","webpack://k-tool-extension-clean/./src/content/utils/domHelpers.js","webpack://k-tool-extension-clean/./src/content/utils/htmlTemplates.js","webpack://k-tool-extension-clean/./src/content/utils/storageManager.js","webpack://k-tool-extension-clean/./src/content/confluenceEditor.js","webpack://k-tool-extension-clean/./src/content/mermaidAI/MermaidPreview.js","webpack://k-tool-extension-clean/./src/content/mermaidAI/MermaidAIService.js","webpack://k-tool-extension-clean/./src/content/mermaidAI/MermaidApiClient.js","webpack://k-tool-extension-clean/./src/content/mermaidAI/mermaidAIChat.js","webpack://k-tool-extension-clean/./src/content/mermaidAI/textEditAI.js","webpack://k-tool-extension-clean/./src/content/content.js"],"sourcesContent":["// Mermaid Rendering Utilities\n// Handles Mermaid diagram loading, rendering and error handling\n\nexport class MermaidRenderer {\n  /**\n   * Load Mermaid script dynamically\n   * @returns {Promise<object>} Mermaid instance\n   */\n  static async loadMermaidScript() {\n    if (window.mermaid) {\n      console.log(\"⚡ Mermaid already loaded\");\n      return window.mermaid;\n    }\n\n    const res = await fetch(chrome.runtime.getURL(\"lib/mermaid.min.js\"));\n    const text = await res.text();\n    eval(text); // UMD will attach mermaid to window\n    console.log(\"✅ Mermaid loaded dynamically\");\n    return window.mermaid;\n  }\n\n  /**\n   * Initialize Mermaid with proper configuration\n   * @returns {Promise<void>}\n   */\n  static async initializeMermaid() {\n    await this.loadMermaidScript();\n\n    // Configure Mermaid with proper DOM context\n    window.mermaid.initialize({\n      startOnLoad: false,\n      theme: \"default\",\n      securityLevel: \"loose\",\n      fontFamily: \"Arial, sans-serif\",\n      // Ensure proper DOM context\n      htmlLabels: true,\n      flowchart: {\n        htmlLabels: true,\n      },\n      // Set the document context explicitly\n      deterministicIds: true,\n      deterministicIDSeed: \"mermaid-diagram-preview\",\n    });\n\n    // Ensure mermaid has access to document\n    if (window.mermaid.setConfig) {\n      window.mermaid.setConfig({\n        securityLevel: \"loose\",\n        theme: \"default\",\n      });\n    }\n  }\n\n  /**\n   * Render a single Mermaid diagram\n   * @param {string} diagramId - Unique ID for the diagram\n   * @param {string} mermaidCode - Mermaid diagram code\n   * @param {HTMLElement} container - Container element\n   * @returns {Promise<void>}\n   */\n  static async renderDiagram(diagramId, mermaidCode, container) {\n    try {\n      // 🧹 Làm sạch code trước\n      const cleanCode = this.cleanMermaidCode(mermaidCode);\n      console.log(\"🧹 Cleaned Mermaid code for rendering:\", cleanCode);\n\n      // 🧩 Kiểm tra hợp lệ\n      if (!this.validateMermaidCode(cleanCode)) {\n        throw new Error(\"Invalid Mermaid syntax after cleaning\");\n      }\n      if (!container || container.nodeType !== Node.ELEMENT_NODE) {\n        throw new Error(\"Invalid container for Mermaid diagram\");\n      }\n\n      // ⚙️ Đảm bảo Mermaid đã sẵn sàng\n      if (!window.mermaid || typeof window.mermaid.render !== \"function\") {\n        throw new Error(\"Mermaid render function not available\");\n      }\n\n      // 🚫 Ngăn chèn SVG lỗi vào body bằng container ảo\n      const tempContainer = document.createElement(\"div\");\n      tempContainer.style.position = \"absolute\";\n      tempContainer.style.left = \"-9999px\";\n      tempContainer.style.top = \"-9999px\";\n      tempContainer.style.visibility = \"hidden\";\n      document.body.appendChild(tempContainer);\n\n      try {\n        let svgCode;\n\n        // ⚡ API hiện đại (Promise-based)\n        const renderResult = await window.mermaid.render(\n          diagramId,\n          cleanCode,\n          tempContainer\n        );\n\n        // Xử lý các kiểu trả về khác nhau\n        if (typeof renderResult === \"string\") {\n          svgCode = renderResult;\n        } else if (renderResult && renderResult.svg) {\n          svgCode = renderResult.svg;\n        } else {\n          svgCode = tempContainer.innerHTML;\n        }\n\n        // ✅ Gán SVG vào container thực tế\n        container.innerHTML = svgCode;\n        console.log(\"✅ Mermaid diagram rendered successfully!\");\n      } catch (renderError) {\n        console.error(\"❌ Mermaid render error:\", renderError);\n        this.showMermaidError(container, mermaidCode, renderError);\n      } finally {\n        // 🧹 Dọn container ảo để tránh chèn SVG rác\n        if (tempContainer && tempContainer.parentNode) {\n          tempContainer.remove();\n        }\n      }\n    } catch (error) {\n      console.error(\"❌ Mermaid render error (outer):\", error);\n      this.showMermaidError(container, mermaidCode, error);\n    }\n  }\n\n  /**\n   * Show Mermaid error in a nice format\n   * @param {HTMLElement} container - Container element\n   * @param {string} text - Mermaid code that failed\n   * @param {Error} error - Error object\n   */\n  static showMermaidError(container, text, error) {\n    // Validate container before attempting to set innerHTML\n    if (\n      !container ||\n      !container.nodeType ||\n      container.nodeType !== Node.ELEMENT_NODE\n    ) {\n      console.error(\n        \"❌ Invalid container for Mermaid error display:\",\n        container\n      );\n      console.error(\"❌ Mermaid error details:\", {\n        message: error.message || \"Unknown error occurred\",\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\n      });\n      return;\n    }\n\n    // Check if container is still in the DOM\n    if (!document.contains(container)) {\n      console.error(\"❌ Container is not in DOM, cannot display Mermaid error\");\n      console.error(\"❌ Mermaid error details:\", {\n        message: error.message || \"Unknown error occurred\",\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\n      });\n      return;\n    }\n\n    try {\n      container.innerHTML = `\n        <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\n          <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\n            <span style=\"margin-right: 8px;\">⚠️</span>\n            Mermaid Render Error\n          </div>\n          <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\n            ${error.message || \"Unknown error occurred\"}\n          </div>\n          <details style=\"margin-top: 10px;\">\n            <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\n            <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${\n              text || \"No code provided\"\n            }</pre>\n          </details>\n        </div>\n      `;\n    } catch (setInnerHTMLError) {\n      console.error(\n        \"❌ Failed to set error HTML in container:\",\n        setInnerHTMLError\n      );\n      console.error(\"❌ Original Mermaid error:\", {\n        message: error.message || \"Unknown error occurred\",\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\n      });\n    }\n  }\n\n  /**\n   * Detect Mermaid diagram type from code\n   * @param {string} code - Mermaid diagram code\n   * @returns {string} Diagram type\n   */\n  static detectMermaidType(code) {\n    const firstLine = code.trim().split(\"\\n\")[0].toLowerCase();\n    if (firstLine.includes(\"graph\")) return \"graph\";\n    if (firstLine.includes(\"flowchart\")) return \"flowchart\";\n    if (firstLine.includes(\"sequencediagram\")) return \"sequence\";\n    if (firstLine.includes(\"classDiagram\")) return \"class\";\n    if (firstLine.includes(\"stateDiagram\")) return \"state\";\n    if (firstLine.includes(\"erDiagram\")) return \"er\";\n    if (firstLine.includes(\"gantt\")) return \"gantt\";\n    if (firstLine.includes(\"pie\")) return \"pie\";\n    return \"graph\";\n  }\n\n  /**\n   * Extract Mermaid diagrams from Confluence content\n   * @param {string} content - Confluence storage format content\n   * @returns {Array} Array of diagram objects\n   */\n  static extractMermaidDiagrams(content) {\n    const diagrams = [];\n    const diagramsMap = new Map();\n\n    if (!content) return { diagrams, diagramsMap };\n\n    // Regex to find all <ac:structured-macro ...> ... </ac:structured-macro>\n    const macroRegex =\n      /<ac:structured-macro[^>]*ac:name=\"(mermaid|code)\"[^>]*>([\\s\\S]*?)<\\/ac:structured-macro>/gi;\n\n    let match;\n    let index = 0;\n\n    while ((match = macroRegex.exec(content)) !== null) {\n      const macroName = match[1];\n      const macroContent = match[2];\n\n      // Check code parameter\n      const codeMatch = macroContent.match(\n        /<ac:parameter[^>]*ac:name=\"code\">([\\s\\S]*?)<\\/ac:parameter>/\n      );\n      if (!codeMatch) continue;\n\n      const code = codeMatch[1].trim();\n      if (!code) continue;\n\n      // If it's code macro, check language\n      if (macroName === \"code\") {\n        const langMatch = macroContent.match(\n          /<ac:parameter[^>]*ac:name=\"language\">([\\s\\S]*?)<\\/ac:parameter>/\n        );\n        if (!langMatch || langMatch[1].trim() !== \"mermaid\") continue;\n      }\n\n      const type = this.detectMermaidType(code);\n      const diagramId = `mermaid-diagram-${index}`;\n\n      const diagramRecord = {\n        id: diagramId,\n        code: code,\n        originalCode: code,\n        originalMatch: match[0],\n        index: index,\n        type: type,\n        title: `${type.charAt(0).toUpperCase() + type.slice(1)} Diagram ${\n          index + 1\n        }`,\n      };\n\n      diagrams.push(diagramRecord);\n      diagramsMap.set(diagramId, {\n        content: code,\n        type: type,\n        index: index,\n        title: diagramRecord.title,\n      });\n\n      console.log(`✅ Extracted diagram ${index}:`, {\n        type,\n        code: code.substring(0, 50) + \"...\",\n      });\n\n      index++;\n    }\n\n    console.log(\"🎨 Extracted Mermaid diagrams:\", diagrams);\n    return { diagrams, diagramsMap };\n  }\n\n  /**\n   * Clean Mermaid code - remove unwanted characters and normalize\n   * @param {string} code - Raw Mermaid code\n   * @returns {string} Cleaned code\n   */\n  static cleanMermaidCode(code) {\n    if (!code) return \"\";\n\n    // Remove HTML entities\n    let cleaned = code\n      .replace(/&lt;/g, \"<\")\n      .replace(/&gt;/g, \">\")\n      .replace(/&amp;/g, \"&\")\n      .replace(/&quot;/g, '\"')\n      .replace(/&#39;/g, \"'\");\n\n    // Remove CDATA sections\n    cleaned = cleaned.replace(/<!\\[CDATA\\[(.*?)\\]\\]>/gs, \"$1\");\n\n    // Remove HTML tags\n    cleaned = cleaned.replace(/<[^>]*>/g, \"\");\n\n    // Normalize whitespace\n    cleaned = cleaned.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n\n    // Remove excessive whitespace but preserve structure\n    cleaned = cleaned.replace(/\\n\\s*\\n\\s*\\n/g, \"\\n\\n\");\n\n    // Trim\n    cleaned = cleaned.trim();\n\n    return cleaned;\n  }\n\n  /**\n   * Validate Mermaid code syntax\n   * @param {string} code - Mermaid code to validate\n   * @returns {boolean} True if valid\n   */\n  static validateMermaidCode(code) {\n    if (!code || !code.trim()) {\n      return false;\n    }\n\n    const trimmed = code.trim();\n\n    // Check for valid Mermaid diagram types\n    const validStarters = [\n      \"graph\",\n      \"flowchart\",\n      \"sequenceDiagram\",\n      \"classDiagram\",\n      \"stateDiagram\",\n      \"erDiagram\",\n      \"journey\",\n      \"gantt\",\n      \"pie\",\n      \"gitgraph\",\n      \"mindmap\",\n      \"timeline\",\n      \"sankey\",\n      \"requirement\",\n    ];\n\n    const hasValidStarter = validStarters.some((starter) =>\n      trimmed.toLowerCase().startsWith(starter.toLowerCase())\n    );\n\n    if (!hasValidStarter) {\n      return false;\n    }\n\n    // Check for common syntax issues\n    if (trimmed.includes(\"undefined\") || trimmed.includes(\"null\")) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// K-Tool Extension Constants\nexport const EXTENSION_SETTINGS_KEY = \"extensionSettings\";\n\n// API URLs\nconst isLocal =\n  window.location.hostname === \"localhost\" ||\n  window.location.hostname === \"127.0.0.1\" ||\n  window.location.hostname.includes(\"localhost\");\nconst rootUrl = isLocal\n  ? \"http://localhost:5001\"\n  : \"https://gendoc.thangnotes.dev\";\n\n// Confluence API URLs (always localhost:8090 for Confluence)\nconst confluenceBaseUrl = \"http://localhost:8090\";\n\nexport const API_URLS = {\n  GEN_DOC: `${rootUrl}/api/generate-full-confluence-doc`,\n  GEN_DOC_STATUS: `${rootUrl}/api/generate-status`,\n  GEN_DOC_RESULT: `${rootUrl}/api/generate-result`,\n  EDIT_DIAGRAM: `${rootUrl}/api/edit-diagram`,\n  EDIT_MERMAID: `${rootUrl}/api/edit-mermaid`,\n  EDIT_TEXT: `${rootUrl}/api/edit-text`,\n  EDIT_HTML_CONTENT: `${rootUrl}/api/edit-html-content`,\n};\n\nexport const CONFLUENCE_API_URLS = {\n  MERMAID_DIAGRAM: `${confluenceBaseUrl}/rest/mermaidrest/1.0/mermaid/diagram`,\n  MERMAID_SAVE: `${confluenceBaseUrl}/rest/mermaidrest/1.0/mermaid/save`,\n  MERMAID_UPDATE: `${confluenceBaseUrl}/rest/mermaidrest/1.0/mermaid`, // /{pageId}\n  MERMAID_EDIT_REFERER: `${confluenceBaseUrl}/plugins/mermaid-cloud/editMermaidDiagram.action`,\n  TINYMCE_PLACEHOLDER: `${confluenceBaseUrl}/rest/tinymce/1/macro/placeholder`,\n};\n\n// Default settings\nexport const DEFAULT_SETTINGS = {\n  apiKey: \"\",\n  urlTemplate: \"\",\n  customPrompt: \"\",\n  documentUrl: \"\",\n  databaseUrl: \"\",\n  instructionUrl: \"\",\n  isEnabled: true,\n  selectedModel: \"sonar-pro\",\n};\n\n// AI Models\nexport const AI_MODELS = {\n  \"sonar-pro\": {\n    name: \"Sonar Pro\",\n    provider: \"Perplexity\",\n    description: \"Perplexity AI Sonar Pro model\",\n  },\n  gemini: {\n    name: \"Gemini 2.0 Flash\",\n    provider: \"Google\",\n    description: \"Google Gemini 2.0 Flash model\",\n  },\n};\n\n// Progress steps for document generation\nexport const PROGRESS_STEPS = [\n  { id: \"fetch\", label: \"Fetch BA Content\", status: \"pending\" },\n  { id: \"clone\", label: \"Clone Template\", status: \"pending\" },\n  { id: \"analyze\", label: \"Analyze Placeholders\", status: \"pending\" },\n  { id: \"generate\", label: \"AI Generate Document\", status: \"pending\" },\n  { id: \"complete\", label: \"Complete\", status: \"pending\" },\n];\n\n// Validation patterns\nexport const VALIDATION = {\n  URL_PATTERN: /^https?:\\/\\/.+/,\n  PLACEHOLDER_PATTERN: /<<([^>]+)>>/g,\n  MIN_PROMPT_LENGTH: 10,\n};\n","/**\n * Diagram processing utilities for Confluence page creation\n * Ported from extension/src/api/api.ts and extension/src/utils/mermaidExporter.ts\n */\nimport { MermaidRenderer } from \"../content/utils/mermaidRenderer.js\";\n\n/**\n * DiagramData interface equivalent for JavaScript\n * @typedef {Object} DiagramData\n * @property {string} filename - The filename for the diagram\n * @property {string} macroId - The macro ID\n * @property {string} diagramCode - The mermaid diagram code\n * @property {string} [svg] - The SVG content\n * @property {string} [png] - The PNG base64 content\n */\n\n/**\n * Extract diagrams from Confluence storage format - EXACT copy from extension\n * @param {string} storage - The storage format content\n * @returns {DiagramData[]} Array of extracted diagrams\n */\nexport function getDiagramConfluenceStyles(storage) {\n  let macroCounter = 1;\n  const extractedDiagrams = [];\n\n  // Find all mermaid macros in storage content\n  const mermaidRegex =\n    /<ac:structured-macro[^>]*ac:name=\"mermaid\"[^>]*>[\\s\\S]*?<ac:parameter[^>]*ac:name=\"code\"[^>]*>(?:<!\\[CDATA\\[([\\s\\S]*?)\\]\\]>|([\\s\\S]*?))<\\/ac:parameter>[\\s\\S]*?<\\/ac:structured-macro>/g;\n\n  let match;\n  while ((match = mermaidRegex.exec(storage)) !== null) {\n    const code = (match[1] || match[2] || \"\").trim();\n\n    if (code) {\n      extractedDiagrams.push({\n        filename: `k-tool-diagram-${macroCounter}`,\n        macroId: (110 + macroCounter).toString(),\n        diagramCode: code,\n      });\n      macroCounter++;\n    }\n  }\n\n  return extractedDiagrams;\n}\n\n/**\n * Load mermaid script dynamically if not already loaded\n * @returns {Promise<void>}\n */\nasync function loadMermaidScript() {\n  if (typeof window !== \"undefined\" && window.mermaid) {\n    return; // Already loaded\n  }\n\n  if (!window.mermaid) {\n    console.log(\"📦 Loading Mermaid library...\");\n    await MermaidRenderer.loadMermaidScript();\n  }\n  // Initialize mermaid if needed\n  if (window.mermaid && !window.mermaid.mermaidAPI) {\n    window.mermaid.initialize({\n      startOnLoad: false,\n      securityLevel: \"loose\",\n      theme: \"default\",\n    });\n  }\n}\n\n/**\n * Convert diagram code to SVG and PNG using mermaid - EXACT copy from extension\n * @param {DiagramData} diagram - The diagram data\n * @returns {Promise<DiagramData>} The diagram with SVG and PNG data\n */\nexport async function convertDiagramToSvgPng(diagram) {\n  try {\n    console.log(`🎨 Converting diagram to SVG/PNG: ${diagram.filename}`);\n    console.log(`🎨 Converting diagram to SVG/PNG: ${diagram.diagramCode}`);\n\n    // Ensure mermaid is loaded\n    await loadMermaidScript();\n\n    // Use mermaid to render SVG\n    const svgResult = await window.mermaid.render(\n      `diagram-${diagram.macroId}`,\n      diagram.diagramCode\n    );\n\n    // Handle different return types from mermaid.render\n    let svgContent;\n    if (typeof svgResult === \"string\") {\n      svgContent = svgResult;\n    } else if (svgResult && typeof svgResult === \"object\" && svgResult.svg) {\n      svgContent = svgResult.svg;\n    } else {\n      throw new Error(\"Invalid SVG result from mermaid.render\");\n    }\n\n    diagram.svg = svgContent;\n\n    // Convert SVG to PNG using canvas\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const img = new Image();\n\n    await new Promise((resolve, reject) => {\n      img.onload = () => {\n        canvas.width = img.width || 800;\n        canvas.height = img.height || 600;\n\n        if (ctx) {\n          ctx.fillStyle = \"white\";\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, 0, 0);\n          diagram.png = canvas.toDataURL(\"image/png\").split(\",\")[1]; // Remove data:image/png;base64,\n        }\n        resolve(true);\n      };\n\n      img.onerror = reject;\n      img.src =\n        \"data:image/svg+xml;base64,\" +\n        btoa(unescape(encodeURIComponent(svgContent)));\n    });\n\n    console.log(`✅ Successfully converted ${diagram.filename} to SVG/PNG`);\n    return diagram;\n  } catch (error) {\n    console.error(`❌ Failed to convert diagram ${diagram.filename}:`, error);\n\n    // Create fallback PNG data\n    diagram.png =\n      \"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==\";\n    return diagram;\n  }\n}\n\n/**\n * Save diagram to mermaid-cloud API - EXACT copy from extension\n * @param {DiagramData} diagram - The diagram data\n * @param {string} pageId - The page ID\n * @returns {Promise<boolean>} Success status\n */\nexport async function saveDiagramToAPI(diagram, pageId) {\n  try {\n    console.log(\n      `💾 Saving diagram ${diagram.filename} to API for page ${pageId}`\n    );\n\n    const payload = {\n      filename: diagram.filename,\n      data: diagram.diagramCode,\n      svg: diagram.svg || \"\",\n      png: diagram.png || \"\",\n    };\n\n    const response = await fetch(`/rest/mermaidrest/1.0/mermaid/${pageId}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json, text/javascript, */*; q=0.01\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n      },\n      body: JSON.stringify(payload),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error(\n        `❌ Failed to save diagram ${diagram.filename}:`,\n        response.status,\n        errorText\n      );\n      return false;\n    }\n\n    console.log(`✅ Successfully saved diagram ${diagram.filename} to API`);\n    return true;\n  } catch (error) {\n    console.error(`❌ Error saving diagram ${diagram.filename}:`, error);\n    return false;\n  }\n}\n\n/**\n * Process all extracted diagrams and save them to API sequentially - EXACT copy from extension\n * @param {string} pageId - The page ID\n * @param {DiagramData[]} extractedDiagrams - Array of diagrams to process\n * @returns {Promise<{success: number, total: number, errors: string[]}>} Processing result\n */\nexport async function processAndSaveDiagrams(pageId, extractedDiagrams) {\n  if (extractedDiagrams.length === 0) {\n    console.log(\"ℹ️ No diagrams to process\");\n    return { success: 0, total: 0, errors: [] };\n  }\n\n  console.log(\n    `🔄 Processing ${extractedDiagrams.length} diagrams for page ${pageId}`\n  );\n\n  let successCount = 0;\n  const errors = [];\n  const totalDiagrams = extractedDiagrams.length;\n\n  try {\n    // Convert all diagrams to SVG/PNG first\n    console.log(\"🎨 Converting diagrams to SVG/PNG...\");\n    const processedDiagrams = await Promise.all(\n      extractedDiagrams.map((diagram) => convertDiagramToSvgPng(diagram))\n    );\n\n    // Save diagrams sequentially (one by one)\n    console.log(\"💾 Saving diagrams sequentially...\");\n    for (let i = 0; i < processedDiagrams.length; i++) {\n      const diagram = processedDiagrams[i];\n      console.log(\n        `📊 Saving diagram ${i + 1}/${processedDiagrams.length}: ${\n          diagram.filename\n        }`\n      );\n\n      try {\n        const success = await saveDiagramToAPI(diagram, pageId);\n        if (success) {\n          successCount++;\n          console.log(\n            `✅ Diagram ${i + 1}/${processedDiagrams.length} saved successfully`\n          );\n        } else {\n          errors.push(`Failed to save diagram: ${diagram.filename}`);\n          console.error(\n            `❌ Diagram ${i + 1}/${processedDiagrams.length} failed to save`\n          );\n        }\n      } catch (error) {\n        const errorMsg = `Error saving diagram ${diagram.filename}: ${\n          error instanceof Error ? error.message : \"Unknown error\"\n        }`;\n        errors.push(errorMsg);\n        console.error(\n          `❌ Diagram ${i + 1}/${processedDiagrams.length} error:`,\n          error\n        );\n      }\n\n      // Add small delay between saves to avoid overwhelming the API\n      if (i < processedDiagrams.length - 1) {\n        await new Promise((resolve) => setTimeout(resolve, 500));\n      }\n    }\n  } catch (error) {\n    console.error(\"❌ Error during diagram processing:\", error);\n    errors.push(\n      `Processing error: ${\n        error instanceof Error ? error.message : \"Unknown error\"\n      }`\n    );\n  }\n\n  const result = {\n    success: successCount,\n    total: totalDiagrams,\n    errors,\n  };\n\n  console.log(\n    `📊 Diagram processing complete: ${successCount}/${totalDiagrams} successful`\n  );\n  if (errors.length > 0) {\n    console.warn(\"⚠️ Diagram processing errors:\", errors);\n  }\n\n  return result;\n}\n","// API utilities for K-Tool Extension\nimport { API_URLS } from \"./constants.js\";\nimport {\n  getDiagramConfluenceStyles,\n  processAndSaveDiagrams,\n} from \"./diagramUtils.js\";\n\nexport class ApiClient {\n  /**\n   * Make HTTP request with error handling\n   * @param {string} url - Request URL\n   * @param {Object} options - Fetch options\n   * @returns {Promise<Object>} Response data\n   */\n  static async request(url, options = {}) {\n    try {\n      const response = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return { success: true, data };\n    } catch (error) {\n      console.error(\"API request failed:\", error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  /**\n   * Generate document from BA content\n   * @param {Object} payload - Generation payload\n   * @returns {Promise<Object>} Job response\n   */\n  static async generateDocument(payload) {\n    return await this.request(API_URLS.GEN_DOC, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n\n  /**\n   * Check generation status\n   * @param {string} jobId - Job ID to check\n   * @returns {Promise<Object>} Status response\n   */\n  static async checkStatus(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_STATUS}?job_id=${jobId}`);\n  }\n\n  /**\n   * Get generation result\n   * @param {string} jobId - Job ID to get result\n   * @returns {Promise<Object>} Result response\n   */\n  static async getResult(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_RESULT}?job_id=${jobId}`);\n  }\n\n  /**\n   * Edit text using AI\n   * @param {Object} payload - Edit payload\n   * @returns {Promise<Object>} Edit response\n   */\n  static async editText(payload) {\n    return await this.request(API_URLS.EDIT_TEXT, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n}\n\n/**\n * Confluence API utilities\n */\nexport class ConfluenceApi {\n  /**\n   * Extract page ID from Confluence URL\n   * @param {string} url - Confluence page URL\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageId(url) {\n    const patterns = [/\\/pages\\/(\\d+)/, /pageId=(\\d+)/, /\\/(\\d+)$/];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Get current space key from page\n   * @returns {string|null} Space key or null\n   */\n  static getCurrentSpaceKey() {\n    // Try to get space key from various sources\n    const spaceKeyMeta = document.querySelector('meta[name=\"ajs-space-key\"]');\n    if (spaceKeyMeta) return spaceKeyMeta.content;\n\n    const spaceKeyElement = document.querySelector(\"[data-space-key]\");\n    if (spaceKeyElement) return spaceKeyElement.dataset.spaceKey;\n\n    // Try to extract from URL\n    const urlMatch = window.location.pathname.match(/\\/spaces\\/([^\\/]+)/);\n    if (urlMatch) return urlMatch[1];\n\n    return null;\n  }\n\n  /**\n   * Fetch page content from Confluence\n   * @param {string} pageId - Page ID to fetch\n   * @returns {Promise<Object>} Page content with title, content (view), and storageFormat\n   */\n  static async fetchPageContent(pageId) {\n    try {\n      console.log(\"🔍 Fetching Confluence content for pageId:\", pageId);\n\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage,body.view`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Content data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n        hasView: !!data.body?.view?.value,\n      });\n\n      return {\n        title: data.title,\n        content: data.body?.view?.value || \"\",\n        storageFormat: data.body?.storage?.value || \"\",\n      };\n    } catch (error) {\n      console.error(\"❌ Error fetching Confluence content:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clone template from URL for document generation\n   * @param {string} url - Template URL\n   * @returns {Promise<Object>} Cloned template data\n   */\n  static async cloneTemplateForGeneration(url) {\n    try {\n      console.log(\"🔍 Cloning template from URL:\", url);\n\n      if (!url || !url.trim()) {\n        console.error(\"❌ Empty URL provided\");\n        throw new Error(\"URL template không được để trống\");\n      }\n\n      // Extract pageId from URL\n      const pageId = this.extractPageIdFromUrl(url);\n      if (!pageId) {\n        console.error(\"❌ No pageId found in URL\");\n        throw new Error(\n          \"URL không chứa pageId hợp lệ. Vui lòng kiểm tra lại URL template.\"\n        );\n      }\n\n      console.log(\"📋 Fetching template pageId:\", pageId);\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Template data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n      });\n\n      if (!data.body?.storage?.value) {\n        console.error(\"❌ No storage content found in response\");\n        throw new Error(\"Template không có nội dung storage format\");\n      }\n\n      const originalStorageFormat = data.body.storage.value;\n      console.log(\n        \"📄 Original storage format length:\",\n        originalStorageFormat.length\n      );\n\n      const { templateStructure, analysisInfo } = this.extractTemplateStructure(\n        originalStorageFormat\n      );\n\n      const result = {\n        title: data.title,\n        originalStorageFormat,\n        templateStructure,\n        analysisInfo,\n      };\n\n      console.log(\"✅ Template cloned successfully:\", {\n        title: result.title,\n        originalLength: originalStorageFormat.length,\n        structureLength: templateStructure.length,\n        analysis: analysisInfo,\n      });\n\n      return result;\n    } catch (error) {\n      console.error(\"❌ Error cloning template:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Extract template structure and analyze placeholders\n   * @param {string} storageFormat - Original storage format\n   * @returns {Object} Template structure and analysis info\n   */\n  static extractTemplateStructure(storageFormat) {\n    let emptyParagraphs = 0;\n    let emptyTableCells = 0;\n    let placeholders = 0;\n\n    console.log(\"🔍 Extracting template structure...\");\n\n    const placeholderPatterns = [\n      /(<<.*?>>)/g,\n      /(\\{\\{.*?\\}\\})/g,\n      /(&lt;&lt;.*?&gt;&gt;)/g,\n      /(\\u003c\\u003c.*?\\u003e\\u003e)/g,\n    ];\n\n    let structure = storageFormat;\n\n    placeholderPatterns.forEach((regex, index) => {\n      const matches = [...structure.matchAll(regex)];\n      console.log(\n        `🎯 Placeholder pattern ${index + 1} found ${matches.length} matches`\n      );\n      placeholders += matches.length;\n    });\n\n    // Count empty paragraphs and table cells\n    emptyParagraphs = (storageFormat.match(/<p[^>]*>\\s*<\\/p>/g) || []).length;\n    emptyTableCells = (storageFormat.match(/<td[^>]*>\\s*<\\/td>/g) || []).length;\n\n    const analysisInfo = {\n      emptyParagraphs,\n      emptyTableCells,\n      placeholders,\n      totalLength: storageFormat.length,\n    };\n\n    return {\n      templateStructure: structure,\n      analysisInfo,\n    };\n  }\n\n  /**\n   * Extract pageId from various URL formats\n   * @param {string} url - URL to extract pageId from\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageIdFromUrl(url) {\n    const patterns = [\n      /\\/pages\\/(\\d+)/,\n      /pageId=(\\d+)/,\n      /\\/(\\d+)$/,\n      /viewpage\\.action\\?pageId=(\\d+)/,\n    ];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Extract placeholders from content (<<placeholder>> format)\n   * @param {string} content - Content to analyze\n   * @returns {Array} Array of placeholder strings\n   */\n  static extractPlaceholders(content) {\n    console.log(\"🔍 Analyzing content for placeholders...\");\n    console.log(\"📄 Content length:\", content.length);\n    console.log(\n      \"📄 Content preview (first 500 chars):\",\n      content.substring(0, 500)\n    );\n\n    // Helper function to decode HTML entities\n    const decodeHtmlEntities = (str) => {\n      return str\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\")\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\");\n    };\n\n    const decodedContent = decodeHtmlEntities(content);\n\n    // Patterns to find placeholders\n    const patterns = [\n      /<<([^>]+)>>/g, // Normal <<placeholder>>\n      /&lt;&lt;([^&]+)&gt;&gt;/g, // HTML encoded &lt;&lt;placeholder&gt;&gt;\n    ];\n\n    let allMatches = [];\n\n    // Test patterns on both original and decoded content\n    [content, decodedContent].forEach((testContent, contentIndex) => {\n      console.log(\n        `🔍 Testing on ${\n          contentIndex === 0 ? \"original\" : \"decoded\"\n        } content...`\n      );\n\n      patterns.forEach((regex, patternIndex) => {\n        const matches = [...testContent.matchAll(regex)];\n        console.log(\n          `🎯 Pattern ${patternIndex + 1} found ${matches.length} matches:`,\n          matches.map((m) => m[0])\n        );\n\n        if (patternIndex === 1) {\n          // For HTML encoded, decode back to normal format\n          allMatches.push(...matches.map((match) => `<<${match[1]}>>`));\n        } else {\n          allMatches.push(...matches.map((match) => match[0]));\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePlaceholders = [...new Set(allMatches)];\n    console.log(\"🎯 Unique placeholders found:\", uniquePlaceholders);\n\n    return uniquePlaceholders;\n  }\n\n  /**\n   * Extract images from HTML content and convert to base64\n   * @param {string} html - HTML content\n   * @returns {Promise<Array>} Array of image objects with base64 data\n   */\n  static async extractImagesFromHtml(html) {\n    const images = [];\n    try {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      const imgTags = doc.querySelectorAll(\"img\");\n\n      for (const img of Array.from(imgTags)) {\n        const src = img.getAttribute(\"src\");\n        let filename = undefined;\n\n        if (src) {\n          let base64src = src;\n\n          if (!src.startsWith(\"data:image\")) {\n            // Convert URL to base64 and get filename\n            const { base64, filename: fname } = await this.urlToBase64(src);\n            if (base64) {\n              base64src = base64;\n              filename = fname;\n            } else continue; // skip if failed\n          } else {\n            // If already base64, get name from alt or set default\n            filename = img.getAttribute(\"alt\")\n              ? img.getAttribute(\"alt\") + \".png\"\n              : `image_${Date.now()}.png`;\n          }\n\n          images.push({\n            src: base64src,\n            alt: img.getAttribute(\"alt\") || undefined,\n            filename,\n          });\n        }\n      }\n    } catch (e) {\n      console.warn(\"extractImagesFromHtml error:\", e);\n    }\n    return images;\n  }\n\n  /**\n   * Convert image URL to base64\n   * @param {string} url - Image URL\n   * @returns {Promise<Object>} Object with base64 data and filename\n   */\n  static async urlToBase64(url) {\n    try {\n      const response = await fetch(url);\n      if (!response.ok)\n        return { base64: null, filename: this.getFilenameFromUrl(url) };\n\n      const blob = await response.blob();\n      const filename = this.getFilenameFromUrl(url);\n\n      return await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({ base64: reader.result, filename });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n      });\n    } catch (e) {\n      console.warn(\"urlToBase64 error:\", e);\n      return { base64: null, filename: this.getFilenameFromUrl(url) };\n    }\n  }\n\n  /**\n   * Get filename from URL\n   * @param {string} url - URL to extract filename from\n   * @returns {string} Filename\n   */\n  static getFilenameFromUrl(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n      return (\n        pathname.substring(pathname.lastIndexOf(\"/\") + 1) ||\n        `image_${Date.now()}`\n      );\n    } catch {\n      return `image_${Date.now()}`;\n    }\n  }\n\n  /**\n   * Validate and clean page title to prevent font/encoding issues\n   */\n  static validateAndCleanTitle(title) {\n    return (\n      title\n        // Remove control characters and invalid XML characters\n        .replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, \"\")\n        // Fix common encoding issues\n        .replace(/â€™/g, \"'\")\n        .replace(/â€œ/g, '\"')\n        .replace(/â€/g, '\"')\n        .replace(/â€¦/g, \"...\")\n        // Clean up whitespace\n        .replace(/\\s+/g, \" \")\n        .trim() ||\n      // Ensure title is not empty and has reasonable length\n      `Generated Document - ${new Date().toLocaleDateString()}`\n    );\n  }\n\n  /**\n   * Ensure UTF-8 encoding for content\n   */\n  static ensureUtf8Encoding(content) {\n    try {\n      // Try to encode and decode to ensure proper UTF-8\n      const encoder = new TextEncoder();\n      const decoder = new TextDecoder(\"utf-8\", { fatal: false });\n      const encoded = encoder.encode(content);\n      return decoder.decode(encoded);\n    } catch (error) {\n      console.warn(\"UTF-8 encoding issue, using original content:\", error);\n      return content;\n    }\n  }\n\n  /**\n   * Basic content cleanup - EXACT copy from extension/src/api/api.ts\n   */\n  static basicContentCleanup(content) {\n    return (\n      content\n        // Remove code block prefixes\n        .replace(/^```\\w*\\s*/g, \"\")\n        .replace(/```\\s*$/g, \"\")\n        .trim()\n\n        // Enhanced character cleanup for Vietnamese and UTF-8\n        .replace(/^\\uFEFF/, \"\") // Remove BOM\n        .replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, \"\") // Remove control characters\n\n        // Fix common encoding issues\n        .replace(/â€™/g, \"'\") // Smart apostrophe\n        .replace(/â€œ/g, '\"') // Smart quote open\n        .replace(/â€/g, '\"') // Smart quote close\n        .replace(/â€¦/g, \"...\") // Ellipsis\n        .replace(/â€\"/g, \"–\") // En dash\n        .replace(/â€\"/g, \"—\") // Em dash\n\n        // Clean up line breaks and whitespace\n        .replace(/\\r\\n/g, \"\\n\")\n        .replace(/\\r/g, \"\\n\")\n        .replace(/\\n{3,}/g, \"\\n\\n\") // Max 2 consecutive line breaks\n        .replace(/[ \\t]+$/gm, \"\") // Remove trailing whitespace from lines\n        .replace(/^[ \\t]+/gm, \"\") // Remove leading whitespace from lines (but preserve structure)\n        .trim()\n    );\n  }\n\n  /**\n   * Advanced HTML sanitization - EXACT copy from extension/src/api/api.ts\n   */\n  static advancedHTMLSanitization(content) {\n    console.log(\"🔬 Starting advanced HTML sanitization...\");\n\n    // Step 1: Preprocess content to fix obvious issues\n    let processedContent = content\n      // Fix unclosed self-closing tags first\n      .replace(\n        /<(br|hr|img|input|meta|link|area|base|col|embed|source|track|wbr)([^>]*?)(?<!\\/)\\s*>/gi,\n        \"<$1$2/>\"\n      )\n      // Ensure proper quotes around attributes\n      .replace(/(\\w+)=([^\"\\s>]+)(\\s|>)/g, '$1=\"$2\"$3')\n      // Fix common encoding issues before processing\n      .replace(/&(?![a-zA-Z0-9#]+;)/g, \"&amp;\")\n      // Remove any null bytes or control characters\n      .replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, \"\")\n      // Fix common Vietnamese encoding issues\n      .replace(/â€™/g, \"'\")\n      .replace(/â€œ/g, '\"')\n      .replace(/â€/g, '\"');\n\n    // Step 2: Basic structure validation and cleanup\n    let finalHTML = processedContent\n      // Remove empty tags that could cause issues (but keep non-breaking spaces)\n      .replace(/<(\\w+)([^>]*?)>\\s*<\\/\\1>/g, (match, tagName) => {\n        // Keep paragraph and cell tags with nbsp\n        if ([\"p\", \"td\", \"th\", \"li\"].includes(tagName.toLowerCase())) {\n          return `<${tagName}>&nbsp;</${tagName}>`;\n        }\n        return \"\"; // Remove other empty tags\n      })\n      .replace(/>\\s+</g, \"><\") // Remove spaces between tags\n      .replace(/\\s+/g, \" \") // Normalize whitespace\n      .trim();\n\n    console.log(\"✅ Advanced HTML sanitization complete\");\n    console.log(\n      `📊 Original length: ${content.length}, Final length: ${finalHTML.length}`\n    );\n\n    return finalHTML;\n  }\n\n  /**\n   * Convert all macros to mermaid-cloud macros - EXACT copy from extension/src/api/api.ts\n   */\n  static convertToMermaidCloudMacros(content) {\n    console.log(\"🔄 Converting all macros to mermaid-cloud macros...\");\n    let macroCounter = 1;\n    let macroId = 111;\n\n    // Replace all structured macros (mermaid, code, etc.) with mermaid-cloud macros\n    const convertedContent = content.replace(\n      /<ac:structured-macro[^>]*>[\\s\\S]*?<\\/ac:structured-macro>/g,\n      (match) => {\n        const filename = `k-tool-diagram-${macroCounter}`;\n        const currentId = macroId.toString();\n        macroCounter++;\n        macroId++;\n\n        console.log(\n          `🔧 Converting macro ${\n            macroCounter - 1\n          } to mermaid-cloud: ${filename}`\n        );\n\n        return `<ac:structured-macro ac:name=\"mermaid-cloud\" ac:schema-version=\"1\" ac:macro-id=\"${currentId}\">\n<ac:parameter ac:name=\"toolbar\">bottom</ac:parameter>\n<ac:parameter ac:name=\"filename\">${filename}</ac:parameter>\n<ac:parameter ac:name=\"format\">svg</ac:parameter>\n<ac:parameter ac:name=\"zoom\">fit</ac:parameter>\n<ac:parameter ac:name=\"revision\">1</ac:parameter>\n</ac:structured-macro>`;\n      }\n    );\n\n    console.log(`✅ Converted ${macroCounter - 1} macros to mermaid-cloud`);\n    return convertedContent;\n  }\n\n  /**\n   * Validate and fix XML content specifically for Confluence storage format\n   */\n  static validateAndFixXML(content) {\n    let fixed = content;\n\n    console.log(\"🔍 Validating and fixing XML content...\");\n\n    // Fix the specific issue mentioned in error: spaces in tag names\n    fixed = fixed\n      // Remove spaces at the beginning of tag names\n      .replace(/<\\s+([a-zA-Z])/g, \"<$1\")\n      // Remove spaces at the end of tag names (before attributes or closing >)\n      .replace(/([a-zA-Z])\\s+([^>]*>)/g, \"$1 $2\")\n      // Fix spaces in closing tags\n      .replace(/<\\/\\s+([a-zA-Z][^>]*?)>/g, \"</$1>\")\n      // Fix malformed attributes with spaces\n      .replace(/([a-zA-Z-]+)\\s*=\\s*\"([^\"]*)\"/g, '$1=\"$2\"')\n      // Remove multiple consecutive spaces in content\n      .replace(/\\s{2,}/g, \" \")\n      // Fix line breaks that might cause parsing issues\n      .replace(/\\r\\n/g, \"\\n\")\n      .replace(/\\r/g, \"\\n\");\n\n    // Validate specific Confluence storage format requirements\n    fixed = fixed\n      // Ensure proper ac: namespace usage\n      .replace(/<ac:([^>]+)>/g, (match, content) => {\n        return `<ac:${content.trim()}>`;\n      })\n      // Fix structured macro formatting\n      .replace(/<ac:structured-macro\\s+([^>]+)>/g, (match, attrs) => {\n        const cleanAttrs = attrs.trim().replace(/\\s+/g, \" \");\n        return `<ac:structured-macro ${cleanAttrs}>`;\n      })\n      // Ensure CDATA sections are properly formatted\n      .replace(/<!\\[CDATA\\[\\s*([\\s\\S]*?)\\s*\\]\\]>/g, \"<![CDATA[$1]]>\");\n\n    console.log(\"✅ XML validation and fixing complete\");\n    return fixed;\n  }\n\n  /**\n   * Create new Confluence page - EXACT copy logic from createPageFromGeneratedContent\n   * @param {string} title - Page title\n   * @param {string} fullStorageFormat - Page content (storage format)\n   * @param {string} spaceKey - Space key\n   * @param {string} parentPageId - Parent page ID (optional)\n   * @returns {Promise<void>} No return value, same as createPageFromGeneratedContent\n   */\n  static async createPage(\n    title,\n    fullStorageFormat,\n    spaceKey,\n    parentPageId = null\n  ) {\n    try {\n      console.log(\"🔄 Creating page from generated content...\");\n\n      // Step 0: Validate and clean title\n      const cleanTitle = this.validateAndCleanTitle(title);\n      console.log(\"📋 Original title:\", title);\n      console.log(\"📋 Clean title:\", cleanTitle);\n      console.log(\"📋 Space:\", spaceKey);\n      console.log(\"📋 Content length:\", fullStorageFormat.length);\n\n      // Step 0.5: Ensure UTF-8 encoding\n      const utf8Content = this.ensureUtf8Encoding(fullStorageFormat);\n      console.log(\"🔤 UTF-8 validation complete\");\n\n      // Show content preview for debugging\n      console.log(\"📄 Content preview (first 200 chars):\");\n      console.log(utf8Content.substring(0, 200));\n\n      // Step 1: Enhanced content cleanup with Vietnamese support\n      console.log(\"🧹 Starting enhanced content cleanup...\");\n      let processedContent = this.basicContentCleanup(utf8Content);\n\n      // Step 2: Advanced HTML sanitization and validation\n      console.log(\"🔬 Performing advanced HTML sanitization...\");\n      processedContent = this.advancedHTMLSanitization(processedContent);\n\n      // Step 3: Convert all macros to mermaid-cloud macros\n      console.log(\"🔄 Converting macros to mermaid-cloud...\");\n      processedContent = this.convertToMermaidCloudMacros(processedContent);\n\n      const finalContent = processedContent;\n      console.log(\"✅ Content processing complete\");\n      console.log(\"📄 Final content length:\", finalContent.length);\n      console.log(\"📄 Final content preview (first 200 chars):\");\n      console.log(finalContent.substring(0, 200));\n\n      // Create the page payload with clean title\n      const createPayload = {\n        type: \"page\",\n        title: cleanTitle.trim() + \"-\" + Date.now(), // Use clean title with timestamp\n        space: { key: spaceKey },\n        body: {\n          storage: {\n            value: finalContent,\n            representation: \"storage\",\n          },\n        },\n      };\n\n      // Add parent page if specified\n      if (parentPageId) {\n        createPayload.ancestors = [{ id: parentPageId }];\n        console.log(\"📁 Setting parent page ID:\", parentPageId);\n      }\n\n      console.log(\"📤 Sending page creation request...\");\n      const response = await fetch(\"/rest/api/content\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Accept: \"application/json\",\n          \"X-Atlassian-Token\": \"no-check\",\n        },\n        body: JSON.stringify(createPayload),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ Page creation failed:\", errorText);\n\n        let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n\n        try {\n          const errorJson = JSON.parse(errorText);\n          if (errorJson.message) {\n            errorMessage = errorJson.message;\n          }\n\n          if (errorJson.errors && Array.isArray(errorJson.errors)) {\n            const detailedErrors = errorJson.errors\n              .map(\n                (err) =>\n                  `${err.field || \"Unknown field\"}: ${err.message || err}`\n              )\n              .join(\"\\n\");\n            errorMessage += `\\n\\nDetailed errors:\\n${detailedErrors}`;\n          }\n        } catch (parseError) {\n          console.warn(\"Could not parse error response as JSON\");\n          errorMessage += `\\n\\nRaw error: ${errorText}`;\n        }\n\n        throw new Error(errorMessage);\n      }\n\n      const result = await response.json();\n      console.log(\"✅ Page created successfully!\");\n      console.log(\"📄 Page ID:\", result.id);\n      console.log(\"🔗 Page URL:\", result._links?.webui);\n\n      let finalMessage = `✅ Tạo tài liệu thành công!\\n\\nTiêu đề: ${result.title}\\nPage ID: ${result.id}`;\n      const extractedDiagrams = getDiagramConfluenceStyles(fullStorageFormat);\n      console.log(\n        `📊 Extracted ${extractedDiagrams.length} diagrams from content`\n      );\n      // Process and save diagrams after page creation\n      if (extractedDiagrams.length > 0) {\n        console.log(\"🎨 Processing extracted diagrams...\");\n        const diagramResult = await processAndSaveDiagrams(\n          result.id,\n          extractedDiagrams\n        );\n\n        // Add diagram processing result to message\n        if (diagramResult.total > 0) {\n          finalMessage += `\\n\\n📊 Diagrams: ${diagramResult.success}/${diagramResult.total} saved successfully`;\n\n          if (diagramResult.errors.length > 0) {\n            finalMessage += `\\n⚠️ Diagram errors:\\n${diagramResult.errors.join(\n              \"\\n\"\n            )}`;\n          }\n        }\n      }\n\n      // Show final result after everything is complete\n      if (typeof window !== \"undefined\" && window[\"KToolNotificationUtils\"]) {\n        window[\"KToolNotificationUtils\"].success(\n          \"Trang đã được tạo thành công!\",\n          finalMessage.replace(/^✅\\s*/, \"\")\n        );\n      }\n\n      if (result._links?.webui) {\n        const fullUrl = `${window.location.origin}${result._links.webui}`;\n        window.open(fullUrl, \"_blank\");\n      }\n    } catch (error) {\n      console.error(\"❌ Error creating page:\", error);\n\n      let userMessage = \"Lỗi khi tạo trang Confluence.\";\n\n      if (error instanceof Error) {\n        if (error.message.includes(\"validation failed\")) {\n          userMessage = `❌ Nội dung không hợp lệ:\\n\\n${error.message}`;\n        } else if (error.message.includes(\"HTTP 400\")) {\n          userMessage =\n            \"❌ Dữ liệu không hợp lệ. Vui lòng kiểm tra lại nội dung.\";\n        } else if (error.message.includes(\"HTTP 401\")) {\n          userMessage = \"❌ Không có quyền truy cập. Vui lòng đăng nhập lại.\";\n        } else if (error.message.includes(\"HTTP 403\")) {\n          userMessage = \"❌ Không có quyền tạo trang trong space này.\";\n        } else {\n          userMessage = `❌ ${error.message}`;\n        }\n      }\n\n      if (typeof window !== \"undefined\" && window[\"KToolNotificationUtils\"]) {\n        window[\"KToolNotificationUtils\"].error(\n          \"Lỗi tạo trang\",\n          userMessage.replace(/^❌\\s*/, \"\")\n        );\n      }\n      throw error;\n    }\n  }\n}\n","// Chrome Storage Management\nimport { DEFAULT_SETTINGS, EXTENSION_SETTINGS_KEY } from \"./constants.js\";\n\nexport class StorageManager {\n  /**\n   * Load settings from Chrome storage\n   * @returns {Promise<Object>} Settings object\n   */\n  static async getSettings() {\n    try {\n      const result = await chrome.storage.sync.get([EXTENSION_SETTINGS_KEY]);\n      return result[EXTENSION_SETTINGS_KEY] || DEFAULT_SETTINGS;\n    } catch (error) {\n      console.error(\"Error loading settings:\", error);\n      return DEFAULT_SETTINGS;\n    }\n  }\n\n  /**\n   * Save settings to Chrome storage\n   * @param {Object} settings - Settings object to save\n   * @returns {Promise<boolean>} Success status\n   */\n  static async saveSettings(settings) {\n    try {\n      await chrome.storage.sync.set({ [EXTENSION_SETTINGS_KEY]: settings });\n      return true;\n    } catch (error) {\n      console.error(\"Error saving settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Update specific setting field\n   * @param {string} field - Field name to update\n   * @param {any} value - New value\n   * @returns {Promise<boolean>} Success status\n   */\n  static async updateSetting(field, value) {\n    try {\n      const currentSettings = await this.getSettings();\n      const updatedSettings = { ...currentSettings, [field]: value };\n      return await this.saveSettings(updatedSettings);\n    } catch (error) {\n      console.error(\"Error updating setting:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Reset settings to default\n   * @returns {Promise<boolean>} Success status\n   */\n  static async resetSettings() {\n    try {\n      await chrome.storage.sync.remove([EXTENSION_SETTINGS_KEY]);\n      return true;\n    } catch (error) {\n      console.error(\"Error resetting settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Validate settings object\n   * @param {Object} settings - Settings to validate\n   * @returns {Object} Validation result with errors\n   */\n  static validateSettings(settings) {\n    const errors = {};\n\n    if (!settings.apiKey?.trim()) {\n      errors.apiKey = \"API Key là bắt buộc\";\n    }\n\n    if (!settings.urlTemplate?.trim()) {\n      errors.urlTemplate = \"URL Template là bắt buộc\";\n    } else {\n      const validationResult = this.validateConfluencePageLink(\n        settings.urlTemplate\n      );\n\n      if (!validationResult.valid) {\n        errors.urlTemplate =\n          validationResult.error || \"URL Template không hợp lệ.\";\n      }\n    }\n    if (!settings.documentUrl?.trim()) {\n      errors.documentUrl = \"URL thư mục lưu tài liệu là bắt buộc\";\n    } else if (!this.isValidUrl(settings.documentUrl)) {\n      errors.documentUrl = \"URL không hợp lệ\";\n    }\n\n    if (!settings.databaseUrl?.trim()) {\n      errors.databaseUrl = \"URL thư mục database là bắt buộc\";\n    } else if (!this.isValidUrl(settings.databaseUrl)) {\n      errors.databaseUrl = \"URL không hợp lệ\";\n    }\n\n    // if (!settings.customPrompt?.trim()) {\n    //   errors.customPrompt = \"Custom Prompt là bắt buộc\";\n    // } else if (settings.customPrompt.trim().length < 10) {\n    //   errors.customPrompt = \"Custom Prompt phải có ít nhất 10 ký tự\";\n    // }\n\n    return {\n      isValid: Object.keys(errors).length === 0,\n      errors,\n    };\n  }\n\n  /**\n   * Check if URL is valid\n   * @param {string} url - URL to validate\n   * @returns {boolean} Is valid URL\n   */\n  static isValidUrl(url) {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Validate Confluence page link (có pageId)\n   * @param {string} link - Link Confluence để kiểm tra\n   * @returns {Object} { valid: boolean, error?: string, pageId?: string }\n   */\n  static validateConfluencePageLink(link) {\n    const out = { valid: false, error: null, pageId: null };\n\n    if (!link || typeof link !== \"string\" || !link.trim()) {\n      out.error = \"URL là bắt buộc\";\n      return out;\n    }\n\n    let u;\n    try {\n      u = new URL(link.trim());\n    } catch {\n      out.error = \"URL không hợp lệ\";\n      return out;\n    }\n\n    // check pageId in query param\n    const pageIdParam = u.searchParams.get(\"pageId\");\n    if (pageIdParam && /^\\d+$/.test(pageIdParam)) {\n      out.valid = true;\n      out.pageId = pageIdParam;\n      return out;\n    }\n\n    // check pageId in path (/pages/{id})\n    const pathParts = u.pathname.split(\"/\");\n    const pagesIndex = pathParts.indexOf(\"pages\");\n    if (pagesIndex >= 0 && pathParts.length > pagesIndex + 1) {\n      const candidate = pathParts[pagesIndex + 1];\n      if (/^\\d+$/.test(candidate)) {\n        out.valid = true;\n        out.pageId = candidate;\n        return out;\n      }\n    }\n\n    out.error = \"Không tìm thấy pageId trong URL\";\n    return out;\n  }\n}\n","// XML/XHTML Formatting Utilities\n// Handles XML parsing, formatting and validation\n\nexport class XMLFormatter {\n  /**\n   * Format XHTML for better readability with proper alignment\n   * @param {string} xmlString - Raw XML/XHTML string\n   * @param {string} indent - Indentation string (default: 4 spaces)\n   * @returns {string} Formatted XML/XHTML string\n   */\n  static formatXHTML(xmlString, indent = \"    \") {\n    // 1. Parse string into DOM tree\n    const parser = new DOMParser();\n\n    // Wrap content with temporary root tag if it's just a fragment\n    const rootTag = \"xml-root-fragment\";\n    const wrappedXml = `<${rootTag}>${xmlString}</${rootTag}>`;\n\n    const doc = parser.parseFromString(wrappedXml, \"text/xml\");\n\n    // Check for parsing errors\n    const parseErrors = doc.getElementsByTagName(\"parsererror\");\n    if (parseErrors.length > 0) {\n      console.warn(\"XML/XHTML parsing error. Returning original string.\", {\n        error: parseErrors[0]?.textContent || \"Unknown parsing error\",\n        originalLength: xmlString.length,\n        sample: xmlString.substring(0, 100) + \"...\",\n      });\n      return xmlString;\n    }\n\n    let output = \"\";\n    let currentIndent = \"\";\n\n    // Get wrapped root element (only process its children)\n    const rootElement = doc.documentElement;\n\n    /**\n     * Recursive function to traverse and rebuild string\n     * @param {Node} node - Current node\n     * @param {string} level - Current indentation level\n     */\n    function processNode(node, level) {\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE: // 1: HTML/XML tags (e.g., <p>, <ac:structured-macro>)\n          const nodeName = node.nodeName;\n\n          // Start tag (e.g., <p data=\"...\">)\n          let startTag = `<${nodeName}`;\n\n          // Add attributes\n          if (node.attributes && node.attributes.length > 0) {\n            for (let attr of node.attributes) {\n              startTag += ` ${attr.name}=\"${attr.value}\"`;\n            }\n          }\n          startTag += \">\";\n\n          // Check if tag has children (excluding empty TextNodes)\n          const hasSignificantChildren = Array.from(node.childNodes).some(\n            (child) =>\n              child.nodeType !== Node.TEXT_NODE ||\n              child.textContent.trim().length > 0\n          );\n\n          if (!hasSignificantChildren) {\n            // Handle self-closing or empty tags (e.g., <br />)\n            // Note: In XHTML, <tag></tag> is more common than <tag />\n            // Here we use common logic: Open tag, close tag on same line\n            output += `${level}${startTag.replace(\">\", \"/>\")}\\n`;\n          } else {\n            // Open tag on new line\n            output += `${level}${startTag}\\n`;\n\n            // Increase indentation level and process children\n            const nextLevel = level + indent;\n            Array.from(node.childNodes).forEach((child) =>\n              processNode(child, nextLevel)\n            );\n\n            // Close tag on new line with old indentation level\n            output += `${level}</${nodeName}>\\n`;\n          }\n          break;\n\n        case Node.TEXT_NODE: // 3: Text content\n          const text = node.textContent.trim();\n          if (text.length > 0) {\n            // Handle plain text (e.g., content inside <p>)\n            // If it's plain text, add it to current line or new line\n            output += `${level}${text}\\n`;\n          }\n          break;\n\n        case Node.COMMENT_NODE: // 8: Comment (e.g., <!-- comment -->)\n          output += `${level}<!--${node.textContent}-->\\n`;\n          break;\n\n        case Node.CDATA_SECTION_NODE: // 4: CDATA Section (Safe for code in <ac:parameter>)\n          // This is the most important case for Mermaid content\n          output += `${level}<![CDATA[${node.textContent}]]>\\n`;\n          break;\n\n        // You can add other cases like DOCUMENT_TYPE_NODE, PROCESSING_INSTRUCTION_NODE if needed\n      }\n    }\n\n    // Start processing from children of temporary root tag\n    Array.from(rootElement.childNodes).forEach((node) =>\n      processNode(node, currentIndent)\n    );\n\n    return output.trim();\n  }\n\n  /**\n   * Check if a tag is self-closing\n   * @param {string} tag - HTML tag string\n   * @returns {boolean} True if self-closing\n   */\n  static isSelfClosingTag(tag) {\n    const selfClosing = [\n      \"br\",\n      \"hr\",\n      \"img\",\n      \"input\",\n      \"meta\",\n      \"link\",\n      \"source\",\n      \"track\",\n      \"wbr\",\n    ];\n    return selfClosing.some((t) => tag.startsWith(`<${t}`));\n  }\n\n  /**\n   * Clean up XML markers from content\n   * @param {string} content - Content with XML markers\n   * @returns {string} Cleaned content\n   */\n  static cleanXMLMarkers(content) {\n    if (!content) return \"\";\n\n    // Remove ```xml and ``` markers\n    let cleaned = content.replace(/^```xml\\s*\\n?/gm, \"\");\n    cleaned = cleaned.replace(/\\n?```\\s*$/gm, \"\");\n\n    return cleaned;\n  }\n\n  /**\n   * Escape regex special characters\n   * @param {string} string - String to escape\n   * @returns {string} Escaped string\n   */\n  static escapeRegex(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  }\n}\n","/**\n * Content Synchronizer - Handles synchronization between different content sources\n * (Raw editor, Mermaid diagrams, etc.)\n */\nimport { XMLFormatter } from \"./xmlFormatter.js\";\n\nexport class ContentSynchronizer {\n  constructor() {\n    // Simplified - no change tracking needed\n    this.diagramChanges = new Map(); // Track diagram changes\n  }\n\n  /**\n   * Track diagram changes for synchronization\n   * @param {string} diagramId - Diagram ID\n   * @param {string} newCode - New diagram code\n   */\n  trackDiagramChange(diagramId, newCode) {\n    console.log(`📝 Tracking diagram change for ${diagramId}`);\n    this.diagramChanges.set(diagramId, {\n      code: newCode,\n      timestamp: Date.now(),\n    });\n  }\n\n  /**\n   * Get tracked diagram changes\n   * @returns {Map} Map of diagram changes\n   */\n  getTrackedChanges() {\n    return this.diagramChanges;\n  }\n\n  /**\n   * Clear tracked changes\n   */\n  clearTrackedChanges() {\n    this.diagramChanges.clear();\n  }\n\n  /**\n   * Sync all content sources to main content object\n   * @param {Object} currentContent - Main content object\n   * @param {HTMLElement} editorContainer - Editor container element\n   * @param {Array} mermaidDiagrams - Array of Mermaid diagrams\n   * @returns {Object} Updated content object\n   */\n  syncAllContent(currentContent, editorContainer, mermaidDiagrams = []) {\n    if (!currentContent) {\n      throw new Error(\"Current content is required\");\n    }\n\n    // 1. Sync from raw editor\n    const rawContent = this.syncFromRawEditor(currentContent, editorContainer);\n\n    // 2. Sync Mermaid changes\n    const finalContent = this.syncMermaidChanges(rawContent, mermaidDiagrams);\n\n    console.log(\"🔄 All content synchronized\");\n    return finalContent;\n  }\n\n  /**\n   * Sync content from raw editor\n   * @param {Object} currentContent - Current content object\n   * @param {HTMLElement} editorContainer - Editor container\n   * @returns {Object} Updated content object\n   */\n  syncFromRawEditor(currentContent, editorContainer) {\n    if (!editorContainer) return currentContent;\n\n    const rawEditor = editorContainer.querySelector(\"#raw-content-editor\");\n    if (!rawEditor || !rawEditor.value) return currentContent;\n\n    const updatedContent = { ...currentContent };\n    updatedContent.full_storage_format = rawEditor.value.trim();\n\n    // Also update content field if it exists\n    if (updatedContent.content !== undefined) {\n      updatedContent.content = rawEditor.value.trim();\n    }\n\n    console.log(\"📝 Synced content from raw editor\");\n    return updatedContent;\n  }\n\n  /**\n   * Sync Mermaid diagram changes back to content\n   * @param {Object} currentContent - Current content object\n   * @param {Array} mermaidDiagrams - Array of Mermaid diagrams\n   * @returns {Object} Updated content object\n   */\n  syncMermaidChanges(currentContent, mermaidDiagrams = []) {\n    console.log(\"🔄 Starting Mermaid sync...\", {\n      diagramsCount: mermaidDiagrams.length,\n      hasContent: !!currentContent,\n    });\n\n    if (!mermaidDiagrams || mermaidDiagrams.length === 0) {\n      console.log(\"⚠️ No Mermaid diagrams to sync\");\n      return currentContent;\n    }\n\n    let content =\n      currentContent.full_storage_format || currentContent.content || \"\";\n    console.log(\"📊 Processing all diagrams (no change check)...\");\n\n    // Process each diagram - always replace originalCode with code\n    mermaidDiagrams.forEach((diagram, index) => {\n      console.log(`� Processing diagram ${index}:`, {\n        id: diagram.id,\n        hasOriginalCode: !!diagram.originalCode,\n        hasCode: !!diagram.code,\n        originalLength: diagram.originalCode?.length || 0,\n        codeLength: diagram.code?.length || 0,\n      });\n\n      if (diagram.originalCode && diagram.code) {\n        console.log(`📝 Replacing code for diagram ${diagram.id || index}...`);\n        console.log(\n          `📋 Original code preview: \"${diagram.originalCode.substring(\n            0,\n            100\n          )}...\"`\n        );\n        console.log(\n          `📋 New code preview: \"${diagram.code.substring(0, 100)}...\"`\n        );\n\n        const updatedContent = this.updateDiagramInContent(\n          content,\n          diagram,\n          index\n        );\n        if (updatedContent !== content) {\n          content = updatedContent;\n          console.log(\n            `✅ Successfully replaced code for diagram ${diagram.id || index}`\n          );\n        } else {\n          console.warn(\n            `⚠️ Failed to replace code for diagram ${\n              diagram.id || index\n            } - no pattern matched`\n          );\n        }\n      } else {\n        console.log(\n          `⚠️ Skipping diagram ${\n            diagram.id || index\n          } - missing originalCode or code`\n        );\n      }\n    });\n\n    // Always return updated content\n    const updatedContent = { ...currentContent };\n    updatedContent.full_storage_format = content;\n\n    if (updatedContent.content !== undefined) {\n      updatedContent.content = content;\n    }\n\n    console.log(\"✅ Mermaid sync completed - all diagrams processed\");\n    return updatedContent;\n  }\n\n  /**\n   * Update a specific diagram in content string\n   * @param {string} content - Full content string\n   * @param {Object} diagram - Diagram object\n   * @param {number} index - Diagram index\n   * @returns {string} Updated content string\n   */\n  updateDiagramInContent(content, diagram, index) {\n    if (!content || !diagram) {\n      console.log(\"⚠️ updateDiagramInContent: Missing content or diagram\");\n      return content;\n    }\n\n    const originalCode = diagram.originalCode;\n    const newCode = diagram.code;\n\n    console.log(\"🔄 Updating diagram in content:\", {\n      index,\n      diagramId: diagram.id,\n      hasOriginalCode: !!originalCode,\n      hasNewCode: !!newCode,\n      originalLength: originalCode?.length || 0,\n      newLength: newCode?.length || 0,\n    });\n\n    if (!originalCode || !newCode) {\n      console.log(\"⚠️ Missing originalCode or newCode - skipping update\");\n      return content;\n    }\n\n    console.log(\"📋 Replacing originalCode with newCode (no equality check)\");\n    console.log(`📋 Original: \"${originalCode.substring(0, 50)}...\"`);\n    console.log(`📋 New: \"${newCode.substring(0, 50)}...\"`);\n\n    // Try multiple patterns to find and replace the diagram\n    const patterns = [\n      // Pattern 1: CDATA section in ac:parameter\n      {\n        pattern: new RegExp(\n          `(<ac:parameter[^>]*ac:name=\"code\"[^>]*>\\\\s*<\\\\!\\\\[CDATA\\\\[\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*\\\\]\\\\]>\\\\s*</ac:parameter>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n      // Pattern 2: Plain text in ac:parameter\n      {\n        pattern: new RegExp(\n          `(<ac:parameter[^>]*ac:name=\"code\"[^>]*>\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*</ac:parameter>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n      // Pattern 3: ac:plain-text-body with CDATA\n      {\n        pattern: new RegExp(\n          `(<ac:plain-text-body>\\\\s*<\\\\!\\\\[CDATA\\\\[\\\\s*)(${XMLFormatter.escapeRegex(\n            originalCode\n          )})(\\\\s*\\\\]\\\\]>\\\\s*</ac:plain-text-body>)`,\n          \"gs\"\n        ),\n        replacement: `$1${newCode}$3`,\n      },\n    ];\n\n    let updatedContent = content;\n    let patternMatched = false;\n\n    console.log(\"🔍 Trying patterns to match and replace...\");\n\n    for (let i = 0; i < patterns.length; i++) {\n      const { pattern, replacement } = patterns[i];\n\n      console.log(`🔍 Testing pattern ${i + 1}...`);\n\n      // Reset regex lastIndex to avoid issues with global flag\n      pattern.lastIndex = 0;\n\n      if (pattern.test(content)) {\n        console.log(`✅ Pattern ${i + 1} matched! Applying replacement...`);\n\n        // Reset again before replace\n        pattern.lastIndex = 0;\n        updatedContent = content.replace(pattern, replacement);\n        patternMatched = true;\n\n        console.log(`✅ Successfully updated diagram using pattern ${i + 1}`);\n        break;\n      } else {\n        console.log(`❌ Pattern ${i + 1} did not match`);\n      }\n    }\n\n    if (!patternMatched) {\n      console.warn(\n        `⚠️ Could not find pattern to update diagram ${diagram.id || index}`\n      );\n      console.log(\"🔍 Debug info:\");\n      console.log(\n        \"Original code preview:\",\n        originalCode.substring(0, 100) + \"...\"\n      );\n      console.log(\"New code preview:\", newCode.substring(0, 100) + \"...\");\n      console.log(\"Content sample:\", content.substring(0, 500) + \"...\");\n\n      // Try to find the original code manually for debugging\n      const simpleSearch = content.includes(originalCode.trim());\n      console.log(\"Simple string search found original code:\", simpleSearch);\n    } else {\n      console.log(\"✅ Pattern matching successful, content updated\");\n    }\n\n    return updatedContent;\n  }\n\n  /**\n   * Validate content structure\n   * @param {Object} content - Content to validate\n   * @returns {Object} Validation result\n   */\n  validateContent(content) {\n    const result = {\n      isValid: true,\n      errors: [],\n      warnings: [],\n    };\n\n    if (!content) {\n      result.isValid = false;\n      result.errors.push(\"Content is null or undefined\");\n      return result;\n    }\n\n    // Check required fields\n    if (!content.full_storage_format && !content.content) {\n      result.isValid = false;\n      result.errors.push(\"Missing full_storage_format or content field\");\n    }\n\n    // Check for XML validity\n    const xmlContent = content.full_storage_format || content.content;\n    if (xmlContent) {\n      try {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(\n          `<root>${xmlContent}</root>`,\n          \"text/xml\"\n        );\n        const errors = doc.getElementsByTagName(\"parsererror\");\n\n        if (errors.length > 0) {\n          result.warnings.push(\"Content may contain XML parsing issues\");\n        }\n      } catch (error) {\n        result.warnings.push(`XML validation warning: ${error.message}`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Create content backup\n   * @param {Object} content - Content to backup\n   * @returns {Object} Content backup\n   */\n  createBackup(content) {\n    return {\n      content: JSON.parse(JSON.stringify(content)),\n      timestamp: Date.now(),\n    };\n  }\n\n  /**\n   * Restore from backup\n   * @param {Object} backup - Backup to restore\n   * @returns {Object} Restored content\n   */\n  restoreFromBackup(backup) {\n    if (!backup || !backup.content) {\n      throw new Error(\"Invalid backup data\");\n    }\n\n    console.log(\"🔄 Restored content from backup\");\n    return backup.content;\n  }\n}\n","// DOM Manipulation Helpers\n// Utility functions for DOM operations and event handling\n\nexport class DOMHelpers {\n  /**\n   * Safely query selector with error handling\n   * @param {HTMLElement} container - Container element\n   * @param {string} selector - CSS selector\n   * @returns {HTMLElement|null} Found element or null\n   */\n  static querySelector(container, selector) {\n    try {\n      return container.querySelector(selector);\n    } catch (error) {\n      console.error(`Error querying selector \"${selector}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Safely query all selectors with error handling\n   * @param {HTMLElement} container - Container element\n   * @param {string} selector - CSS selector\n   * @returns {NodeList} Found elements\n   */\n  static querySelectorAll(container, selector) {\n    try {\n      return container.querySelectorAll(selector);\n    } catch (error) {\n      console.error(`Error querying selector \"${selector}\":`, error);\n      return [];\n    }\n  }\n\n  /**\n   * Add event listener with error handling\n   * @param {HTMLElement} element - Target element\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   * @param {object} options - Event options\n   */\n  static addEventListener(element, event, handler, options = {}) {\n    if (!element) {\n      console.warn(`Cannot add event listener: element is null`);\n      return;\n    }\n\n    try {\n      element.addEventListener(event, handler, options);\n    } catch (error) {\n      console.error(`Error adding event listener for \"${event}\":`, error);\n    }\n  }\n\n  /**\n   * Remove event listener with error handling\n   * @param {HTMLElement} element - Target element\n   * @param {string} event - Event type\n   * @param {Function} handler - Event handler\n   */\n  static removeEventListener(element, event, handler) {\n    if (!element) {\n      console.warn(`Cannot remove event listener: element is null`);\n      return;\n    }\n\n    try {\n      element.removeEventListener(event, handler);\n    } catch (error) {\n      console.error(`Error removing event listener for \"${event}\":`, error);\n    }\n  }\n\n  /**\n   * Toggle class on element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to toggle\n   * @param {boolean} force - Force add/remove\n   */\n  static toggleClass(element, className, force = undefined) {\n    if (!element) {\n      console.warn(`Cannot toggle class: element is null`);\n      return;\n    }\n\n    try {\n      if (force !== undefined) {\n        element.classList.toggle(className, force);\n      } else {\n        element.classList.toggle(className);\n      }\n    } catch (error) {\n      console.error(`Error toggling class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Add class to element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to add\n   */\n  static addClass(element, className) {\n    if (!element) {\n      console.warn(`Cannot add class: element is null`);\n      return;\n    }\n\n    try {\n      element.classList.add(className);\n    } catch (error) {\n      console.error(`Error adding class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Remove class from element\n   * @param {HTMLElement} element - Target element\n   * @param {string} className - Class name to remove\n   */\n  static removeClass(element, className) {\n    if (!element) {\n      console.warn(`Cannot remove class: element is null`);\n      return;\n    }\n\n    try {\n      element.classList.remove(className);\n    } catch (error) {\n      console.error(`Error removing class \"${className}\":`, error);\n    }\n  }\n\n  /**\n   * Set element content safely\n   * @param {HTMLElement} element - Target element\n   * @param {string} content - Content to set\n   * @param {boolean} isHTML - Whether content is HTML (default: false)\n   */\n  static setContent(element, content, isHTML = false) {\n    if (!element) {\n      console.warn(`Cannot set content: element is null`);\n      return;\n    }\n\n    try {\n      // Handle form elements specially\n      if (\n        element.tagName === \"INPUT\" ||\n        element.tagName === \"TEXTAREA\" ||\n        element.tagName === \"SELECT\"\n      ) {\n        element.value = content || \"\";\n        return;\n      }\n\n      if (isHTML) {\n        element.innerHTML = content;\n      } else {\n        element.textContent = content;\n      }\n    } catch (error) {\n      console.error(`Error setting content:`, error);\n    }\n  }\n\n  /**\n   * Get element content safely\n   * @param {HTMLElement} element - Target element\n   * @param {boolean} isHTML - Whether to get HTML content (default: false)\n   * @returns {string} Element content\n   */\n  static getContent(element, isHTML = false) {\n    if (!element) {\n      console.warn(`Cannot get content: element is null`);\n      return \"\";\n    }\n\n    try {\n      // Handle form elements specially\n      if (\n        element.tagName === \"INPUT\" ||\n        element.tagName === \"TEXTAREA\" ||\n        element.tagName === \"SELECT\"\n      ) {\n        return element.value || \"\";\n      }\n\n      return isHTML ? element.innerHTML : element.textContent;\n    } catch (error) {\n      console.error(`Error getting content:`, error);\n      return \"\";\n    }\n  }\n\n  /**\n   * Create element with attributes and content\n   * @param {string} tagName - HTML tag name\n   * @param {object} attributes - Element attributes\n   * @param {string} content - Element content\n   * @param {boolean} isHTML - Whether content is HTML\n   * @returns {HTMLElement} Created element\n   */\n  static createElement(tagName, attributes = {}, content = \"\", isHTML = false) {\n    try {\n      const element = document.createElement(tagName);\n\n      // Set attributes\n      Object.entries(attributes).forEach(([key, value]) => {\n        if (key === \"className\") {\n          element.className = value;\n        } else if (key === \"style\" && typeof value === \"object\") {\n          Object.assign(element.style, value);\n        } else {\n          element.setAttribute(key, value);\n        }\n      });\n\n      // Set content\n      if (content) {\n        this.setContent(element, content, isHTML);\n      }\n\n      return element;\n    } catch (error) {\n      console.error(`Error creating element \"${tagName}\":`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Remove element safely\n   * @param {HTMLElement} element - Element to remove\n   */\n  static removeElement(element) {\n    if (!element) {\n      console.warn(`Cannot remove element: element is null`);\n      return;\n    }\n\n    try {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      } else {\n        element.remove();\n      }\n    } catch (error) {\n      console.error(`Error removing element:`, error);\n    }\n  }\n\n  /**\n   * Check if element exists in DOM\n   * @param {HTMLElement} element - Element to check\n   * @returns {boolean} True if element exists in DOM\n   */\n  static isInDOM(element) {\n    if (!element) return false;\n    return document.body.contains(element);\n  }\n\n  /**\n   * Scroll element into view smoothly\n   * @param {HTMLElement} element - Element to scroll to\n   * @param {object} options - Scroll options\n   */\n  static scrollIntoView(\n    element,\n    options = { behavior: \"smooth\", block: \"center\" }\n  ) {\n    if (!element) {\n      console.warn(`Cannot scroll: element is null`);\n      return;\n    }\n\n    try {\n      element.scrollIntoView(options);\n    } catch (error) {\n      console.error(`Error scrolling element into view:`, error);\n    }\n  }\n\n  /**\n   * Get element dimensions\n   * @param {HTMLElement} element - Target element\n   * @returns {object} Element dimensions\n   */\n  static getDimensions(element) {\n    if (!element) {\n      console.warn(`Cannot get dimensions: element is null`);\n      return { width: 0, height: 0, top: 0, left: 0 };\n    }\n\n    try {\n      const rect = element.getBoundingClientRect();\n      return {\n        width: rect.width,\n        height: rect.height,\n        top: rect.top,\n        left: rect.left,\n        right: rect.right,\n        bottom: rect.bottom,\n      };\n    } catch (error) {\n      console.error(`Error getting element dimensions:`, error);\n      return { width: 0, height: 0, top: 0, left: 0 };\n    }\n  }\n\n  /**\n   * Deep clone element\n   * @param {HTMLElement} element - Element to clone\n   * @param {boolean} deep - Whether to deep clone (default: true)\n   * @returns {HTMLElement} Cloned element\n   */\n  static cloneElement(element, deep = true) {\n    if (!element) {\n      console.warn(`Cannot clone element: element is null`);\n      return null;\n    }\n\n    try {\n      return element.cloneNode(deep);\n    } catch (error) {\n      console.error(`Error cloning element:`, error);\n      return null;\n    }\n  }\n}\n","// HTML Templates for Confluence Editor\n// Contains all HTML template strings and styling utilities\n\nexport class HTMLTemplates {\n  /**\n   * Get the main editor HTML template\n   * @returns {string} HTML template string\n   */\n  static getEditorTemplate() {\n    return `\n      <div class=\"confluence-editor-container\">\n        <div class=\"confluence-editor-header\">\n          <h2 class=\"confluence-editor-title\">\n            📝 Edit Confluence Content\n          </h2>\n          <div class=\"confluence-editor-actions\">\n            <button class=\"editor-btn editor-btn-primary\" id=\"editor-save-btn\">\n              💾 Save\n            </button>\n            <button class=\"editor-btn editor-btn-secondary\" id=\"editor-close-btn\">\n              ✕ Close\n            </button>\n          </div>\n        </div>\n\n        <div class=\"confluence-editor-tabs\">\n          <button class=\"confluence-editor-tab active\" id=\"content-tab\">\n            📝 Edit Content\n          </button>\n          <button class=\"confluence-editor-tab\" id=\"mermaid-tab\">\n            📊 Edit Mermaid Code\n          </button>\n        </div>\n\n        <div class=\"confluence-editor-body\">\n          ${this.getContentTabTemplate()}\n          ${this.getMermaidTabTemplate()}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get content tab template\n   * @returns {string} Content tab HTML\n   */\n  static getContentTabTemplate() {\n    return `\n      <!-- Content Tab -->\n      <div class=\"tab-content active\" id=\"content-tab-content\">\n        <div class=\"content-editor-layout\">\n          <!-- Raw XHTML Editor (Left) -->\n          <div class=\"content-editor-pane\">\n            <div class=\"content-editor-header\">\n              📝 Raw XHTML Content\n            </div>\n            <div class=\"content-editor-body\">\n              <textarea class=\"raw-content-editor\" id=\"raw-content-editor\" placeholder=\"Raw XHTML content will appear here...\"></textarea>\n            </div>\n          </div>\n\n          <!-- Preview Pane (Right) -->\n          <div class=\"content-preview-pane\">\n            <div class=\"content-editor-header\">\n              👁️ Live Preview\n            </div>\n            <div class=\"content-editor-body\">\n              <div class=\"content-preview\" id=\"content-preview\">\n                <!-- Preview content will be rendered here -->\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get mermaid tab template\n   * @returns {string} Mermaid tab HTML\n   */\n  static getMermaidTabTemplate() {\n    return `\n      <!-- Mermaid Tab -->\n      <div class=\"tab-content\" id=\"mermaid-tab-content\">\n        <div class=\"mermaid-editor-layout\">\n          <!-- Mermaid Code Editor (Left) -->\n          <div class=\"mermaid-code-pane\">\n            <div class=\"mermaid-editor-header\">\n              📊 Mermaid Code\n              <select id=\"mermaid-selector\" class=\"mermaid-selector\">\n                <option value=\"\">Select diagram...</option>\n              </select>\n            </div>\n            <div class=\"mermaid-editor-body\">\n              <textarea class=\"mermaid-code-editor\" id=\"mermaid-code-editor\" placeholder=\"Select a Mermaid diagram to edit...\"></textarea>\n            </div>\n          </div>\n\n          <!-- Mermaid Preview (Center) -->\n          <div class=\"mermaid-preview-pane\">\n            <div class=\"mermaid-editor-header\">\n              <span class=\"preview-title\">📊 Diagram Preview</span>\n              ${this.getZoomControlsTemplate()}\n            </div>\n            <div class=\"mermaid-editor-body\">\n              <div class=\"mermaid-preview\" id=\"mermaid-preview\">\n                <div class=\"mermaid-placeholder\">\n                  Select a diagram to preview\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- AI Chat (Right) -->\n          <div class=\"mermaid-ai-pane\">\n            <div class=\"mermaid-editor-header\">\n              🤖 AI Assistant\n            </div>\n            <div class=\"mermaid-editor-body\">\n              ${this.getAIChatTemplate()}\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Get zoom controls template\n   * @returns {string} Zoom controls HTML\n   */\n  static getZoomControlsTemplate() {\n    return `\n      <div class=\"mermaid-zoom-controls\">\n        <button class=\"zoom-btn\" id=\"zoom-out\" title=\"Zoom Out\">−</button>\n        <div class=\"zoom-level\" id=\"zoom-level\">100%</div>\n        <button class=\"zoom-btn\" id=\"zoom-in\" title=\"Zoom In\">+</button>\n        <button class=\"zoom-btn\" id=\"zoom-reset\" title=\"Reset Zoom\">⌂</button>\n      </div>\n    `;\n  }\n\n  /**\n   * Get AI chat template - Enhanced version similar to extension\n   * @returns {string} AI chat HTML\n   */\n  static getAIChatTemplate() {\n    return `\n      <div class=\"ai-chat-container\">\n        <div class=\"ai-chat-header\">\n          <div class=\"ai-header-title\">\n            <span class=\"ai-icon\">🤖</span>\n            <span>AI Diagram Assistant</span>\n          </div>\n          <div class=\"ai-header-status\">Ready</div>\n        </div>\n        <div class=\"ai-chat-messages\" id=\"ai-chat-messages\">\n          <div class=\"ai-message\">\n            <div class=\"ai-avatar\">🤖</div>\n            <div class=\"ai-text\">\n              <strong>Hi! I'm your AI Diagram Assistant.</strong><br/><br/>\n              I can help you modify Mermaid diagrams with natural language commands:<br/>\n              • \"Add a new node called 'Database'\"<br/>\n              • \"Change the color of node A to blue\"<br/>\n              • \"Add an arrow from A to B\"<br/>\n              • \"Make this flowchart more detailed\"<br/><br/>\n              <em>Select a diagram above and describe what you want to change!</em>\n            </div>\n          </div>\n        </div>\n        <div class=\"ai-chat-input\">\n          <div class=\"ai-input-container\">\n            <textarea\n              id=\"ai-prompt-input\"\n              placeholder=\"Describe how you want to modify the diagram...\"\n              rows=\"2\"\n            ></textarea>\n            <button id=\"ai-send-btn\" class=\"ai-send-btn\" title=\"Send message (Enter)\">\n              <span class=\"send-icon\">📤</span>\n            </button>\n          </div>\n          <div class=\"ai-input-tips\">\n            💡 <strong>Tips:</strong> Be specific about changes you want. Press Enter to send.\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Apply inline styles to HTML content for preview\n   * @param {string} content - Raw HTML content\n   * @returns {string} Styled HTML content\n   */\n  static applyPreviewStyles(content) {\n    return content\n      .replace(\n        /<h1>/g,\n        \"<h1 style='color: #333; margin: 24px 0 16px 0; font-size: 1.8rem; border-bottom: 2px solid #e1e5e9; padding-bottom: 8px;'>\"\n      )\n      .replace(\n        /<h2>/g,\n        \"<h2 style='color: #555; margin: 20px 0 12px 0; font-size: 1.4rem;'>\"\n      )\n      .replace(\n        /<h3>/g,\n        \"<h3 style='color: #666; margin: 16px 0 8px 0; font-size: 1.2rem;'>\"\n      )\n      .replace(\n        /<p>/g,\n        \"<p style='margin: 12px 0; line-height: 1.6; color: #333;'>\"\n      )\n      .replace(/<ul>/g, \"<ul style='margin: 12px 0; padding-left: 24px;'>\")\n      .replace(/<li>/g, \"<li style='margin: 4px 0; line-height: 1.5;'>\")\n      .replace(\n        /<table>/g,\n        \"<table style='border-collapse: collapse; width: 100%; margin: 20px 0; box-shadow: 0 1px 3px rgba(0,0,0,0.1);'>\"\n      )\n      .replace(\n        /<th>/g,\n        \"<th style='border: 1px solid #ddd; padding: 12px; background: #f8f9fa; font-weight: 600; text-align: left;'>\"\n      )\n      .replace(\n        /<td>/g,\n        \"<td style='border: 1px solid #ddd; padding: 12px; vertical-align: top;'>\"\n      )\n      .replace(/<strong>/g, \"<strong style='color: #2c3e50;'>\")\n      .replace(\n        /<code>/g,\n        \"<code style='background: #f1f3f4; padding: 2px 4px; border-radius: 3px; font-family: monospace; font-size: 0.9em;'>\"\n      );\n  }\n\n  /**\n   * Create AI message HTML\n   * @param {string} type - Message type ('user' or 'ai')\n   * @param {string} text - Message text\n   * @returns {string} AI message HTML\n   */\n  static createAIMessage(type, text) {\n    const avatar = type === \"user\" ? \"👤\" : \"🤖\";\n    const bgColor = type === \"user\" ? \"#e5e7eb\" : \"#3b82f6\";\n\n    return `\n      <div class=\"ai-message\">\n        <div class=\"ai-avatar\" style=\"background: ${bgColor};\">${avatar}</div>\n        <div class=\"ai-text\">${text}</div>\n      </div>\n    `;\n  }\n\n  /**\n   * Create mermaid diagram container with styling\n   * @param {number} index - Diagram index\n   * @returns {HTMLElement} Mermaid container element\n   */\n  static createMermaidContainer(index) {\n    const mermaidDiv = document.createElement(\"div\");\n    mermaidDiv.className = \"mermaid-diagram\";\n    mermaidDiv.id = `preview-mermaid-${index}`;\n    mermaidDiv.style.cssText =\n      \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\n    return mermaidDiv;\n  }\n}\n","/**\n * Storage Manager - Handles saving and loading content changes\n * Supports both callback-based saving and localStorage backup\n */\nexport class StorageManager {\n  constructor() {\n    this.STORAGE_KEY = 'confluence_editor_backup';\n    this.AUTO_SAVE_INTERVAL = 30000; // 30 seconds\n    this.autoSaveTimer = null;\n  }\n\n  /**\n   * Save content with multiple strategies\n   * @param {Object} content - Content to save\n   * @param {Function} saveCallback - Optional callback for external save\n   * @param {Object} options - Save options\n   */\n  async saveContent(content, saveCallback = null, options = {}) {\n    const { \n      enableLocalStorage = true, \n      enableCallback = true,\n      showNotification = true \n    } = options;\n\n    const results = {\n      localStorage: false,\n      callback: false,\n      errors: []\n    };\n\n    // 1. Save to localStorage as backup\n    if (enableLocalStorage) {\n      try {\n        this.saveToLocalStorage(content);\n        results.localStorage = true;\n        console.log('✅ Content saved to localStorage');\n      } catch (error) {\n        console.error('❌ Failed to save to localStorage:', error);\n        results.errors.push(`localStorage: ${error.message}`);\n      }\n    }\n\n    // 2. Call external save callback\n    if (enableCallback && saveCallback) {\n      try {\n        await this.callSaveCallback(saveCallback, content);\n        results.callback = true;\n        console.log('✅ Content saved via callback');\n      } catch (error) {\n        console.error('❌ Failed to save via callback:', error);\n        results.errors.push(`callback: ${error.message}`);\n      }\n    }\n\n    // 3. Show notification\n    if (showNotification) {\n      this.showSaveNotification(results);\n    }\n\n    return results;\n  }\n\n  /**\n   * Save content to localStorage\n   * @param {Object} content - Content to save\n   */\n  saveToLocalStorage(content) {\n    const backupData = {\n      content: content,\n      timestamp: Date.now(),\n      version: '1.0'\n    };\n\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(backupData));\n  }\n\n  /**\n   * Load content from localStorage\n   * @returns {Object|null} Saved content or null\n   */\n  loadFromLocalStorage() {\n    try {\n      const saved = localStorage.getItem(this.STORAGE_KEY);\n      if (!saved) return null;\n\n      const backupData = JSON.parse(saved);\n      \n      // Check if backup is recent (within 24 hours)\n      const age = Date.now() - backupData.timestamp;\n      const maxAge = 24 * 60 * 60 * 1000; // 24 hours\n      \n      if (age > maxAge) {\n        console.log('🗑️ Removing old localStorage backup');\n        localStorage.removeItem(this.STORAGE_KEY);\n        return null;\n      }\n\n      console.log('📦 Loaded content from localStorage backup');\n      return backupData.content;\n    } catch (error) {\n      console.error('❌ Failed to load from localStorage:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Clear localStorage backup\n   */\n  clearLocalStorage() {\n    localStorage.removeItem(this.STORAGE_KEY);\n    console.log('🗑️ Cleared localStorage backup');\n  }\n\n  /**\n   * Call external save callback\n   * @param {Function} callback - Save callback function\n   * @param {Object} content - Content to save\n   */\n  async callSaveCallback(callback, content) {\n    if (typeof callback !== 'function') {\n      throw new Error('Save callback is not a function');\n    }\n\n    // Handle both sync and async callbacks\n    const result = callback(content);\n    if (result && typeof result.then === 'function') {\n      await result;\n    }\n  }\n\n  /**\n   * Show save notification\n   * @param {Object} results - Save results\n   */\n  showSaveNotification(results) {\n    const { localStorage, callback, errors } = results;\n    \n    if (localStorage && callback) {\n      this.showNotification('✅ Đã lưu thay đổi thành công', 'success');\n    } else if (localStorage || callback) {\n      const method = localStorage ? 'localStorage' : 'callback';\n      this.showNotification(`⚠️ Đã lưu qua ${method} (một phần)`, 'warning');\n    } else {\n      this.showNotification('❌ Không thể lưu thay đổi', 'error');\n    }\n\n    if (errors.length > 0) {\n      console.warn('Save errors:', errors);\n    }\n  }\n\n  /**\n   * Show notification to user\n   * @param {string} message - Notification message\n   * @param {string} type - Notification type (success, warning, error)\n   */\n  showNotification(message, type = 'info') {\n    // Create notification element\n    const notification = document.createElement('div');\n    notification.className = `confluence-editor-notification ${type}`;\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 12px 20px;\n      border-radius: 6px;\n      color: white;\n      font-family: Arial, sans-serif;\n      font-size: 14px;\n      z-index: 10001;\n      box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n      transition: all 0.3s ease;\n      max-width: 300px;\n    `;\n\n    // Set background color based on type\n    const colors = {\n      success: '#28a745',\n      warning: '#ffc107',\n      error: '#dc3545',\n      info: '#17a2b8'\n    };\n    notification.style.background = colors[type] || colors.info;\n\n    notification.textContent = message;\n    document.body.appendChild(notification);\n\n    // Auto remove after 3 seconds\n    setTimeout(() => {\n      if (notification.parentNode) {\n        notification.style.opacity = '0';\n        notification.style.transform = 'translateX(100%)';\n        setTimeout(() => {\n          notification.remove();\n        }, 300);\n      }\n    }, 3000);\n  }\n\n  /**\n   * Start auto-save timer\n   * @param {Function} saveFunction - Function to call for auto-save\n   */\n  startAutoSave(saveFunction) {\n    this.stopAutoSave();\n    \n    this.autoSaveTimer = setInterval(() => {\n      try {\n        saveFunction();\n        console.log('🔄 Auto-save completed');\n      } catch (error) {\n        console.error('❌ Auto-save failed:', error);\n      }\n    }, this.AUTO_SAVE_INTERVAL);\n\n    console.log('⏰ Auto-save started (every 30 seconds)');\n  }\n\n  /**\n   * Stop auto-save timer\n   */\n  stopAutoSave() {\n    if (this.autoSaveTimer) {\n      clearInterval(this.autoSaveTimer);\n      this.autoSaveTimer = null;\n      console.log('⏹️ Auto-save stopped');\n    }\n  }\n\n  /**\n   * Check if there are unsaved changes in localStorage\n   * @param {Object} currentContent - Current content to compare\n   * @returns {boolean} True if there are unsaved changes\n   */\n  hasUnsavedChanges(currentContent) {\n    const saved = this.loadFromLocalStorage();\n    if (!saved) return false;\n\n    try {\n      const currentStr = JSON.stringify(currentContent);\n      const savedStr = JSON.stringify(saved);\n      return currentStr !== savedStr;\n    } catch (error) {\n      console.error('❌ Error comparing content:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get backup info\n   * @returns {Object|null} Backup information\n   */\n  getBackupInfo() {\n    try {\n      const saved = localStorage.getItem(this.STORAGE_KEY);\n      if (!saved) return null;\n\n      const backupData = JSON.parse(saved);\n      return {\n        timestamp: backupData.timestamp,\n        age: Date.now() - backupData.timestamp,\n        version: backupData.version\n      };\n    } catch (error) {\n      return null;\n    }\n  }\n}\n","// Confluence Content Editor with Rich Text Editing\r\n// Handles editing interface when Confluence content is returned from API\r\n\r\nimport { API_URLS } from \"../shared/constants.js\";\r\nimport { StorageManager as ChromeStorageManager } from \"../shared/storage.js\";\r\nimport { ContentSynchronizer } from \"./utils/contentSynchronizer.js\";\r\nimport { DOMHelpers } from \"./utils/domHelpers.js\";\r\nimport { HTMLTemplates } from \"./utils/htmlTemplates.js\";\r\nimport { MermaidRenderer } from \"./utils/mermaidRenderer.js\";\r\nimport { StorageManager } from \"./utils/storageManager.js\";\r\nimport { XMLFormatter } from \"./utils/xmlFormatter.js\";\r\n\r\nclass ConfluenceEditor {\r\n  constructor() {\r\n    this.isEditorOpen = false;\r\n    this.currentContent = null;\r\n    this.originalContent = null;\r\n    this.onSave = null;\r\n    this.mermaidDiagrams = [];\r\n    this.mermaidDiagramsMap = new Map();\r\n    this.currentSelectedDiagram = null;\r\n    this.currentSelectedDiagramId = null;\r\n    this.editorContainer = null;\r\n    this.textEditor = null; // CodeMirror instance\r\n    this.previewContainer = null;\r\n    this.isPreviewMode = false;\r\n    this.autoSaveTimer = null;\r\n    this.isModified = false;\r\n\r\n    // Zoom controls\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n\r\n    // ✅ Anti-flicker properties\r\n    this.isZooming = false;\r\n    this.zoomStep = 0.25;\r\n    this.minZoom = 0.25;\r\n    this.maxZoom = 3.0;\r\n\r\n    // ✅ Debouncing for preview updates\r\n    this.previewUpdateTimeout = null;\r\n    this.isUpdatingPreview = false; // Prevent concurrent updates\r\n\r\n    // Initialize utility classes\r\n    this.storageManager = new StorageManager();\r\n    this.contentSynchronizer = new ContentSynchronizer();\r\n  }\r\n\r\n  openEditor(content, options = {}) {\r\n    if (this.isEditorOpen) {\r\n      this.closeEditor();\r\n    }\r\n\r\n    console.log(\"📝 Opening Confluence Editor with content:\", content);\r\n\r\n    // Auto-restore from localStorage backup if available (no confirm)\r\n    const backup = this.storageManager.loadFromLocalStorage();\r\n    if (backup && options.allowBackupRestore !== false) {\r\n      const backupInfo = this.storageManager.getBackupInfo();\r\n      const ageMinutes = Math.floor(backupInfo.age / (1000 * 60));\r\n\r\n      // Auto-restore if backup is recent (less than 30 minutes)\r\n      if (ageMinutes < 30) {\r\n        this.currentContent = backup;\r\n        console.log(\r\n          `📦 Auto-restored content from backup (${ageMinutes} minutes old)`\r\n        );\r\n      } else {\r\n        this.currentContent = content;\r\n        this.storageManager.clearLocalStorage();\r\n        console.log(\r\n          `📦 Backup too old (${ageMinutes} minutes), using original content`\r\n        );\r\n      }\r\n    } else {\r\n      this.currentContent = content;\r\n    }\r\n\r\n    this.originalContent = JSON.parse(JSON.stringify(content)); // Deep copy of original\r\n    this.isEditorOpen = true;\r\n\r\n    // Extract Mermaid diagrams from content\r\n    this.extractMermaidDiagrams();\r\n\r\n    // Create editor UI\r\n    this.createEditorUI(options);\r\n\r\n    // Initialize content tab (default)\r\n    this.initializeContentTab();\r\n  }\r\n\r\n  createEditorUI() {\r\n    const overlay = DOMHelpers.createElement(\"div\", {\r\n      className: \"confluence-editor-overlay\",\r\n    });\r\n\r\n    DOMHelpers.setContent(overlay, HTMLTemplates.getEditorTemplate(), true);\r\n    document.body.appendChild(overlay);\r\n    this.editorContainer = overlay;\r\n\r\n    // Bind events\r\n    this.bindEditorEvents();\r\n  }\r\n\r\n  bindEditorEvents() {\r\n    if (!this.editorContainer) return;\r\n\r\n    // Close button\r\n    const closeBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-close-btn\"\r\n    );\r\n    console.log(\"🔍 Close button found:\", !!closeBtn);\r\n    if (closeBtn) {\r\n      DOMHelpers.addEventListener(closeBtn, \"click\", () => {\r\n        console.log(\"🔄 Close button clicked\");\r\n        this.closeEditor();\r\n      });\r\n    } else {\r\n      console.error(\"❌ Close button not found!\");\r\n    }\r\n\r\n    // Save button\r\n    const saveBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-save-btn\"\r\n    );\r\n    console.log(\"🔍 Save button found:\", !!saveBtn);\r\n    if (saveBtn) {\r\n      DOMHelpers.addEventListener(saveBtn, \"click\", () => {\r\n        console.log(\"💾 Save button clicked\");\r\n        this.saveChanges();\r\n      });\r\n    } else {\r\n      console.error(\"❌ Save button not found!\");\r\n    }\r\n\r\n    // Tab buttons\r\n    const contentTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#content-tab\"\r\n    );\r\n    const mermaidTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-tab\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(contentTab, \"click\", () =>\r\n      this.switchTab(\"content\")\r\n    );\r\n    DOMHelpers.addEventListener(mermaidTab, \"click\", () =>\r\n      this.switchTab(\"mermaid\")\r\n    );\r\n\r\n    // Content tab elements\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n    DOMHelpers.addEventListener(rawEditor, \"input\", () =>\r\n      this.updateContentPreview()\r\n    );\r\n\r\n    // Mermaid tab elements\r\n    const mermaidSelector = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-selector\"\r\n    );\r\n    const mermaidCodeEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const aiSendBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-send-btn\"\r\n    );\r\n    const aiPromptInput = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-prompt-input\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(mermaidSelector, \"change\", (e) =>\r\n      this.selectMermaidDiagram(e.target.value)\r\n    );\r\n\r\n    DOMHelpers.addEventListener(mermaidCodeEditor, \"input\", () => {\r\n      this.debouncedUpdateMermaidPreview();\r\n    });\r\n\r\n    DOMHelpers.addEventListener(aiSendBtn, \"click\", () => this.sendAIPrompt());\r\n\r\n    DOMHelpers.addEventListener(aiPromptInput, \"keypress\", (e) => {\r\n      if (e.key === \"Enter\" && !e.shiftKey) {\r\n        e.preventDefault();\r\n        this.sendAIPrompt();\r\n      }\r\n    });\r\n\r\n    // Zoom controls\r\n    const zoomInBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-in\"\r\n    );\r\n    const zoomOutBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-out\"\r\n    );\r\n    const zoomResetBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-reset\"\r\n    );\r\n\r\n    DOMHelpers.addEventListener(zoomInBtn, \"click\", () => this.zoomIn());\r\n    DOMHelpers.addEventListener(zoomOutBtn, \"click\", () => this.zoomOut());\r\n    DOMHelpers.addEventListener(zoomResetBtn, \"click\", () => this.resetZoom());\r\n\r\n    // Add wheel zoom to mermaid preview\r\n    const mermaidPreview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-preview\"\r\n    );\r\n    DOMHelpers.addEventListener(mermaidPreview, \"wheel\", (e) =>\r\n      this.handleWheel(e)\r\n    );\r\n\r\n    // Close on overlay click\r\n    DOMHelpers.addEventListener(this.editorContainer, \"click\", (e) => {\r\n      if (e.target === this.editorContainer) {\r\n        this.closeEditor();\r\n      }\r\n    });\r\n\r\n    // ESC key to close\r\n    const handleEsc = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        this.closeEditor();\r\n        DOMHelpers.removeEventListener(document, \"keydown\", handleEsc);\r\n      }\r\n    };\r\n    DOMHelpers.addEventListener(document, \"keydown\", handleEsc);\r\n  }\r\n\r\n  // Switch between tabs\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    const tabs = DOMHelpers.querySelectorAll(\r\n      this.editorContainer,\r\n      \".confluence-editor-tab\"\r\n    );\r\n    tabs.forEach((tab) => DOMHelpers.removeClass(tab, \"active\"));\r\n\r\n    const activeTab = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      `#${tabName}-tab`\r\n    );\r\n    DOMHelpers.addClass(activeTab, \"active\");\r\n\r\n    // Update tab content\r\n    const tabContents = DOMHelpers.querySelectorAll(\r\n      this.editorContainer,\r\n      \".tab-content\"\r\n    );\r\n    tabContents.forEach((content) => DOMHelpers.removeClass(content, \"active\"));\r\n\r\n    const activeContent = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      `#${tabName}-tab-content`\r\n    );\r\n    DOMHelpers.addClass(activeContent, \"active\");\r\n\r\n    // Initialize tab-specific content\r\n    if (tabName === \"content\") {\r\n      this.initializeContentTab();\r\n    } else if (tabName === \"mermaid\") {\r\n      this.initializeMermaidTab();\r\n    }\r\n\r\n    console.log(`Switched to ${tabName} tab`);\r\n  }\r\n\r\n  // Initialize content tab\r\n  initializeContentTab() {\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n\r\n    console.log(\"🔍 Initializing content tab...\");\r\n    console.log(\"Raw editor found:\", !!rawEditor);\r\n    console.log(\"Current content exists:\", !!this.currentContent);\r\n\r\n    if (rawEditor && this.currentContent) {\r\n      // Get raw content and clean up ```xml markers\r\n      let rawContent =\r\n        this.currentContent.full_storage_format ||\r\n        this.currentContent.content ||\r\n        \"\";\r\n\r\n      console.log(\"Raw content length:\", rawContent.length);\r\n\r\n      // Clean XML markers and format for better readability\r\n      rawContent = XMLFormatter.cleanXMLMarkers(rawContent);\r\n      rawContent = XMLFormatter.formatXHTML(rawContent);\r\n\r\n      console.log(\"Formatted content length:\", rawContent.length);\r\n\r\n      // Set content using direct assignment and DOMHelpers\r\n      rawEditor.value = rawContent;\r\n      DOMHelpers.setContent(rawEditor, rawContent);\r\n\r\n      console.log(\"✅ Content set to raw editor\");\r\n      this.updateContentPreview();\r\n    } else {\r\n      console.warn(\r\n        \"⚠️ Cannot initialize content tab - missing rawEditor or currentContent\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // Initialize mermaid tab\r\n  initializeMermaidTab() {\r\n    console.log(\"🔍 Initializing mermaid tab...\");\r\n\r\n    // Always extract diagrams to ensure sync with current content\r\n    console.log(\"📊 Extracting diagrams from current content...\");\r\n    this.extractMermaidDiagrams();\r\n\r\n    console.log(\"Diagrams available:\", this.mermaidDiagrams.length);\r\n    console.log(\"DiagramsMap size:\", this.mermaidDiagramsMap.size);\r\n    this.populateMermaidSelector();\r\n  }\r\n\r\n  // Update content preview\r\n  updateContentPreview() {\r\n    const rawEditor = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#raw-content-editor\"\r\n    );\r\n    const preview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#content-preview\"\r\n    );\r\n\r\n    if (!rawEditor || !preview) return;\r\n\r\n    const content = DOMHelpers.getContent(rawEditor);\r\n\r\n    // Update current content\r\n    if (this.currentContent) {\r\n      this.currentContent.full_storage_format = content;\r\n      // Mark as modified if content changed\r\n      if (\r\n        this.originalContent &&\r\n        content !== this.originalContent.full_storage_format\r\n      ) {\r\n        this.isModified = true;\r\n        this.updateSaveButtonState();\r\n      }\r\n    }\r\n\r\n    // Render preview\r\n    this.renderContentPreview(content, preview);\r\n  }\r\n\r\n  // Render content preview\r\n  renderContentPreview(content, previewElement) {\r\n    // Apply inline styles for preview\r\n    const processedContent = HTMLTemplates.applyPreviewStyles(content);\r\n\r\n    // Set the processed content to preview element\r\n    DOMHelpers.setContent(previewElement, processedContent, true);\r\n\r\n    // Render Mermaid diagrams\r\n    this.renderMermaidDiagramsInPreview();\r\n  }\r\n\r\n  // Render Mermaid diagrams in preview\r\n  renderMermaidDiagramsInPreview() {\r\n    // Use the new comprehensive Mermaid initialization\r\n    setTimeout(() => {\r\n      this.initializeMermaidInPreview();\r\n    }, 100);\r\n  }\r\n\r\n  // Initialize Mermaid diagrams in preview\r\n  async initializeMermaidInPreview() {\r\n    try {\r\n      // Initialize Mermaid\r\n      await MermaidRenderer.initializeMermaid();\r\n\r\n      console.log(\"🎨 Initializing Mermaid diagrams in preview...\");\r\n\r\n      // Find all mermaid code blocks in the preview\r\n      const previewDiv = DOMHelpers.querySelector(\r\n        this.editorContainer,\r\n        \"#content-preview\"\r\n      );\r\n      if (!previewDiv) return;\r\n\r\n      // Look for Confluence Mermaid structured macros\r\n      const mermaidElements = DOMHelpers.querySelectorAll(\r\n        previewDiv,\r\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\r\n      );\r\n\r\n      mermaidElements.forEach(async (element, index) => {\r\n        // Get the code parameter from Confluence structured macro\r\n        const codeParam = DOMHelpers.querySelector(\r\n          element,\r\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\r\n        );\r\n        if (!codeParam) {\r\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\r\n          return;\r\n        }\r\n\r\n        const mermaidCode = DOMHelpers.getContent(codeParam).trim();\r\n        console.log(\r\n          \"🔍 Found Confluence Mermaid diagram:\",\r\n          mermaidCode.substring(0, 50) + \"...\"\r\n        );\r\n\r\n        // Always process Confluence mermaid macros\r\n        if (mermaidCode) {\r\n          // Create a new div for the mermaid diagram\r\n          const mermaidDiv = HTMLTemplates.createMermaidContainer(index);\r\n\r\n          // Validate parent node before replacing\r\n          if (!element.parentNode) {\r\n            console.error(\r\n              \"❌ Cannot replace Mermaid element in preview: no parent node\"\r\n            );\r\n            console.error(\r\n              \"❌ Mermaid code:\",\r\n              mermaidCode.substring(0, 100) + \"...\"\r\n            );\r\n            return;\r\n          }\r\n\r\n          // Replace the original element\r\n          try {\r\n            element.parentNode.replaceChild(mermaidDiv, element);\r\n          } catch (replaceError) {\r\n            console.error(\r\n              \"❌ Failed to replace Mermaid element in preview:\",\r\n              replaceError\r\n            );\r\n            console.error(\r\n              \"❌ Mermaid code:\",\r\n              mermaidCode.substring(0, 100) + \"...\"\r\n            );\r\n            return;\r\n          }\r\n\r\n          // Render the diagram\r\n          const diagramId = `preview-mermaid-svg-${index}`;\r\n          await MermaidRenderer.renderDiagram(\r\n            diagramId,\r\n            mermaidCode,\r\n            mermaidDiv\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to initialize Mermaid in preview:\", error);\r\n    }\r\n  }\r\n\r\n  // Populate mermaid selector using Map\r\n  populateMermaidSelector() {\r\n    const selector = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-selector\"\r\n    );\r\n    if (!selector) {\r\n      console.error(\"❌ Mermaid selector not found\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"🔄 Populating Mermaid selector...\");\r\n    console.log(`📊 DiagramsMap size: ${this.mermaidDiagramsMap?.size || 0}`);\r\n    console.log(`📊 Current options count: ${selector.options.length}`);\r\n\r\n    // Clear ALL existing options completely\r\n    selector.innerHTML = \"\";\r\n\r\n    // Add default option\r\n    const defaultOption = document.createElement(\"option\");\r\n    defaultOption.value = \"\";\r\n    defaultOption.textContent = \"📊 Select diagram to edit...\";\r\n    selector.appendChild(defaultOption);\r\n\r\n    console.log(`📊 After clear, options count: ${selector.options.length}`);\r\n\r\n    // Only add diagrams that actually exist in current content\r\n    if (this.mermaidDiagramsMap && this.mermaidDiagramsMap.size > 0) {\r\n      let addedCount = 0;\r\n\r\n      // Create a Set to track added diagram IDs to prevent duplicates\r\n      const addedDiagrams = new Set();\r\n\r\n      this.mermaidDiagramsMap.forEach((diagramData, diagramId) => {\r\n        // Only add if not already added and has valid content\r\n        if (\r\n          !addedDiagrams.has(diagramId) &&\r\n          diagramData.content &&\r\n          diagramData.content.trim()\r\n        ) {\r\n          const option = document.createElement(\"option\");\r\n          option.value = diagramId;\r\n          option.textContent = `${diagramData.title} (${diagramData.type})`;\r\n          selector.appendChild(option);\r\n          addedDiagrams.add(diagramId);\r\n          addedCount++;\r\n          console.log(\r\n            `📊 Added option ${addedCount}: ${diagramData.title} (${diagramData.type})`\r\n          );\r\n        }\r\n      });\r\n\r\n      console.log(\r\n        `✅ Added ${addedCount} unique diagrams to selector (total options: ${selector.options.length})`\r\n      );\r\n    } else {\r\n      console.warn(\"⚠️ No Mermaid diagrams found to populate selector\");\r\n    }\r\n\r\n    // Remove existing event listener to prevent duplicates\r\n    if (this.handleMermaidSelectorChange) {\r\n      selector.removeEventListener(\"change\", this.handleMermaidSelectorChange);\r\n    }\r\n\r\n    // Add fresh event listener\r\n    this.handleMermaidSelectorChange = (e) => {\r\n      const selectedId = e.target.value;\r\n      console.log(`🎯 Selected diagram: ${selectedId}`);\r\n      this.selectMermaidDiagram(selectedId);\r\n    };\r\n    selector.addEventListener(\"change\", this.handleMermaidSelectorChange);\r\n\r\n    console.log(\r\n      `✅ Populated ${this.mermaidDiagramsMap?.size || 0} diagrams in selector`\r\n    );\r\n  }\r\n\r\n  // Select mermaid diagram\r\n  selectMermaidDiagram(diagramId) {\r\n    if (!diagramId) {\r\n      this.clearMermaidEditor();\r\n      return;\r\n    }\r\n\r\n    // Get diagram from Map\r\n    const diagramData = this.mermaidDiagramsMap.get(diagramId);\r\n    if (!diagramData) {\r\n      console.error(`❌ Diagram not found in map: ${diagramId}`);\r\n      return;\r\n    }\r\n\r\n    // Find full diagram record from array\r\n    const diagram = this.mermaidDiagrams.find((d) => d.id === diagramId);\r\n    if (!diagram) {\r\n      console.error(`❌ Diagram not found in array: ${diagramId}`);\r\n      return;\r\n    }\r\n\r\n    // Update code editor\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    if (codeEditor) {\r\n      codeEditor.value = diagramData.content;\r\n      this.currentSelectedDiagram = diagram;\r\n      this.currentSelectedDiagramId = diagramId;\r\n      this.updateMermaidPreview().catch((error) => {\r\n        console.error(\"❌ Error updating Mermaid preview:\", error);\r\n      });\r\n\r\n      // Add event listener for code changes\r\n      codeEditor.removeEventListener(\"input\", this.handleMermaidCodeChange);\r\n      this.handleMermaidCodeChange = () => {\r\n        if (this.currentSelectedDiagram && this.currentSelectedDiagramId) {\r\n          const newCode = codeEditor.value;\r\n          console.log(\"new code\", newCode);\r\n          // Update diagram code in memory (both array and map)\r\n          this.currentSelectedDiagram.code = newCode;\r\n          this.mermaidDiagramsMap.get(this.currentSelectedDiagramId).content =\r\n            newCode;\r\n\r\n          // Track the change for synchronization\r\n          this.contentSynchronizer.trackDiagramChange(\r\n            this.currentSelectedDiagramId,\r\n            newCode\r\n          );\r\n\r\n          // Update preview with debouncing\r\n          this.debouncedUpdateMermaidPreview();\r\n\r\n          // Mark as modified\r\n          this.isModified = true;\r\n          this.updateSaveButtonState();\r\n\r\n          console.log(`📝 Updated diagram ${this.currentSelectedDiagramId}`);\r\n        }\r\n      };\r\n      codeEditor.addEventListener(\"input\", this.handleMermaidCodeChange);\r\n    }\r\n\r\n    console.log(`✅ Selected diagram: ${diagramId} (${diagramData.type})`);\r\n  }\r\n\r\n  // Clear mermaid editor\r\n  clearMermaidEditor() {\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n\r\n    if (codeEditor) codeEditor.value = \"\";\r\n    if (preview) {\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Select a diagram to preview</div>';\r\n    }\r\n\r\n    this.currentSelectedDiagram = null;\r\n  }\r\n\r\n  // ✅ Simple debounced update - no anti-flicker interference\r\n  debouncedUpdateMermaidPreview() {\r\n    // Only skip if actively zooming (not if just updated recently)\r\n    if (this.isZooming) {\r\n      return;\r\n    }\r\n\r\n    // Clear existing timeout\r\n    if (this.previewUpdateTimeout) {\r\n      clearTimeout(this.previewUpdateTimeout);\r\n    }\r\n\r\n    // Set new timeout\r\n    this.previewUpdateTimeout = setTimeout(() => {\r\n      if (!this.isZooming && !this.isUpdatingPreview) {\r\n        this.updateMermaidPreview().catch((error) => {\r\n          console.error(\"❌ Error updating Mermaid preview:\", error);\r\n        });\r\n      }\r\n    }, 300); // Increased debounce for stability\r\n  }\r\n\r\n  // Update mermaid preview\r\n  async updateMermaidPreview() {\r\n    // ✅ Skip update if currently zooming to prevent flicker\r\n    if (this.isZooming) {\r\n      return;\r\n    }\r\n\r\n    // ✅ Skip if already updating to prevent concurrent updates\r\n    if (this.isUpdatingPreview) {\r\n      return;\r\n    }\r\n\r\n    // ✅ Set updating flag\r\n    this.isUpdatingPreview = true;\r\n\r\n    const codeEditor = this.editorContainer.querySelector(\r\n      \"#mermaid-code-editor\"\r\n    );\r\n    const preview = this.editorContainer.querySelector(\"#mermaid-preview\");\r\n\r\n    if (!codeEditor || !preview) return;\r\n\r\n    const code = codeEditor.value.trim();\r\n    if (!code) {\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Enter Mermaid code to preview</div>';\r\n      return;\r\n    }\r\n\r\n    // ✅ Store current zoom level\r\n    const currentZoom = this.currentZoom;\r\n\r\n    // Update current diagram\r\n    if (this.currentSelectedDiagram) {\r\n      this.currentSelectedDiagram.code = code;\r\n    }\r\n\r\n    // Render mermaid using MermaidRenderer to avoid SVG error appending\r\n    try {\r\n      // Clear preview first\r\n      preview.innerHTML =\r\n        '<div class=\"mermaid-placeholder\">Rendering diagram...</div>';\r\n\r\n      // Create unique diagram ID\r\n      const diagramId = `mermaid-editor-preview-${Date.now()}`;\r\n\r\n      // Use MermaidRenderer to safely render the diagram\r\n      await MermaidRenderer.renderDiagram(diagramId, code, preview);\r\n\r\n      // ✅ Reapply zoom after rendering to maintain zoom level\r\n      setTimeout(() => {\r\n        if (currentZoom !== 1) {\r\n          this.currentZoom = currentZoom;\r\n        }\r\n        this.updateZoom();\r\n      }, 100);\r\n    } catch (error) {\r\n      console.error(\"❌ Error rendering Mermaid in editor preview:\", error);\r\n      preview.innerHTML = `\r\n        <div class=\"mermaid-placeholder\" style=\"color: #dc3545;\">\r\n          ❌ Error rendering diagram:<br>\r\n          <small>${error.message}</small>\r\n        </div>\r\n      `;\r\n    } finally {\r\n      // ✅ Always reset updating flag\r\n      this.isUpdatingPreview = false;\r\n    }\r\n  }\r\n\r\n  // Send AI prompt - EXACT copy from extension logic\r\n  async sendAIPrompt() {\r\n    const promptInput = this.editorContainer.querySelector(\"#ai-prompt-input\");\r\n    const messagesContainer =\r\n      this.editorContainer.querySelector(\"#ai-chat-messages\");\r\n\r\n    if (!promptInput || !messagesContainer) return;\r\n\r\n    const prompt = promptInput.value.trim();\r\n    if (!prompt) return;\r\n\r\n    // Check if a diagram is selected and validate it\r\n    if (!this.currentSelectedDiagram || !this.currentSelectedDiagramId) {\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        \"⚠️ Please select a Mermaid diagram first to edit it.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Double-check the selected diagram exists in the map\r\n    const diagramInMap = this.mermaidDiagramsMap.get(\r\n      this.currentSelectedDiagramId\r\n    );\r\n    if (!diagramInMap) {\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        \"❌ Selected diagram not found. Please select a valid diagram.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    console.log(`🎯 AI editing diagram: ${this.currentSelectedDiagramId}`, {\r\n      title: diagramInMap.title,\r\n      type: diagramInMap.type,\r\n      currentCode: this.currentSelectedDiagram.code?.substring(0, 50) + \"...\",\r\n    });\r\n\r\n    // Add user message\r\n    this.addAIMessage(\"user\", prompt);\r\n\r\n    // Clear input and show loading\r\n    promptInput.value = \"\";\r\n    this.addAIMessage(\"ai\", \"🤖 Processing your request...\");\r\n\r\n    try {\r\n      // Get current settings for AI model\r\n      const settings = await ChromeStorageManager.getSettings();\r\n\r\n      // Prepare request payload similar to extension\r\n      const requestBody = {\r\n        content: this.currentContent?.full_storage_format || \"\",\r\n        diagram_code: this.currentSelectedDiagram.code,\r\n        user_request: prompt,\r\n        selectedModel: settings.selectedModel || \"sonar-pro\",\r\n      };\r\n\r\n      console.log(\"🤖 Sending AI request:\", requestBody);\r\n\r\n      // Call AI API (same endpoint as extension)\r\n      const response = await fetch(API_URLS.EDIT_DIAGRAM, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          errorData.error || `HTTP ${response.status}: ${response.statusText}`\r\n        );\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success && data.edited_diagram) {\r\n        // Clean and validate the AI response\r\n        const cleanedDiagram = this.cleanAIResponse(data.edited_diagram);\r\n\r\n        if (cleanedDiagram && cleanedDiagram.trim()) {\r\n          // Validate we're still editing the same diagram\r\n          const currentDiagramInMap = this.mermaidDiagramsMap.get(\r\n            this.currentSelectedDiagramId\r\n          );\r\n          if (!currentDiagramInMap) {\r\n            throw new Error(\"Selected diagram no longer exists\");\r\n          }\r\n\r\n          console.log(`🔄 Updating diagram ${this.currentSelectedDiagramId}:`, {\r\n            oldCode: this.currentSelectedDiagram.code?.substring(0, 30) + \"...\",\r\n            newCode: cleanedDiagram.substring(0, 30) + \"...\",\r\n          });\r\n\r\n          // Update ONLY the selected diagram\r\n          this.currentSelectedDiagram.code = cleanedDiagram;\r\n          currentDiagramInMap.content = cleanedDiagram;\r\n\r\n          // Update the code editor to reflect the change\r\n          const codeEditor = this.editorContainer.querySelector(\r\n            \"#mermaid-code-editor\"\r\n          );\r\n          if (codeEditor) {\r\n            codeEditor.value = cleanedDiagram;\r\n            console.log(\"✅ Code editor updated with AI response\");\r\n          }\r\n\r\n          // Update preview for this specific diagram\r\n          this.updateMermaidPreview().catch((error) => {\r\n            console.error(\"❌ Error updating Mermaid preview:\", error);\r\n          });\r\n\r\n          // Mark content as modified for synchronization\r\n          console.log(\r\n            `🔄 Diagram ${this.currentSelectedDiagramId} updated by AI`\r\n          );\r\n\r\n          // Update the content will be handled by syncAllContent when saving\r\n\r\n          // Remove loading message and add success message\r\n          this.removeLastAIMessage();\r\n          this.addAIMessage(\"ai\", `✅ Updated diagram: ${prompt}`);\r\n\r\n          // Show success notification\r\n          if (\r\n            typeof window !== \"undefined\" &&\r\n            window[\"KToolNotificationUtils\"]\r\n          ) {\r\n            window[\"KToolNotificationUtils\"].success(\r\n              \"AI Assistant\",\r\n              \"Diagram updated successfully!\"\r\n            );\r\n          }\r\n        } else {\r\n          throw new Error(\"Invalid Mermaid syntax in AI response\");\r\n        }\r\n      } else {\r\n        throw new Error(\"Invalid response format or missing edited_diagram\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ AI API Error:\", error);\r\n\r\n      // Remove loading message and add error message\r\n      this.removeLastAIMessage();\r\n      this.addAIMessage(\r\n        \"ai\",\r\n        `❌ Error: ${error.message}\\n\\n🔄 Please try again or adjust your request.`\r\n      );\r\n\r\n      // Show error notification\r\n      if (typeof window !== \"undefined\" && window[\"KToolNotificationUtils\"]) {\r\n        window[\"KToolNotificationUtils\"].error(\r\n          \"AI Assistant\",\r\n          `Error: ${error.message}`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // Clean AI response - enhanced validation\r\n  cleanAIResponse(response) {\r\n    if (!response) return \"\";\r\n\r\n    console.log(\"🧹 Cleaning AI response:\", response.substring(0, 100) + \"...\");\r\n\r\n    // Remove markdown code blocks and common AI response patterns\r\n    let cleaned = response\r\n      .replace(/```mermaid\\n?/gi, \"\")\r\n      .replace(/```\\n?/g, \"\")\r\n      .replace(/^Here's the updated.*?:\\s*/i, \"\")\r\n      .replace(/^Updated diagram.*?:\\s*/i, \"\")\r\n      .replace(/^The modified.*?:\\s*/i, \"\");\r\n\r\n    // Remove extra whitespace and newlines at start/end\r\n    cleaned = cleaned.trim();\r\n\r\n    // Split by lines and remove empty lines at start/end\r\n    const lines = cleaned.split(\"\\n\");\r\n    const nonEmptyStart = lines.findIndex((line) => line.trim() !== \"\");\r\n    const nonEmptyEnd = lines\r\n      .slice()\r\n      .reverse()\r\n      .findIndex((line) => line.trim() !== \"\");\r\n\r\n    if (nonEmptyStart !== -1 && nonEmptyEnd !== -1) {\r\n      cleaned = lines\r\n        .slice(nonEmptyStart, lines.length - nonEmptyEnd)\r\n        .join(\"\\n\");\r\n    }\r\n\r\n    // Basic validation - should start with a mermaid diagram type\r\n    const validStarts = [\r\n      \"graph\",\r\n      \"flowchart\",\r\n      \"sequenceDiagram\",\r\n      \"classDiagram\",\r\n      \"stateDiagram\",\r\n      \"erDiagram\",\r\n      \"journey\",\r\n      \"gantt\",\r\n      \"pie\",\r\n      \"gitgraph\",\r\n      \"mindmap\",\r\n      \"timeline\",\r\n    ];\r\n\r\n    const firstLine = cleaned.split(\"\\n\")[0].trim().toLowerCase();\r\n    const hasValidStart = validStarts.some((start) =>\r\n      firstLine.startsWith(start.toLowerCase())\r\n    );\r\n\r\n    if (!hasValidStart) {\r\n      console.warn(\r\n        \"⚠️ AI response may not be valid Mermaid syntax:\",\r\n        firstLine\r\n      );\r\n      console.warn(\"Expected to start with one of:\", validStarts.join(\", \"));\r\n    }\r\n\r\n    console.log(\"✅ Cleaned AI response:\", cleaned.substring(0, 100) + \"...\");\r\n    return cleaned;\r\n  }\r\n\r\n  // Remove last AI message (for loading states)\r\n  removeLastAIMessage() {\r\n    const messagesContainer =\r\n      this.editorContainer.querySelector(\"#ai-chat-messages\");\r\n    if (!messagesContainer) return;\r\n\r\n    const messages = messagesContainer.querySelectorAll(\".ai-message\");\r\n    if (messages.length > 0) {\r\n      const lastMessage = messages[messages.length - 1];\r\n      if (\r\n        lastMessage.querySelector(\".ai-text\").textContent.includes(\"Processing\")\r\n      ) {\r\n        lastMessage.remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Add AI message\r\n  addAIMessage(type, text) {\r\n    const messagesContainer = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#ai-chat-messages\"\r\n    );\r\n    if (!messagesContainer) return;\r\n\r\n    const messageHTML = HTMLTemplates.createAIMessage(type, text);\r\n    DOMHelpers.setContent(\r\n      messagesContainer,\r\n      DOMHelpers.getContent(messagesContainer) + messageHTML,\r\n      true\r\n    );\r\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n  }\r\n\r\n  extractMermaidDiagrams() {\r\n    if (!this.currentContent?.full_storage_format) {\r\n      this.mermaidDiagrams = [];\r\n      this.mermaidDiagramsMap = new Map();\r\n      return;\r\n    }\r\n\r\n    const { diagrams, diagramsMap } = MermaidRenderer.extractMermaidDiagrams(\r\n      this.currentContent.full_storage_format\r\n    );\r\n\r\n    this.mermaidDiagrams = diagrams;\r\n    this.mermaidDiagramsMap = diagramsMap;\r\n  }\r\n\r\n  updateStatus(message) {\r\n    const status = this.editorContainer?.querySelector(\"#editor-status\");\r\n    if (status) {\r\n      status.textContent = message;\r\n      setTimeout(() => {\r\n        status.textContent = \"Sẵn sàng\";\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  async saveChanges() {\r\n    console.log(\"💾 Saving changes...\");\r\n\r\n    try {\r\n      // Sync all content sources\r\n      this.currentContent = this.contentSynchronizer.syncAllContent(\r\n        this.currentContent,\r\n        this.editorContainer,\r\n        this.mermaidDiagrams\r\n      );\r\n\r\n      // Validate content before saving\r\n      const validation = this.contentSynchronizer.validateContent(\r\n        this.currentContent\r\n      );\r\n      if (!validation.isValid) {\r\n        throw new Error(\r\n          `Content validation failed: ${validation.errors.join(\", \")}`\r\n        );\r\n      }\r\n\r\n      // Save using storage manager (supports both callback and localStorage)\r\n      const saveResults = await this.storageManager.saveContent(\r\n        this.currentContent,\r\n        this.onSave,\r\n        {\r\n          enableLocalStorage: true,\r\n          enableCallback: true,\r\n          showNotification: true,\r\n        }\r\n      );\r\n\r\n      // Reset modified state and update button\r\n      this.isModified = false;\r\n      this.updateSaveButtonState();\r\n\r\n      // Update original content to new saved state\r\n      this.originalContent = JSON.parse(JSON.stringify(this.currentContent));\r\n\r\n      // Don't re-extract diagrams after save to avoid duplicates\r\n      console.log(\"✅ Skipping diagram re-extraction to prevent duplicates\");\r\n\r\n      console.log(\"✅ Changes saved successfully\", saveResults);\r\n\r\n      // Save completed - auto close editor immediately\r\n      console.log(\"💾 Save completed - closing editor...\");\r\n      this.closeEditor();\r\n    } catch (error) {\r\n      console.error(\"❌ Error saving changes:\", error);\r\n      this.storageManager.showNotification(\r\n        `❌ Lỗi khi lưu: ${error.message}`,\r\n        \"error\"\r\n      );\r\n    }\r\n  }\r\n\r\n  // Update save button state based on modifications\r\n  updateSaveButtonState() {\r\n    const saveBtn = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#editor-save-btn\"\r\n    );\r\n    if (!saveBtn) return;\r\n\r\n    if (this.isModified) {\r\n      DOMHelpers.setContent(saveBtn, \"💾 Save *\");\r\n      saveBtn.style.background = \"#28a745\";\r\n      saveBtn.title = \"Có thay đổi chưa lưu\";\r\n    } else {\r\n      DOMHelpers.setContent(saveBtn, \"💾 Save\");\r\n      saveBtn.style.background = \"#007bff\";\r\n      saveBtn.title = \"Save\";\r\n    }\r\n  }\r\n\r\n  // ✅ Stop all preview updates for zoom\r\n  stopAllPreviewUpdates() {\r\n    // Clear timeout\r\n    if (this.previewUpdateTimeout) {\r\n      clearTimeout(this.previewUpdateTimeout);\r\n      this.previewUpdateTimeout = null;\r\n    }\r\n\r\n    // Set flags\r\n    this.isZooming = true;\r\n    this.isUpdatingPreview = false;\r\n  }\r\n\r\n  // Zoom controls methods\r\n  zoomIn() {\r\n    if (this.currentZoom < this.maxZoom) {\r\n      this.stopAllPreviewUpdates(); // ✅ Stop updates first\r\n      this.currentZoom = Math.min(\r\n        this.currentZoom + this.zoomStep,\r\n        this.maxZoom\r\n      );\r\n      this.applyZoom();\r\n    }\r\n  }\r\n\r\n  zoomOut() {\r\n    if (this.currentZoom > this.minZoom) {\r\n      this.stopAllPreviewUpdates(); // ✅ Stop updates first\r\n      this.currentZoom = Math.max(\r\n        this.currentZoom - this.zoomStep,\r\n        this.minZoom\r\n      );\r\n      this.applyZoom();\r\n    }\r\n  }\r\n\r\n  resetZoom() {\r\n    this.stopAllPreviewUpdates(); // ✅ Stop updates first\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n    this.applyZoom();\r\n  }\r\n\r\n  // ✅ Apply zoom with anti-flicker\r\n  applyZoom() {\r\n    // Set zoom flag to prevent flicker\r\n    this.isZooming = true;\r\n\r\n    // Clear any pending preview updates\r\n    if (this.previewUpdateTimeout) {\r\n      clearTimeout(this.previewUpdateTimeout);\r\n      this.previewUpdateTimeout = null;\r\n    }\r\n\r\n    // Apply zoom\r\n    this.updateZoom();\r\n\r\n    // Reset zoom flag\r\n    setTimeout(() => {\r\n      this.isZooming = false;\r\n    }, 100);\r\n  }\r\n\r\n  updateZoom() {\r\n    const preview = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#mermaid-preview\"\r\n    );\r\n    const zoomLevel = DOMHelpers.querySelector(\r\n      this.editorContainer,\r\n      \"#zoom-level\"\r\n    );\r\n\r\n    if (preview) {\r\n      const mermaidContent = DOMHelpers.querySelector(preview, \".mermaid, svg\");\r\n      if (mermaidContent) {\r\n        mermaidContent.style.transform = `scale(${this.currentZoom}) translate(${this.dragOffset.x}px, ${this.dragOffset.y}px)`;\r\n        mermaidContent.style.transformOrigin = \"center center\";\r\n        mermaidContent.style.transition = \"transform 0.2s ease\";\r\n      }\r\n    }\r\n\r\n    if (zoomLevel) {\r\n      DOMHelpers.setContent(\r\n        zoomLevel,\r\n        `${Math.round(this.currentZoom * 100)}%`\r\n      );\r\n    }\r\n  }\r\n\r\n  handleWheel(e) {\r\n    e.preventDefault();\r\n    if (e.deltaY < 0) {\r\n      this.zoomIn();\r\n    } else {\r\n      this.zoomOut();\r\n    }\r\n  }\r\n\r\n  closeEditor() {\r\n    console.log(\"🔄 Closing editor...\");\r\n\r\n    // Stop auto-save\r\n    this.storageManager.stopAutoSave();\r\n\r\n    if (this.editorContainer) {\r\n      DOMHelpers.removeElement(this.editorContainer);\r\n      this.editorContainer = null;\r\n    }\r\n\r\n    this.isEditorOpen = false;\r\n    this.currentContent = null;\r\n    this.originalContent = null;\r\n    this.mermaidDiagrams = [];\r\n    this.mermaidDiagramsMap = new Map();\r\n    this.currentSelectedDiagram = null;\r\n    this.currentSelectedDiagramId = null;\r\n    this.isModified = false;\r\n\r\n    // Reset zoom state\r\n    this.currentZoom = 1;\r\n    this.dragOffset = { x: 0, y: 0 };\r\n\r\n    console.log(\"✅ Editor closed\");\r\n  }\r\n\r\n  // Public method to set save callback\r\n  setSaveCallback(callback) {\r\n    this.onSave = callback;\r\n  }\r\n\r\n  // Check if editor is currently open\r\n  isOpen() {\r\n    return this.isEditorOpen;\r\n  }\r\n\r\n  // Get current content\r\n  getCurrentContent() {\r\n    if (this.textEditor) {\r\n      // Update content from editor\r\n      const editorContent = this.textEditor.getValue();\r\n      if (this.currentContent) {\r\n        this.currentContent.full_storage_format = editorContent;\r\n      }\r\n    }\r\n    return this.currentContent;\r\n  }\r\n}\r\n\r\n// Export for use in content.js\r\nexport { ConfluenceEditor };\r\n","/**\n * Mermaid Preview Handler\n * Handles rendering and updating of Mermaid diagram previews\n */\nimport { MermaidRenderer } from \"../utils/mermaidRenderer.js\";\n\nexport class MermaidPreview {\n  constructor() {\n    this.previewContainer = null;\n  }\n\n  /**\n   * Initialize preview container\n   */\n  initialize() {\n    this.previewContainer = document.getElementById(\n      \"mermaid-preview-container\"\n    );\n    if (!this.previewContainer) {\n      console.error(\"❌ Preview container not found\");\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Update Mermaid preview from code\n   * @param {string} code - Mermaid diagram code\n   */\n  async updatePreview(code) {\n    if (!this.previewContainer) {\n      console.error(\"❌ Preview container not initialized\");\n      return;\n    }\n\n    if (!code || !code.trim()) {\n      this.showPlaceholder(\"Enter Mermaid code to preview\");\n      return;\n    }\n\n    try {\n      // Clean and validate code\n      const cleanCode = this.cleanMermaidCode(code);\n      console.log(\"🧹 Cleaned Mermaid code:\", cleanCode);\n\n      // Validate code\n      const validation = this.validateMermaidCode(cleanCode);\n      if (!validation.isValid) {\n        this.showError(`Invalid Mermaid syntax: ${validation.error}`);\n        return;\n      }\n\n      // Initialize Mermaid if needed\n      await MermaidRenderer.initializeMermaid();\n\n      // Create unique diagram ID\n      const diagramId = `mermaid-ai-chat-preview-${Date.now()}`;\n\n      // Show loading\n      this.showPlaceholder(\"Rendering diagram...\");\n\n      // Render diagram\n      await MermaidRenderer.renderDiagram(\n        diagramId,\n        cleanCode,\n        this.previewContainer\n      );\n\n      console.log(\"✅ Mermaid preview updated successfully\");\n    } catch (error) {\n      console.error(\"❌ Error updating Mermaid preview:\", error);\n      this.showError(error.message);\n    }\n  }\n\n  /**\n   * Show placeholder message\n   * @param {string} message - Placeholder message\n   */\n  showPlaceholder(message) {\n    if (\n      this.previewContainer &&\n      this.previewContainer.nodeType === Node.ELEMENT_NODE &&\n      document.contains(this.previewContainer)\n    ) {\n      this.previewContainer.innerHTML = `\n        <div class=\"mermaid-preview-placeholder\">\n          ${message}\n        </div>\n      `;\n    } else {\n      console.error(\"❌ Invalid or detached preview container for placeholder\");\n    }\n  }\n\n  /**\n   * Show error message\n   * @param {string} errorMessage - Error message to display\n   */\n  showError(errorMessage) {\n    if (\n      this.previewContainer &&\n      this.previewContainer.nodeType === Node.ELEMENT_NODE &&\n      document.contains(this.previewContainer)\n    ) {\n      this.previewContainer.innerHTML = `\n        <div class=\"mermaid-preview-placeholder\" style=\"color: #dc3545;\">\n          ❌ Error rendering diagram:<br>\n          <small>${errorMessage}</small>\n        </div>\n      `;\n    } else {\n      console.error(\n        \"❌ Invalid or detached preview container for error display\"\n      );\n      console.error(\"❌ Error message:\", errorMessage);\n    }\n  }\n\n  /**\n   * Clear preview\n   */\n  clear() {\n    this.showPlaceholder(\"Click on a Mermaid diagram to start editing\");\n  }\n\n  /**\n   * Get current preview content\n   * @returns {string} Current preview HTML content\n   */\n  getCurrentContent() {\n    return this.previewContainer ? this.previewContainer.innerHTML : \"\";\n  }\n\n  /**\n   * Clean Mermaid code - remove unwanted characters and normalize\n   * @param {string} code - Raw Mermaid code\n   * @returns {string} Cleaned code\n   */\n  cleanMermaidCode(code) {\n    if (!code) return \"\";\n\n    // Remove HTML entities\n    let cleaned = code\n      .replace(/&lt;/g, \"<\")\n      .replace(/&gt;/g, \">\")\n      .replace(/&amp;/g, \"&\")\n      .replace(/&quot;/g, '\"')\n      .replace(/&#39;/g, \"'\");\n\n    // Remove CDATA sections\n    cleaned = cleaned.replace(/<!\\[CDATA\\[(.*?)\\]\\]>/gs, \"$1\");\n\n    // Remove HTML tags\n    cleaned = cleaned.replace(/<[^>]*>/g, \"\");\n\n    // Normalize whitespace\n    cleaned = cleaned.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n\n    // Remove excessive whitespace but preserve structure\n    cleaned = cleaned.replace(/\\n\\s*\\n\\s*\\n/g, \"\\n\\n\");\n\n    // Trim\n    cleaned = cleaned.trim();\n\n    return cleaned;\n  }\n\n  /**\n   * Validate Mermaid code syntax\n   * @param {string} code - Mermaid code to validate\n   * @returns {Object} Validation result\n   */\n  validateMermaidCode(code) {\n    if (!code || !code.trim()) {\n      return {\n        isValid: false,\n        error: \"Code is empty\",\n      };\n    }\n\n    const trimmed = code.trim();\n\n    // Check for valid Mermaid diagram types\n    const validStarters = [\n      \"graph\",\n      \"flowchart\",\n      \"sequenceDiagram\",\n      \"classDiagram\",\n      \"stateDiagram\",\n      \"erDiagram\",\n      \"journey\",\n      \"gantt\",\n      \"pie\",\n      \"gitgraph\",\n      \"mindmap\",\n      \"timeline\",\n      \"sankey\",\n      \"requirement\",\n    ];\n\n    const hasValidStarter = validStarters.some((starter) =>\n      trimmed.toLowerCase().startsWith(starter.toLowerCase())\n    );\n\n    if (!hasValidStarter) {\n      return {\n        isValid: false,\n        error: `Must start with a valid diagram type: ${validStarters.join(\n          \", \"\n        )}`,\n      };\n    }\n\n    // Check for common syntax issues\n    if (trimmed.includes(\"undefined\") || trimmed.includes(\"null\")) {\n      return {\n        isValid: false,\n        error: \"Contains undefined or null values\",\n      };\n    }\n\n    // Check for unbalanced brackets\n    const openBrackets = (trimmed.match(/\\[/g) || []).length;\n    const closeBrackets = (trimmed.match(/\\]/g) || []).length;\n    if (openBrackets !== closeBrackets) {\n      return {\n        isValid: false,\n        error: \"Unbalanced square brackets\",\n      };\n    }\n\n    return {\n      isValid: true,\n      error: null,\n    };\n  }\n}\n","/**\n * Mermaid AI Service\n * Handles AI API calls for Mermaid diagram modifications\n */\nimport { ApiClient, ConfluenceApi } from \"../../shared/api.js\";\nimport { API_URLS } from \"../../shared/constants.js\";\n\nexport class MermaidAIService {\n  constructor() {\n    this.apiClient = new ApiClient();\n  }\n\n  /**\n   * Send prompt to AI for diagram modification\n   * @param {string} diagramContent - Current Mermaid diagram code\n   * @param {string} userPrompt - User's modification request\n   * @returns {Promise<Object>} AI response with modified diagram\n   */\n  async modifyDiagram(diagramContent, userPrompt) {\n    console.log(\"🤖 Sending AI request for diagram modification...\");\n\n    // Validate inputs\n    const promptValidation = this.validateUserPrompt(userPrompt);\n    if (!promptValidation.isValid) {\n      throw new Error(promptValidation.error);\n    }\n\n    const diagramValidation = this.validateDiagramContent(diagramContent);\n    if (!diagramValidation.isValid) {\n      throw new Error(diagramValidation.error);\n    }\n\n    // Get current page content (raw HTML) from API\n    const pageContent = await this.getCurrentPageContent();\n\n    // Prepare payload for new API\n    const payload = {\n      diagram_code: diagramContent,\n      prompt: userPrompt,\n      content: pageContent,\n    };\n\n    console.log(\"📤 Sending AI request:\", payload);\n\n    try {\n      // Call new AI API using constants\n      const response = await fetch(API_URLS.EDIT_MERMAID, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(\n          errorText || `HTTP ${response.status}: ${response.statusText}`\n        );\n      }\n\n      // API returns plain text mermaid code\n      const newMermaidCode = await response.text();\n\n      if (!newMermaidCode || !newMermaidCode.trim()) {\n        throw new Error(\"Empty response from AI API\");\n      }\n\n      console.log(\"✅ AI response received successfully\");\n\n      // Return in expected format for compatibility\n      return {\n        success: true,\n        edited_diagram: newMermaidCode.trim(),\n      };\n    } catch (error) {\n      console.error(\"❌ AI API error:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Get current page content using Confluence API\n   * @returns {Promise<string>} Raw HTML content of the current page\n   */\n  async getCurrentPageContent() {\n    try {\n      // Extract page ID from current URL\n      const pageId = this.extractPageId();\n\n      if (!pageId) {\n        console.warn(\n          \"⚠️ Could not extract page ID, falling back to DOM content\"\n        );\n        return this.getFallbackContent();\n      }\n\n      console.log(\"🔍 Fetching page content from API for pageId:\", pageId);\n\n      // Use existing ConfluenceApi to fetch page content\n      const pageData = await ConfluenceApi.fetchPageContent(pageId);\n\n      if (pageData && pageData.content) {\n        console.log(\n          \"📄 Page content fetched from API:\",\n          pageData.content.substring(0, 100) + \"...\"\n        );\n        return pageData.content; // This is the HTML view content\n      }\n\n      // Fallback to storage format if view content not available\n      if (pageData && pageData.storageFormat) {\n        console.log(\n          \"📄 Using storage format as fallback:\",\n          pageData.storageFormat.substring(0, 100) + \"...\"\n        );\n        return pageData.storageFormat;\n      }\n\n      console.warn(\"⚠️ No content found from API, falling back to DOM\");\n      return this.getFallbackContent();\n    } catch (error) {\n      console.error(\"❌ Error fetching page content from API:\", error);\n      console.log(\"🔄 Falling back to DOM content extraction\");\n      return this.getFallbackContent();\n    }\n  }\n\n  /**\n   * Extract page ID from current URL\n   * @returns {string|null} Page ID or null if not found\n   */\n  extractPageId() {\n    try {\n      // Method 1: From URL params like /pages/viewpage.action?pageId=1933328\n      const urlParams = new URLSearchParams(window.location.search);\n      const pageId = urlParams.get(\"pageId\");\n      if (pageId) {\n        return pageId;\n      }\n\n      // Method 2: From URL path patterns\n      const pathMatches = [\n        window.location.pathname.match(/\\/pages\\/(\\d+)/),\n        window.location.pathname.match(/\\/display\\/[^\\/]+\\/(\\d+)/),\n        window.location.href.match(/pageId=(\\d+)/),\n        window.location.href.match(/\\/(\\d+)(?:[?#]|$)/),\n      ];\n\n      for (const match of pathMatches) {\n        if (match && match[1]) {\n          return match[1];\n        }\n      }\n\n      // Method 3: From meta tags\n      const metaSelectors = [\n        'meta[name=\"ajs-page-id\"]',\n        'meta[name=\"confluence-page-id\"]',\n        'meta[property=\"confluence:page-id\"]',\n      ];\n\n      for (const selector of metaSelectors) {\n        const metaTag = document.querySelector(selector);\n        if (metaTag && metaTag.content) {\n          return metaTag.content;\n        }\n      }\n\n      // Method 4: From AJS context if available\n      if (window.AJS && window.AJS.params && window.AJS.params.pageId) {\n        return window.AJS.params.pageId;\n      }\n\n      return null;\n    } catch (error) {\n      console.error(\"❌ Error extracting page ID:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Fallback method to get content from DOM\n   * @returns {string} HTML content from DOM\n   */\n  getFallbackContent() {\n    try {\n      const contentSelectors = [\n        \"#main-content .wiki-content\",\n        \".wiki-content\",\n        \"#content .page-content\",\n        \".page-content\",\n        \"#main-content\",\n        \".main-content\",\n      ];\n\n      for (const selector of contentSelectors) {\n        const element = document.querySelector(selector);\n        if (element) {\n          const content = element.innerHTML;\n          if (content && content.trim().length > 0) {\n            console.log(\n              `📄 Found fallback content from selector \"${selector}\"`\n            );\n            return content;\n          }\n        }\n      }\n\n      // Last resort: body content\n      return document.body.innerHTML;\n    } catch (error) {\n      console.error(\"❌ Error getting fallback content:\", error);\n      return \"\";\n    }\n  }\n\n  /**\n   * Call AI API\n   * @param {Object} payload - Request payload\n   * @returns {Promise<Object>} AI response\n   */\n  async callAI(payload) {\n    try {\n      const response = await fetch(\"/api/ai/mermaid-edit\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(\n          errorData.error || `HTTP ${response.status}: ${response.statusText}`\n        );\n      }\n\n      const data = await response.json();\n      console.log(\"📥 AI API response:\", data);\n\n      return data;\n    } catch (error) {\n      console.error(\"❌ AI API call failed:\", error);\n\n      // Return mock response for development/testing\n      if (error.message.includes(\"fetch\")) {\n        console.log(\"🔧 Using mock AI response for development\");\n        return this.getMockResponse(payload);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * Get mock AI response for development\n   * @param {Object} payload - Original request payload\n   * @returns {Object} Mock response\n   */\n  getMockResponse(payload) {\n    // Simple mock: add a comment to the diagram\n    const originalDiagram = payload.diagram_content;\n    const modifiedDiagram = `%% Modified by AI: ${payload.user_prompt}\\n${originalDiagram}`;\n\n    return {\n      success: true,\n      edited_diagram: modifiedDiagram,\n      explanation: `I've added a comment to your diagram based on your request: \"${payload.user_prompt}\"`,\n    };\n  }\n\n  /**\n   * Validate user prompt\n   * @param {string} prompt - User prompt to validate\n   * @returns {Object} Validation result\n   */\n  validateUserPrompt(prompt) {\n    if (!prompt || !prompt.trim()) {\n      return {\n        isValid: false,\n        error:\n          \"Please enter a prompt describing how you want to modify the diagram\",\n      };\n    }\n\n    if (prompt.trim().length < 3) {\n      return {\n        isValid: false,\n        error: \"Prompt is too short. Please provide more details.\",\n      };\n    }\n\n    if (prompt.length > 1000) {\n      return {\n        isValid: false,\n        error: \"Prompt is too long. Please keep it under 1000 characters.\",\n      };\n    }\n\n    return {\n      isValid: true,\n      error: null,\n    };\n  }\n\n  /**\n   * Validate diagram content\n   * @param {string} content - Diagram content to validate\n   * @returns {Object} Validation result\n   */\n  validateDiagramContent(content) {\n    if (!content || !content.trim()) {\n      return {\n        isValid: false,\n        error:\n          \"No diagram content found. Please select a Mermaid diagram first.\",\n      };\n    }\n\n    // Basic Mermaid syntax validation\n    const trimmed = content.trim();\n    const validStarters = [\n      \"graph\",\n      \"flowchart\",\n      \"sequenceDiagram\",\n      \"classDiagram\",\n      \"stateDiagram\",\n      \"erDiagram\",\n      \"journey\",\n      \"gantt\",\n      \"pie\",\n    ];\n\n    const hasValidStarter = validStarters.some((starter) =>\n      trimmed.toLowerCase().startsWith(starter.toLowerCase())\n    );\n\n    if (!hasValidStarter) {\n      return {\n        isValid: false,\n        error:\n          \"Invalid Mermaid diagram format. Please ensure it starts with a valid diagram type.\",\n      };\n    }\n\n    return {\n      isValid: true,\n      error: null,\n    };\n  }\n\n  /**\n   * Get user-friendly error message\n   * @param {Error} error - Error object\n   * @returns {string} User-friendly error message\n   */\n  getErrorMessage(error) {\n    if (error.message.includes(\"fetch\")) {\n      return \"Unable to connect to AI service. Please check your internet connection.\";\n    }\n\n    if (error.message.includes(\"HTTP 429\")) {\n      return \"Too many requests. Please wait a moment and try again.\";\n    }\n\n    if (error.message.includes(\"HTTP 500\")) {\n      return \"AI service is temporarily unavailable. Please try again later.\";\n    }\n\n    return error.message || \"An unexpected error occurred. Please try again.\";\n  }\n}\n","/**\n * Mermaid API Client\n * Handles API calls to fetch Mermaid diagram code from Confluence\n */\nimport { CONFLUENCE_API_URLS } from \"../../shared/constants.js\";\nexport class MermaidApiClient {\n  /**\n   * Extract page ID from current URL\n   * @returns {string|null} Page ID or null if not found\n   */\n  static extractPageId() {\n    try {\n      console.log(\"🔍 Extracting page ID from current page...\");\n      console.log(\"🔍 Current URL:\", window.location.href);\n      console.log(\"🔍 Current pathname:\", window.location.pathname);\n      console.log(\"🔍 Current search:\", window.location.search);\n\n      // Method 1: From URL params like /pages/viewpage.action?pageId=1933328\n      const urlParams = new URLSearchParams(window.location.search);\n      const pageId = urlParams.get(\"pageId\");\n      if (pageId) {\n        console.log(\"📄 Page ID extracted from URL params:\", pageId);\n        return pageId;\n      }\n\n      // Method 2: From URL path like /pages/(\\d+) or /display/SPACE/(\\d+)\n      const pathMatches = [\n        window.location.pathname.match(/\\/pages\\/(\\d+)/),\n        window.location.pathname.match(/\\/display\\/[^\\/]+\\/(\\d+)/),\n        window.location.href.match(/pageId=(\\d+)/),\n        window.location.href.match(/\\/(\\d+)(?:[?#]|$)/),\n      ];\n\n      for (const match of pathMatches) {\n        if (match && match[1]) {\n          console.log(\"📄 Page ID extracted from path/URL:\", match[1]);\n          return match[1];\n        }\n      }\n\n      // Method 3: From meta tags\n      const metaSelectors = [\n        'meta[name=\"ajs-page-id\"]',\n        'meta[name=\"confluence-page-id\"]',\n        'meta[property=\"confluence:page-id\"]',\n      ];\n\n      for (const selector of metaSelectors) {\n        const metaTag = document.querySelector(selector);\n        if (metaTag && metaTag.content) {\n          console.log(\n            `📄 Page ID extracted from meta tag (${selector}):`,\n            metaTag.content\n          );\n          return metaTag.content;\n        }\n      }\n\n      // Method 4: From AJS context if available\n      if (window.AJS && window.AJS.params && window.AJS.params.pageId) {\n        console.log(\"📄 Page ID extracted from AJS:\", window.AJS.params.pageId);\n        return window.AJS.params.pageId;\n      }\n\n      // Method 5: From Confluence context\n      if (window.Confluence && window.Confluence.getContentId) {\n        const contentId = window.Confluence.getContentId();\n        if (contentId) {\n          console.log(\n            \"📄 Page ID extracted from Confluence context:\",\n            contentId\n          );\n          return contentId;\n        }\n      }\n\n      // Method 6: From data attributes on body or html\n      const bodyPageId =\n        document.body.getAttribute(\"data-page-id\") ||\n        document.documentElement.getAttribute(\"data-page-id\");\n      if (bodyPageId) {\n        console.log(\n          \"📄 Page ID extracted from body data attribute:\",\n          bodyPageId\n        );\n        return bodyPageId;\n      }\n\n      console.warn(\"⚠️ Could not extract page ID from current page\");\n      console.warn(\n        \"⚠️ Available methods tried: URL params, path patterns, meta tags, AJS context, Confluence context, data attributes\"\n      );\n      return null;\n    } catch (error) {\n      console.error(\"❌ Error extracting page ID:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Extract filename from image src URL\n   * @param {string} src - Image src URL\n   * @returns {string|null} Filename without extension or null if not found\n   */\n  static extractFilename(src) {\n    try {\n      if (!src) return null;\n\n      console.log(\"🔍 Extracting filename from src:\", src);\n\n      // Parse URL to get pathname\n      const url = new URL(src, window.location.origin);\n      const pathname = url.pathname;\n\n      // Extract filename from path like /download/attachments/1933328/Diagram.png\n      const pathParts = pathname.split(\"/\");\n      const filenameWithExt = pathParts[pathParts.length - 1];\n\n      if (!filenameWithExt) return null;\n\n      // Remove extension (.png, .jpg, .svg, etc.)\n      const filename = filenameWithExt.split(\".\")[0];\n\n      console.log(\"✅ Extracted filename:\", filename);\n      return filename;\n    } catch (error) {\n      console.error(\"❌ Error extracting filename:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Save filename to localStorage for later use\n   * @param {string} filename - Filename to save\n   */\n  static saveFilename(filename) {\n    try {\n      if (!filename) return;\n\n      localStorage.setItem(\"mermaid-ai-filename\", filename);\n      console.log(\"💾 Filename saved to localStorage:\", filename);\n    } catch (error) {\n      console.error(\"❌ Error saving filename to localStorage:\", error);\n    }\n  }\n\n  /**\n   * Get saved filename from localStorage\n   * @returns {string|null} Saved filename or null if not found\n   */\n  static getSavedFilename() {\n    try {\n      const filename = localStorage.getItem(\"mermaid-ai-filename\");\n      console.log(\"📂 Retrieved filename from localStorage:\", filename);\n      return filename;\n    } catch (error) {\n      console.error(\"❌ Error retrieving filename from localStorage:\", error);\n      return null;\n    }\n  }\n\n  /**\n   * Fetch Mermaid diagram code from Confluence API\n   * @param {string} pageId - Confluence page ID (ceoId)\n   * @param {string} filename - Diagram filename\n   * @returns {Promise<string>} Mermaid diagram code\n   */\n  static async fetchMermaidCode(pageId, filename) {\n    try {\n      console.log(\"🌐 Fetching Mermaid code from API...\", { pageId, filename });\n\n      const apiUrl = `${CONFLUENCE_API_URLS.MERMAID_DIAGRAM}?ceoId=${pageId}&filename=${filename}`;\n\n      console.log(\"📡 API URL:\", apiUrl);\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"*/*\",\n          \"Accept-Language\": \"en-US,en;q=0.9,vi;q=0.8\",\n          \"Cache-Control\": \"no-cache\",\n          Connection: \"keep-alive\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Pragma: \"no-cache\",\n          Referer: CONFLUENCE_API_URLS.MERMAID_EDIT_REFERER,\n          \"Sec-Fetch-Dest\": \"empty\",\n          \"Sec-Fetch-Mode\": \"cors\",\n          \"Sec-Fetch-Site\": \"same-origin\",\n          \"User-Agent\": navigator.userAgent,\n          \"X-Requested-With\": \"XMLHttpRequest\",\n          \"sec-ch-ua\":\n            '\"Chromium\";v=\"140\", \"Not=A?Brand\";v=\"24\", \"Google Chrome\";v=\"140\"',\n          \"sec-ch-ua-mobile\": \"?0\",\n          \"sec-ch-ua-platform\": '\"Windows\"',\n        },\n        credentials: \"include\", // Include cookies for authentication\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json(); // Assuming API returns plain text Mermaid code\n\n      return data;\n    } catch (error) {\n      console.error(\"❌ Error fetching Mermaid code:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Fetch Mermaid code using saved filename and current page ID\n   * @returns {Promise<string>} Mermaid diagram code\n   */\n  static async fetchMermaidCodeFromSaved() {\n    const pageId = this.extractPageId();\n    const filename = this.getSavedFilename();\n\n    if (!pageId) {\n      throw new Error(\"Could not extract page ID from current page\");\n    }\n\n    if (!filename) {\n      throw new Error(\n        \"No filename found in localStorage. Please click on a Mermaid diagram first.\"\n      );\n    }\n\n    return await this.fetchMermaidCode(pageId, filename);\n  }\n}\n","// Mermaid AI Chat Service for K-Tool Extension\nimport { MermaidExtractor } from \"./MermaidExtractor.js\";\nimport { MermaidPreview } from \"./MermaidPreview.js\";\nimport { MermaidAIService } from \"./MermaidAIService.js\";\nimport { MermaidApiClient } from \"./MermaidApiClient.js\";\nimport { CONFLUENCE_API_URLS } from \"../../shared/constants.js\";\nimport { MermaidRenderer } from \"../utils/mermaidRenderer.js\";\n\nexport class MermaidAIChat {\n  constructor($) {\n    this.$ = $ || window.jQuery || window.$; // jQuery instance từ AJS hoặc fallback\n    this.isPopupOpen = false;\n    this.currentMermaidContent = \"\";\n\n    // Initialize components\n    this.preview = new MermaidPreview();\n    this.aiService = new MermaidAIService();\n\n    // ✅ Replace MermaidDetector with internal properties\n    this.lastClickedElement = null;\n    this.lastClickPosition = { x: 0, y: 0 };\n\n    // ✅ Zoom functionality\n    this.currentZoom = 1.0; // 100%\n    this.minZoom = 0.25; // 25%\n    this.maxZoom = 3.0; // 300%\n    this.zoomStep = 0.25; // 25% per step\n    this.isZooming = false; // Flag to prevent flicker during zoom\n\n    console.log(\"🚀 Mermaid AI Chat initializing with AJS/jQuery:\", !!this.$);\n    this.init();\n  }\n\n  async init() {\n    console.log(\"🚀 AJS: Mermaid AI Chat initializing...\");\n\n    // Check if already injected\n    if (document.getElementById(\"mermaid-ai-chat-root\")) {\n      console.log(\"🔍 AJS: Mermaid AI Chat already injected, skipping...\");\n      return;\n    }\n\n    // Create popup UI first\n    this.createPopupUI();\n\n    // Initialize preview component\n    this.preview.initialize();\n\n    // ✅ Setup detection without MermaidDetector\n    this.setupMermaidDetection();\n    this.setupConfluencePageChangeDetection();\n\n    // Setup ConfluenceEditor monitoring to avoid conflicts\n    this.setupConfluenceEditorMonitoring();\n\n    console.log(\"✅ AJS: Mermaid AI Chat ready\");\n  }\n\n  /**\n   * Handle Mermaid diagram click\n   * @param {HTMLElement} element - Clicked element\n   * @param {Object} position - Click position {x, y}\n   */\n  handleMermaidClick(element, position) {\n    console.log(\"🎯 Mermaid diagram clicked:\", element, position);\n\n    // Extract content from clicked element\n    // this.currentMermaidContent = MermaidExtractor.extractFromElement(element);\n\n    // Show popup at click position\n    this.showChatPopup(position.x, position.y);\n  }\n\n  setupMermaidDetection() {\n    console.log(\"🔍 SIMPLE: Setting up iframe click detection...\");\n\n    // ✅ Sử dụng lại logic từ MermaidDetector thay vì duplicate code\n    // Chỉ setup iframe event listeners với logic đơn giản\n    this.setupIframeEventListeners();\n\n    // Setup MutationObserver để detect iframe mới (chỉ observe DOM cha)\n    this.setupMutationObserver();\n\n    console.log(\"✅ SIMPLE: Setup completed\");\n  }\n\n  setupIframeEventListeners() {\n    console.log(\"🔍 IFRAME: Setting up iframe event listeners...\");\n    this.refreshIframeListeners();\n  }\n\n  refreshIframeListeners() {\n    // Tìm tất cả iframes hiện tại\n    const iframes = document.querySelectorAll(\"iframe\");\n    console.log(\"🔍 IFRAME REFRESH: Found\", iframes.length, \"iframes\");\n\n    if (iframes.length === 0) {\n      console.log(\"⚠️ IFRAME REFRESH: No iframes found on page\");\n      console.log(\n        \"⚠️ IFRAME REFRESH: Document ready state:\",\n        document.readyState\n      );\n\n      // Try again after a delay\n      setTimeout(() => {\n        console.log(\"🔍 IFRAME REFRESH: Retrying iframe search after delay...\");\n        const retryIframes = document.querySelectorAll(\"iframe\");\n        console.log(\n          \"🔍 IFRAME REFRESH: Retry found\",\n          retryIframes.length,\n          \"iframes\"\n        );\n        if (retryIframes.length > 0) {\n          retryIframes.forEach((iframe, index) => {\n            console.log(\n              `🔍 IFRAME REFRESH RETRY ${index}: Processing iframe:`,\n              iframe.src || iframe.id || \"no-src\"\n            );\n            this.attachIframeListeners(iframe, `refresh-retry-${index}`);\n          });\n        }\n      }, 1000);\n    } else {\n      iframes.forEach((iframe, index) => {\n        console.log(\n          `🔍 IFRAME REFRESH ${index}: Processing iframe:`,\n          iframe.src || iframe.id || \"no-src\"\n        );\n        this.attachIframeListeners(iframe, `refresh-${index}`);\n      });\n    }\n  }\n\n  attachIframeListeners(iframe, index) {\n    try {\n      // Kiểm tra nếu iframe đã có listener để tránh duplicate\n      if (iframe.dataset.mermaidListenerAttached === \"true\") {\n        console.log(\n          `⚠️ IFRAME ${index}: Listener already attached, skipping...`\n        );\n        return;\n      }\n\n      // Đánh dấu iframe đã có listener\n      iframe.dataset.mermaidListenerAttached = \"true\";\n\n      // Đợi iframe load xong\n      const loadHandler = () => {\n        console.log(\n          `🔍 IFRAME ${index}: Iframe loaded, attaching listeners...`\n        );\n        try {\n          const iframeDoc =\n            iframe.contentDocument || iframe.contentWindow.document;\n\n          if (!iframeDoc) {\n            console.log(\n              `⚠️ IFRAME ${index}: Cannot access iframe document (cross-origin?)`\n            );\n            return;\n          }\n\n          console.log(\n            `✅ IFRAME ${index}: Iframe document accessible, adding click listeners...`\n          );\n\n          // Click handler: Lưu element và tọa độ nếu là ảnh\n          const clickHandler = (event) => {\n            console.log(`🖱️ IFRAME ${index} CLICK: Element clicked:`, {\n              tag: event.target.tagName,\n              classes: event.target.className,\n              id: event.target.id,\n              src: event.target.src || \"N/A\",\n              alt: event.target.alt || \"N/A\",\n              element: event.target,\n            });\n\n            console.log(\n              `🔍 IFRAME ${index} CLICK: Checking if Mermaid element...`\n            );\n            console.log(\n              `🔍 IFRAME ${index} CLICK: isMermaidElement result:`,\n              this.isMermaidElement(event.target)\n            );\n\n            // ✅ Handle click directly without MermaidDetector\n            if (this.isMermaidElement(event.target)) {\n              console.log(\"🎯 Mermaid element clicked:\", event.target);\n\n              // Extract and save comprehensive diagram info\n              if (event.target.src) {\n                const filename = MermaidApiClient.extractFilename(\n                  event.target.src\n                );\n\n                // Extract macro parameters from data attribute\n                const macroParams = event.target.getAttribute(\n                  \"data-macro-parameters\"\n                );\n\n                // Save comprehensive diagram info\n                const diagramInfo = {\n                  filename: filename,\n                  src: event.target.src,\n                  macroParameters: macroParams,\n                  element: {\n                    tagName: event.target.tagName,\n                    className: event.target.className,\n                    id: event.target.id,\n                  },\n                };\n\n                // Parse macro parameters if available\n                if (macroParams) {\n                  try {\n                    const params = this.parseMacroParameters(macroParams);\n                    diagramInfo.parsedParams = params;\n                    console.log(`📋 Parsed macro parameters:`, params);\n                  } catch (error) {\n                    console.warn(\n                      \"⚠️ Could not parse macro parameters:\",\n                      macroParams\n                    );\n                  }\n                }\n\n                if (filename) {\n                  MermaidApiClient.saveFilename(filename);\n                  // Save full diagram info\n                  localStorage.setItem(\n                    \"mermaid_diagram_info\",\n                    JSON.stringify(diagramInfo)\n                  );\n                  console.log(`💾 Diagram info saved:`, diagramInfo);\n                } else {\n                  console.warn(\n                    \"⚠️ Could not extract filename from src:\",\n                    event.target.src\n                  );\n                }\n              }\n\n              // Save click info\n              this.lastClickedElement = event.target;\n              this.lastClickPosition = {\n                x: event.clientX + iframe.offsetLeft,\n                y: event.clientY + iframe.offsetTop,\n              };\n\n              // Trigger callback\n              this.handleMermaidClick(event.target, this.lastClickPosition);\n            }\n          };\n\n          // Remove existing listener nếu có\n          if (iframeDoc.mermaidClickHandler) {\n            iframeDoc.removeEventListener(\n              \"click\",\n              iframeDoc.mermaidClickHandler,\n              true\n            );\n          }\n\n          // Add new listener\n          const boundClickHandler = clickHandler.bind(this);\n          iframeDoc.addEventListener(\"click\", boundClickHandler, true);\n\n          // Store reference để có thể remove sau này\n          iframeDoc.mermaidClickHandler = boundClickHandler;\n        } catch (e) {\n          console.log(\n            `❌ IFRAME ${index}: Error accessing iframe content:`,\n            e.message\n          );\n        }\n      };\n\n      // Remove existing load listener nếu có\n      if (iframe.mermaidLoadHandler) {\n        iframe.removeEventListener(\"load\", iframe.mermaidLoadHandler);\n      }\n\n      // Add load listener\n      iframe.addEventListener(\"load\", loadHandler);\n      iframe.mermaidLoadHandler = loadHandler;\n\n      // Nếu iframe đã load rồi thì gọi handler ngay\n      if (\n        iframe.contentDocument &&\n        iframe.contentDocument.readyState === \"complete\"\n      ) {\n        loadHandler();\n      }\n    } catch (e) {\n      console.log(\n        `❌ IFRAME ${index}: Error setting up iframe listener:`,\n        e.message\n      );\n    }\n  }\n\n  setupMutationObserver() {\n    console.log(\n      \"🔍 MUTATION: Setting up observer to track ALL DOM changes in parent...\"\n    );\n\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation, mutationIndex) => {\n        console.log(`🔍 MUTATION ${mutationIndex}: Type: ${mutation.type}`);\n        if (mutation.type === \"childList\") {\n          // Log ADDED nodes\n          if (mutation.addedNodes.length > 0) {\n            console.log(\n              `➕ MUTATION ${mutationIndex}: ${mutation.addedNodes.length} nodes ADDED:`\n            );\n            mutation.addedNodes.forEach((node, nodeIndex) => {\n              if (node.nodeType === Node.ELEMENT_NODE) {\n                console.log(`➕ Added ${nodeIndex}: ${node.tagName}`, {\n                  tag: node.tagName,\n                  classes: node.className || \"N/A\",\n                  id: node.id || \"N/A\",\n                  textContent: node.textContent?.substring(0, 50) || \"N/A\",\n                  element: node,\n                });\n\n                // Nếu là iframe thì attach listeners\n                if (node.tagName === \"IFRAME\") {\n                  console.log(\n                    \"🎯 MUTATION: IFRAME detected, attaching listeners...\"\n                  );\n                  this.attachIframeListeners(node, \"new\");\n                }\n\n                this.injectAIButton();\n              } else if (node.nodeType === Node.TEXT_NODE) {\n                console.log(`➕ Added ${nodeIndex}: TEXT_NODE`, {\n                  content: node.textContent?.substring(0, 50) || \"N/A\",\n                });\n              }\n            });\n          }\n        }\n      });\n    });\n\n    // Observe DOM cha với tất cả types\n    observer.observe(document.body, {\n      childList: true,\n      subtree: false,\n    });\n  }\n\n  setupConfluencePageChangeDetection() {\n    console.log(\n      \"🔍 PAGE CHANGE: Setting up Confluence page change detection...\"\n    );\n\n    // Method 1: Listen for Confluence-specific events\n    if (window.AJS && AJS.bind) {\n      // Editor events\n      AJS.bind(\"init.rte\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Confluence RTE initialized - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n\n      AJS.bind(\"rte-ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Confluence RTE ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n\n      // Page events\n      AJS.bind(\"page.edit.ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Page edit ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1500);\n      });\n\n      AJS.bind(\"page.view.ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Page view ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.setupIframeEventListeners(), 1000);\n      });\n    }\n\n    // Method 2: Watch for URL changes (SPA navigation)\n    let currentUrl = window.location.href;\n    const checkUrlChange = () => {\n      if (window.location.href !== currentUrl) {\n        console.log(\n          \"🔄 PAGE CHANGE: URL changed from\",\n          currentUrl,\n          \"to\",\n          window.location.href\n        );\n        currentUrl = window.location.href;\n\n        // Re-setup after URL change\n        setTimeout(() => {\n          console.log(\n            \"🔄 PAGE CHANGE: Re-setting up iframe listeners after URL change\"\n          );\n          this.setupIframeEventListeners();\n        }, 2000);\n      }\n    };\n\n    setInterval(checkUrlChange, 1000);\n\n    console.log(\n      \"✅ PAGE CHANGE: Confluence page change detection setup completed\"\n    );\n  }\n\n  injectAIButton() {\n    // ✅ Skip if ConfluenceEditor popup is open to avoid conflict\n    if (document.querySelector(\".confluence-editor-overlay\")) {\n      console.log(\n        \"🚫 ConfluenceEditor popup is open, skipping AI button injection\"\n      );\n      return;\n    }\n\n    var panel = document.getElementById(\"property-panel\");\n    if (!panel) return;\n\n    var buttonContainer = panel.querySelector(\".panel-buttons\");\n    if (!buttonContainer) return;\n\n    // Kiểm tra nếu nút AI đã có\n    if (\n      buttonContainer.querySelector(\n        \".macro-placeholder-property-panel-ai-button\"\n      )\n    )\n      return;\n\n    console.log(\"✨ Thêm nút AI vào property panel...\");\n\n    // Tạo thẻ <a> mới\n    var aiButton = document.createElement(\"a\");\n    aiButton.href = \"#\";\n    aiButton.className =\n      \"aui-button macro-placeholder-property-panel-ai-button\";\n    aiButton.setAttribute(\"tabindex\", \"0\");\n    aiButton.setAttribute(\"role\", \"button\");\n    aiButton.setAttribute(\"aria-label\", \"AI\");\n    aiButton.style.marginRight = \"4px\";\n\n    // Icon + Text\n    aiButton.innerHTML = `<span class=\"icon\"></span><span class=\"panel-button-text\">AI</span>`;\n\n    // Thêm sự kiện click\n    aiButton.addEventListener(\"click\", async (e) => {\n      e.preventDefault();\n\n      // ✅ Skip if ConfluenceEditor popup is open to avoid conflict\n      if (document.querySelector(\".confluence-editor-overlay\")) {\n        console.log(\n          \"🚫 ConfluenceEditor popup is open, ignoring AI button click\"\n        );\n        return;\n      }\n\n      console.log(\"🤖 AI Button clicked - fetching Mermaid code...\");\n\n      // Get last clicked element and position\n      const lastClickedElement = this.lastClickedElement;\n      const lastClickPosition = this.lastClickPosition;\n\n      console.log(\n        \"🔍 DEBUG AI BUTTON: this.lastClickedElement:\",\n        this.lastClickedElement\n      );\n      console.log(\n        \"🔍 DEBUG AI BUTTON: this.lastClickPosition:\",\n        this.lastClickPosition\n      );\n      console.log(\n        \"🔍 DEBUG AI BUTTON: lastClickedElement:\",\n        lastClickedElement\n      );\n      console.log(\"🔍 DEBUG AI BUTTON: lastClickPosition:\", lastClickPosition);\n      console.log(\n        \"🔍 DEBUG AI BUTTON: Position check:\",\n        lastClickPosition &&\n          (lastClickPosition.x !== 0 || lastClickPosition.y !== 0)\n      );\n\n      if (\n        lastClickedElement &&\n        lastClickPosition &&\n        (lastClickPosition.x !== 0 || lastClickPosition.y !== 0)\n      ) {\n        console.log(\n          \"🤖 Found saved element - fetching Mermaid code from API...\"\n        );\n\n        try {\n          // Show loading state\n          const loadingMessage = \"🔄 Fetching Mermaid diagram code...\";\n          console.log(loadingMessage);\n\n          // Fetch Mermaid code from API using saved filename and page ID\n          const mermaidCodeResponse =\n            await MermaidApiClient.fetchMermaidCodeFromSaved();\n          const mermaidCode = mermaidCodeResponse.data;\n          console.log(\"✅ Mermaid code fetched successfully:\", mermaidCode);\n\n          // Update current content with fetched code\n          this.currentMermaidContent = mermaidCode;\n\n          // Show chat popup with fetched content\n          this.showChatPopup(lastClickPosition.x, lastClickPosition.y);\n        } catch (error) {\n          console.error(\"❌ Error fetching Mermaid code:\", error);\n          alert(`❌ Error fetching Mermaid code: ${error.message}`);\n        }\n      } else {\n        console.log(\n          \"⚠️ No saved element found - please click on an image first\"\n        );\n        alert(\"⚠️ Vui lòng click vào một hình ảnh trước khi sử dụng AI Chat!\");\n      }\n    });\n\n    // Chèn vào trước nút Remove\n    var removeButton = buttonContainer.querySelector(\n      \".macro-placeholder-property-panel-remove-button\"\n    );\n    if (removeButton) {\n      buttonContainer.insertBefore(aiButton, removeButton);\n    } else {\n      buttonContainer.appendChild(aiButton);\n    }\n\n    console.log(\"✅ Đã chèn nút AI thành công.\");\n  }\n\n  /**\n   * Remove AI button when ConfluenceEditor is open\n   */\n  removeAIButton() {\n    const aiButton = document.querySelector(\n      \".macro-placeholder-property-panel-ai-button\"\n    );\n    if (aiButton) {\n      aiButton.remove();\n      console.log(\"🗑️ AI button removed due to ConfluenceEditor popup\");\n    }\n  }\n\n  /**\n   * Monitor ConfluenceEditor popup state and manage AI button accordingly\n   */\n  setupConfluenceEditorMonitoring() {\n    // Monitor for ConfluenceEditor popup open/close\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === \"childList\") {\n          mutation.addedNodes.forEach((node) => {\n            if (\n              node.nodeType === Node.ELEMENT_NODE &&\n              node.classList &&\n              node.classList.contains(\"confluence-editor-overlay\")\n            ) {\n              console.log(\n                \"🔍 ConfluenceEditor popup opened, removing AI button\"\n              );\n              this.removeAIButton();\n            }\n          });\n\n          mutation.removedNodes.forEach((node) => {\n            if (\n              node.nodeType === Node.ELEMENT_NODE &&\n              node.classList &&\n              node.classList.contains(\"confluence-editor-overlay\")\n            ) {\n              console.log(\n                \"🔍 ConfluenceEditor popup closed, re-injecting AI button\"\n              );\n              // Delay to ensure DOM is ready\n              setTimeout(() => {\n                this.injectAIButton();\n              }, 100);\n            }\n          });\n        }\n      });\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: false, // Only observe direct children of body\n    });\n\n    console.log(\"✅ ConfluenceEditor monitoring setup completed\");\n  }\n\n  /**\n   * Parse macro parameters string\n   * @param {string} macroParams - Macro parameters string like \"filename=e3e32|format=svg|revision=5\"\n   * @returns {Object} Parsed parameters object\n   */\n  parseMacroParameters(macroParams) {\n    const params = {};\n    if (!macroParams) return params;\n\n    const pairs = macroParams.split(\"|\");\n    pairs.forEach((pair) => {\n      const [key, value] = pair.split(\"=\");\n      if (key && value) {\n        params[key.trim()] = value.trim();\n      }\n    });\n\n    return params;\n  }\n\n  /**\n   * Check if element is a Mermaid diagram\n   * @param {HTMLElement} element - Element to check\n   * @returns {boolean} True if element is Mermaid-related\n   */\n  isMermaidElement(element) {\n    if (\n      !element ||\n      !element.nodeType ||\n      element.nodeType !== Node.ELEMENT_NODE\n    ) {\n      return false;\n    }\n\n    console.log(\"🔍 isMermaidElement: Checking element:\", {\n      tag: element.tagName,\n      src: element.src || \"N/A\",\n      className: element.className || \"N/A\",\n      id: element.id || \"N/A\",\n    });\n\n    // Check for various Mermaid indicators\n    const checks = [\n      // Image with mermaid in src\n      element.tagName === \"IMG\" &&\n        element.src &&\n        element.src.includes(\"mermaid\"),\n      // SVG with mermaid in id\n      element.tagName === \"SVG\" && element.id && element.id.includes(\"mermaid\"),\n      // Element with mermaid class\n      element.classList && element.classList.contains(\"mermaid\"),\n      // Element with mermaid data attribute\n      element.getAttribute &&\n        element.getAttribute(\"data-macro-name\") === \"mermaid\",\n      // Confluence structured macro\n      element.tagName === \"AC:STRUCTURED-MACRO\" &&\n        element.getAttribute(\"ac:name\") === \"mermaid\",\n      // Any image (for broader detection)\n      element.tagName === \"IMG\" && element.src,\n      // Any SVG\n      element.tagName === \"SVG\",\n    ];\n\n    const result = checks.some((check) => check);\n    console.log(\"🔍 isMermaidElement: Result:\", result);\n\n    return result;\n  }\n\n  /**\n   * Bind zoom control events\n   */\n  bindZoomControls() {\n    const zoomInBtn = document.getElementById(\"zoom-in-btn\");\n    const zoomOutBtn = document.getElementById(\"zoom-out-btn\");\n    const zoomResetBtn = document.getElementById(\"zoom-reset-btn\");\n    const previewContainer = document.getElementById(\n      \"mermaid-preview-container\"\n    );\n\n    if (!zoomInBtn || !zoomOutBtn || !zoomResetBtn || !previewContainer) {\n      console.warn(\"⚠️ Zoom controls not found\");\n      return;\n    }\n\n    // Zoom In\n    zoomInBtn.addEventListener(\"click\", () => {\n      this.zoomIn();\n    });\n\n    // Zoom Out\n    zoomOutBtn.addEventListener(\"click\", () => {\n      this.zoomOut();\n    });\n\n    // Reset Zoom\n    zoomResetBtn.addEventListener(\"click\", () => {\n      this.resetZoom();\n    });\n\n    // Keyboard shortcuts\n    document.addEventListener(\"keydown\", (e) => {\n      // Only work when popup is open and not typing in input fields\n      if (\n        !this.isPopupOpen ||\n        e.target.tagName === \"INPUT\" ||\n        e.target.tagName === \"TEXTAREA\"\n      ) {\n        return;\n      }\n\n      if (e.key === \"+\" || e.key === \"=\") {\n        e.preventDefault();\n        this.zoomIn();\n      } else if (e.key === \"-\") {\n        e.preventDefault();\n        this.zoomOut();\n      } else if (e.key === \"0\") {\n        e.preventDefault();\n        this.resetZoom();\n      }\n    });\n\n    // Mouse wheel zoom (Ctrl + wheel)\n    previewContainer.addEventListener(\"wheel\", (e) => {\n      if (e.ctrlKey) {\n        e.preventDefault();\n        if (e.deltaY < 0) {\n          this.zoomIn();\n        } else {\n          this.zoomOut();\n        }\n      }\n    });\n\n    console.log(\"✅ Zoom controls bound successfully\");\n  }\n\n  /**\n   * Zoom in\n   */\n  zoomIn() {\n    if (this.currentZoom < this.maxZoom) {\n      this.currentZoom = Math.min(\n        this.currentZoom + this.zoomStep,\n        this.maxZoom\n      );\n      this.applyZoom();\n    }\n  }\n\n  /**\n   * Zoom out\n   */\n  zoomOut() {\n    if (this.currentZoom > this.minZoom) {\n      this.currentZoom = Math.max(\n        this.currentZoom - this.zoomStep,\n        this.minZoom\n      );\n      this.applyZoom();\n    }\n  }\n\n  /**\n   * Reset zoom to 100%\n   */\n  resetZoom() {\n    this.currentZoom = 1.0;\n    this.applyZoom();\n  }\n\n  /**\n   * Apply zoom to preview container\n   */\n  applyZoom() {\n    const previewContainer = document.getElementById(\n      \"mermaid-preview-container\"\n    );\n    const zoomDisplay = document.getElementById(\"zoom-level-display\");\n\n    if (!previewContainer) return;\n\n    // Set zoom flag to prevent flicker\n    this.isZooming = true;\n\n    // Apply transform\n    previewContainer.style.transform = `scale(${this.currentZoom})`;\n    previewContainer.style.transformOrigin = \"center center\";\n\n    // Update zoom display\n    if (zoomDisplay) {\n      zoomDisplay.textContent = `${Math.round(this.currentZoom * 100)}%`;\n    }\n\n    // Update button states\n    this.updateZoomButtonStates();\n\n    console.log(`🔍 Zoom applied: ${Math.round(this.currentZoom * 100)}%`);\n\n    // Reset zoom flag after a short delay\n    setTimeout(() => {\n      this.isZooming = false;\n    }, 100);\n  }\n\n  /**\n   * Update zoom button states (enable/disable)\n   */\n  updateZoomButtonStates() {\n    const zoomInBtn = document.getElementById(\"zoom-in-btn\");\n    const zoomOutBtn = document.getElementById(\"zoom-out-btn\");\n\n    if (zoomInBtn) {\n      zoomInBtn.disabled = this.currentZoom >= this.maxZoom;\n      zoomInBtn.style.opacity = this.currentZoom >= this.maxZoom ? \"0.5\" : \"1\";\n    }\n\n    if (zoomOutBtn) {\n      zoomOutBtn.disabled = this.currentZoom <= this.minZoom;\n      zoomOutBtn.style.opacity = this.currentZoom <= this.minZoom ? \"0.5\" : \"1\";\n    }\n  }\n\n  createPopupUI() {\n    const root = document.createElement(\"div\");\n    root.id = \"mermaid-ai-chat-root\";\n    root.innerHTML = `\n      <style>\n        .mermaid-preview-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 8px 12px;\n          background: #f5f5f5;\n          border-bottom: 1px solid #ddd;\n          font-weight: bold;\n        }\n\n        .zoom-controls {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n\n        .zoom-btn {\n          background: #fff;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n          padding: 4px 8px;\n          cursor: pointer;\n          font-size: 12px;\n          transition: all 0.2s;\n        }\n\n        .zoom-btn:hover:not(:disabled) {\n          background: #e6f3ff;\n          border-color: #0066cc;\n        }\n\n        .zoom-btn:disabled {\n          cursor: not-allowed;\n          opacity: 0.5;\n        }\n\n        .zoom-level {\n          font-size: 12px;\n          font-weight: bold;\n          color: #666;\n          min-width: 40px;\n          text-align: center;\n        }\n\n        .zoom-icon {\n          font-size: 10px;\n        }\n\n        #mermaid-preview-container {\n          transition: transform 0.2s ease;\n          overflow: auto;\n        }\n\n        .mermaid-chat-buttons {\n          display: flex;\n          gap: 8px;\n          align-items: center;\n        }\n\n        .mermaid-chat-save {\n          background: #28a745;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 8px 16px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.2s;\n        }\n\n        .mermaid-chat-save:hover:not(:disabled) {\n          background: #218838;\n        }\n\n        .mermaid-chat-save:disabled {\n          background: #6c757d;\n          cursor: not-allowed;\n        }\n      </style>\n      <div id=\"mermaid-ai-chat-popup\" class=\"mermaid-ai-chat-popup\" style=\"display: none;\">\n        <div class=\"mermaid-ai-chat-header\">\n          <h3>🤖 Mermaid AI Chat Editor</h3>\n          <button class=\"mermaid-ai-chat-close\">&times;</button>\n        </div>\n        <div class=\"mermaid-ai-chat-body\">\n          <!-- Left Pane: Code Editor + Chat Input -->\n          <div class=\"mermaid-ai-chat-left-pane\">\n            <!-- Code Editor Section -->\n            <div class=\"mermaid-code-section\">\n              <div class=\"mermaid-code-header\">\n                📝 Mermaid Code\n              </div>\n              <textarea\n                id=\"mermaid-code-editor\"\n                class=\"mermaid-code-editor\"\n                placeholder=\"Mermaid diagram code will appear here...\"\n              ></textarea>\n            </div>\n\n            <!-- Chat Input Section -->\n            <div class=\"mermaid-chat-section\">\n              <div class=\"mermaid-chat-input-area\">\n                <textarea\n                  id=\"mermaid-ai-chat-input\"\n                  class=\"mermaid-chat-input\"\n                  placeholder=\"💬 Describe how you want to modify the diagram...\"\n                  rows=\"2\"\n                ></textarea>\n                <div class=\"mermaid-chat-buttons\">\n                  <button id=\"mermaid-ai-chat-save\" class=\"mermaid-chat-save\">\n                    💾 Save\n                  </button>\n                  <button id=\"mermaid-ai-chat-send\" class=\"mermaid-chat-send\">\n                    Send\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Right Pane: Mermaid Preview -->\n          <div class=\"mermaid-ai-chat-right-pane\">\n            <div class=\"mermaid-preview-section\">\n              <div class=\"mermaid-preview-header\">\n                <span class=\"preview-title\">📊 Diagram Preview</span>\n                <div class=\"zoom-controls\">\n                  <button id=\"zoom-out-btn\" class=\"zoom-btn\" title=\"Zoom Out (-)\">\n                    <span class=\"zoom-icon\">➖</span>\n                  </button>\n                  <span id=\"zoom-level-display\" class=\"zoom-level\">100%</span>\n                  <button id=\"zoom-in-btn\" class=\"zoom-btn\" title=\"Zoom In (+)\">\n                    <span class=\"zoom-icon\">➕</span>\n                  </button>\n                  <button id=\"zoom-reset-btn\" class=\"zoom-btn\" title=\"Reset Zoom (0)\">\n                    <span class=\"zoom-icon\">🔄</span>\n                  </button>\n                </div>\n              </div>\n              <div class=\"mermaid-preview-body\">\n                <div id=\"mermaid-preview-container\" class=\"mermaid-preview-container\">\n                  <div class=\"mermaid-preview-placeholder\">\n                    Click on a Mermaid diagram to start editing\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n\n    document.body.appendChild(root);\n    this.bindPopupEvents();\n  }\n\n  bindPopupEvents() {\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    const header = popup.querySelector(\".mermaid-ai-chat-header\");\n    const closeBtn = popup.querySelector(\".mermaid-ai-chat-close\");\n    const sendBtn = document.getElementById(\"mermaid-ai-chat-send\");\n    const saveBtn = document.getElementById(\"mermaid-ai-chat-save\");\n    const input = document.getElementById(\"mermaid-ai-chat-input\");\n    const codeEditor = document.getElementById(\"mermaid-code-editor\");\n\n    // Make popup draggable\n    this.makeDraggable(popup, header);\n\n    // Close popup\n    closeBtn.addEventListener(\"click\", () => {\n      this.hideChatPopup();\n    });\n\n    // Send message\n    sendBtn.addEventListener(\"click\", () => {\n      this.sendMessage();\n    });\n\n    // Save diagram\n    saveBtn.addEventListener(\"click\", () => {\n      this.saveDiagram();\n    });\n\n    // Send on Enter (Ctrl+Enter for new line)\n    input.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" && !e.ctrlKey && !e.shiftKey) {\n        e.preventDefault();\n        this.sendMessage();\n      }\n    });\n\n    // Code editor change event - update preview\n    codeEditor.addEventListener(\"input\", () => {\n      this.updateMermaidPreview();\n    });\n\n    // ✅ Zoom controls\n    this.bindZoomControls();\n\n    // Click outside to close - with proper event handling\n    setTimeout(() => {\n      const handleClickOutside = (e) => {\n        // Skip if popup is not open\n        if (!this.isPopupOpen) return;\n\n        // Skip if clicking on AI button (to prevent immediate close)\n        if (e.target.closest(\".macro-placeholder-property-panel-ai-button\")) {\n          return;\n        }\n\n        // ✅ Skip if clicking on AI button in ConfluenceEditor popup\n        if (\n          e.target.closest(\"#ai-send-btn\") &&\n          document.querySelector(\".confluence-editor-overlay\")\n        ) {\n          return;\n        }\n\n        // Skip if clicking inside popup\n        if (popup.contains(e.target)) {\n          return;\n        }\n\n        console.log(\"🖱️ Click outside popup detected, closing...\");\n        this.hideChatPopup();\n      };\n\n      document.addEventListener(\"click\", handleClickOutside, true);\n    }, 300); // Delay to prevent immediate close after opening\n  }\n\n  makeDraggable(popup, dragHandle) {\n    let isDragging = false;\n    let dragStartX = 0;\n    let dragStartY = 0;\n    let popupStartX = 0;\n    let popupStartY = 0;\n\n    console.log(\"🎯 DRAG: Setting up draggable popup...\");\n\n    // Style the drag handle\n    dragHandle.style.cursor = \"move\";\n    dragHandle.style.userSelect = \"none\";\n\n    const startDrag = (e) => {\n      // Don't drag if clicking on close button\n      if (e.target.classList.contains(\"mermaid-ai-chat-close\")) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation(); // Prevent event bubbling\n\n      isDragging = true;\n\n      // Get mouse position\n      dragStartX = e.clientX;\n      dragStartY = e.clientY;\n\n      // Get popup current position (from style, not getBoundingClientRect)\n      popupStartX = parseInt(popup.style.left) || 0;\n      popupStartY = parseInt(popup.style.top) || 0;\n\n      console.log(\"🎯 DRAG: Started\", {\n        mouseX: dragStartX,\n        mouseY: dragStartY,\n        popupX: popupStartX,\n        popupY: popupStartY,\n      });\n\n      // Add global event listeners\n      document.addEventListener(\"mousemove\", onDrag, true);\n      document.addEventListener(\"mouseup\", stopDrag, true);\n\n      // Prevent text selection during drag\n      document.body.style.userSelect = \"none\";\n    };\n\n    const onDrag = (e) => {\n      if (!isDragging) return;\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      // Calculate mouse movement\n      const deltaX = e.clientX - dragStartX;\n      const deltaY = e.clientY - dragStartY;\n\n      // Calculate new popup position\n      let newX = popupStartX + deltaX;\n      let newY = popupStartY + deltaY;\n\n      // Constrain to viewport (with some padding)\n      const padding = 10;\n      const maxX = window.innerWidth - 400 - padding; // 400 is popup width\n      const maxY = window.innerHeight - 300 - padding; // estimated popup height\n\n      newX = Math.max(padding, Math.min(newX, maxX));\n      newY = Math.max(padding, Math.min(newY, maxY));\n\n      // Apply position\n      popup.style.left = newX + \"px\";\n      popup.style.top = newY + \"px\";\n    };\n\n    const stopDrag = (e) => {\n      if (!isDragging) return;\n\n      console.log(\"🎯 DRAG: Stopped\");\n      isDragging = false;\n\n      // Remove global event listeners\n      document.removeEventListener(\"mousemove\", onDrag, true);\n      document.removeEventListener(\"mouseup\", stopDrag, true);\n\n      // Restore text selection\n      document.body.style.userSelect = \"\";\n\n      e.stopPropagation(); // Prevent click outside from firing\n    };\n\n    // Attach drag to header\n    dragHandle.addEventListener(\"mousedown\", startDrag);\n\n    console.log(\"✅ DRAG: Setup completed\");\n  }\n\n  showChatPopup(x, y) {\n    console.log(\"🎉 STEP 8: showChatPopup called with coordinates:\", { x, y });\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    console.log(\"🎉 STEP 8.1: Found popup element:\", popup);\n\n    if (!popup) {\n      console.error(\"❌ STEP 8.1: Popup element not found!\");\n      return;\n    }\n\n    // Populate code editor with current content\n    const codeEditor = document.getElementById(\"mermaid-code-editor\");\n    if (codeEditor && this.currentMermaidContent) {\n      codeEditor.value = this.currentMermaidContent;\n      // Trigger preview update\n      this.updateMermaidPreview();\n    }\n\n    const leftPos = Math.min(x, window.innerWidth - 400);\n    const topPos = Math.min(y, window.innerHeight - 300);\n\n    console.log(\"🎉 STEP 8.2: Setting popup position:\", { leftPos, topPos });\n    console.log(\"🎉 STEP 8.2: Window dimensions:\", {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n\n    popup.style.display = \"block\";\n    popup.style.left = leftPos + \"px\";\n    popup.style.top = topPos + \"px\";\n\n    console.log(\"🎉 STEP 8.3: Popup styles applied:\", {\n      display: popup.style.display,\n      left: popup.style.left,\n      top: popup.style.top,\n    });\n\n    this.isPopupOpen = true;\n    console.log(\"🎉 STEP 8.4: isPopupOpen set to:\", this.isPopupOpen);\n\n    // Focus input\n    setTimeout(() => {\n      const input = document.getElementById(\"mermaid-ai-chat-input\");\n      console.log(\"🎉 STEP 8.5: Focusing input element:\", input);\n      if (input) {\n        input.focus();\n        console.log(\"✅ STEP 8.5: Input focused successfully\");\n      } else {\n        console.error(\"❌ STEP 8.5: Input element not found!\");\n      }\n    }, 100);\n\n    console.log(\"✅ STEP 8: showChatPopup completed\");\n  }\n\n  /**\n   * Update Mermaid preview from code editor\n   */\n  async updateMermaidPreview() {\n    const codeEditor = document.getElementById(\"mermaid-code-editor\");\n    if (!codeEditor) return;\n\n    // ✅ Skip update if currently zooming to prevent flicker\n    if (this.isZooming) {\n      console.log(\"🔍 Skipping preview update during zoom to prevent flicker\");\n      return;\n    }\n\n    const code = codeEditor.value.trim();\n\n    // Update current content\n    this.currentMermaidContent = code;\n\n    // Store current zoom level\n    const currentZoom = this.currentZoom;\n\n    // Use preview component to update\n    await this.preview.updatePreview(code);\n\n    // ✅ Reapply zoom after preview update to maintain zoom level\n    if (currentZoom !== 1.0) {\n      setTimeout(() => {\n        this.currentZoom = currentZoom;\n        this.applyZoom();\n      }, 50); // Small delay to ensure DOM is updated\n    }\n  }\n\n  hideChatPopup() {\n    const popup = document.getElementById(\"mermaid-ai-chat-popup\");\n    const messagesContainer = document.getElementById(\n      \"mermaid-ai-chat-messages\"\n    );\n    const input = document.getElementById(\"mermaid-ai-chat-input\");\n\n    // 🧱 Kiểm tra popup tồn tại trước khi ẩn\n    if (popup) {\n      popup.style.display = \"none\";\n      this.isPopupOpen = false;\n    } else {\n      console.warn(\"⚠️ Không tìm thấy phần tử popup (mermaid-ai-chat-popup)\");\n    }\n\n    // 🧹 Xóa tin nhắn, giữ lại system message\n    if (messagesContainer) {\n      const systemMessage = messagesContainer.querySelector(\".system\");\n\n      // Chỉ reset khi container tồn tại\n      messagesContainer.innerHTML = \"\";\n      if (systemMessage) {\n        messagesContainer.appendChild(systemMessage);\n      } else {\n        console.warn(\"⚠️ Không tìm thấy system message trong chat container\");\n      }\n    } else {\n      console.warn(\n        \"⚠️ Không tìm thấy phần tử messages container (mermaid-ai-chat-messages)\"\n      );\n    }\n\n    // 🧽 Xóa input nếu có\n    if (input) {\n      input.value = \"\";\n    } else {\n      console.warn(\"⚠️ Không tìm thấy input (mermaid-ai-chat-input)\");\n    }\n\n    console.log(\"✅ Chat popup closed (đã kiểm tra đầy đủ phần tử)\");\n  }\n\n  async sendMessage() {\n    const input = document.getElementById(\"mermaid-ai-chat-input\");\n    const codeEditor = document.getElementById(\"mermaid-code-editor\");\n    const sendBtn = document.getElementById(\"mermaid-ai-chat-send\");\n    const message = input.value.trim();\n\n    if (!message) return;\n\n    // Get current code from editor\n    const currentCode = codeEditor.value.trim();\n    if (!currentCode) {\n      alert(\"⚠️ Please enter some Mermaid code first\");\n      return;\n    }\n\n    // Update current content\n    this.currentMermaidContent = currentCode;\n\n    // Disable send button and show loading\n    sendBtn.disabled = true;\n    sendBtn.textContent = \"🤔 Thinking...\";\n    input.disabled = true;\n\n    try {\n      // Call AI service\n      const response = await this.aiService.modifyDiagram(\n        this.currentMermaidContent,\n        message\n      );\n\n      // Update code editor with new diagram\n      codeEditor.value = response.edited_diagram;\n      this.currentMermaidContent = response.edited_diagram;\n\n      // Update preview\n      await this.updateMermaidPreview();\n\n      // Clear input\n      input.value = \"\";\n\n      console.log(\"✅ Diagram updated successfully by AI\");\n    } catch (error) {\n      console.error(\"❌ AI API error:\", error);\n\n      // Get user-friendly error message\n      const errorMessage = this.aiService.getErrorMessage(error);\n      alert(`❌ ${errorMessage}`);\n    } finally {\n      // Re-enable controls\n      sendBtn.disabled = false;\n      sendBtn.textContent = \"Send\";\n      input.disabled = false;\n      input.focus();\n    }\n  }\n\n  /**\n   * Save the current diagram back to Confluence\n   */\n  async saveDiagram() {\n    const codeEditor = document.getElementById(\"mermaid-code-editor\");\n    const saveBtn = document.getElementById(\"mermaid-ai-chat-save\");\n\n    if (!codeEditor) {\n      alert(\"❌ Code editor not found\");\n      return;\n    }\n\n    const currentCode = codeEditor.value.trim();\n    if (!currentCode) {\n      alert(\"⚠️ Please enter some Mermaid code first\");\n      return;\n    }\n\n    // Update current content\n    this.currentMermaidContent = currentCode;\n\n    // Disable save button and show loading\n    saveBtn.disabled = true;\n    saveBtn.textContent = \"💾 Saving...\";\n\n    try {\n      // Get saved diagram info from localStorage\n      const diagramInfoStr = localStorage.getItem(\"mermaid_diagram_info\");\n      if (!diagramInfoStr) {\n        throw new Error(\n          \"No diagram info found. Please click on a Mermaid image first.\"\n        );\n      }\n\n      const diagramInfo = JSON.parse(diagramInfoStr);\n      const pageId = MermaidApiClient.extractPageId();\n\n      if (!pageId) {\n        throw new Error(\"Could not extract page ID from current page.\");\n      }\n\n      console.log(`💾 Saving diagram with info:`, diagramInfo);\n\n      // Step 1: Update the Mermaid diagram with full data\n      const updateData = await this.updateMermaidDiagram(\n        diagramInfo.filename,\n        pageId,\n        currentCode,\n        diagramInfo.parsedParams\n      );\n      const reversionNew = updateData?.revision ? updateData.revision : 1;\n      // Step 2: Generate new placeholder image\n      const newImageHtml = await this.generatePlaceholderImage(\n        pageId,\n        diagramInfo.parsedParams,\n        reversionNew\n      );\n\n      // Step 3: Replace old image with new image in DOM\n      await this.replaceImageInDOM(\n        diagramInfo.parsedParams?.filename,\n        newImageHtml\n      );\n\n      // Show success message\n      alert(\"✅ Diagram saved and updated successfully!\");\n\n      // Close the popup after successful save\n      this.hideChatPopup();\n    } catch (error) {\n      console.error(\"❌ Error saving diagram:\", error);\n      alert(`❌ Error saving diagram: ${error.message}`);\n    } finally {\n      // Re-enable save button\n      saveBtn.disabled = false;\n      saveBtn.textContent = \"💾 Save\";\n    }\n  }\n\n  /**\n   * Update Mermaid diagram with full data (filename, data, svg, png)\n   */\n  async updateMermaidDiagram(filename, pageId, mermaidCode, parsedParams) {\n    console.log(`🔄 Updating Mermaid diagram: ${filename} on page ${pageId}`);\n\n    // Generate SVG and PNG from Mermaid code\n    const { svg, png } = await this.generateMermaidAssets(mermaidCode);\n\n    // Get current revision and increment it\n    const currentRevision = parseInt(parsedParams?.revision || \"1\");\n\n    const updateData = {\n      filename: filename,\n      data: mermaidCode,\n      revision: currentRevision + 1,\n      svg: svg,\n      png: png,\n    };\n\n    console.log(\"📤 Sending diagram update:\", {\n      filename,\n      revision: currentRevision + 1,\n      dataLength: mermaidCode.length,\n      svgLength: svg.length,\n      pngLength: png.length,\n    });\n\n    const response = await fetch(\n      `${CONFLUENCE_API_URLS.MERMAID_UPDATE}/${pageId}`,\n      {\n        method: \"PUT\",\n        headers: {\n          Accept: \"*/*\",\n          \"Accept-Language\": \"en-US,en;q=0.9,vi;q=0.8\",\n          \"Cache-Control\": \"no-cache\",\n          Connection: \"keep-alive\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n          Pragma: \"no-cache\",\n          Referer: CONFLUENCE_API_URLS.MERMAID_EDIT_REFERER,\n          \"Sec-Fetch-Dest\": \"empty\",\n          \"Sec-Fetch-Mode\": \"cors\",\n          \"Sec-Fetch-Site\": \"same-origin\",\n          \"User-Agent\": navigator.userAgent,\n          \"X-Requested-With\": \"XMLHttpRequest\",\n          \"X-Atlassian-Token\": \"no-check\",\n          \"sec-ch-ua\":\n            '\"Chromium\";v=\"140\", \"Not=A?Brand\";v=\"24\", \"Google Chrome\";v=\"140\"',\n          \"sec-ch-ua-mobile\": \"?0\",\n          \"sec-ch-ua-platform\": '\"Windows\"',\n        },\n        body: JSON.stringify(updateData),\n      }\n    );\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(\n        `Mermaid Update API Error: ${response.status} - ${errorText}`\n      );\n    }\n\n    const result = await response.json();\n    console.log(\"✅ Mermaid diagram updated successfully:\", result);\n    return result;\n  }\n\n  /**\n   * Generate SVG and PNG assets from Mermaid code\n   */\n  async generateMermaidAssets(mermaidCode) {\n    try {\n      // Import Mermaid dynamically if not already available\n      if (!window.mermaid) {\n        console.log(\"📦 Loading Mermaid library...\");\n        await MermaidRenderer.loadMermaidScript();\n      }\n\n      // Initialize Mermaid if needed\n      if (!window.mermaid.mermaidAPI) {\n        window.mermaid.initialize({ startOnLoad: false });\n      }\n\n      console.log(\"🎨 Generating SVG from Mermaid code...\");\n\n      // Generate SVG\n      const { svg } = await window.mermaid.render(\"temp-diagram\", mermaidCode);\n\n      console.log(\"✅ SVG generated successfully\", svg);\n\n      // Generate PNG from SVG using new method\n      const pngDataUrl = await this.convertSvgToPngDataUrl(svg);\n\n      if (!pngDataUrl) {\n        throw new Error(\"Failed to convert SVG to PNG\");\n      }\n\n      // Extract base64 part from data URL (remove \"data:image/png;base64,\" prefix)\n      const pngBase64 = pngDataUrl.split(\",\")[1];\n\n      console.log(\"✅ PNG generated successfully\");\n\n      return {\n        svg: svg,\n        png: pngBase64,\n      };\n    } catch (error) {\n      console.error(\"❌ Error generating Mermaid assets:\", error);\n      throw new Error(`Failed to generate Mermaid assets: ${error.message}`);\n    }\n  }\n\n  /**\n   * Encode SVG for API\n   */\n  encodeSvg(svg) {\n    // Encode SVG to base64\n    return btoa(\n      new TextEncoder()\n        .encode(svg)\n        .reduce((data, byte) => data + String.fromCharCode(byte), \"\")\n    );\n  }\n\n  /**\n   * Chuyển đổi chuỗi SVG thành chuỗi Data URL của định dạng PNG.\n   * @param {string} svgString Chuỗi XML của SVG (ví dụ: <svg>...</svg>).\n   * @param {number} scale Hệ số phóng đại (ví dụ: 2 để tăng gấp đôi độ phân giải).\n   * @returns {Promise<string|null>} Promise trả về chuỗi Data URL (data:image/png;base64,...)\n   */\n  async convertSvgToPngDataUrl(svgString, scale = 2) {\n    return new Promise((resolve) => {\n      if (!svgString) {\n        console.error(\"Lỗi: Chuỗi SVG đầu vào rỗng.\");\n        return resolve(null);\n      }\n\n      // 1. Mã hóa chuỗi SVG thành Data URL\n      // Cần đảm bảo chuỗi không có ký tự đặc biệt gây lỗi.\n      const svgUrl =\n        \"data:image/svg+xml;base64,\" +\n        btoa(\n          new TextEncoder()\n            .encode(svgString)\n            .reduce((data, byte) => data + String.fromCharCode(byte), \"\")\n        );\n\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const img = new Image();\n\n      img.onload = function () {\n        // Lấy kích thước gốc của SVG\n        const originalWidth = img.width;\n        const originalHeight = img.height;\n\n        console.log(`🖼️ SVG original size: ${originalWidth}x${originalHeight}`);\n\n        // Tính kích thước canvas với scale\n        const canvasWidth = originalWidth * scale;\n        const canvasHeight = originalHeight * scale;\n\n        // Đặt kích thước Canvas\n        canvas.width = canvasWidth;\n        canvas.height = canvasHeight;\n\n        console.log(\n          `🖼️ Canvas size: ${canvasWidth}x${canvasHeight} (scale: ${scale})`\n        );\n\n        // Đặt nền trắng cho toàn bộ canvas\n        ctx.fillStyle = \"white\";\n        ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n\n        // Vẽ ảnh SVG lên Canvas với kích thước đã scale\n        // Không dùng ctx.scale() để tránh confusion, thay vào đó scale trực tiếp trong drawImage\n        ctx.drawImage(img, 0, 0, canvasWidth, canvasHeight);\n\n        console.log(\"✅ SVG drawn to canvas successfully\");\n\n        // 3. Xuất ra chuỗi Data URL định dạng PNG\n        const pngDataUrl = canvas.toDataURL(\"image/png\");\n\n        // Dọn dẹp\n        canvas.remove();\n\n        resolve(pngDataUrl);\n      };\n\n      img.onerror = function (err) {\n        console.error(\"Lỗi khi tải SVG vào Image object:\", err);\n        // Dọn dẹp\n        canvas.remove();\n        resolve(null);\n      };\n\n      // Bắt đầu tải ảnh SVG đã mã hóa\n      img.src = svgUrl;\n    });\n  }\n\n  /**\n   * Convert SVG to PNG base64 (legacy method)\n   */\n  async svgToPng(svg) {\n    return new Promise((resolve, reject) => {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const img = new Image();\n\n      img.onload = () => {\n        canvas.width = img.width;\n        canvas.height = img.height;\n        ctx.drawImage(img, 0, 0);\n\n        // Get base64 PNG (remove data:image/png;base64, prefix)\n        const pngBase64 = canvas.toDataURL(\"image/png\").split(\",\")[1];\n        resolve(pngBase64);\n      };\n\n      img.onerror = (error) => {\n        reject(new Error(`Failed to convert SVG to PNG: ${error}`));\n      };\n\n      // Create blob URL for SVG\n      const svgBlob = new Blob([svg], { type: \"image/svg+xml\" });\n      const url = URL.createObjectURL(svgBlob);\n      img.src = url;\n    });\n  }\n\n  /**\n   * Save Mermaid code to Confluence (legacy method - kept for compatibility)\n   */\n  async saveMermaidCode(filename, pageId, mermaidCode) {\n    const response = await fetch(CONFLUENCE_API_URLS.MERMAID_SAVE, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"X-Atlassian-Token\": \"no-check\",\n      },\n      body: JSON.stringify({\n        pageId: pageId,\n        filename: filename,\n        mermaidCode: mermaidCode,\n      }),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(\n        `Mermaid Save API Error: ${response.status} - ${errorText}`\n      );\n    }\n\n    const result = await response.json();\n    console.log(\"✅ Mermaid code saved successfully:\", result);\n    return result;\n  }\n\n  /**\n   * Generate new placeholder image using TinyMCE API\n   */\n  async generatePlaceholderImage(pageId, parsedParams, reversionNew) {\n    const macroData = {\n      contentId: pageId,\n      macro: {\n        name: \"mermaid-cloud\",\n        params: {\n          filename: parsedParams?.filename || \"Diagram\",\n          revision: reversionNew, // Increment revision\n          zoom: parsedParams?.zoom || \"fit\",\n          toolbar: parsedParams?.toolbar || \"bottom\",\n          format: parsedParams?.format || \"svg\",\n        },\n      },\n    };\n\n    console.log(\"🖼️ Generating placeholder with data:\", macroData);\n\n    const response = await fetch(CONFLUENCE_API_URLS.TINYMCE_PLACEHOLDER, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n        Accept: \"text/plain, */*; q=0.01\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n        \"X-Atlassian-Token\": \"no-check\",\n      },\n      body: JSON.stringify(macroData),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(\n        `TinyMCE Placeholder API Error: ${response.status} - ${errorText}`\n      );\n    }\n\n    const newImageHtml = await response.text();\n    console.log(\"✅ New placeholder image generated:\", newImageHtml);\n\n    return newImageHtml;\n  }\n\n  /**\n   * Replace old image with new image in DOM by filename\n   */\n  async replaceImageInDOM(filename, newImageHtml) {\n    if (!filename || !newImageHtml) {\n      console.error(\"❌ Missing filename or newImageHtml\");\n      return;\n    }\n\n    console.log(`🔄 Looking for images with filename: ${filename}`);\n\n    // Create temporary element to parse new image HTML\n    const tempDiv = document.createElement(\"div\");\n    tempDiv.innerHTML = newImageHtml;\n    const newImg = tempDiv.querySelector(\"img\");\n\n    if (!newImg) {\n      throw new Error(\"Could not parse new image from HTML\");\n    }\n\n    console.log(\"🆕 New image element:\", newImg);\n\n    // Find images by filename in data-macro-parameters\n    const foundImages = this.findImagesByFilename(filename);\n\n    console.log(`🔍 Found ${foundImages.length} images to replace`);\n\n    foundImages.forEach((oldImg, index) => {\n      console.log(`🔄 Replacing image ${index + 1}:`, oldImg);\n\n      // Replace all attributes from new image to old image\n      this.replaceImageAttributes(oldImg, newImg);\n\n      console.log(\"✅ Image replaced successfully:\", oldImg);\n    });\n  }\n\n  /**\n   * Find images by filename in data-macro-parameters\n   */\n  findImagesByFilename(filename) {\n    const foundImages = [];\n\n    // Search in main document\n    const mainImages = document.querySelectorAll(\"img[data-macro-parameters]\");\n    mainImages.forEach((img) => {\n      const macroParams = img.getAttribute(\"data-macro-parameters\");\n      if (macroParams && macroParams.includes(`filename=${filename}`)) {\n        foundImages.push(img);\n      }\n    });\n\n    // Search in iframes (Confluence editor)\n    const iframes = document.querySelectorAll(\"iframe\");\n    iframes.forEach((iframe) => {\n      try {\n        const iframeDoc =\n          iframe.contentDocument || iframe.contentWindow.document;\n        const iframeImages = iframeDoc.querySelectorAll(\n          \"img[data-macro-parameters]\"\n        );\n\n        iframeImages.forEach((img) => {\n          const macroParams = img.getAttribute(\"data-macro-parameters\");\n          if (macroParams && macroParams.includes(`filename=${filename}`)) {\n            foundImages.push(img);\n          }\n        });\n      } catch (error) {\n        console.warn(\"Could not access iframe content:\", error);\n      }\n    });\n\n    return foundImages;\n  }\n\n  /**\n   * Replace all attributes from new image to old image\n   */\n  replaceImageAttributes(oldImg, newImg) {\n    // Get all attributes from new image\n    const newAttributes = newImg.attributes;\n\n    // Remove all old attributes except those we want to keep\n    const attributesToKeep = [\"id\", \"class\"]; // Keep these if you want\n    const oldAttributes = Array.from(oldImg.attributes);\n\n    oldAttributes.forEach((attr) => {\n      if (!attributesToKeep.includes(attr.name)) {\n        oldImg.removeAttribute(attr.name);\n      }\n    });\n\n    // Copy all attributes from new image\n    Array.from(newAttributes).forEach((attr) => {\n      oldImg.setAttribute(attr.name, attr.value);\n    });\n\n    console.log(\"🔄 Attributes replaced:\", {\n      old: oldAttributes.map((a) => `${a.name}=\"${a.value}\"`),\n      new: Array.from(newAttributes).map((a) => `${a.name}=\"${a.value}\"`),\n    });\n  }\n\n  addMessage(type, content) {\n    const messagesContainer = document.getElementById(\n      \"mermaid-ai-chat-messages\"\n    );\n    const messageId = \"msg-\" + Date.now();\n\n    const messageDiv = document.createElement(\"div\");\n    messageDiv.className = `mermaid-ai-chat-message ${type}`;\n    messageDiv.id = messageId;\n    messageDiv.innerHTML = `\n      <div class=\"message-content\">\n        <p>${content}</p>\n      </div>\n    `;\n\n    messagesContainer.appendChild(messageDiv);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n    return messageId;\n  }\n\n  removeMessage(messageId) {\n    const message = document.getElementById(messageId);\n    if (message) {\n      message.remove();\n    }\n  }\n}\n\n// Export for use as service in K-Tool Extension\n// Initialization will be handled by the main content.js\n","// Text Edit AI Service for K-Tool Extension\nimport { API_URLS } from \"../../shared/constants.js\";\n\nexport class TextEditAI {\n  constructor() {\n    this.isPopupOpen = false;\n    this.selectedText = \"\";\n    this.selectedElement = null;\n    this.selectedDocument = document; // Track which document the selection came from\n    this.editButton = null;\n\n    console.log(\"🚀 TextEditAI initializing...\");\n    this.init();\n  }\n\n  async init() {\n    console.log(\"🚀 TextEditAI initializing...\");\n\n    // Check if already injected\n    if (document.getElementById(\"text-edit-ai-root\")) {\n      console.log(\"🔍 TextEditAI already injected, skipping...\");\n      return;\n    }\n\n    // Load CSS\n    this.loadCSS();\n\n    // Create popup UI\n    this.createPopupUI();\n\n    // Setup text selection detection\n    this.setupTextSelectionDetection();\n\n    console.log(\"✅ TextEditAI ready\");\n  }\n\n  loadCSS() {\n    // Skip external CSS loading - we use inline CSS now\n    console.log(\"📄 CSS: Using inline CSS instead of external file\");\n  }\n\n  setupTextSelectionDetection() {\n    console.log(\"🔍 Setting up text selection detection...\");\n\n    // Listen for text selection events on main document\n    this.attachSelectionListeners(document);\n\n    // Also listen for iframe events\n    this.setupIframeSelectionListeners();\n\n    // Global click handler for hiding edit button only\n    document.addEventListener(\"click\", (e) => {\n      // Hide edit button when clicking elsewhere (but not on popup)\n      if (\n        !e.target.closest(\".text-edit-button\") &&\n        !e.target.closest(\"#text-edit-ai-popup\")\n      ) {\n        this.hideEditButton();\n      }\n    });\n  }\n\n  attachSelectionListeners(doc) {\n    const docType = doc === document ? \"main document\" : \"iframe document\";\n    console.log(`🎯 LISTENERS: Attaching selection listeners to ${docType}`);\n    console.log(`🎯 LISTENERS: Document title:`, doc.title || \"no title\");\n    console.log(`🎯 LISTENERS: Document URL:`, doc.URL || \"no URL\");\n\n    // Remove existing listeners if any (prevent duplicates)\n    if (doc._textEditListenersAttached) {\n      console.log(`⚠️ LISTENERS: ${docType} already has listeners, skipping`);\n      return;\n    }\n\n    const mouseupHandler = (e) => {\n      console.log(`🖱️ MOUSEUP: Event fired in ${docType}`);\n      this.handleTextSelection(e, doc);\n    };\n\n    const keyupHandler = (e) => {\n      // Handle keyboard selection (Shift + Arrow keys, Ctrl+A, etc.)\n      if (e.shiftKey || e.ctrlKey) {\n        console.log(`⌨️ KEYUP: Selection event fired in ${docType}`, e.key);\n        this.handleTextSelection(e, doc);\n      }\n    };\n\n    // Use capture=true for better event handling (like mermaidAIChat)\n    doc.addEventListener(\"mouseup\", mouseupHandler, true);\n    doc.addEventListener(\"keyup\", keyupHandler, true);\n\n    // Mark as attached to prevent duplicates\n    doc._textEditListenersAttached = true;\n    doc._textEditMouseupHandler = mouseupHandler;\n    doc._textEditKeyupHandler = keyupHandler;\n\n    console.log(`✅ LISTENERS: Selection listeners attached to ${docType}`);\n  }\n\n  setupIframeSelectionListeners() {\n    console.log(\"🔍 Setting up iframe selection listeners...\");\n\n    // Find existing iframes\n    this.refreshIframeListeners();\n\n    // Setup Confluence page change detection like mermaidAIChat\n    this.setupConfluencePageChangeDetection();\n\n    // Watch for new iframes\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        mutation.addedNodes.forEach((node) => {\n          if (node.nodeType === Node.ELEMENT_NODE) {\n            if (node.tagName === \"IFRAME\") {\n              this.attachToIframe(node);\n            }\n            // Also check for iframes inside added nodes\n            const iframes =\n              node.querySelectorAll && node.querySelectorAll(\"iframe\");\n            if (iframes) {\n              iframes.forEach((iframe) => this.attachToIframe(iframe));\n            }\n          }\n        });\n      });\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n    });\n  }\n\n  setupConfluencePageChangeDetection() {\n    console.log(\n      \"🔍 PAGE CHANGE: Setting up Confluence page change detection...\"\n    );\n\n    // Method 1: Listen for Confluence-specific events\n    if (window.AJS && AJS.bind) {\n      // Editor events\n      AJS.bind(\"init.rte\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Confluence RTE initialized - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.refreshIframeListeners(), 1000);\n      });\n\n      AJS.bind(\"rte-ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Confluence RTE ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.refreshIframeListeners(), 1000);\n      });\n\n      // Page events\n      AJS.bind(\"page.edit.ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Page edit ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.refreshIframeListeners(), 1500);\n      });\n\n      AJS.bind(\"page.view.ready\", () => {\n        console.log(\n          \"🔄 PAGE CHANGE: Page view ready - re-setting up iframe listeners\"\n        );\n        setTimeout(() => this.refreshIframeListeners(), 1000);\n      });\n    }\n\n    // Method 2: Watch for URL changes (SPA navigation)\n    let currentUrl = window.location.href;\n    const checkUrlChange = () => {\n      if (window.location.href !== currentUrl) {\n        console.log(\n          \"🔄 PAGE CHANGE: URL changed from\",\n          currentUrl,\n          \"to\",\n          window.location.href\n        );\n        currentUrl = window.location.href;\n\n        // Re-setup after URL change\n        setTimeout(() => {\n          console.log(\n            \"🔄 PAGE CHANGE: Re-setting up iframe listeners after URL change\"\n          );\n          this.refreshIframeListeners();\n        }, 2000);\n      }\n    };\n\n    setInterval(checkUrlChange, 1000);\n\n    console.log(\n      \"✅ PAGE CHANGE: Confluence page change detection setup completed\"\n    );\n  }\n\n  refreshIframeListeners() {\n    // Tìm tất cả iframes hiện tại\n    const iframes = document.querySelectorAll(\"iframe\");\n    console.log(\"🔍 IFRAME REFRESH: Found\", iframes.length, \"iframes\");\n\n    if (iframes.length === 0) {\n      console.log(\"⚠️ IFRAME REFRESH: No iframes found on page\");\n      console.log(\n        \"⚠️ IFRAME REFRESH: Document ready state:\",\n        document.readyState\n      );\n\n      // Try again after a delay\n      setTimeout(() => {\n        console.log(\"🔍 IFRAME REFRESH: Retrying iframe search after delay...\");\n        const retryIframes = document.querySelectorAll(\"iframe\");\n        console.log(\n          \"🔍 IFRAME REFRESH: Retry found\",\n          retryIframes.length,\n          \"iframes\"\n        );\n        if (retryIframes.length > 0) {\n          retryIframes.forEach((iframe, index) => {\n            console.log(\n              `🔍 IFRAME REFRESH RETRY ${index}: Processing iframe:`,\n              iframe.src || iframe.id || \"no-src\"\n            );\n            this.attachToIframe(iframe, `refresh-retry-${index}`);\n          });\n        }\n      }, 1000);\n    } else {\n      iframes.forEach((iframe, index) => {\n        console.log(\n          `🔍 IFRAME REFRESH ${index}: Processing iframe:`,\n          iframe.src || iframe.id || \"no-src\"\n        );\n        this.attachToIframe(iframe, `refresh-${index}`);\n      });\n    }\n  }\n\n  attachToExistingIframes() {\n    // This method is now replaced by refreshIframeListeners\n    // Keep for backward compatibility but delegate to the new method\n    this.refreshIframeListeners();\n  }\n\n  attachToIframe(iframe, id = \"new\") {\n    try {\n      // Skip if already attached\n      if (iframe.dataset.textEditListenerAttached === \"true\") {\n        console.log(`⏭️ Iframe ${id} already has listeners attached`);\n        return;\n      }\n\n      console.log(\n        `🔍 IFRAME ${id}: Attaching to iframe:`,\n        iframe.src || iframe.id || iframe.className || \"no-identifier\"\n      );\n\n      const attachListeners = () => {\n        try {\n          const iframeDoc =\n            iframe.contentDocument || iframe.contentWindow?.document;\n\n          if (!iframeDoc) {\n            console.log(\n              `⚠️ IFRAME ${id}: Cannot access iframe document (cross-origin or not loaded)`\n            );\n            return false;\n          }\n\n          console.log(\n            `✅ IFRAME ${id}: Document accessible, ready state:`,\n            iframeDoc.readyState\n          );\n          console.log(`✅ IFRAME ${id}: Document URL:`, iframeDoc.URL);\n          console.log(`✅ IFRAME ${id}: Document body:`, !!iframeDoc.body);\n\n          // Wait for body to be available\n          if (!iframeDoc.body) {\n            console.log(`⏳ IFRAME ${id}: Body not ready, waiting...`);\n            setTimeout(() => attachListeners(), 100);\n            return false;\n          }\n\n          console.log(\n            `🎯 IFRAME ${id}: Attaching selection listeners to iframe document`\n          );\n\n          // Selection handlers: Handle text selection events in iframe\n          const mouseupHandler = (event) => {\n            console.log(`🖱️ IFRAME ${id} MOUSEUP: Event fired in iframe`);\n            this.handleTextSelection(event, iframeDoc);\n          };\n\n          const keyupHandler = (event) => {\n            // Handle keyboard selection (Shift + Arrow keys, Ctrl+A, etc.)\n            if (event.shiftKey || event.ctrlKey) {\n              console.log(\n                `⌨️ IFRAME ${id} KEYUP: Selection event fired in iframe`,\n                event.key\n              );\n              this.handleTextSelection(event, iframeDoc);\n            }\n          };\n\n          // Remove existing listeners if any\n          if (iframeDoc.textEditMouseupHandler) {\n            iframeDoc.removeEventListener(\n              \"mouseup\",\n              iframeDoc.textEditMouseupHandler,\n              true\n            );\n          }\n          if (iframeDoc.textEditKeyupHandler) {\n            iframeDoc.removeEventListener(\n              \"keyup\",\n              iframeDoc.textEditKeyupHandler,\n              true\n            );\n          }\n\n          // Add new listeners with capture=true to catch events early\n          iframeDoc.addEventListener(\"mouseup\", mouseupHandler, true);\n          iframeDoc.addEventListener(\"keyup\", keyupHandler, true);\n\n          // Store references to remove later if needed\n          iframeDoc.textEditMouseupHandler = mouseupHandler;\n          iframeDoc.textEditKeyupHandler = keyupHandler;\n          iframeDoc._textEditListenersAttached = true;\n\n          // Mark iframe as attached\n          iframe.dataset.textEditListenerAttached = \"true\";\n          console.log(\n            `✅ IFRAME ${id}: Selection listeners attached successfully`\n          );\n          return true;\n        } catch (e) {\n          console.log(\n            `❌ IFRAME ${id}: Error accessing iframe content:`,\n            e.message\n          );\n          return false;\n        }\n      };\n\n      // Remove existing load listener if any (like mermaidAIChat)\n      if (iframe.textEditLoadHandler) {\n        iframe.removeEventListener(\"load\", iframe.textEditLoadHandler);\n      }\n\n      // Create load handler\n      const loadHandler = () => {\n        console.log(`🔍 IFRAME ${id}: Iframe loaded, attaching listeners...`);\n        setTimeout(attachListeners, 100); // Small delay to ensure DOM is ready\n      };\n\n      // Add load listener\n      iframe.addEventListener(\"load\", loadHandler);\n      iframe.textEditLoadHandler = loadHandler;\n\n      // If iframe is already loaded, call handler immediately\n      if (\n        iframe.contentDocument &&\n        iframe.contentDocument.readyState === \"complete\"\n      ) {\n        console.log(`� IFRAME ${id}: Already loaded, attaching immediately`);\n        loadHandler();\n      } else {\n        console.log(`⏳ IFRAME ${id}: Waiting for iframe to load...`);\n      }\n    } catch (error) {\n      console.log(\n        `❌ IFRAME ${id}: Error setting up iframe listener:`,\n        error.message\n      );\n    }\n  }\n\n  handleTextSelection(_e, doc = document) {\n    const docType = doc === document ? \"main document\" : \"iframe document\";\n    console.log(`🔍 SELECTION: Handling text selection in ${docType}`);\n\n    // Small delay to ensure selection is complete\n    setTimeout(() => {\n      try {\n        // Get selection from the appropriate document/window\n        const selection =\n          doc === document ? window.getSelection() : doc.getSelection();\n\n        if (!selection) {\n          console.log(`⚠️ SELECTION: No selection API available in ${docType}`);\n          return;\n        }\n\n        const selectedText = selection.toString().trim();\n        console.log(\n          `📝 SELECTION: Selected text length: ${selectedText.length} in ${docType}`\n        );\n\n        if (selectedText.length > 0) {\n          console.log(\n            `📝 SELECTION: Text selected: \"${selectedText.substring(0, 50)}${\n              selectedText.length > 50 ? \"...\" : \"\"\n            }\"`\n          );\n\n          // Check if we're in Confluence edit mode\n          const isEditMode = this.isInConfluenceEditMode();\n          console.log(`📝 SELECTION: Edit mode check result:`, isEditMode);\n\n          if (isEditMode) {\n            console.log(\n              `✅ SELECTION: In edit mode, showing button for ${docType} selection`\n            );\n\n            this.selectedText = selectedText;\n            this.selectedElement = selection.getRangeAt(0);\n            this.selectedDocument = doc; // Store which document the selection came from\n            this.showEditButton();\n          } else {\n            console.log(`❌ SELECTION: Not in edit mode, hiding button`);\n            this.hideEditButton();\n          }\n        } else {\n          console.log(\n            `📝 SELECTION: No text selected in ${docType}, hiding button`\n          );\n          this.hideEditButton();\n        }\n      } catch (error) {\n        console.error(\n          `❌ SELECTION: Error handling selection in ${docType}:`,\n          error\n        );\n      }\n    }, 100);\n  }\n\n  isInConfluenceEditMode() {\n    // Check various indicators that we're in Confluence edit mode\n    const editIndicators = [\n      // Confluence editor iframe\n      document.querySelector('iframe[id*=\"editor\"]'),\n      // Edit mode class on body\n      document.body.classList.contains(\"edit-mode\"),\n      // Confluence editor toolbar\n      document.querySelector(\".confluence-editor-toolbar\"),\n      // Edit page URL pattern\n      window.location.href.includes(\"/pages/editpage.action\"),\n      window.location.href.includes(\"/pages/resumedraft.action\"),\n      window.location.href.includes(\"mode=edit\"),\n      // TinyMCE editor\n      document.querySelector(\".mce-tinymce\"),\n      // Modern Confluence editor\n      document.querySelector('[data-testid=\"editor\"]'),\n      // Confluence content editable areas\n      document.querySelector('[contenteditable=\"true\"]'),\n      // Atlassian editor\n      document.querySelector(\".ak-editor-content-area\"),\n      // Legacy Confluence editor\n      document.querySelector(\"#wysiwygTextarea_ifr\"),\n      // Check if we're inside an iframe that might be an editor\n      window.parent !== window &&\n        window.frameElement &&\n        (window.frameElement.id.includes(\"editor\") ||\n          window.frameElement.src.includes(\"editor\")),\n    ];\n\n    const isEditMode = editIndicators.some((indicator) => indicator);\n    console.log(\"🔍 Confluence edit mode check:\", isEditMode);\n    return isEditMode;\n  }\n\n  showEditButton() {\n    // Remove existing button\n    this.hideEditButton();\n\n    // Create edit button\n    this.editButton = document.createElement(\"button\");\n    this.editButton.className = \"text-edit-button\";\n    this.editButton.innerHTML = \"✏️ Edit with AI\";\n    this.editButton.style.cssText = `\n      position: absolute;\n      background: #0066cc;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      padding: 6px 12px;\n      font-size: 12px;\n      cursor: pointer;\n      z-index: 10000;\n      box-shadow: 0 2px 8px rgba(0,0,0,0.2);\n      transition: all 0.2s;\n    `;\n\n    // Position button near the selection - get selection range for better positioning\n    try {\n      const doc = this.selectedDocument || document;\n      const selection =\n        doc === document ? window.getSelection() : doc.getSelection();\n\n      if (selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        const rect = range.getBoundingClientRect();\n\n        // Calculate position relative to viewport\n        let left = rect.left + rect.width / 2 - 60; // Center button on selection\n        let top = rect.bottom + 5; // Position below selection\n\n        // Adjust if button would go off screen\n        const buttonWidth = 120;\n        const buttonHeight = 32;\n\n        if (left + buttonWidth > window.innerWidth) {\n          left = window.innerWidth - buttonWidth - 10;\n        }\n        if (left < 10) {\n          left = 10;\n        }\n\n        if (top + buttonHeight > window.innerHeight) {\n          top = rect.top - buttonHeight - 5; // Position above selection\n        }\n\n        this.editButton.style.left = left + \"px\";\n        this.editButton.style.top = top + \"px\";\n\n        console.log(\"📍 Button positioned at:\", { left, top, rect });\n      }\n    } catch (error) {\n      console.error(\"❌ Error positioning button:\", error);\n      // Fallback positioning\n      this.editButton.style.left = \"50px\";\n      this.editButton.style.top = \"50px\";\n    }\n\n    // Add hover effect\n    this.editButton.addEventListener(\"mouseenter\", () => {\n      this.editButton.style.background = \"#0052a3\";\n      this.editButton.style.transform = \"scale(1.05)\";\n    });\n\n    this.editButton.addEventListener(\"mouseleave\", () => {\n      this.editButton.style.background = \"#0066cc\";\n      this.editButton.style.transform = \"scale(1)\";\n    });\n\n    // Add click handler\n    this.editButton.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      this.showEditPopup();\n    });\n\n    document.body.appendChild(this.editButton);\n  }\n\n  hideEditButton() {\n    if (this.editButton) {\n      this.editButton.remove();\n      this.editButton = null;\n    }\n  }\n\n  showEditPopup() {\n    console.log(\"🔓 SHOW: Attempting to show popup...\");\n\n    // Ensure popup exists\n    let popup = document.getElementById(\"text-edit-ai-popup\");\n    if (!popup) {\n      console.log(\"🔧 SHOW: Popup not found, creating...\");\n      this.createPopupUI();\n      popup = document.getElementById(\"text-edit-ai-popup\");\n      if (!popup) {\n        console.error(\"❌ SHOW: Failed to create popup!\");\n        return;\n      }\n    }\n\n    // Populate the selected text in the popup\n    const selectedTextDisplay = document.getElementById(\n      \"selected-text-display\"\n    );\n    if (selectedTextDisplay) {\n      selectedTextDisplay.textContent = this.selectedText;\n    }\n\n    // Clear previous input\n    const promptInput = document.getElementById(\"edit-prompt-input\");\n    if (promptInput) {\n      promptInput.value = \"\";\n    }\n\n    // Position popup in center of screen\n    popup.style.display = \"flex\";\n    popup.style.visibility = \"visible\";\n    popup.style.left = \"50%\";\n    popup.style.top = \"50%\";\n    popup.style.transform = \"translate(-50%, -50%)\";\n\n    this.isPopupOpen = true;\n    console.log(\"✅ SHOW: Popup shown successfully\");\n    console.log(\"🔍 SHOW: isPopupOpen =\", this.isPopupOpen);\n\n    // Focus on input\n    setTimeout(() => {\n      if (promptInput) {\n        promptInput.focus();\n      }\n    }, 100);\n\n    // Hide edit button\n    this.hideEditButton();\n  }\n\n  hideEditPopup() {\n    console.log(\"🔒 HIDE: Attempting to hide popup...\");\n    const popup = document.getElementById(\"text-edit-ai-popup\");\n\n    if (popup) {\n      popup.style.display = \"none\";\n      this.isPopupOpen = false;\n      console.log(\"✅ HIDE: Popup hidden successfully\");\n    } else {\n      console.error(\"❌ HIDE: Popup element not found!\");\n    }\n\n    console.log(\"🔍 HIDE: isPopupOpen =\", this.isPopupOpen);\n  }\n\n  // Force close popup - emergency method\n  forceClosePopup() {\n    console.log(\"🚨 FORCE CLOSE: Emergency popup close...\");\n    const root = document.getElementById(\"text-edit-ai-root\");\n    if (root) {\n      root.remove();\n      console.log(\"🗑️ FORCE CLOSE: Root element removed\");\n    }\n    this.isPopupOpen = false;\n    console.log(\"✅ FORCE CLOSE: Popup force closed\");\n  }\n\n  createPopupUI() {\n    // Check if popup already exists\n    const existingRoot = document.getElementById(\"text-edit-ai-root\");\n    if (existingRoot) {\n      console.log(\"✅ Popup already exists, skipping creation\");\n      return;\n    }\n\n    console.log(\"🔧 Creating popup UI...\");\n    const root = document.createElement(\"div\");\n    root.id = \"text-edit-ai-root\";\n    root.innerHTML = `\n      <style>\n        .text-edit-ai-popup {\n          position: fixed;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          width: 600px;\n          max-width: 90vw;\n          background: white;\n          border-radius: 12px;\n          box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);\n          z-index: 10000;\n          font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n          overflow: hidden;\n          border: none;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .text-edit-ai-header {\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          padding: 16px 20px;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          cursor: move;\n          user-select: none;\n        }\n\n        .text-edit-ai-header h3 {\n          margin: 0;\n          font-size: 16px;\n          font-weight: 600;\n          color: white;\n        }\n\n        .text-edit-ai-close {\n          background: none;\n          border: none;\n          color: white;\n          font-size: 24px;\n          cursor: pointer;\n          padding: 0;\n          width: 30px;\n          height: 30px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          border-radius: 50%;\n          transition: background-color 0.2s;\n        }\n\n        .text-edit-ai-close:hover {\n          background-color: rgba(255, 255, 255, 0.2);\n        }\n        .text-edit-ai-body {\n          flex: 1;\n          padding: 20px;\n          overflow-y: auto;\n          max-height: 70vh;\n        }\n\n        .selected-text-section {\n          margin-bottom: 20px;\n        }\n\n        .selected-text-display {\n          background: #f8f9fa;\n          border: 1px solid #e9ecef;\n          border-radius: 8px;\n          padding: 12px;\n          font-size: 14px;\n          line-height: 1.5;\n          color: #495057;\n          max-height: 120px;\n          overflow-y: auto;\n          white-space: pre-wrap;\n        }\n\n        .prompt-section {\n          margin-bottom: 20px;\n        }\n\n        .prompt-section label {\n          display: block;\n          margin-bottom: 8px;\n          font-weight: 600;\n          color: #495057;\n          font-size: 14px;\n        }\n        .edit-prompt-input {\n          width: 100%;\n          padding: 12px;\n          border: 2px solid #e9ecef;\n          border-radius: 8px;\n          font-size: 14px;\n          font-family: inherit;\n          resize: vertical;\n          min-height: 80px;\n          transition: border-color 0.2s;\n          box-sizing: border-box;\n        }\n\n        .edit-prompt-input:focus {\n          outline: none;\n          border-color: #667eea;\n          box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n        }\n\n        .quick-actions {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 8px;\n          margin-bottom: 20px;\n        }\n\n        .quick-action-btn {\n          background: #f8f9fa;\n          border: 1px solid #e9ecef;\n          border-radius: 6px;\n          padding: 6px 12px;\n          font-size: 12px;\n          cursor: pointer;\n          transition: all 0.2s;\n          color: #495057;\n        }\n\n        .quick-action-btn:hover {\n          background: #e9ecef;\n          border-color: #667eea;\n          color: #667eea;\n        }\n\n        .edit-actions {\n          display: flex;\n          justify-content: flex-end;\n          gap: 12px;\n          padding-top: 20px;\n          border-top: 1px solid #e9ecef;\n        }\n\n        .edit-cancel-btn {\n          background: #6c757d;\n          color: white;\n          border: none;\n          border-radius: 6px;\n          padding: 10px 20px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.2s;\n        }\n\n        .edit-cancel-btn:hover {\n          background: #5a6268;\n        }\n\n        .edit-send-btn {\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          border-radius: 6px;\n          padding: 10px 20px;\n          cursor: pointer;\n          font-size: 14px;\n          font-weight: 600;\n          transition: all 0.2s;\n        }\n\n        .edit-send-btn:hover:not(:disabled) {\n          transform: translateY(-1px);\n          box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n        }\n\n        .edit-send-btn:disabled {\n          background: #6c757d;\n          cursor: not-allowed;\n          transform: none;\n        }\n      </style>\n\n      <div id=\"text-edit-ai-popup\" class=\"text-edit-ai-popup\" style=\"display: none;\">\n        <div class=\"text-edit-ai-header\">\n          <h3>✏️ Edit Text with AI</h3>\n          <button class=\"text-edit-ai-close\">&times;</button>\n        </div>\n        <div class=\"text-edit-ai-body\">\n          <div class=\"selected-text-section\">\n            <div id=\"selected-text-display\" class=\"selected-text-display\"></div>\n          </div>\n\n          <div class=\"prompt-section\">\n            <label for=\"edit-prompt-input\">How would you like to edit this text?</label>\n            <textarea\n              id=\"edit-prompt-input\"\n              class=\"edit-prompt-input\"\n              placeholder=\"Enter your editing instructions...\"\n              rows=\"3\"\n            ></textarea>\n          </div>\n\n          <div class=\"edit-actions\">\n            <button id=\"edit-cancel-btn\" class=\"edit-cancel-btn\">Cancel</button>\n            <button id=\"edit-send-btn\" class=\"edit-send-btn\">Send</button>\n          </div>\n        </div>\n      </div>\n    `;\n\n    document.body.appendChild(root);\n    this.bindPopupEvents();\n  }\n\n  bindPopupEvents() {\n    const popup = document.getElementById(\"text-edit-ai-popup\");\n    const header = popup.querySelector(\".text-edit-ai-header\");\n    const closeBtn = popup.querySelector(\".text-edit-ai-close\");\n    const cancelBtn = document.getElementById(\"edit-cancel-btn\");\n    const sendBtn = document.getElementById(\"edit-send-btn\");\n    const promptInput = document.getElementById(\"edit-prompt-input\");\n\n    // Check if events already bound\n    if (popup._textEditEventsBound) {\n      console.log(\"🔗 BIND: Events already bound, skipping...\");\n      return;\n    }\n\n    console.log(\"🔗 BIND: Binding popup events...\");\n    console.log(\"🔗 BIND: Elements found:\", {\n      popup: !!popup,\n      header: !!header,\n      closeBtn: !!closeBtn,\n      cancelBtn: !!cancelBtn,\n      sendBtn: !!sendBtn,\n      promptInput: !!promptInput,\n    });\n\n    // Make popup draggable\n    this.makeDraggable(popup, header);\n\n    // Close popup events with logging\n    closeBtn.addEventListener(\"click\", (e) => {\n      console.log(\"❌ CLOSE: Close button clicked\");\n      e.preventDefault();\n      e.stopPropagation();\n      this.hideEditPopup();\n    });\n\n    cancelBtn.addEventListener(\"click\", (e) => {\n      console.log(\"❌ CANCEL: Cancel button clicked\");\n      e.preventDefault();\n      e.stopPropagation();\n      this.hideEditPopup();\n    });\n\n    // Send button\n    sendBtn.addEventListener(\"click\", () => {\n      this.handleSendEdit();\n    });\n\n    // Enter to send (Ctrl+Enter for new line)\n    promptInput.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Enter\" && !e.ctrlKey && !e.shiftKey) {\n        e.preventDefault();\n        this.handleSendEdit();\n      }\n    });\n\n    // ESC to close popup\n    document.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Escape\" && this.isPopupOpen) {\n        console.log(\"⌨️ ESC: Escape key pressed, closing popup\");\n        e.preventDefault();\n        e.stopPropagation();\n        this.hideEditPopup();\n      }\n    });\n\n    // Click outside to close - with proper event handling (like mermaidAIChat.js)\n    setTimeout(() => {\n      const handleClickOutside = (e) => {\n        // Skip if popup is not open\n        if (!this.isPopupOpen) return;\n\n        // Skip if clicking on edit button (to prevent immediate close)\n        if (e.target.closest(\".text-edit-button\")) {\n          return;\n        }\n\n        // Skip if clicking inside popup\n        if (popup.contains(e.target)) {\n          return;\n        }\n\n        console.log(\"🖱️ Click outside popup detected, closing...\");\n        this.hideEditPopup();\n      };\n\n      document.addEventListener(\"click\", handleClickOutside, true);\n    }, 300); // Delay to prevent immediate close after opening\n\n    // Mark events as bound\n    popup._textEditEventsBound = true;\n    console.log(\"✅ BIND: All events bound successfully\");\n  }\n\n  async handleSendEdit() {\n    const promptInput = document.getElementById(\"edit-prompt-input\");\n    const sendBtn = document.getElementById(\"edit-send-btn\");\n    const prompt = promptInput.value.trim();\n\n    if (!prompt) {\n      alert(\"Please enter your editing instructions!\");\n      return;\n    }\n\n    // Disable send button and show loading\n    sendBtn.disabled = true;\n    sendBtn.textContent = \"🤔 Processing...\";\n\n    try {\n      // Get HTML content containing the selected text\n      const htmlContent = this.getSelectedHtmlContent();\n\n      // Call the edit API\n      const editedHtml = await this.callEditAPI(\n        htmlContent,\n        this.selectedText,\n        prompt\n      );\n\n      // Replace the HTML content with edited version\n      this.replaceSelectedHtmlContent(editedHtml);\n\n      // Show success message\n      this.showNotification(\"Text edited successfully!\", \"success\");\n\n      // Close popup\n      this.hideEditPopup();\n    } catch (error) {\n      console.error(\"❌ Edit API error:\", error);\n      alert(`❌ Error editing text: ${error.message}`);\n    } finally {\n      // Re-enable send button\n      sendBtn.disabled = false;\n      sendBtn.textContent = \"Send\";\n    }\n  }\n\n  async callEditAPI(htmlContent, selectedText, prompt) {\n    console.log(\"🤖 Calling Text Edit API...\", {\n      htmlContent,\n      selectedText,\n      prompt,\n    });\n\n    try {\n      const response = await fetch(API_URLS.EDIT_HTML_CONTENT, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          html_content: htmlContent,\n          selected_text: selectedText,\n          prompt: prompt,\n        }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(\n          errorData.error || `HTTP ${response.status}: ${response.statusText}`\n        );\n      }\n\n      const editedHtml = await response.text();\n\n      return editedHtml;\n    } catch (error) {\n      console.error(\"❌ Text Edit API error:\", error);\n      throw new Error(`Failed to process text edit request: ${error.message}`);\n    }\n  }\n\n  getSelectedHtmlContent() {\n    try {\n      const doc = this.selectedDocument || document;\n      const selection =\n        doc === document ? window.getSelection() : doc.getSelection();\n\n      if (selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        const container = range.commonAncestorContainer;\n\n        // Get the parent element that contains the selection\n        let parentElement =\n          container.nodeType === Node.TEXT_NODE\n            ? container.parentElement\n            : container;\n\n        // If the parent is too generic (like body), try to find a more specific container\n        while (\n          parentElement &&\n          (parentElement.tagName === \"BODY\" ||\n            parentElement.tagName === \"HTML\" ||\n            (parentElement.tagName === \"DIV\" && !parentElement.className))\n        ) {\n          if (parentElement.children.length === 1) {\n            parentElement = parentElement.children[0];\n          } else {\n            break;\n          }\n        }\n\n        const htmlContent = parentElement\n          ? parentElement.outerHTML\n          : range.toString();\n        console.log(\"📄 Selected HTML content:\", htmlContent);\n        return htmlContent;\n      }\n\n      return this.selectedText;\n    } catch (error) {\n      console.error(\"❌ Error getting HTML content:\", error);\n      return this.selectedText;\n    }\n  }\n\n  replaceSelectedHtmlContent(newHtmlContent) {\n    try {\n      const doc = this.selectedDocument || document;\n      const selection =\n        doc === document ? window.getSelection() : doc.getSelection();\n\n      console.log(\n        \"🔄 Replacing HTML content in:\",\n        doc === document ? \"main document\" : \"iframe document\"\n      );\n      console.log(\"🔄 New HTML content:\", newHtmlContent);\n\n      if (selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        const container = range.commonAncestorContainer;\n\n        // Get the parent element that contains the selection\n        let parentElement =\n          container.nodeType === Node.TEXT_NODE\n            ? container.parentElement\n            : container;\n\n        // Find the element that should be replaced\n        while (\n          parentElement &&\n          (parentElement.tagName === \"BODY\" ||\n            parentElement.tagName === \"HTML\" ||\n            (parentElement.tagName === \"DIV\" && !parentElement.className))\n        ) {\n          if (parentElement.children.length === 1) {\n            parentElement = parentElement.children[0];\n          } else {\n            break;\n          }\n        }\n\n        if (parentElement && parentElement !== doc.body) {\n          // Replace the entire parent element with new HTML\n          const tempDiv = doc.createElement(\"div\");\n          tempDiv.innerHTML = newHtmlContent;\n\n          // Replace the parent element with the new content\n          if (tempDiv.children.length === 1) {\n            parentElement.parentNode.replaceChild(\n              tempDiv.firstElementChild,\n              parentElement\n            );\n          } else {\n            // If multiple elements, replace with a fragment\n            const fragment = doc.createDocumentFragment();\n            while (tempDiv.firstChild) {\n              fragment.appendChild(tempDiv.firstChild);\n            }\n            parentElement.parentNode.replaceChild(fragment, parentElement);\n          }\n        } else {\n          // Fallback to replacing just the selected text\n          this.replaceSelectedText(newHtmlContent);\n          return;\n        }\n\n        // Clear selection\n        selection.removeAllRanges();\n        console.log(\"✅ HTML content replaced successfully\");\n      } else {\n        throw new Error(\"No selection range found\");\n      }\n    } catch (error) {\n      console.error(\"❌ Error replacing HTML content:\", error);\n      // Fallback to text replacement\n      this.replaceSelectedText(newHtmlContent);\n    }\n  }\n\n  replaceSelectedText(newContent) {\n    try {\n      // Use the stored selection and document\n      const doc = this.selectedDocument || document;\n      const selection =\n        doc === document ? window.getSelection() : doc.getSelection();\n\n      console.log(\n        \"🔄 Replacing content in:\",\n        doc === document ? \"main document\" : \"iframe document\"\n      );\n      console.log(\n        \"🔄 New content type:\",\n        this.isHTML(newContent) ? \"HTML\" : \"Text\"\n      );\n\n      if (selection.rangeCount > 0) {\n        const range = selection.getRangeAt(0);\n        range.deleteContents();\n\n        // Check if newContent is HTML or plain text\n        if (this.isHTML(newContent)) {\n          console.log(\"📝 Inserting HTML content\");\n          // Create a temporary container to parse HTML\n          const tempDiv = doc.createElement(\"div\");\n          tempDiv.innerHTML = newContent;\n\n          // Insert all child nodes from the temp container\n          const fragment = doc.createDocumentFragment();\n          while (tempDiv.firstChild) {\n            fragment.appendChild(tempDiv.firstChild);\n          }\n          range.insertNode(fragment);\n        } else {\n          console.log(\"📝 Inserting plain text content\");\n          // Insert as plain text\n          range.insertNode(doc.createTextNode(newContent));\n        }\n\n        // Clear selection\n        selection.removeAllRanges();\n\n        console.log(\"✅ Content replaced successfully\");\n      } else {\n        throw new Error(\"No selection range found\");\n      }\n    } catch (error) {\n      console.error(\"❌ Error replacing content:\", error);\n      // Fallback: copy to clipboard\n      navigator.clipboard\n        .writeText(newContent)\n        .then(() => {\n          alert(\n            \"Could not replace content directly. The edited content has been copied to clipboard.\"\n          );\n        })\n        .catch(() => {\n          // If clipboard also fails, show the content in an alert\n          alert(\n            `Could not replace content or copy to clipboard. Here's the edited content:\\n\\n${newContent}`\n          );\n        });\n    }\n  }\n\n  // Helper method to detect if content is HTML\n  isHTML(str) {\n    // Simple HTML detection - check for HTML tags\n    const htmlRegex = /<[^>]*>/;\n    return htmlRegex.test(str);\n  }\n\n  showNotification(message, type = \"info\") {\n    const notification = document.createElement(\"div\");\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${\n        type === \"success\"\n          ? \"#28a745\"\n          : type === \"error\"\n          ? \"#dc3545\"\n          : \"#007bff\"\n      };\n      color: white;\n      padding: 12px 20px;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n      z-index: 10002;\n      font-size: 14px;\n      max-width: 300px;\n      opacity: 0;\n      transform: translateX(100%);\n      transition: all 0.3s;\n    `;\n\n    notification.textContent = message;\n    document.body.appendChild(notification);\n\n    // Animate in\n    setTimeout(() => {\n      notification.style.opacity = \"1\";\n      notification.style.transform = \"translateX(0)\";\n    }, 100);\n\n    // Auto remove\n    setTimeout(() => {\n      notification.style.opacity = \"0\";\n      notification.style.transform = \"translateX(100%)\";\n      setTimeout(() => {\n        if (notification.parentNode) {\n          notification.parentNode.removeChild(notification);\n        }\n      }, 300);\n    }, 3000);\n  }\n\n  makeDraggable(element, dragHandle) {\n    let isDragging = false;\n    let dragStartX = 0;\n    let dragStartY = 0;\n    let elementStartX = 0;\n    let elementStartY = 0;\n\n    console.log(\"🎯 DRAG: Setting up draggable element...\");\n\n    // Style the drag handle\n    dragHandle.style.cursor = \"move\";\n    dragHandle.style.userSelect = \"none\";\n\n    const startDrag = (e) => {\n      // Don't drag if clicking on close button\n      if (e.target.classList.contains(\"text-edit-ai-close\")) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      isDragging = true;\n\n      // Get mouse position\n      dragStartX = e.clientX;\n      dragStartY = e.clientY;\n\n      // Get element current position\n      elementStartX = parseInt(element.style.left) || 0;\n      elementStartY = parseInt(element.style.top) || 0;\n\n      console.log(\"🎯 DRAG: Started\", {\n        mouseX: dragStartX,\n        mouseY: dragStartY,\n        elementX: elementStartX,\n        elementY: elementStartY,\n      });\n\n      // Add global event listeners\n      document.addEventListener(\"mousemove\", onDrag, true);\n      document.addEventListener(\"mouseup\", stopDrag, true);\n\n      // Prevent text selection during drag\n      document.body.style.userSelect = \"none\";\n    };\n\n    const onDrag = (e) => {\n      if (!isDragging) return;\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      // Calculate mouse movement\n      const deltaX = e.clientX - dragStartX;\n      const deltaY = e.clientY - dragStartY;\n\n      // Calculate new position\n      const newX = elementStartX + deltaX;\n      const newY = elementStartY + deltaY;\n\n      // Keep element within viewport bounds\n      const elementRect = element.getBoundingClientRect();\n      const maxX = window.innerWidth - elementRect.width;\n      const maxY = window.innerHeight - elementRect.height;\n\n      const boundedX = Math.max(0, Math.min(newX, maxX));\n      const boundedY = Math.max(0, Math.min(newY, maxY));\n\n      // Update element position\n      element.style.left = boundedX + \"px\";\n      element.style.top = boundedY + \"px\";\n      element.style.transform = \"none\"; // Remove center transform when dragging\n    };\n\n    const stopDrag = (e) => {\n      if (!isDragging) return;\n\n      e.preventDefault();\n      e.stopPropagation();\n\n      isDragging = false;\n\n      console.log(\"🎯 DRAG: Stopped\");\n\n      // Remove global event listeners\n      document.removeEventListener(\"mousemove\", onDrag, true);\n      document.removeEventListener(\"mouseup\", stopDrag, true);\n\n      // Restore text selection\n      document.body.style.userSelect = \"\";\n\n      // Prevent click outside from firing (like mermaidAIChat.js)\n      e.stopPropagation();\n    };\n\n    // Bind drag events\n    dragHandle.addEventListener(\"mousedown\", startDrag);\n\n    console.log(\"✅ DRAG: Setup completed\");\n  }\n}\n","// K-Tool Extension Content Script\r\nimport { ApiClient, ConfluenceApi } from \"../shared/api.js\";\r\nimport { PROGRESS_STEPS } from \"../shared/constants.js\";\r\nimport { StorageManager } from \"../shared/storage.js\";\r\nimport { ConfluenceEditor } from \"./confluenceEditor.js\";\r\nimport { MermaidAIChat } from \"./mermaidAI/mermaidAIChat.js\";\r\nimport { TextEditAI } from \"./mermaidAI/textEditAI.js\";\r\nimport { MermaidRenderer } from \"./utils/mermaidRenderer.js\";\r\n\r\nclass KToolContent {\r\n  constructor() {\r\n    this.settings = {};\r\n    this.isModalOpen = false;\r\n    this.currentTab = \"generate\";\r\n    this.generationJob = null;\r\n    this.progressSteps = [...PROGRESS_STEPS];\r\n    this.confluenceEditor = null;\r\n    this.mermaidAIChat = null;\r\n    this.textEditAI = null;\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    console.log(\"🚀 K-Tool Content Script initializing...\");\r\n\r\n    // Check if already injected\r\n    if (document.getElementById(\"ktool-root\")) {\r\n      console.log(\"🔍 K-Tool already injected, skipping...\");\r\n      return;\r\n    }\r\n\r\n    // Load settings\r\n    await this.loadSettings();\r\n\r\n    // Inject UI\r\n    this.injectUI();\r\n\r\n    // Bind events\r\n    this.bindEvents();\r\n\r\n    // Initialize Confluence Editor\r\n    try {\r\n      console.log(\"🔧 Initializing ConfluenceEditor...\");\r\n      this.confluenceEditor = new ConfluenceEditor();\r\n      console.log(\"✅ ConfluenceEditor initialized:\", this.confluenceEditor);\r\n    } catch (error) {\r\n      console.error(\"❌ Error initializing ConfluenceEditor:\", error);\r\n      this.confluenceEditor = null;\r\n    }\r\n\r\n    // Initialize Mermaid AI Chat\r\n    try {\r\n      console.log(\"🎨 Initializing MermaidAIChat...\");\r\n      const $ = window.jQuery || window.$ || null;\r\n      this.mermaidAIChat = new MermaidAIChat($);\r\n      console.log(\"✅ MermaidAIChat initialized:\", this.mermaidAIChat);\r\n    } catch (error) {\r\n      console.error(\"❌ Error initializing MermaidAIChat:\", error);\r\n      this.mermaidAIChat = null;\r\n    }\r\n\r\n    // Initialize Text Edit AI\r\n    try {\r\n      console.log(\"✏️ Initializing TextEditAI...\");\r\n      this.textEditAI = new TextEditAI();\r\n      console.log(\"✅ TextEditAI initialized:\", this.textEditAI);\r\n    } catch (error) {\r\n      console.error(\"❌ Error initializing TextEditAI:\", error);\r\n      this.textEditAI = null;\r\n    }\r\n\r\n    // Make available globally for debugging\r\n    window.ktoolContent = this;\r\n\r\n    console.log(\"✅ K-Tool Content Script ready\");\r\n  }\r\n\r\n  async loadSettings() {\r\n    try {\r\n      this.settings = await StorageManager.getSettings();\r\n      console.log(\"⚙️ Settings loaded:\", this.settings);\r\n    } catch (error) {\r\n      console.error(\"❌ Error loading settings:\", error);\r\n    }\r\n  }\r\n\r\n  injectUI() {\r\n    // Create root container\r\n    const root = document.createElement(\"div\");\r\n    root.id = \"ktool-root\";\r\n    document.body.appendChild(root);\r\n\r\n    // Create bubble button\r\n    const bubble = this.createBubble();\r\n    root.appendChild(bubble);\r\n\r\n    // Create modal (initially hidden)\r\n    const modal = this.createModal();\r\n    root.appendChild(modal);\r\n  }\r\n\r\n  createBubble() {\r\n    const bubble = document.createElement(\"div\");\r\n    bubble.className = `ktool-bubble ${\r\n      !this.settings.isEnabled ? \"disabled\" : \"\"\r\n    }`;\r\n\r\n    bubble.innerHTML = `\r\n      <div class=\"ktool-bubble-icon\">K</div>\r\n      <div class=\"ktool-tooltip\">\r\n        ${\r\n          this.settings.isEnabled\r\n            ? \"🚀 K-Tool Document Generator<br/>Click to open document generation tool\"\r\n            : \"⚠️ K-Tool is disabled<br/>Please enable in settings\"\r\n        }\r\n      </div>\r\n    `;\r\n\r\n    bubble.addEventListener(\"click\", () => {\r\n      if (this.settings.isEnabled) {\r\n        this.openModal();\r\n      } else {\r\n        this.showNotification(\r\n          \"K-Tool is disabled. Please enable in extension settings.\",\r\n          \"warning\"\r\n        );\r\n      }\r\n    });\r\n\r\n    return bubble;\r\n  }\r\n\r\n  createModal() {\r\n    const overlay = document.createElement(\"div\");\r\n    overlay.className = \"ktool-modal-overlay\";\r\n\r\n    overlay.innerHTML = `\r\n      <div class=\"ktool-modal\">\r\n        <div class=\"ktool-modal-header\">\r\n          <h2 class=\"ktool-modal-title\">K-Tool Document Generator</h2>\r\n          <button class=\"ktool-modal-close\" type=\"button\">&times;</button>\r\n        </div>\r\n        <div class=\"ktool-modal-body\">\r\n          <div class=\"ktool-tabs\">\r\n            <button class=\"ktool-tab active\" data-tab=\"generate\">📄 Generate Document</button>\r\n            <button class=\"ktool-tab\" data-tab=\"preview\">👁️ Preview</button>\r\n            <button class=\"ktool-tab\" data-tab=\"settings\">⚙️ Settings</button>\r\n          </div>\r\n          \r\n          <!-- Generate Tab -->\r\n          <div class=\"ktool-tab-content active\" data-tab=\"generate\">\r\n            ${this.createGenerateTab()}\r\n          </div>\r\n          \r\n          <!-- Preview Tab -->\r\n          <div class=\"ktool-tab-content\" data-tab=\"preview\" id=\"previewTab\">\r\n            ${this.createPreviewTab()}\r\n          </div>\r\n          \r\n          <!-- Settings Tab -->\r\n          <div class=\"ktool-tab-content\" data-tab=\"settings\">\r\n            ${this.createSettingsTab()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    return overlay;\r\n  }\r\n\r\n  createGenerateTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div class=\"ktool-form-group\">\r\n          <label class=\"ktool-form-label\">BA Document URL *</label>\r\n          <input\r\n            type=\"url\"\r\n            class=\"ktool-form-input\"\r\n            id=\"baDocUrl\"\r\n            placeholder=\"https://confluence.com/pages/123456\"\r\n            value=\"${window.location.href}\"\r\n          >\r\n        </div>\r\n\r\n        <div class=\"ktool-form-group\">\r\n          <label class=\"ktool-form-label\">Additional Notes (Optional)</label>\r\n          <textarea\r\n            class=\"ktool-form-textarea\"\r\n            id=\"additionalNotes\"\r\n            placeholder=\"Add notes or special requirements...\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div style=\"display: flex; gap: 12px; margin-top: 20px;\">\r\n          <button class=\"ktool-btn ktool-btn-primary\" id=\"generateBtn\">\r\n            🔧 Generate Document\r\n          </button>\r\n          <button class=\"ktool-btn ktool-btn-secondary\" id=\"resetBtn\">\r\n            🔄 Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Progress Section -->\r\n      <div class=\"ktool-progress\" id=\"progressSection\" style=\"display: none;\">\r\n        <h3 style=\"margin: 0 0 16px 0; font-size: 16px;\">Document Generation Progress:</h3>\r\n        <div id=\"progressSteps\"></div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createPreviewTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\r\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">📄</div>\r\n          <h3 style=\"margin: 0 0 8px 0;\">No content available for preview</h3>\r\n          <p style=\"margin: 0;\">Please generate document first to preview.</p>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  createSettingsTab() {\r\n    return `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\r\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">⚙️</div>\r\n          <h3 style=\"margin: 0 0 8px 0;\">Extension Settings</h3>\r\n          <p style=\"margin: 0 0 16px 0;\">Click the button below to open settings popup.</p>\r\n          <button class=\"ktool-btn ktool-btn-primary\" id=\"openSettingsBtn\">\r\n            🔧 Open Settings\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  bindEvents() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n\r\n    // Close modal events\r\n    modal.querySelector(\".ktool-modal-close\").addEventListener(\"click\", () => {\r\n      this.closeModal();\r\n    });\r\n\r\n    modal.addEventListener(\"click\", (e) => {\r\n      if (e.target === modal) {\r\n        this.closeModal();\r\n      }\r\n    });\r\n\r\n    // Tab switching\r\n    const tabs = modal.querySelectorAll(\".ktool-tab\");\r\n    tabs.forEach((tab) => {\r\n      tab.addEventListener(\"click\", () => {\r\n        this.switchTab(tab.dataset.tab);\r\n      });\r\n    });\r\n\r\n    // Generate button\r\n    const generateBtn = modal.querySelector(\"#generateBtn\");\r\n    generateBtn.addEventListener(\"click\", () => {\r\n      this.handleGenerate();\r\n    });\r\n\r\n    // Reset button\r\n    const resetBtn = modal.querySelector(\"#resetBtn\");\r\n    resetBtn.addEventListener(\"click\", () => {\r\n      this.handleReset();\r\n    });\r\n\r\n    // Add settings button listener\r\n    this.addSettingsButtonListener();\r\n\r\n    // Listen for settings changes from background\r\n    chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n      if (request.action === \"settingsChanged\") {\r\n        this.settings = request.settings;\r\n        this.updateBubbleState();\r\n      }\r\n    });\r\n\r\n    // Keyboard shortcuts\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      // Escape to close modal\r\n      if (e.key === \"Escape\" && this.isModalOpen) {\r\n        this.closeModal();\r\n      }\r\n\r\n      // Ctrl/Cmd + K to open modal\r\n      if ((e.ctrlKey || e.metaKey) && e.key === \"k\" && !this.isModalOpen) {\r\n        e.preventDefault();\r\n        if (this.settings.isEnabled) {\r\n          this.openModal();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n    modal.classList.add(\"show\");\r\n    this.isModalOpen = true;\r\n\r\n    // Focus first input\r\n    setTimeout(() => {\r\n      const firstInput = modal.querySelector(\".ktool-form-input\");\r\n      if (firstInput) firstInput.focus();\r\n    }, 300);\r\n  }\r\n\r\n  closeModal() {\r\n    const modal = document.querySelector(\".ktool-modal-overlay\");\r\n    modal.classList.remove(\"show\");\r\n    this.isModalOpen = false;\r\n  }\r\n\r\n  addSettingsButtonListener() {\r\n    // Add listener for settings button after modal is created\r\n    setTimeout(() => {\r\n      const settingsBtn = document.querySelector(\"#openSettingsBtn\");\r\n      if (settingsBtn) {\r\n        settingsBtn.addEventListener(\"click\", () => {\r\n          this.openSettingsPopup();\r\n        });\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  openSettingsPopup() {\r\n    // Open extension popup in navbar\r\n    if (chrome.runtime && chrome.runtime.openOptionsPage) {\r\n      chrome.runtime.openOptionsPage();\r\n    } else {\r\n      // Fallback: try to open popup\r\n      chrome.action?.openPopup?.() ||\r\n        chrome.browserAction?.openPopup?.() ||\r\n        alert(\r\n          \"Please click the K-Tool icon in the browser toolbar to open settings.\"\r\n        );\r\n    }\r\n  }\r\n\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    const tabs = document.querySelectorAll(\".ktool-tab\");\r\n    tabs.forEach((tab) => {\r\n      tab.classList.toggle(\"active\", tab.dataset.tab === tabName);\r\n    });\r\n\r\n    // Update tab content\r\n    const contents = document.querySelectorAll(\".ktool-tab-content\");\r\n    contents.forEach((content) => {\r\n      content.classList.toggle(\"active\", content.dataset.tab === tabName);\r\n    });\r\n\r\n    this.currentTab = tabName;\r\n  }\r\n\r\n  updateBubbleState() {\r\n    const bubble = document.querySelector(\".ktool-bubble\");\r\n    const tooltip = bubble.querySelector(\".ktool-tooltip\");\r\n\r\n    if (this.settings.isEnabled) {\r\n      bubble.classList.remove(\"disabled\");\r\n      tooltip.innerHTML =\r\n        \"🚀 K-Tool Document Generator<br/>Click to open document generation tool\";\r\n    } else {\r\n      bubble.classList.add(\"disabled\");\r\n      tooltip.innerHTML = \"⚠️ K-Tool is disabled<br/>Please enable in settings\";\r\n    }\r\n  }\r\n\r\n  async handleGenerate() {\r\n    const baDocUrl = document.getElementById(\"baDocUrl\").value.trim();\r\n    const additionalNotes = document\r\n      .getElementById(\"additionalNotes\")\r\n      .value.trim();\r\n\r\n    if (!baDocUrl) {\r\n      this.showNotification(\"Please enter BA document URL!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    // Validate settings\r\n    const validation = StorageManager.validateSettings(this.settings);\r\n    if (!validation.isValid) {\r\n      this.showNotification(\r\n        \"Please configure all settings before generating document!\",\r\n        \"error\"\r\n      );\r\n      this.switchTab(\"settings\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Show progress\r\n      this.showProgress();\r\n      this.updateProgress(0, \"active\");\r\n\r\n      // Step 1: Extract page ID and fetch BA content\r\n      const pageId = ConfluenceApi.extractPageId(baDocUrl);\r\n      if (!pageId) {\r\n        throw new Error(\r\n          \"❌ Invalid URL! Please check the Confluence page URL.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"🔍 Fetching content for pageId:\", pageId);\r\n      const baDocument = await ConfluenceApi.fetchPageContent(pageId);\r\n      if (!baDocument) {\r\n        throw new Error(\"❌ Cannot fetch BA document content!\");\r\n      }\r\n\r\n      // Extract images from BA content (HTML) and convert all to base64\r\n      const images = await ConfluenceApi.extractImagesFromHtml(\r\n        baDocument.content\r\n      );\r\n      console.log(\"🖼️ Extracted images (all base64):\", images);\r\n\r\n      this.updateProgress(0, \"completed\");\r\n      this.updateProgress(1, \"active\");\r\n\r\n      // Step 2: Clone template structure\r\n      if (!this.settings.urlTemplate) {\r\n        throw new Error(\"⚠️ Please configure document template in settings!\");\r\n      }\r\n\r\n      console.log(\"🔄 Cloning template from:\", this.settings.urlTemplate);\r\n      const clonedTemplate = await ConfluenceApi.cloneTemplateForGeneration(\r\n        this.settings.urlTemplate\r\n      );\r\n\r\n      if (!clonedTemplate) {\r\n        throw new Error(\r\n          \"❌ Cannot clone template! Please check template URL in Settings.\"\r\n        );\r\n      }\r\n\r\n      console.log(\"✅ Template cloned successfully:\", clonedTemplate.title);\r\n      this.updateProgress(1, \"completed\");\r\n      this.updateProgress(2, \"active\");\r\n\r\n      // Step 3: Analyze placeholders with << >>\r\n      const placeholders = ConfluenceApi.extractPlaceholders(\r\n        clonedTemplate.originalStorageFormat\r\n      );\r\n      console.log(\"🔍 Found placeholders <<>>:\", placeholders);\r\n\r\n      if (placeholders.length === 0) {\r\n        throw new Error(\r\n          \"⚠️ No placeholders found in format <<Name>>. Please check template!\"\r\n        );\r\n      }\r\n\r\n      this.updateProgress(2, \"completed\");\r\n      this.updateProgress(3, \"active\");\r\n\r\n      // Get instructions if available\r\n      let instructions = \"\";\r\n      if (this.settings.instructionUrl) {\r\n        const instructionPageId = ConfluenceApi.extractPageId(\r\n          this.settings.instructionUrl\r\n        );\r\n        if (instructionPageId) {\r\n          console.log(\r\n            \"🔍 Fetching instruction content for pageId:\",\r\n            instructionPageId\r\n          );\r\n          const instructionDoc = await ConfluenceApi.fetchPageContent(\r\n            instructionPageId\r\n          );\r\n          instructions = instructionDoc?.content || \"\";\r\n        } else {\r\n          console.warn(\r\n            \"⚠️ Invalid instruction URL:\",\r\n            this.settings.instructionUrl\r\n          );\r\n        }\r\n      }\r\n\r\n      // Step 4: AI Fill Placeholders (Send request and get job_id)\r\n      const payload = {\r\n        ba_content: baDocument.content,\r\n        template_structure: clonedTemplate.templateStructure,\r\n        original_storage_format: clonedTemplate.originalStorageFormat,\r\n        instructions: instructions,\r\n        additional_prompt: this.settings.customPrompt || \"\",\r\n        placeholders: placeholders,\r\n        selectedModel: this.settings.selectedModel,\r\n        images,\r\n        additional_notes: additionalNotes,\r\n      };\r\n\r\n      console.log(\"📤 Sending payload for placeholder filling:\", {\r\n        ba_content_length: payload.ba_content.length,\r\n        template_structure_length: payload.template_structure.length,\r\n        original_format_length: payload.original_storage_format.length,\r\n        placeholders_found: placeholders.length,\r\n        placeholders_list: placeholders,\r\n      });\r\n\r\n      // Send request and get job_id\r\n      const jobResponse = await ApiClient.generateDocument(payload);\r\n      const jobId = jobResponse.data.job_id;\r\n      if (!jobId) {\r\n        throw new Error(jobResponse.error || \"No job_id received from server!\");\r\n      }\r\n\r\n      this.currentJobId = jobId;\r\n\r\n      // Start polling for result\r\n      await this.pollGenerationResult(jobId, payload);\r\n    } catch (error) {\r\n      console.error(\"❌ Generation error:\", error);\r\n      this.showNotification(\r\n        `Document generation error: ${error.message}`,\r\n        \"error\"\r\n      );\r\n      this.hideProgress();\r\n    }\r\n  }\r\n\r\n  // These methods are now handled by ConfluenceApi class\r\n  // Keeping them for backward compatibility if needed\r\n\r\n  async pollGenerationResult(jobId, payload) {\r\n    const maxAttempts = 40; // 10 minutes max (60 * 10 seconds)\r\n    let attempts = 0;\r\n\r\n    const poll = async () => {\r\n      attempts++;\r\n\r\n      try {\r\n        console.log(\r\n          `🔄 Polling attempt ${attempts}/${maxAttempts} for job ${jobId}`\r\n        );\r\n\r\n        const statusResult = await ApiClient.checkStatus(jobId);\r\n        console.log(`statusResult: ${statusResult}`);\r\n\r\n        if (!statusResult.success) {\r\n          throw new Error(\"Error checking job status\");\r\n        }\r\n\r\n        const status = statusResult.data.status;\r\n\r\n        if (status === \"done\") {\r\n          console.log(\"✅ Generation completed!\");\r\n\r\n          const result = await ApiClient.getResult(jobId);\r\n          const resultString = JSON.stringify(result, null, 2);\r\n\r\n          console.log(`Document generate:\\n${resultString}`);\r\n          if (result.success) {\r\n            this.handleGenerationComplete(result.data.result);\r\n            return;\r\n          } else {\r\n            throw new Error(\"Error getting document generation result\");\r\n          }\r\n        } else if (status === \"error\") {\r\n          throw new Error(\"Document generation job failed on server\");\r\n        } else if (attempts >= maxAttempts) {\r\n          throw new Error(\r\n            \"⏰ Timeout: Document generation is taking too long. Please try again.\"\r\n          );\r\n        } else {\r\n          // Update progress message if available\r\n          if (statusResult.data.progress_message) {\r\n            console.log(`📝 Progress: ${statusResult.data.progress_message}`);\r\n          }\r\n\r\n          // Continue polling\r\n          setTimeout(poll, 10000); // Poll every 10 seconds\r\n        }\r\n      } catch (error) {\r\n        console.error(\"❌ Polling error:\", error);\r\n        this.showNotification(\r\n          `Error during document generation: ${error.message}`,\r\n          \"error\"\r\n        );\r\n        this.hideProgress();\r\n        this.currentJobId = null;\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    await poll();\r\n  }\r\n\r\n  handleGenerationComplete(result) {\r\n    this.updateProgress(3, \"completed\");\r\n    this.updateProgress(4, \"completed\");\r\n\r\n    // Store result for preview\r\n    this.generatedContent = result;\r\n    console.log(\"✅ Generated content:\", result);\r\n    // Switch to preview tab\r\n    this.switchTab(\"preview\");\r\n    this.updatePreviewTab(result);\r\n\r\n    this.showNotification(\"Document generated successfully!\", \"success\");\r\n    this.hideProgress();\r\n  }\r\n\r\n  updatePreviewTab(content) {\r\n    const previewTab = document.getElementById(\"previewTab\");\r\n    previewTab.innerHTML = `\r\n      <div class=\"ktool-form\">\r\n        <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\">\r\n          <h3 style=\"margin: 0;\">Document Preview</h3>\r\n          <div style=\"display: flex; gap: 12px;\">\r\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"editContentBtn\">\r\n              ✏️ Edit Content\r\n            </button>\r\n            <button class=\"ktool-btn ktool-btn-primary\" id=\"createPageBtn\">\r\n              📄 Create Confluence Page\r\n            </button>\r\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"downloadBtn\">\r\n              💾 Download\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div id=\"documentPreview\" style=\"border: 1px solid #e9ecef; border-radius: 8px; padding: 20px; background: #f8f9fa; max-height: 400px; overflow-y: auto; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6;\">\r\n          ${content.full_storage_format || \"<p>No content available</p>\"}\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Bind preview buttons\r\n    const editContentBtn = previewTab.querySelector(\"#editContentBtn\");\r\n    const createPageBtn = previewTab.querySelector(\"#createPageBtn\");\r\n    const downloadBtn = previewTab.querySelector(\"#downloadBtn\");\r\n\r\n    editContentBtn.addEventListener(\"click\", () =>\r\n      this.handleEditContent(content)\r\n    );\r\n    createPageBtn.addEventListener(\"click\", () => this.handleCreatePage());\r\n    downloadBtn.addEventListener(\"click\", () => this.handleDownload());\r\n\r\n    // Initialize Mermaid diagrams after content is loaded\r\n    setTimeout(() => {\r\n      this.initializeMermaid();\r\n    }, 100);\r\n  }\r\n\r\n  async handleCreatePage() {\r\n    const createBtn = document.querySelector(\"#createPageBtn\");\r\n    if (!createBtn) return;\r\n\r\n    // Save original button state\r\n    const originalText = createBtn.innerHTML;\r\n    const originalDisabled = createBtn.disabled;\r\n\r\n    try {\r\n      // Set loading state\r\n      createBtn.innerHTML = \"⏳ Creating Page...\";\r\n      createBtn.disabled = true;\r\n      createBtn.style.opacity = \"0.7\";\r\n\r\n      const spaceKey = ConfluenceApi.getCurrentSpaceKey();\r\n      if (!spaceKey) {\r\n        throw new Error(\"Cannot determine space key of current page\");\r\n      }\r\n\r\n      const title = `K-Tool Generated Document - ${new Date().toLocaleDateString()}`;\r\n      const content =\r\n        this.generatedContent.full_storage_format ||\r\n        this.generatedContent.content;\r\n\r\n      // Extract parent page ID from settings if available\r\n      let parentId = null;\r\n      if (this.settings.documentUrl) {\r\n        parentId = ConfluenceApi.extractPageId(this.settings.documentUrl);\r\n      }\r\n\r\n      await ConfluenceApi.createPage(title, content, spaceKey, parentId);\r\n\r\n      // Success state\r\n      createBtn.innerHTML = \"✅ Page Created Successfully!\";\r\n      createBtn.style.background = \"#28a745\";\r\n\r\n      this.showNotification(\"Confluence page created successfully!\", \"success\");\r\n\r\n      // Delay 1s before restore button\r\n      setTimeout(() => {\r\n        // Restore button state\r\n        createBtn.innerHTML = originalText;\r\n        createBtn.disabled = originalDisabled;\r\n        createBtn.style.opacity = \"1\";\r\n        createBtn.style.background = \"\";\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error(\"❌ Create page error:\", error);\r\n\r\n      // Error state\r\n      createBtn.innerHTML = \"❌ Creation Failed\";\r\n      createBtn.style.background = \"#dc3545\";\r\n\r\n      this.showNotification(`Error creating page: ${error.message}`, \"error\");\r\n\r\n      // Restore button after 2s\r\n      setTimeout(() => {\r\n        createBtn.innerHTML = originalText;\r\n        createBtn.disabled = originalDisabled;\r\n        createBtn.style.opacity = \"1\";\r\n        createBtn.style.background = \"\";\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  handleDownload() {\r\n    if (!this.generatedContent) {\r\n      this.showNotification(\"No content available to download!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const downloadBtn = document.querySelector(\"#downloadBtn\");\r\n    if (!downloadBtn) return;\r\n\r\n    // Save original button state\r\n    const originalText = downloadBtn.innerHTML;\r\n    const originalDisabled = downloadBtn.disabled;\r\n\r\n    try {\r\n      // Set loading state\r\n      downloadBtn.innerHTML = \"⏳ Preparing Download...\";\r\n      downloadBtn.disabled = true;\r\n      downloadBtn.style.opacity = \"0.7\";\r\n\r\n      const content =\r\n        this.generatedContent.full_storage_format ||\r\n        this.generatedContent.content;\r\n\r\n      // Create filename with title if available\r\n      const title = this.generatedContent.title || \"K-Tool Generated Document\";\r\n      const sanitizedTitle = title.replace(/[^a-z0-9]/gi, \"_\").toLowerCase();\r\n      const timestamp = new Date()\r\n        .toISOString()\r\n        .slice(0, 19)\r\n        .replace(/:/g, \"-\");\r\n      const filename = `${sanitizedTitle}_${timestamp}.html`;\r\n\r\n      const blob = new Blob([content], { type: \"text/html;charset=utf-8\" });\r\n      const url = URL.createObjectURL(blob);\r\n\r\n      const a = document.createElement(\"a\");\r\n      a.href = url;\r\n      a.download = filename;\r\n      a.style.display = \"none\";\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      URL.revokeObjectURL(url);\r\n\r\n      // Success state\r\n      downloadBtn.innerHTML = \"✅ Downloaded Successfully!\";\r\n      downloadBtn.style.background = \"#28a745\";\r\n\r\n      this.showNotification(\"Document downloaded successfully!\", \"success\");\r\n\r\n      // Restore button after 1s\r\n      setTimeout(() => {\r\n        downloadBtn.innerHTML = originalText;\r\n        downloadBtn.disabled = originalDisabled;\r\n        downloadBtn.style.opacity = \"1\";\r\n        downloadBtn.style.background = \"\";\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.error(\"❌ Download error:\", error);\r\n\r\n      // Error state\r\n      downloadBtn.innerHTML = \"❌ Download Failed\";\r\n      downloadBtn.style.background = \"#dc3545\";\r\n\r\n      this.showNotification(`Download failed: ${error.message}`, \"error\");\r\n\r\n      // Restore button after 2s\r\n      setTimeout(() => {\r\n        downloadBtn.innerHTML = originalText;\r\n        downloadBtn.disabled = originalDisabled;\r\n        downloadBtn.style.opacity = \"1\";\r\n        downloadBtn.style.background = \"\";\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  handleEditContent(content) {\r\n    console.log(\"✏️ Opening content editor...\");\r\n    console.log(\"🔍 Content to edit:\", content);\r\n    console.log(\"🔍 ConfluenceEditor instance:\", this.confluenceEditor);\r\n\r\n    if (!this.confluenceEditor) {\r\n      console.error(\"❌ ConfluenceEditor is null or undefined\");\r\n      this.showNotification(\"Confluence Editor not initialized!\", \"error\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Set up save callback to update the generated content\r\n      this.confluenceEditor.setSaveCallback((updatedContent) => {\r\n        console.log(\"💾 Content updated:\", updatedContent);\r\n\r\n        // Update the stored generated content\r\n        this.generatedContent = updatedContent;\r\n\r\n        // Refresh the preview tab with updated content\r\n        this.updatePreviewTab(updatedContent);\r\n\r\n        this.showNotification(\"Content has been updated!\", \"success\");\r\n      });\r\n\r\n      // Open the editor with current content\r\n      console.log(\"🚀 Opening ConfluenceEditor...\");\r\n      this.confluenceEditor.openEditor(content, {\r\n        title: \"Edit Generated Document\",\r\n        showMermaidTools: true,\r\n      });\r\n      console.log(\"✅ ConfluenceEditor opened successfully\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error opening ConfluenceEditor:\", error);\r\n      this.showNotification(`Error opening editor: ${error.message}`, \"error\");\r\n    }\r\n  }\r\n\r\n  handleReset() {\r\n    // Auto reset form without confirm\r\n    console.log(\"🔄 Auto-resetting form...\");\r\n    document.getElementById(\"baDocUrl\").value = window.location.href;\r\n    document.getElementById(\"additionalNotes\").value = \"\";\r\n    this.hideProgress();\r\n    this.switchTab(\"generate\");\r\n  }\r\n\r\n  showProgress() {\r\n    const progressSection = document.getElementById(\"progressSection\");\r\n    const progressSteps = document.getElementById(\"progressSteps\");\r\n\r\n    progressSteps.innerHTML = this.progressSteps\r\n      .map(\r\n        (step, index) => `\r\n      <div class=\"ktool-progress-step ${step.status}\" data-step=\"${index}\">\r\n        <div class=\"ktool-progress-icon\">${index + 1}</div>\r\n        <span>${step.label}</span>\r\n      </div>\r\n    `\r\n      )\r\n      .join(\"\");\r\n\r\n    progressSection.style.display = \"block\";\r\n  }\r\n\r\n  hideProgress() {\r\n    const progressSection = document.getElementById(\"progressSection\");\r\n    progressSection.style.display = \"none\";\r\n\r\n    // Reset progress steps\r\n    this.progressSteps = this.progressSteps.map((step) => ({\r\n      ...step,\r\n      status: \"pending\",\r\n    }));\r\n  }\r\n\r\n  updateProgress(stepIndex, status) {\r\n    this.progressSteps[stepIndex].status = status;\r\n\r\n    const stepElement = document.querySelector(`[data-step=\"${stepIndex}\"]`);\r\n    if (stepElement) {\r\n      stepElement.className = `ktool-progress-step ${status}`;\r\n\r\n      const icon = stepElement.querySelector(\".ktool-progress-icon\");\r\n      if (status === \"completed\") {\r\n        icon.textContent = \"✓\";\r\n      } else if (status === \"error\") {\r\n        icon.textContent = \"✗\";\r\n      } else if (status === \"active\") {\r\n        icon.innerHTML = '<div class=\"ktool-spinning\">⏳</div>';\r\n      }\r\n    }\r\n  }\r\n\r\n  showNotification(message, type = \"info\") {\r\n    // Create notification element\r\n    const notification = document.createElement(\"div\");\r\n    notification.style.cssText = `\r\n      position: fixed;\r\n      top: 20px;\r\n      right: 20px;\r\n      background: ${\r\n        type === \"success\"\r\n          ? \"#28a745\"\r\n          : type === \"error\"\r\n          ? \"#dc3545\"\r\n          : \"#007bff\"\r\n      };\r\n      color: white;\r\n      padding: 12px 20px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n      z-index: 1000002;\r\n      font-size: 14px;\r\n      max-width: 300px;\r\n      word-wrap: break-word;\r\n      opacity: 0;\r\n      transform: translateX(100%);\r\n      transition: all 0.3s;\r\n    `;\r\n\r\n    notification.textContent = message;\r\n    document.body.appendChild(notification);\r\n\r\n    // Animate in\r\n    setTimeout(() => {\r\n      notification.style.opacity = \"1\";\r\n      notification.style.transform = \"translateX(0)\";\r\n    }, 100);\r\n\r\n    // Auto remove\r\n    setTimeout(() => {\r\n      notification.style.opacity = \"0\";\r\n      notification.style.transform = \"translateX(100%)\";\r\n      setTimeout(() => {\r\n        if (notification.parentNode) {\r\n          notification.parentNode.removeChild(notification);\r\n        }\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  // Initialize Mermaid diagrams\r\n  async initializeMermaid() {\r\n    try {\r\n      console.log(\"🎨 Initializing Mermaid diagrams...\");\r\n\r\n      // Find all mermaid code blocks in the preview\r\n      const previewDiv = document.getElementById(\"documentPreview\");\r\n      if (!previewDiv) return;\r\n\r\n      // Look for Confluence Mermaid structured macros\r\n      const mermaidElements = previewDiv.querySelectorAll(\r\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\r\n      );\r\n\r\n      for (let index = 0; index < mermaidElements.length; index++) {\r\n        const element = mermaidElements[index];\r\n        // Get the code parameter from Confluence structured macro\r\n        const codeParam = element.querySelector(\r\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\r\n        );\r\n        if (!codeParam) {\r\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\r\n          return;\r\n        }\r\n\r\n        const mermaidCode = (\r\n          codeParam.textContent || codeParam.innerText\r\n        ).trim();\r\n        console.log(\r\n          \"🔍 Found Confluence Mermaid diagram:\",\r\n          mermaidCode.substring(0, 50) + \"...\"\r\n        );\r\n\r\n        // Always process Confluence mermaid macros (no need to check syntax)\r\n        if (mermaidCode) {\r\n          // Create a new div for the mermaid diagram\r\n          const mermaidDiv = document.createElement(\"div\");\r\n          mermaidDiv.className = \"mermaid-diagram\";\r\n          mermaidDiv.id = `mermaid-${index}`;\r\n          mermaidDiv.style.cssText =\r\n            \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\r\n\r\n          // Validate parent node before replacing\r\n          if (!element.parentNode) {\r\n            console.error(\"❌ Cannot replace Mermaid element: no parent node\");\r\n            console.error(\r\n              \"❌ Mermaid code:\",\r\n              mermaidCode.substring(0, 100) + \"...\"\r\n            );\r\n            return;\r\n          }\r\n\r\n          // Replace the original element\r\n          try {\r\n            element.parentNode.replaceChild(mermaidDiv, element);\r\n          } catch (replaceError) {\r\n            console.error(\r\n              \"❌ Failed to replace Mermaid element:\",\r\n              replaceError\r\n            );\r\n            console.error(\r\n              \"❌ Mermaid code:\",\r\n              mermaidCode.substring(0, 100) + \"...\"\r\n            );\r\n            return;\r\n          }\r\n\r\n          // Initialize Mermaid and render the diagram using MermaidRenderer\r\n          await MermaidRenderer.initializeMermaid();\r\n          const diagramId = `mermaid-svg-${index}`;\r\n          await MermaidRenderer.renderDiagram(\r\n            diagramId,\r\n            mermaidCode,\r\n            mermaidDiv\r\n          );\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to initialize Mermaid:\", error);\r\n    }\r\n  }\r\n\r\n  // Show Mermaid error in a nice format\r\n  showMermaidError(container, text, error) {\r\n    // Validate container before attempting to set innerHTML\r\n    if (\r\n      !container ||\r\n      !container.nodeType ||\r\n      container.nodeType !== Node.ELEMENT_NODE\r\n    ) {\r\n      console.error(\r\n        \"❌ Invalid container for Mermaid error display:\",\r\n        container\r\n      );\r\n      console.error(\"❌ Mermaid error details:\", {\r\n        message: error.message || \"Unknown error occurred\",\r\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Check if container is still in the DOM\r\n    if (!document.contains(container)) {\r\n      console.error(\"❌ Container is not in DOM, cannot display Mermaid error\");\r\n      console.error(\"❌ Mermaid error details:\", {\r\n        message: error.message || \"Unknown error occurred\",\r\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      container.innerHTML = `\r\n        <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\r\n          <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\r\n            <span style=\"margin-right: 8px;\">⚠️</span>\r\n            Mermaid Render Error\r\n          </div>\r\n          <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\r\n            ${error.message || \"Unknown error occurred\"}\r\n          </div>\r\n          <details style=\"margin-top: 10px;\">\r\n            <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\r\n            <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${\r\n              text || \"No code provided\"\r\n            }</pre>\r\n          </details>\r\n        </div>\r\n      `;\r\n    } catch (setInnerHTMLError) {\r\n      console.error(\r\n        \"❌ Failed to set error HTML in container:\",\r\n        setInnerHTMLError\r\n      );\r\n      console.error(\"❌ Original Mermaid error:\", {\r\n        message: error.message || \"Unknown error occurred\",\r\n        code: text ? text.substring(0, 100) + \"...\" : \"No code provided\",\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n// Initialize when DOM is ready\r\nif (document.readyState === \"loading\") {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    new KToolContent();\r\n  });\r\n} else {\r\n  new KToolContent();\r\n}\r\n"],"names":["MermaidRenderer","loadMermaidScript","window","mermaid","console","log","res","fetch","chrome","runtime","getURL","text","eval","initializeMermaid","this","initialize","startOnLoad","theme","securityLevel","fontFamily","htmlLabels","flowchart","deterministicIds","deterministicIDSeed","setConfig","renderDiagram","diagramId","mermaidCode","container","cleanCode","cleanMermaidCode","validateMermaidCode","Error","nodeType","Node","ELEMENT_NODE","render","tempContainer","document","createElement","style","position","left","top","visibility","body","appendChild","svgCode","renderResult","svg","innerHTML","renderError","error","showMermaidError","parentNode","remove","message","code","substring","contains","setInnerHTMLError","detectMermaidType","firstLine","trim","split","toLowerCase","includes","extractMermaidDiagrams","content","diagrams","diagramsMap","Map","macroRegex","match","index","exec","macroName","macroContent","codeMatch","langMatch","type","diagramRecord","id","originalCode","originalMatch","title","charAt","toUpperCase","slice","push","set","cleaned","replace","trimmed","some","starter","startsWith","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","EXTENSION_SETTINGS_KEY","isLocal","location","hostname","rootUrl","confluenceBaseUrl","API_URLS","GEN_DOC","GEN_DOC_STATUS","GEN_DOC_RESULT","EDIT_DIAGRAM","EDIT_MERMAID","EDIT_TEXT","EDIT_HTML_CONTENT","CONFLUENCE_API_URLS","MERMAID_DIAGRAM","MERMAID_SAVE","MERMAID_UPDATE","MERMAID_EDIT_REFERER","TINYMCE_PLACEHOLDER","DEFAULT_SETTINGS","apiKey","urlTemplate","customPrompt","documentUrl","databaseUrl","instructionUrl","isEnabled","selectedModel","AI_MODELS","name","provider","description","gemini","PROGRESS_STEPS","label","status","VALIDATION","URL_PATTERN","PLACEHOLDER_PATTERN","MIN_PROMPT_LENGTH","getDiagramConfluenceStyles","storage","macroCounter","extractedDiagrams","mermaidRegex","filename","macroId","toString","diagramCode","async","mermaidAPI","convertDiagramToSvgPng","diagram","svgResult","svgContent","canvas","ctx","getContext","img","Image","Promise","resolve","reject","onload","width","height","fillStyle","fillRect","drawImage","png","toDataURL","onerror","src","btoa","unescape","encodeURIComponent","saveDiagramToAPI","pageId","payload","data","response","method","headers","Accept","JSON","stringify","ok","errorText","processAndSaveDiagrams","length","success","total","errors","successCount","totalDiagrams","processedDiagrams","all","map","i","errorMsg","setTimeout","result","warn","ApiClient","request","url","options","statusText","json","generateDocument","checkStatus","jobId","getResult","editText","ConfluenceApi","extractPageId","patterns","pattern","getCurrentSpaceKey","spaceKeyMeta","querySelector","spaceKeyElement","dataset","spaceKey","urlMatch","pathname","fetchPageContent","_data$body","_data$body2","_data$body3","_data$body4","apiUrl","hasStorage","value","hasView","view","storageFormat","cloneTemplateForGeneration","_data$body5","_data$body6","extractPageIdFromUrl","originalStorageFormat","templateStructure","analysisInfo","extractTemplateStructure","originalLength","structureLength","analysis","emptyParagraphs","emptyTableCells","placeholders","structure","forEach","regex","matches","matchAll","totalLength","extractPlaceholders","decodedContent","allMatches","testContent","contentIndex","patternIndex","m","uniquePlaceholders","Set","extractImagesFromHtml","html","images","imgTags","DOMParser","parseFromString","querySelectorAll","Array","from","getAttribute","base64src","Date","now","base64","fname","urlToBase64","alt","e","getFilenameFromUrl","blob","reader","FileReader","onloadend","readAsDataURL","URL","lastIndexOf","validateAndCleanTitle","toLocaleDateString","ensureUtf8Encoding","encoder","TextEncoder","decoder","TextDecoder","fatal","encoded","encode","decode","basicContentCleanup","advancedHTMLSanitization","finalHTML","tagName","convertToMermaidCloudMacros","convertedContent","currentId","validateAndFixXML","fixed","attrs","createPage","fullStorageFormat","parentPageId","_result$_links","_result$_links2","cleanTitle","utf8Content","processedContent","finalContent","createPayload","space","representation","ancestors","errorMessage","errorJson","parse","isArray","err","field","join","parseError","_links","webui","finalMessage","diagramResult","fullUrl","origin","open","userMessage","StorageManager","getSettings","sync","saveSettings","settings","updateSetting","updatedSettings","resetSettings","validateSettings","_settings$apiKey","_settings$urlTemplate","_settings$documentUrl","_settings$databaseUrl","validationResult","validateConfluencePageLink","valid","isValidUrl","isValid","keys","link","out","u","pageIdParam","searchParams","test","pathParts","pagesIndex","indexOf","candidate","XMLFormatter","formatXHTML","xmlString","indent","rootTag","wrappedXml","doc","parseErrors","getElementsByTagName","_parseErrors$","textContent","sample","output","rootElement","documentElement","processNode","node","level","nodeName","startTag","attributes","attr","childNodes","child","TEXT_NODE","nextLevel","COMMENT_NODE","CDATA_SECTION_NODE","isSelfClosingTag","tag","t","cleanXMLMarkers","escapeRegex","string","ContentSynchronizer","constructor","diagramChanges","trackDiagramChange","newCode","timestamp","getTrackedChanges","clearTrackedChanges","clear","syncAllContent","currentContent","editorContainer","mermaidDiagrams","rawContent","syncFromRawEditor","syncMermaidChanges","rawEditor","updatedContent","full_storage_format","diagramsCount","hasContent","_diagram$originalCode","_diagram$code","hasOriginalCode","hasCode","codeLength","updateDiagramInContent","hasNewCode","newLength","RegExp","replacement","patternMatched","lastIndex","simpleSearch","validateContent","warnings","xmlContent","createBackup","restoreFromBackup","backup","DOMHelpers","selector","addEventListener","element","event","handler","removeEventListener","toggleClass","className","force","classList","toggle","addClass","add","removeClass","setContent","isHTML","getContent","entries","assign","setAttribute","removeElement","removeChild","isInDOM","scrollIntoView","behavior","block","getDimensions","rect","getBoundingClientRect","right","bottom","cloneElement","deep","cloneNode","HTMLTemplates","getEditorTemplate","getContentTabTemplate","getMermaidTabTemplate","getZoomControlsTemplate","getAIChatTemplate","applyPreviewStyles","createAIMessage","createMermaidContainer","mermaidDiv","cssText","STORAGE_KEY","AUTO_SAVE_INTERVAL","autoSaveTimer","saveContent","saveCallback","enableLocalStorage","enableCallback","showNotification","results","localStorage","callback","saveToLocalStorage","callSaveCallback","showSaveNotification","backupData","version","setItem","loadFromLocalStorage","saved","getItem","removeItem","clearLocalStorage","then","notification","colors","warning","info","background","opacity","transform","startAutoSave","saveFunction","stopAutoSave","setInterval","clearInterval","hasUnsavedChanges","getBackupInfo","age","ConfluenceEditor","isEditorOpen","originalContent","onSave","mermaidDiagramsMap","currentSelectedDiagram","currentSelectedDiagramId","textEditor","previewContainer","isPreviewMode","isModified","currentZoom","dragOffset","x","y","isZooming","zoomStep","minZoom","maxZoom","previewUpdateTimeout","isUpdatingPreview","storageManager","contentSynchronizer","openEditor","closeEditor","allowBackupRestore","backupInfo","ageMinutes","Math","floor","createEditorUI","initializeContentTab","overlay","bindEditorEvents","closeBtn","saveBtn","saveChanges","contentTab","mermaidTab","switchTab","updateContentPreview","mermaidSelector","mermaidCodeEditor","aiSendBtn","aiPromptInput","selectMermaidDiagram","target","debouncedUpdateMermaidPreview","sendAIPrompt","shiftKey","preventDefault","zoomInBtn","zoomOutBtn","zoomResetBtn","zoomIn","zoomOut","resetZoom","mermaidPreview","handleWheel","handleEsc","tabName","tab","activeTab","activeContent","initializeMermaidTab","size","populateMermaidSelector","preview","updateSaveButtonState","renderContentPreview","previewElement","renderMermaidDiagramsInPreview","initializeMermaidInPreview","previewDiv","codeParam","replaceChild","replaceError","_this$mermaidDiagrams","_this$mermaidDiagrams2","defaultOption","addedCount","addedDiagrams","diagramData","has","option","handleMermaidSelectorChange","selectedId","clearMermaidEditor","find","codeEditor","updateMermaidPreview","catch","handleMermaidCodeChange","clearTimeout","updateZoom","_this$currentSelected","promptInput","messagesContainer","prompt","addAIMessage","diagramInMap","currentCode","_this$currentContent","ChromeStorageManager","requestBody","diagram_code","user_request","errorData","edited_diagram","cleanedDiagram","cleanAIResponse","_this$currentSelected2","currentDiagramInMap","oldCode","removeLastAIMessage","lines","nonEmptyStart","findIndex","line","nonEmptyEnd","reverse","validStarts","start","messages","lastMessage","messageHTML","scrollTop","scrollHeight","_this$currentContent2","updateStatus","_this$editorContainer","validation","saveResults","stopAllPreviewUpdates","min","applyZoom","max","zoomLevel","mermaidContent","transformOrigin","transition","round","deltaY","setSaveCallback","isOpen","getCurrentContent","editorContent","getValue","MermaidPreview","getElementById","updatePreview","showError","showPlaceholder","validStarters","MermaidAIService","apiClient","modifyDiagram","diagramContent","userPrompt","promptValidation","validateUserPrompt","diagramValidation","validateDiagramContent","getCurrentPageContent","newMermaidCode","getFallbackContent","pageData","URLSearchParams","search","pathMatches","href","metaSelectors","metaTag","AJS","params","contentSelectors","callAI","getMockResponse","originalDiagram","diagram_content","user_prompt","explanation","getErrorMessage","MermaidApiClient","Confluence","getContentId","contentId","bodyPageId","extractFilename","filenameWithExt","saveFilename","getSavedFilename","fetchMermaidCode","Connection","Pragma","Referer","navigator","userAgent","credentials","fetchMermaidCodeFromSaved","MermaidAIChat","$","jQuery","isPopupOpen","currentMermaidContent","aiService","lastClickedElement","lastClickPosition","init","createPopupUI","setupMermaidDetection","setupConfluencePageChangeDetection","setupConfluenceEditorMonitoring","handleMermaidClick","showChatPopup","setupIframeEventListeners","setupMutationObserver","refreshIframeListeners","iframes","readyState","retryIframes","iframe","attachIframeListeners","mermaidListenerAttached","loadHandler","iframeDoc","contentDocument","contentWindow","clickHandler","classes","isMermaidElement","macroParams","diagramInfo","macroParameters","parseMacroParameters","parsedParams","clientX","offsetLeft","clientY","offsetTop","mermaidClickHandler","boundClickHandler","bind","mermaidLoadHandler","MutationObserver","mutations","mutation","mutationIndex","addedNodes","nodeIndex","_node$textContent","injectAIButton","_node$textContent2","observe","childList","subtree","currentUrl","checkUrlChange","panel","buttonContainer","aiButton","marginRight","loadingMessage","alert","removeButton","insertBefore","removeAIButton","removedNodes","pair","check","bindZoomControls","ctrlKey","zoomDisplay","updateZoomButtonStates","disabled","root","bindPopupEvents","popup","header","sendBtn","input","makeDraggable","hideChatPopup","sendMessage","saveDiagram","closest","dragHandle","isDragging","dragStartX","dragStartY","popupStartX","popupStartY","cursor","userSelect","onDrag","stopPropagation","deltaX","newX","newY","maxX","innerWidth","maxY","innerHeight","stopDrag","parseInt","mouseX","mouseY","popupX","popupY","leftPos","topPos","display","focus","systemMessage","_diagramInfo$parsedPa","diagramInfoStr","updateData","updateMermaidDiagram","reversionNew","revision","newImageHtml","generatePlaceholderImage","replaceImageInDOM","generateMermaidAssets","currentRevision","dataLength","svgLength","pngLength","pngDataUrl","convertSvgToPngDataUrl","pngBase64","encodeSvg","reduce","byte","String","fromCharCode","svgString","scale","svgUrl","originalWidth","originalHeight","canvasWidth","canvasHeight","svgToPng","svgBlob","Blob","createObjectURL","saveMermaidCode","macroData","macro","zoom","toolbar","format","tempDiv","newImg","foundImages","findImagesByFilename","oldImg","replaceImageAttributes","newAttributes","attributesToKeep","oldAttributes","removeAttribute","old","a","new","addMessage","messageId","messageDiv","removeMessage","TextEditAI","selectedText","selectedElement","selectedDocument","editButton","loadCSS","setupTextSelectionDetection","attachSelectionListeners","setupIframeSelectionListeners","hideEditButton","docType","_textEditListenersAttached","mouseupHandler","handleTextSelection","keyupHandler","_textEditMouseupHandler","_textEditKeyupHandler","attachToIframe","attachToExistingIframes","textEditListenerAttached","attachListeners","_iframe$contentWindow","textEditMouseupHandler","textEditKeyupHandler","textEditLoadHandler","_e","selection","getSelection","isEditMode","isInConfluenceEditMode","getRangeAt","showEditButton","parent","frameElement","indicator","rangeCount","buttonWidth","buttonHeight","showEditPopup","selectedTextDisplay","hideEditPopup","forceClosePopup","cancelBtn","_textEditEventsBound","handleSendEdit","htmlContent","getSelectedHtmlContent","editedHtml","callEditAPI","replaceSelectedHtmlContent","html_content","selected_text","range","commonAncestorContainer","parentElement","children","outerHTML","newHtmlContent","replaceSelectedText","firstElementChild","fragment","createDocumentFragment","firstChild","removeAllRanges","newContent","deleteContents","insertNode","createTextNode","clipboard","writeText","str","elementStartX","elementStartY","elementRect","boundedX","boundedY","elementX","elementY","KToolContent","isModalOpen","currentTab","generationJob","progressSteps","confluenceEditor","mermaidAIChat","textEditAI","loadSettings","injectUI","bindEvents","ktoolContent","bubble","createBubble","modal","createModal","openModal","createGenerateTab","createPreviewTab","createSettingsTab","closeModal","handleGenerate","handleReset","addSettingsButtonListener","onMessage","addListener","sender","sendResponse","action","updateBubbleState","metaKey","firstInput","settingsBtn","openSettingsPopup","_chrome$action","_chrome$action$openPo","_chrome$browserAction","_chrome$browserAction2","openOptionsPage","openPopup","browserAction","tooltip","baDocUrl","additionalNotes","showProgress","updateProgress","baDocument","clonedTemplate","instructions","instructionPageId","instructionDoc","ba_content","template_structure","original_storage_format","additional_prompt","additional_notes","ba_content_length","template_structure_length","original_format_length","placeholders_found","placeholders_list","jobResponse","job_id","currentJobId","pollGenerationResult","hideProgress","attempts","poll","statusResult","resultString","handleGenerationComplete","progress_message","generatedContent","updatePreviewTab","previewTab","editContentBtn","createPageBtn","downloadBtn","handleEditContent","handleCreatePage","handleDownload","createBtn","originalText","originalDisabled","parentId","toISOString","download","click","revokeObjectURL","showMermaidTools","progressSection","step","stepIndex","stepElement","icon","mermaidElements","innerText"],"sourceRoot":""}