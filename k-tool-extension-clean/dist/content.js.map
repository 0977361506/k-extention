{"version":3,"file":"content.js","mappings":"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","sources":["webpack://k-tool-extension-clean/./src/shared/api.js","webpack://k-tool-extension-clean/./src/shared/storage.js","webpack://k-tool-extension-clean/./src/shared/constants.js","webpack://k-tool-extension-clean/webpack/bootstrap","webpack://k-tool-extension-clean/webpack/runtime/define property getters","webpack://k-tool-extension-clean/webpack/runtime/hasOwnProperty shorthand","webpack://k-tool-extension-clean/./src/content/content.js"],"sourcesContent":["// API utilities for K-Tool Extension\nimport { API_URLS } from \"./constants.js\";\n\nexport class ApiClient {\n  /**\n   * Make HTTP request with error handling\n   * @param {string} url - Request URL\n   * @param {Object} options - Fetch options\n   * @returns {Promise<Object>} Response data\n   */\n  static async request(url, options = {}) {\n    try {\n      const response = await fetch(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...options.headers,\n        },\n        ...options,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return { success: true, data };\n    } catch (error) {\n      console.error(\"API request failed:\", error);\n      return { success: false, error: error.message };\n    }\n  }\n\n  /**\n   * Generate document from BA content\n   * @param {Object} payload - Generation payload\n   * @returns {Promise<Object>} Job response\n   */\n  static async generateDocument(payload) {\n    return await this.request(API_URLS.GEN_DOC, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n\n  /**\n   * Check generation status\n   * @param {string} jobId - Job ID to check\n   * @returns {Promise<Object>} Status response\n   */\n  static async checkStatus(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_STATUS}?job_id=${jobId}`);\n  }\n\n  /**\n   * Get generation result\n   * @param {string} jobId - Job ID to get result\n   * @returns {Promise<Object>} Result response\n   */\n  static async getResult(jobId) {\n    return await this.request(`${API_URLS.GEN_DOC_RESULT}?job_id=${jobId}`);\n  }\n\n  /**\n   * Edit text using AI\n   * @param {Object} payload - Edit payload\n   * @returns {Promise<Object>} Edit response\n   */\n  static async editText(payload) {\n    return await this.request(API_URLS.EDIT_TEXT, {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n    });\n  }\n}\n\n/**\n * Confluence API utilities\n */\nexport class ConfluenceApi {\n  /**\n   * Extract page ID from Confluence URL\n   * @param {string} url - Confluence page URL\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageId(url) {\n    const patterns = [/\\/pages\\/(\\d+)/, /pageId=(\\d+)/, /\\/(\\d+)$/];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Get current space key from page\n   * @returns {string|null} Space key or null\n   */\n  static getCurrentSpaceKey() {\n    // Try to get space key from various sources\n    const spaceKeyMeta = document.querySelector('meta[name=\"ajs-space-key\"]');\n    if (spaceKeyMeta) return spaceKeyMeta.content;\n\n    const spaceKeyElement = document.querySelector(\"[data-space-key]\");\n    if (spaceKeyElement) return spaceKeyElement.dataset.spaceKey;\n\n    // Try to extract from URL\n    const urlMatch = window.location.pathname.match(/\\/spaces\\/([^\\/]+)/);\n    if (urlMatch) return urlMatch[1];\n\n    return null;\n  }\n\n  /**\n   * Fetch page content from Confluence\n   * @param {string} pageId - Page ID to fetch\n   * @returns {Promise<Object>} Page content with title, content (view), and storageFormat\n   */\n  static async fetchPageContent(pageId) {\n    try {\n      console.log(\"🔍 Fetching Confluence content for pageId:\", pageId);\n\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage,body.view`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Content data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n        hasView: !!data.body?.view?.value,\n      });\n\n      return {\n        title: data.title,\n        content: data.body?.view?.value || \"\",\n        storageFormat: data.body?.storage?.value || \"\",\n      };\n    } catch (error) {\n      console.error(\"❌ Error fetching Confluence content:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Clone template from URL for document generation\n   * @param {string} url - Template URL\n   * @returns {Promise<Object>} Cloned template data\n   */\n  static async cloneTemplateForGeneration(url) {\n    try {\n      console.log(\"🔍 Cloning template from URL:\", url);\n\n      if (!url || !url.trim()) {\n        console.error(\"❌ Empty URL provided\");\n        throw new Error(\"URL template không được để trống\");\n      }\n\n      // Extract pageId from URL\n      const pageId = this.extractPageIdFromUrl(url);\n      if (!pageId) {\n        console.error(\"❌ No pageId found in URL\");\n        throw new Error(\n          \"URL không chứa pageId hợp lệ. Vui lòng kiểm tra lại URL template.\"\n        );\n      }\n\n      console.log(\"📋 Fetching template pageId:\", pageId);\n      const apiUrl = `/rest/api/content/${pageId}?expand=body.storage`;\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"❌ API Error:\", response.status, errorText);\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      console.log(\"📄 Template data received:\", {\n        id: data.id,\n        title: data.title,\n        hasStorage: !!data.body?.storage?.value,\n      });\n\n      if (!data.body?.storage?.value) {\n        console.error(\"❌ No storage content found in response\");\n        throw new Error(\"Template không có nội dung storage format\");\n      }\n\n      const originalStorageFormat = data.body.storage.value;\n      console.log(\n        \"📄 Original storage format length:\",\n        originalStorageFormat.length\n      );\n\n      const { templateStructure, analysisInfo } = this.extractTemplateStructure(\n        originalStorageFormat\n      );\n\n      const result = {\n        title: data.title,\n        originalStorageFormat,\n        templateStructure,\n        analysisInfo,\n      };\n\n      console.log(\"✅ Template cloned successfully:\", {\n        title: result.title,\n        originalLength: originalStorageFormat.length,\n        structureLength: templateStructure.length,\n        analysis: analysisInfo,\n      });\n\n      return result;\n    } catch (error) {\n      console.error(\"❌ Error cloning template:\", error);\n      throw error;\n    }\n  }\n\n  /**\n   * Extract template structure and analyze placeholders\n   * @param {string} storageFormat - Original storage format\n   * @returns {Object} Template structure and analysis info\n   */\n  static extractTemplateStructure(storageFormat) {\n    let emptyParagraphs = 0;\n    let emptyTableCells = 0;\n    let placeholders = 0;\n\n    console.log(\"🔍 Extracting template structure...\");\n\n    const placeholderPatterns = [\n      /(<<.*?>>)/g,\n      /(\\{\\{.*?\\}\\})/g,\n      /(&lt;&lt;.*?&gt;&gt;)/g,\n      /(\\u003c\\u003c.*?\\u003e\\u003e)/g,\n    ];\n\n    let structure = storageFormat;\n\n    placeholderPatterns.forEach((regex, index) => {\n      const matches = [...structure.matchAll(regex)];\n      console.log(\n        `🎯 Placeholder pattern ${index + 1} found ${matches.length} matches`\n      );\n      placeholders += matches.length;\n    });\n\n    // Count empty paragraphs and table cells\n    emptyParagraphs = (storageFormat.match(/<p[^>]*>\\s*<\\/p>/g) || []).length;\n    emptyTableCells = (storageFormat.match(/<td[^>]*>\\s*<\\/td>/g) || []).length;\n\n    const analysisInfo = {\n      emptyParagraphs,\n      emptyTableCells,\n      placeholders,\n      totalLength: storageFormat.length,\n    };\n\n    return {\n      templateStructure: structure,\n      analysisInfo,\n    };\n  }\n\n  /**\n   * Extract pageId from various URL formats\n   * @param {string} url - URL to extract pageId from\n   * @returns {string|null} Page ID or null\n   */\n  static extractPageIdFromUrl(url) {\n    const patterns = [\n      /\\/pages\\/(\\d+)/,\n      /pageId=(\\d+)/,\n      /\\/(\\d+)$/,\n      /viewpage\\.action\\?pageId=(\\d+)/,\n    ];\n\n    for (const pattern of patterns) {\n      const match = url.match(pattern);\n      if (match) return match[1];\n    }\n\n    return null;\n  }\n\n  /**\n   * Extract placeholders from content (<<placeholder>> format)\n   * @param {string} content - Content to analyze\n   * @returns {Array} Array of placeholder strings\n   */\n  static extractPlaceholders(content) {\n    console.log(\"🔍 Analyzing content for placeholders...\");\n    console.log(\"📄 Content length:\", content.length);\n    console.log(\n      \"📄 Content preview (first 500 chars):\",\n      content.substring(0, 500)\n    );\n\n    // Helper function to decode HTML entities\n    const decodeHtmlEntities = (str) => {\n      return str\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\")\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\");\n    };\n\n    const decodedContent = decodeHtmlEntities(content);\n\n    // Patterns to find placeholders\n    const patterns = [\n      /<<([^>]+)>>/g, // Normal <<placeholder>>\n      /&lt;&lt;([^&]+)&gt;&gt;/g, // HTML encoded &lt;&lt;placeholder&gt;&gt;\n    ];\n\n    let allMatches = [];\n\n    // Test patterns on both original and decoded content\n    [content, decodedContent].forEach((testContent, contentIndex) => {\n      console.log(\n        `🔍 Testing on ${\n          contentIndex === 0 ? \"original\" : \"decoded\"\n        } content...`\n      );\n\n      patterns.forEach((regex, patternIndex) => {\n        const matches = [...testContent.matchAll(regex)];\n        console.log(\n          `🎯 Pattern ${patternIndex + 1} found ${matches.length} matches:`,\n          matches.map((m) => m[0])\n        );\n\n        if (patternIndex === 1) {\n          // For HTML encoded, decode back to normal format\n          allMatches.push(...matches.map((match) => `<<${match[1]}>>`));\n        } else {\n          allMatches.push(...matches.map((match) => match[0]));\n        }\n      });\n    });\n\n    // Remove duplicates\n    const uniquePlaceholders = [...new Set(allMatches)];\n    console.log(\"🎯 Unique placeholders found:\", uniquePlaceholders);\n\n    return uniquePlaceholders;\n  }\n\n  /**\n   * Extract images from HTML content and convert to base64\n   * @param {string} html - HTML content\n   * @returns {Promise<Array>} Array of image objects with base64 data\n   */\n  static async extractImagesFromHtml(html) {\n    const images = [];\n    try {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, \"text/html\");\n      const imgTags = doc.querySelectorAll(\"img\");\n\n      for (const img of Array.from(imgTags)) {\n        const src = img.getAttribute(\"src\");\n        let filename = undefined;\n\n        if (src) {\n          let base64src = src;\n\n          if (!src.startsWith(\"data:image\")) {\n            // Convert URL to base64 and get filename\n            const { base64, filename: fname } = await this.urlToBase64(src);\n            if (base64) {\n              base64src = base64;\n              filename = fname;\n            } else continue; // skip if failed\n          } else {\n            // If already base64, get name from alt or set default\n            filename = img.getAttribute(\"alt\")\n              ? img.getAttribute(\"alt\") + \".png\"\n              : `image_${Date.now()}.png`;\n          }\n\n          images.push({\n            src: base64src,\n            alt: img.getAttribute(\"alt\") || undefined,\n            filename,\n          });\n        }\n      }\n    } catch (e) {\n      console.warn(\"extractImagesFromHtml error:\", e);\n    }\n    return images;\n  }\n\n  /**\n   * Convert image URL to base64\n   * @param {string} url - Image URL\n   * @returns {Promise<Object>} Object with base64 data and filename\n   */\n  static async urlToBase64(url) {\n    try {\n      const response = await fetch(url);\n      if (!response.ok)\n        return { base64: null, filename: this.getFilenameFromUrl(url) };\n\n      const blob = await response.blob();\n      const filename = this.getFilenameFromUrl(url);\n\n      return await new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve({ base64: reader.result, filename });\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n      });\n    } catch (e) {\n      console.warn(\"urlToBase64 error:\", e);\n      return { base64: null, filename: this.getFilenameFromUrl(url) };\n    }\n  }\n\n  /**\n   * Get filename from URL\n   * @param {string} url - URL to extract filename from\n   * @returns {string} Filename\n   */\n  static getFilenameFromUrl(url) {\n    try {\n      const urlObj = new URL(url);\n      const pathname = urlObj.pathname;\n      return (\n        pathname.substring(pathname.lastIndexOf(\"/\") + 1) ||\n        `image_${Date.now()}`\n      );\n    } catch {\n      return `image_${Date.now()}`;\n    }\n  }\n\n  /**\n   * Create new Confluence page\n   * @param {string} title - Page title\n   * @param {string} content - Page content (storage format)\n   * @param {string} spaceKey - Space key\n   * @param {string} parentId - Parent page ID (optional)\n   * @returns {Promise<Object>} Created page response\n   */\n  static async createPage(title, content, spaceKey, parentId = null) {\n    try {\n      const payload = {\n        type: \"page\",\n        title,\n        space: { key: spaceKey },\n        body: {\n          storage: {\n            value: content,\n            representation: \"storage\",\n          },\n        },\n      };\n\n      if (parentId) {\n        payload.ancestors = [{ id: parentId }];\n      }\n\n      const response = await fetch(\"/rest/api/content\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to create page: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error creating page:\", error);\n      throw error;\n    }\n  }\n}\n","// Chrome Storage Management\nimport { DEFAULT_SETTINGS, EXTENSION_SETTINGS_KEY } from \"./constants.js\";\n\nexport class StorageManager {\n  /**\n   * Load settings from Chrome storage\n   * @returns {Promise<Object>} Settings object\n   */\n  static async getSettings() {\n    try {\n      const result = await chrome.storage.sync.get([EXTENSION_SETTINGS_KEY]);\n      return result[EXTENSION_SETTINGS_KEY] || DEFAULT_SETTINGS;\n    } catch (error) {\n      console.error(\"Error loading settings:\", error);\n      return DEFAULT_SETTINGS;\n    }\n  }\n\n  /**\n   * Save settings to Chrome storage\n   * @param {Object} settings - Settings object to save\n   * @returns {Promise<boolean>} Success status\n   */\n  static async saveSettings(settings) {\n    try {\n      await chrome.storage.sync.set({ [EXTENSION_SETTINGS_KEY]: settings });\n      return true;\n    } catch (error) {\n      console.error(\"Error saving settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Update specific setting field\n   * @param {string} field - Field name to update\n   * @param {any} value - New value\n   * @returns {Promise<boolean>} Success status\n   */\n  static async updateSetting(field, value) {\n    try {\n      const currentSettings = await this.getSettings();\n      const updatedSettings = { ...currentSettings, [field]: value };\n      return await this.saveSettings(updatedSettings);\n    } catch (error) {\n      console.error(\"Error updating setting:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Reset settings to default\n   * @returns {Promise<boolean>} Success status\n   */\n  static async resetSettings() {\n    try {\n      await chrome.storage.sync.remove([EXTENSION_SETTINGS_KEY]);\n      return true;\n    } catch (error) {\n      console.error(\"Error resetting settings:\", error);\n      return false;\n    }\n  }\n\n  /**\n   * Validate settings object\n   * @param {Object} settings - Settings to validate\n   * @returns {Object} Validation result with errors\n   */\n  static validateSettings(settings) {\n    const errors = {};\n\n    if (!settings.apiKey?.trim()) {\n      errors.apiKey = \"API Key là bắt buộc\";\n    }\n\n    if (!settings.urlTemplate?.trim()) {\n      errors.urlTemplate = \"URL Template là bắt buộc\";\n    } else {\n      const validationResult = this.validateConfluencePageLink(\n        settings.urlTemplate\n      );\n\n      if (!validationResult.valid) {\n        errors.urlTemplate =\n          validationResult.error || \"URL Template không hợp lệ.\";\n      }\n    }\n    if (!settings.documentUrl?.trim()) {\n      errors.documentUrl = \"URL thư mục lưu tài liệu là bắt buộc\";\n    } else if (!this.isValidUrl(settings.documentUrl)) {\n      errors.documentUrl = \"URL không hợp lệ\";\n    }\n\n    if (!settings.databaseUrl?.trim()) {\n      errors.databaseUrl = \"URL thư mục database là bắt buộc\";\n    } else if (!this.isValidUrl(settings.databaseUrl)) {\n      errors.databaseUrl = \"URL không hợp lệ\";\n    }\n\n    // if (!settings.customPrompt?.trim()) {\n    //   errors.customPrompt = \"Custom Prompt là bắt buộc\";\n    // } else if (settings.customPrompt.trim().length < 10) {\n    //   errors.customPrompt = \"Custom Prompt phải có ít nhất 10 ký tự\";\n    // }\n\n    return {\n      isValid: Object.keys(errors).length === 0,\n      errors,\n    };\n  }\n\n  /**\n   * Check if URL is valid\n   * @param {string} url - URL to validate\n   * @returns {boolean} Is valid URL\n   */\n  static isValidUrl(url) {\n    try {\n      new URL(url);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Validate Confluence page link (có pageId)\n   * @param {string} link - Link Confluence để kiểm tra\n   * @returns {Object} { valid: boolean, error?: string, pageId?: string }\n   */\n  static validateConfluencePageLink(link) {\n    const out = { valid: false, error: null, pageId: null };\n\n    if (!link || typeof link !== \"string\" || !link.trim()) {\n      out.error = \"URL là bắt buộc\";\n      return out;\n    }\n\n    let u;\n    try {\n      u = new URL(link.trim());\n    } catch {\n      out.error = \"URL không hợp lệ\";\n      return out;\n    }\n\n    // check pageId in query param\n    const pageIdParam = u.searchParams.get(\"pageId\");\n    if (pageIdParam && /^\\d+$/.test(pageIdParam)) {\n      out.valid = true;\n      out.pageId = pageIdParam;\n      return out;\n    }\n\n    // check pageId in path (/pages/{id})\n    const pathParts = u.pathname.split(\"/\");\n    const pagesIndex = pathParts.indexOf(\"pages\");\n    if (pagesIndex >= 0 && pathParts.length > pagesIndex + 1) {\n      const candidate = pathParts[pagesIndex + 1];\n      if (/^\\d+$/.test(candidate)) {\n        out.valid = true;\n        out.pageId = candidate;\n        return out;\n      }\n    }\n\n    out.error = \"Không tìm thấy pageId trong URL\";\n    return out;\n  }\n}\n","// K-Tool Extension Constants\nexport const EXTENSION_SETTINGS_KEY = 'extensionSettings';\n\n// API URLs\nconst isLocal = true;\nconst rootUrl = isLocal ? 'http://localhost:5001' : 'https://gendoc.thangnotes.dev';\n\nexport const API_URLS = {\n  GEN_DOC: `${rootUrl}/api/generate-full-confluence-doc`,\n  GEN_DOC_STATUS: `${rootUrl}/api/generate-status`,\n  GEN_DOC_RESULT: `${rootUrl}/api/generate-result`,\n  EDIT_DIAGRAM: `${rootUrl}/api/edit-diagram`,\n  EDIT_TEXT: `${rootUrl}/api/edit-text`\n};\n\n// Default settings\nexport const DEFAULT_SETTINGS = {\n  apiKey: '',\n  urlTemplate: '',\n  customPrompt: '',\n  documentUrl: '',\n  databaseUrl: '',\n  instructionUrl: '',\n  isEnabled: true,\n  selectedModel: 'sonar-pro'\n};\n\n// AI Models\nexport const AI_MODELS = {\n  'sonar-pro': {\n    name: 'Sonar Pro',\n    provider: 'Perplexity',\n    description: 'Perplexity AI Sonar Pro model'\n  },\n  'gemini': {\n    name: 'Gemini 2.0 Flash',\n    provider: 'Google',\n    description: 'Google Gemini 2.0 Flash model'\n  }\n};\n\n// Progress steps for document generation\nexport const PROGRESS_STEPS = [\n  { id: 'fetch', label: 'Lấy nội dung BA', status: 'pending' },\n  { id: 'clone', label: 'Clone template', status: 'pending' },\n  { id: 'analyze', label: 'Phân tích placeholders', status: 'pending' },\n  { id: 'generate', label: 'AI sinh tài liệu', status: 'pending' },\n  { id: 'complete', label: 'Hoàn thành', status: 'pending' }\n];\n\n// Validation patterns\nexport const VALIDATION = {\n  URL_PATTERN: /^https?:\\/\\/.+/,\n  PLACEHOLDER_PATTERN: /<<([^>]+)>>/g,\n  MIN_PROMPT_LENGTH: 10\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// K-Tool Extension Content Script\nimport { ApiClient, ConfluenceApi } from \"../shared/api.js\";\nimport { PROGRESS_STEPS } from \"../shared/constants.js\";\nimport { StorageManager } from \"../shared/storage.js\";\n\nclass KToolContent {\n  constructor() {\n    this.settings = {};\n    this.isModalOpen = false;\n    this.currentTab = \"generate\";\n    this.generationJob = null;\n    this.progressSteps = [...PROGRESS_STEPS];\n    this.init();\n  }\n\n  async init() {\n    console.log(\"🚀 K-Tool Content Script initializing...\");\n\n    // Check if already injected\n    if (document.getElementById(\"ktool-root\")) {\n      console.log(\"🔍 K-Tool already injected, skipping...\");\n      return;\n    }\n\n    // Load settings\n    await this.loadSettings();\n\n    // Inject UI\n    this.injectUI();\n\n    // Bind events\n    this.bindEvents();\n\n    console.log(\"✅ K-Tool Content Script ready\");\n  }\n\n  async loadSettings() {\n    try {\n      this.settings = await StorageManager.getSettings();\n      console.log(\"⚙️ Settings loaded:\", this.settings);\n    } catch (error) {\n      console.error(\"❌ Error loading settings:\", error);\n    }\n  }\n\n  injectUI() {\n    // Create root container\n    const root = document.createElement(\"div\");\n    root.id = \"ktool-root\";\n    document.body.appendChild(root);\n\n    // Create bubble button\n    const bubble = this.createBubble();\n    root.appendChild(bubble);\n\n    // Create modal (initially hidden)\n    const modal = this.createModal();\n    root.appendChild(modal);\n  }\n\n  createBubble() {\n    const bubble = document.createElement(\"div\");\n    bubble.className = `ktool-bubble ${\n      !this.settings.isEnabled ? \"disabled\" : \"\"\n    }`;\n\n    bubble.innerHTML = `\n      <div class=\"ktool-bubble-icon\">K</div>\n      <div class=\"ktool-tooltip\">\n        ${\n          this.settings.isEnabled\n            ? \"🚀 K-Tool Document Generator<br/>Click để mở công cụ sinh tài liệu\"\n            : \"⚠️ K-Tool đã tắt<br/>Vui lòng bật trong settings\"\n        }\n      </div>\n    `;\n\n    bubble.addEventListener(\"click\", () => {\n      if (this.settings.isEnabled) {\n        this.openModal();\n      } else {\n        this.showNotification(\n          \"K-Tool đã tắt. Vui lòng bật trong extension settings.\",\n          \"warning\"\n        );\n      }\n    });\n\n    return bubble;\n  }\n\n  createModal() {\n    const overlay = document.createElement(\"div\");\n    overlay.className = \"ktool-modal-overlay\";\n\n    overlay.innerHTML = `\n      <div class=\"ktool-modal\">\n        <div class=\"ktool-modal-header\">\n          <h2 class=\"ktool-modal-title\">K-Tool Document Generator</h2>\n          <button class=\"ktool-modal-close\" type=\"button\">&times;</button>\n        </div>\n        <div class=\"ktool-modal-body\">\n          <div class=\"ktool-tabs\">\n            <button class=\"ktool-tab active\" data-tab=\"generate\">📄 Sinh tài liệu</button>\n            <button class=\"ktool-tab\" data-tab=\"preview\">👁️ Preview</button>\n            <button class=\"ktool-tab\" data-tab=\"settings\">⚙️ Settings</button>\n          </div>\n          \n          <!-- Generate Tab -->\n          <div class=\"ktool-tab-content active\" data-tab=\"generate\">\n            ${this.createGenerateTab()}\n          </div>\n          \n          <!-- Preview Tab -->\n          <div class=\"ktool-tab-content\" data-tab=\"preview\" id=\"previewTab\">\n            ${this.createPreviewTab()}\n          </div>\n          \n          <!-- Settings Tab -->\n          <div class=\"ktool-tab-content\" data-tab=\"settings\">\n            ${this.createSettingsTab()}\n          </div>\n        </div>\n      </div>\n    `;\n\n    return overlay;\n  }\n\n  createGenerateTab() {\n    return `\n      <div class=\"ktool-form\">\n        <div class=\"ktool-form-group\">\n          <label class=\"ktool-form-label\">URL tài liệu BA *</label>\n          <input \n            type=\"url\" \n            class=\"ktool-form-input\" \n            id=\"baDocUrl\" \n            placeholder=\"https://confluence.com/pages/123456\"\n            value=\"${window.location.href}\"\n          >\n        </div>\n        \n        <div class=\"ktool-form-group\">\n          <label class=\"ktool-form-label\">Ghi chú thêm (tùy chọn)</label>\n          <textarea \n            class=\"ktool-form-textarea\" \n            id=\"additionalNotes\" \n            placeholder=\"Thêm ghi chú hoặc yêu cầu đặc biệt...\"\n            rows=\"3\"\n          ></textarea>\n        </div>\n        \n        <div style=\"display: flex; gap: 12px; margin-top: 20px;\">\n          <button class=\"ktool-btn ktool-btn-primary\" id=\"generateBtn\">\n            🔧 Tạo tài liệu\n          </button>\n          <button class=\"ktool-btn ktool-btn-secondary\" id=\"resetBtn\">\n            🔄 Reset\n          </button>\n        </div>\n      </div>\n      \n      <!-- Progress Section -->\n      <div class=\"ktool-progress\" id=\"progressSection\" style=\"display: none;\">\n        <h3 style=\"margin: 0 0 16px 0; font-size: 16px;\">Tiến trình sinh tài liệu:</h3>\n        <div id=\"progressSteps\"></div>\n      </div>\n    `;\n  }\n\n  createPreviewTab() {\n    return `\n      <div class=\"ktool-form\">\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">📄</div>\n          <h3 style=\"margin: 0 0 8px 0;\">Chưa có nội dung để preview</h3>\n          <p style=\"margin: 0;\">Vui lòng sinh tài liệu trước khi preview.</p>\n        </div>\n      </div>\n    `;\n  }\n\n  createSettingsTab() {\n    return `\n      <div class=\"ktool-form\">\n        <div style=\"text-align: center; padding: 40px; color: #6c757d;\">\n          <div style=\"font-size: 48px; margin-bottom: 16px;\">⚙️</div>\n          <h3 style=\"margin: 0 0 8px 0;\">Cài đặt Extension</h3>\n          <p style=\"margin: 0 0 16px 0;\">Click vào icon extension trên toolbar để cài đặt.</p>\n          <button class=\"ktool-btn ktool-btn-primary\" onclick=\"chrome.runtime.openOptionsPage?.() || alert('Vui lòng click vào icon K-Tool trên toolbar để cài đặt')\">\n            🔧 Mở Settings\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  bindEvents() {\n    const modal = document.querySelector(\".ktool-modal-overlay\");\n\n    // Close modal events\n    modal.querySelector(\".ktool-modal-close\").addEventListener(\"click\", () => {\n      this.closeModal();\n    });\n\n    modal.addEventListener(\"click\", (e) => {\n      if (e.target === modal) {\n        this.closeModal();\n      }\n    });\n\n    // Tab switching\n    const tabs = modal.querySelectorAll(\".ktool-tab\");\n    tabs.forEach((tab) => {\n      tab.addEventListener(\"click\", () => {\n        this.switchTab(tab.dataset.tab);\n      });\n    });\n\n    // Generate button\n    const generateBtn = modal.querySelector(\"#generateBtn\");\n    generateBtn.addEventListener(\"click\", () => {\n      this.handleGenerate();\n    });\n\n    // Reset button\n    const resetBtn = modal.querySelector(\"#resetBtn\");\n    resetBtn.addEventListener(\"click\", () => {\n      this.handleReset();\n    });\n\n    // Listen for settings changes from background\n    chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n      if (request.action === \"settingsChanged\") {\n        this.settings = request.settings;\n        this.updateBubbleState();\n      }\n    });\n\n    // Keyboard shortcuts\n    document.addEventListener(\"keydown\", (e) => {\n      // Escape to close modal\n      if (e.key === \"Escape\" && this.isModalOpen) {\n        this.closeModal();\n      }\n\n      // Ctrl/Cmd + K to open modal\n      if ((e.ctrlKey || e.metaKey) && e.key === \"k\" && !this.isModalOpen) {\n        e.preventDefault();\n        if (this.settings.isEnabled) {\n          this.openModal();\n        }\n      }\n    });\n  }\n\n  openModal() {\n    const modal = document.querySelector(\".ktool-modal-overlay\");\n    modal.classList.add(\"show\");\n    this.isModalOpen = true;\n\n    // Focus first input\n    setTimeout(() => {\n      const firstInput = modal.querySelector(\".ktool-form-input\");\n      if (firstInput) firstInput.focus();\n    }, 300);\n  }\n\n  closeModal() {\n    const modal = document.querySelector(\".ktool-modal-overlay\");\n    modal.classList.remove(\"show\");\n    this.isModalOpen = false;\n  }\n\n  switchTab(tabName) {\n    // Update tab buttons\n    const tabs = document.querySelectorAll(\".ktool-tab\");\n    tabs.forEach((tab) => {\n      tab.classList.toggle(\"active\", tab.dataset.tab === tabName);\n    });\n\n    // Update tab content\n    const contents = document.querySelectorAll(\".ktool-tab-content\");\n    contents.forEach((content) => {\n      content.classList.toggle(\"active\", content.dataset.tab === tabName);\n    });\n\n    this.currentTab = tabName;\n  }\n\n  updateBubbleState() {\n    const bubble = document.querySelector(\".ktool-bubble\");\n    const tooltip = bubble.querySelector(\".ktool-tooltip\");\n\n    if (this.settings.isEnabled) {\n      bubble.classList.remove(\"disabled\");\n      tooltip.innerHTML =\n        \"🚀 K-Tool Document Generator<br/>Click để mở công cụ sinh tài liệu\";\n    } else {\n      bubble.classList.add(\"disabled\");\n      tooltip.innerHTML = \"⚠️ K-Tool đã tắt<br/>Vui lòng bật trong settings\";\n    }\n  }\n\n  async handleGenerate() {\n    const baDocUrl = document.getElementById(\"baDocUrl\").value.trim();\n    const additionalNotes = document\n      .getElementById(\"additionalNotes\")\n      .value.trim();\n\n    if (!baDocUrl) {\n      this.showNotification(\"Vui lòng nhập URL tài liệu BA!\", \"error\");\n      return;\n    }\n\n    // Validate settings\n    const validation = StorageManager.validateSettings(this.settings);\n    if (!validation.isValid) {\n      this.showNotification(\n        \"Vui lòng cấu hình đầy đủ settings trước khi sinh tài liệu!\",\n        \"error\"\n      );\n      this.switchTab(\"settings\");\n      return;\n    }\n\n    try {\n      // Show progress\n      this.showProgress();\n      this.updateProgress(0, \"active\");\n\n      // Step 1: Extract page ID and fetch BA content\n      const pageId = ConfluenceApi.extractPageId(baDocUrl);\n      if (!pageId) {\n        throw new Error(\n          \"❌ URL không hợp lệ! Vui lòng kiểm tra lại URL Confluence page.\"\n        );\n      }\n\n      console.log(\"🔍 Fetching content for pageId:\", pageId);\n      const baDocument = await ConfluenceApi.fetchPageContent(pageId);\n      if (!baDocument) {\n        throw new Error(\"❌ Không thể lấy nội dung tài liệu BA!\");\n      }\n\n      // Extract images from BA content (HTML) and convert all to base64\n      const images = await ConfluenceApi.extractImagesFromHtml(\n        baDocument.content\n      );\n      console.log(\"🖼️ Extracted images (all base64):\", images);\n\n      this.updateProgress(0, \"completed\");\n      this.updateProgress(1, \"active\");\n\n      // Step 2: Clone template structure\n      if (!this.settings.urlTemplate) {\n        throw new Error(\"⚠️ Vui lòng setting template của tài liệu!\");\n      }\n\n      console.log(\"🔄 Cloning template from:\", this.settings.urlTemplate);\n      const clonedTemplate = await ConfluenceApi.cloneTemplateForGeneration(\n        this.settings.urlTemplate\n      );\n\n      if (!clonedTemplate) {\n        throw new Error(\n          \"❌ Không thể clone template! Vui lòng kiểm tra URL template trong Settings.\"\n        );\n      }\n\n      console.log(\"✅ Template cloned successfully:\", clonedTemplate.title);\n      this.updateProgress(1, \"completed\");\n      this.updateProgress(2, \"active\");\n\n      // Step 3: Analyze placeholders with << >>\n      const placeholders = ConfluenceApi.extractPlaceholders(\n        clonedTemplate.originalStorageFormat\n      );\n      console.log(\"🔍 Found placeholders <<>>:\", placeholders);\n\n      if (placeholders.length === 0) {\n        throw new Error(\n          \"⚠️ Không tìm thấy placeholder nào có dạng <<Tên>>. Vui lòng kiểm tra template!\"\n        );\n      }\n\n      this.updateProgress(2, \"completed\");\n      this.updateProgress(3, \"active\");\n\n      // Get instructions if available\n      let instructions = \"\";\n      if (this.settings.instructionUrl) {\n        const instructionPageId = ConfluenceApi.extractPageId(\n          this.settings.instructionUrl\n        );\n        if (instructionPageId) {\n          console.log(\n            \"🔍 Fetching instruction content for pageId:\",\n            instructionPageId\n          );\n          const instructionDoc = await ConfluenceApi.fetchPageContent(\n            instructionPageId\n          );\n          instructions = instructionDoc?.content || \"\";\n        } else {\n          console.warn(\n            \"⚠️ Invalid instruction URL:\",\n            this.settings.instructionUrl\n          );\n        }\n      }\n\n      // Step 4: AI Fill Placeholders (Send request and get job_id)\n      const payload = {\n        ba_content: baDocument.content,\n        template_structure: clonedTemplate.templateStructure,\n        original_storage_format: clonedTemplate.originalStorageFormat,\n        instructions: instructions,\n        additional_prompt: this.settings.customPrompt || \"\",\n        placeholders: placeholders,\n        selectedModel: this.settings.selectedModel,\n        images,\n        additional_notes: additionalNotes,\n      };\n\n      console.log(\"📤 Sending payload for placeholder filling:\", {\n        ba_content_length: payload.ba_content.length,\n        template_structure_length: payload.template_structure.length,\n        original_format_length: payload.original_storage_format.length,\n        placeholders_found: placeholders.length,\n        placeholders_list: placeholders,\n      });\n\n      // Send request and get job_id\n      const jobResponse = await ApiClient.generateDocument(payload);\n      const jobId = jobResponse.data.job_id;\n      if (!jobId) {\n        throw new Error(\n          jobResponse.error || \"Không nhận được job_id từ server!\"\n        );\n      }\n\n      this.currentJobId = jobId;\n\n      // Start polling for result\n      await this.pollGenerationResult(jobId, payload);\n    } catch (error) {\n      console.error(\"❌ Generation error:\", error);\n      this.showNotification(`Lỗi sinh tài liệu: ${error.message}`, \"error\");\n      this.hideProgress();\n    }\n  }\n\n  // These methods are now handled by ConfluenceApi class\n  // Keeping them for backward compatibility if needed\n\n  async pollGenerationResult(jobId, payload) {\n    const maxAttempts = 20; // 10 minutes max (60 * 10 seconds)\n    let attempts = 0;\n\n    const poll = async () => {\n      attempts++;\n\n      try {\n        console.log(\n          `🔄 Polling attempt ${attempts}/${maxAttempts} for job ${jobId}`\n        );\n\n        const statusResult = await ApiClient.checkStatus(jobId);\n        console.log(`statusResult: ${statusResult}`);\n\n        if (!statusResult.success) {\n          throw new Error(\"Lỗi kiểm tra trạng thái job\");\n        }\n\n        const status = statusResult.data.status;\n\n        if (status === \"done\") {\n          console.log(\"✅ Generation completed!\");\n\n          const result = await ApiClient.getResult(jobId);\n          const resultString = JSON.stringify(result, null, 2);\n\n          console.log(`Document generate:\\n${resultString}`);\n          if (result.success) {\n            this.handleGenerationComplete(result.data.result);\n            return;\n          } else {\n            throw new Error(\"Lỗi lấy kết quả sinh tài liệu\");\n          }\n        } else if (status === \"error\") {\n          throw new Error(\"Job sinh tài liệu thất bại trên server\");\n        } else if (attempts >= maxAttempts) {\n          throw new Error(\n            \"⏰ Timeout: Quá trình sinh tài liệu mất quá nhiều thời gian. Vui lòng thử lại.\"\n          );\n        } else {\n          // Update progress message if available\n          if (statusResult.data.progress_message) {\n            console.log(`📝 Progress: ${statusResult.data.progress_message}`);\n          }\n\n          // Continue polling\n          setTimeout(poll, 10000); // Poll every 10 seconds\n        }\n      } catch (error) {\n        console.error(\"❌ Polling error:\", error);\n        this.showNotification(\n          `Lỗi trong quá trình sinh tài liệu: ${error.message}`,\n          \"error\"\n        );\n        this.hideProgress();\n        this.currentJobId = null;\n        throw error;\n      }\n    };\n\n    await poll();\n  }\n\n  handleGenerationComplete(result) {\n    this.updateProgress(3, \"completed\");\n    this.updateProgress(4, \"completed\");\n\n    // Store result for preview\n    this.generatedContent = result;\n    console.log(\"✅ Generated content:\", result);\n    // Switch to preview tab\n    this.switchTab(\"preview\");\n    this.updatePreviewTab(result);\n\n    this.showNotification(\"Sinh tài liệu thành công!\", \"success\");\n    this.hideProgress();\n  }\n\n  updatePreviewTab(content) {\n    const previewTab = document.getElementById(\"previewTab\");\n    previewTab.innerHTML = `\n      <div class=\"ktool-form\">\n        <div style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\">\n          <h3 style=\"margin: 0;\">Preview Tài liệu</h3>\n          <div style=\"display: flex; gap: 12px;\">\n            <button class=\"ktool-btn ktool-btn-primary\" id=\"createPageBtn\">\n              📄 Tạo trang Confluence\n            </button>\n            <button class=\"ktool-btn ktool-btn-secondary\" id=\"downloadBtn\">\n              💾 Tải xuống\n            </button>\n          </div>\n        </div>\n\n        <div id=\"documentPreview\" style=\"border: 1px solid #e9ecef; border-radius: 8px; padding: 20px; background: #f8f9fa; max-height: 400px; overflow-y: auto; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6;\">\n          ${content.full_storage_format || \"<p>Không có nội dung</p>\"}\n        </div>\n      </div>\n    `;\n\n    // Bind preview buttons\n    const createPageBtn = previewTab.querySelector(\"#createPageBtn\");\n    const downloadBtn = previewTab.querySelector(\"#downloadBtn\");\n\n    createPageBtn.addEventListener(\"click\", () => this.handleCreatePage());\n    downloadBtn.addEventListener(\"click\", () => this.handleDownload());\n\n    // Initialize Mermaid diagrams after content is loaded\n    setTimeout(() => {\n      this.initializeMermaid();\n    }, 100);\n  }\n\n  async handleCreatePage() {\n    try {\n      const spaceKey = ConfluenceApi.getCurrentSpaceKey();\n      if (!spaceKey) {\n        throw new Error(\"Không thể xác định space key của trang hiện tại\");\n      }\n\n      const title = `K-Tool Generated Document - ${new Date().toLocaleDateString()}`;\n      const content =\n        this.generatedContent.full_storage_format ||\n        this.generatedContent.content;\n\n      // Extract parent page ID from settings if available\n      let parentId = null;\n      if (this.settings.documentUrl) {\n        parentId = ConfluenceApi.extractPageId(this.settings.documentUrl);\n      }\n\n      const result = await ConfluenceApi.createPage(\n        title,\n        content,\n        spaceKey,\n        parentId\n      );\n\n      this.showNotification(\"Tạo trang Confluence thành công!\", \"success\");\n\n      // Optionally redirect to new page\n      if (result.id) {\n        const newPageUrl = `${window.location.origin}/pages/${result.id}`;\n        if (confirm(\"Bạn có muốn chuyển đến trang vừa tạo không?\")) {\n          window.open(newPageUrl, \"_blank\");\n        }\n      }\n    } catch (error) {\n      console.error(\"❌ Create page error:\", error);\n      this.showNotification(`Lỗi tạo trang: ${error.message}`, \"error\");\n    }\n  }\n\n  handleDownload() {\n    const content =\n      this.generatedContent.full_storage_format ||\n      this.generatedContent.content;\n    const blob = new Blob([content], { type: \"text/html\" });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `ktool-document-${Date.now()}.html`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n\n    this.showNotification(\"Tải xuống thành công!\", \"success\");\n  }\n\n  handleReset() {\n    if (confirm(\"Bạn có chắc muốn reset form?\")) {\n      document.getElementById(\"baDocUrl\").value = window.location.href;\n      document.getElementById(\"additionalNotes\").value = \"\";\n      this.hideProgress();\n      this.switchTab(\"generate\");\n    }\n  }\n\n  showProgress() {\n    const progressSection = document.getElementById(\"progressSection\");\n    const progressSteps = document.getElementById(\"progressSteps\");\n\n    progressSteps.innerHTML = this.progressSteps\n      .map(\n        (step, index) => `\n      <div class=\"ktool-progress-step ${step.status}\" data-step=\"${index}\">\n        <div class=\"ktool-progress-icon\">${index + 1}</div>\n        <span>${step.label}</span>\n      </div>\n    `\n      )\n      .join(\"\");\n\n    progressSection.style.display = \"block\";\n  }\n\n  hideProgress() {\n    const progressSection = document.getElementById(\"progressSection\");\n    progressSection.style.display = \"none\";\n\n    // Reset progress steps\n    this.progressSteps = this.progressSteps.map((step) => ({\n      ...step,\n      status: \"pending\",\n    }));\n  }\n\n  updateProgress(stepIndex, status) {\n    this.progressSteps[stepIndex].status = status;\n\n    const stepElement = document.querySelector(`[data-step=\"${stepIndex}\"]`);\n    if (stepElement) {\n      stepElement.className = `ktool-progress-step ${status}`;\n\n      const icon = stepElement.querySelector(\".ktool-progress-icon\");\n      if (status === \"completed\") {\n        icon.textContent = \"✓\";\n      } else if (status === \"error\") {\n        icon.textContent = \"✗\";\n      } else if (status === \"active\") {\n        icon.innerHTML = '<div class=\"ktool-spinning\">⏳</div>';\n      }\n    }\n  }\n\n  showNotification(message, type = \"info\") {\n    // Create notification element\n    const notification = document.createElement(\"div\");\n    notification.style.cssText = `\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: ${\n        type === \"success\"\n          ? \"#28a745\"\n          : type === \"error\"\n          ? \"#dc3545\"\n          : \"#007bff\"\n      };\n      color: white;\n      padding: 12px 20px;\n      border-radius: 8px;\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n      z-index: 1000002;\n      font-size: 14px;\n      max-width: 300px;\n      word-wrap: break-word;\n      opacity: 0;\n      transform: translateX(100%);\n      transition: all 0.3s;\n    `;\n\n    notification.textContent = message;\n    document.body.appendChild(notification);\n\n    // Animate in\n    setTimeout(() => {\n      notification.style.opacity = \"1\";\n      notification.style.transform = \"translateX(0)\";\n    }, 100);\n\n    // Auto remove\n    setTimeout(() => {\n      notification.style.opacity = \"0\";\n      notification.style.transform = \"translateX(100%)\";\n      setTimeout(() => {\n        if (notification.parentNode) {\n          notification.parentNode.removeChild(notification);\n        }\n      }, 300);\n    }, 5000);\n  }\n\n  async loadMermaidScript() {\n    if (window.mermaid) {\n      console.log(\"⚡ Mermaid already loaded\");\n      return window.mermaid;\n    }\n\n    const res = await fetch(chrome.runtime.getURL(\"lib/mermaid.min.js\"));\n    const text = await res.text();\n    eval(text); // UMD sẽ gắn mermaid vào window\n    console.log(\"✅ Mermaid loaded dynamically\");\n    return window.mermaid;\n  }\n\n  // Initialize Mermaid diagrams\n  async initializeMermaid() {\n    try {\n      // Load Mermaid if not already loaded\n      await this.loadMermaidScript();\n\n      console.log(\"🎨 Initializing Mermaid diagrams...\");\n\n      // Configure Mermaid with proper DOM context\n      window.mermaid.initialize({\n        startOnLoad: false,\n        theme: \"default\",\n        securityLevel: \"loose\",\n        fontFamily: \"Arial, sans-serif\",\n        // Ensure proper DOM context\n        htmlLabels: true,\n        flowchart: {\n          htmlLabels: true,\n        },\n        // Set the document context explicitly\n        deterministicIds: true,\n        deterministicIDSeed: \"mermaid-diagram\",\n      });\n\n      // Ensure mermaid has access to document\n      if (window.mermaid.setConfig) {\n        window.mermaid.setConfig({\n          securityLevel: \"loose\",\n          theme: \"default\",\n        });\n      }\n\n      // Find all mermaid code blocks in the preview\n      const previewDiv = document.getElementById(\"documentPreview\");\n      if (!previewDiv) return;\n\n      // Look for Confluence Mermaid structured macros\n      const mermaidElements = previewDiv.querySelectorAll(\n        'ac\\\\:structured-macro[ac\\\\:name=\"mermaid\"]'\n      );\n\n      mermaidElements.forEach((element, index) => {\n        // Get the code parameter from Confluence structured macro\n        const codeParam = element.querySelector(\n          'ac\\\\:parameter[ac\\\\:name=\"code\"]'\n        );\n        if (!codeParam) {\n          console.warn(\"⚠️ Mermaid macro found but no code parameter\");\n          return;\n        }\n\n        const mermaidCode = (\n          codeParam.textContent || codeParam.innerText\n        ).trim();\n        console.log(\n          \"🔍 Found Confluence Mermaid diagram:\",\n          mermaidCode.substring(0, 50) + \"...\"\n        );\n\n        // Always process Confluence mermaid macros (no need to check syntax)\n        if (mermaidCode) {\n          // Create a new div for the mermaid diagram\n          const mermaidDiv = document.createElement(\"div\");\n          mermaidDiv.className = \"mermaid-diagram\";\n          mermaidDiv.id = `mermaid-${index}`;\n          mermaidDiv.style.cssText =\n            \"margin: 20px 0; text-align: center; background: #f8f9fa; padding: 20px; border-radius: 8px; border: 1px solid #dee2e6;\";\n\n          // Replace the original element\n          element.parentNode.replaceChild(mermaidDiv, element);\n\n          // Render the diagram with proper DOM context\n          try {\n            const diagramId = `mermaid-svg-${index}`;\n\n            // Create a temporary container in the document to ensure proper DOM context\n            const tempContainer = document.createElement(\"div\");\n            tempContainer.style.position = \"absolute\";\n            tempContainer.style.left = \"-9999px\";\n            tempContainer.style.top = \"-9999px\";\n            document.body.appendChild(tempContainer);\n\n            // Modern mermaid.render returns a promise\n            if (\n              window.mermaid.render &&\n              typeof window.mermaid.render === \"function\"\n            ) {\n              try {\n                // Try modern API first\n                const renderResult = window.mermaid.render(\n                  diagramId,\n                  mermaidCode\n                );\n\n                if (renderResult && typeof renderResult.then === \"function\") {\n                  // Promise-based API\n                  renderResult\n                    .then((result) => {\n                      // Clean up temp container\n                      if (document.body.contains(tempContainer)) {\n                        document.body.removeChild(tempContainer);\n                      }\n\n                      // Handle different return formats\n                      let svgCode;\n                      if (typeof result === \"string\") {\n                        svgCode = result;\n                      } else if (result && result.svg) {\n                        svgCode = result.svg;\n                      } else {\n                        svgCode = String(result);\n                      }\n\n                      mermaidDiv.innerHTML = svgCode;\n                      console.log(\n                        \"✅ Mermaid diagram rendered successfully (promise API)\"\n                      );\n                    })\n                    .catch((error) => {\n                      // Clean up temp container\n                      if (document.body.contains(tempContainer)) {\n                        document.body.removeChild(tempContainer);\n                      }\n                      console.error(\n                        \"❌ Mermaid render error (promise API):\",\n                        error\n                      );\n                      this.showMermaidError(mermaidDiv, mermaidCode, error);\n                    });\n                } else {\n                  // Synchronous return or callback-based API\n                  if (typeof renderResult === \"string\") {\n                    // Clean up temp container\n                    if (document.body.contains(tempContainer)) {\n                      document.body.removeChild(tempContainer);\n                    }\n                    mermaidDiv.innerHTML = renderResult;\n                    console.log(\n                      \"✅ Mermaid diagram rendered successfully (sync API)\"\n                    );\n                  } else {\n                    // Try callback-based API\n                    window.mermaid.render(diagramId, mermaidCode, (svgCode) => {\n                      // Clean up temp container\n                      if (document.body.contains(tempContainer)) {\n                        document.body.removeChild(tempContainer);\n                      }\n                      mermaidDiv.innerHTML = svgCode;\n                      console.log(\n                        \"✅ Mermaid diagram rendered successfully (callback API)\"\n                      );\n                    });\n                  }\n                }\n              } catch (renderError) {\n                // Clean up temp container\n                if (document.body.contains(tempContainer)) {\n                  document.body.removeChild(tempContainer);\n                }\n                throw renderError;\n              }\n            } else {\n              throw new Error(\"Mermaid render function not available\");\n            }\n          } catch (error) {\n            console.error(\"❌ Mermaid render error:\", error);\n            this.showMermaidError(mermaidDiv, mermaidCode, error);\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"❌ Failed to initialize Mermaid:\", error);\n    }\n  }\n\n  // Show Mermaid error in a nice format\n  showMermaidError(container, text, error) {\n    container.innerHTML = `\n      <div style=\"color: #dc3545; padding: 15px; background: #f8d7da; border-radius: 8px; border: 1px solid #f5c6cb; font-family: Arial, sans-serif;\">\n        <div style=\"font-weight: bold; margin-bottom: 8px; display: flex; align-items: center;\">\n          <span style=\"margin-right: 8px;\">⚠️</span>\n          Mermaid Render Error\n        </div>\n        <div style=\"font-size: 12px; color: #721c24; margin-bottom: 10px;\">\n          ${error.message || \"Unknown error occurred\"}\n        </div>\n        <details style=\"margin-top: 10px;\">\n          <summary style=\"cursor: pointer; font-size: 12px; color: #495057;\">Show diagram code</summary>\n          <pre style=\"margin: 8px 0 0 0; padding: 8px; background: #fff; border: 1px solid #dee2e6; border-radius: 4px; font-size: 11px; overflow-x: auto; white-space: pre-wrap;\">${text}</pre>\n        </details>\n      </div>\n    `;\n  }\n\n  // Check if text contains Mermaid syntax\n  isMermaidSyntax(text) {\n    const cleanText = text.trim().toLowerCase();\n    const mermaidKeywords = [\n      \"graph\",\n      \"flowchart\",\n      \"sequencediagram\",\n      \"classDiagram\",\n      \"stateDiagram\",\n      \"erDiagram\",\n      \"journey\",\n      \"gantt\",\n      \"pie\",\n      \"gitgraph\",\n      \"mindmap\",\n      \"timeline\",\n      \"quadrantChart\",\n    ];\n\n    return mermaidKeywords.some(\n      (keyword) =>\n        cleanText.startsWith(keyword) ||\n        cleanText.includes(`\\n${keyword}`) ||\n        cleanText.includes(`${keyword} `)\n    );\n  }\n}\n\n// Initialize when DOM is ready\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    new KToolContent();\n  });\n} else {\n  new KToolContent();\n}\n"],"names":["ApiClient","request","url","options","response","fetch","headers","ok","Error","status","statusText","success","data","json","error","console","message","generateDocument","payload","this","API_URLS","GEN_DOC","method","body","JSON","stringify","checkStatus","jobId","GEN_DOC_STATUS","getResult","GEN_DOC_RESULT","editText","EDIT_TEXT","ConfluenceApi","extractPageId","patterns","pattern","match","getCurrentSpaceKey","spaceKeyMeta","document","querySelector","content","spaceKeyElement","dataset","spaceKey","urlMatch","window","location","pathname","fetchPageContent","pageId","_data$body","_data$body2","_data$body3","_data$body4","log","apiUrl","Accept","errorText","text","id","title","hasStorage","storage","value","hasView","view","storageFormat","cloneTemplateForGeneration","_data$body5","_data$body6","trim","extractPageIdFromUrl","originalStorageFormat","length","templateStructure","analysisInfo","extractTemplateStructure","result","originalLength","structureLength","analysis","emptyParagraphs","emptyTableCells","placeholders","structure","forEach","regex","index","matches","matchAll","totalLength","extractPlaceholders","substring","decodedContent","replace","allMatches","testContent","contentIndex","patternIndex","map","m","push","uniquePlaceholders","Set","extractImagesFromHtml","html","images","imgTags","DOMParser","parseFromString","querySelectorAll","img","Array","from","src","getAttribute","filename","base64src","startsWith","Date","now","base64","fname","urlToBase64","alt","undefined","e","warn","getFilenameFromUrl","blob","Promise","resolve","reject","reader","FileReader","onloadend","onerror","readAsDataURL","URL","lastIndexOf","createPage","parentId","type","space","key","representation","ancestors","StorageManager","getSettings","chrome","sync","get","EXTENSION_SETTINGS_KEY","DEFAULT_SETTINGS","saveSettings","settings","set","updateSetting","field","updatedSettings","resetSettings","remove","validateSettings","_settings$apiKey","_settings$urlTemplate","_settings$documentUrl","_settings$databaseUrl","errors","apiKey","urlTemplate","validationResult","validateConfluencePageLink","valid","documentUrl","isValidUrl","databaseUrl","isValid","Object","keys","link","out","u","pageIdParam","searchParams","test","pathParts","split","pagesIndex","indexOf","candidate","rootUrl","EDIT_DIAGRAM","customPrompt","instructionUrl","isEnabled","selectedModel","PROGRESS_STEPS","label","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","KToolContent","constructor","isModalOpen","currentTab","generationJob","progressSteps","init","getElementById","loadSettings","injectUI","bindEvents","root","createElement","appendChild","bubble","createBubble","modal","createModal","className","innerHTML","addEventListener","openModal","showNotification","overlay","createGenerateTab","createPreviewTab","createSettingsTab","href","closeModal","target","tab","switchTab","handleGenerate","handleReset","runtime","onMessage","addListener","sender","sendResponse","action","updateBubbleState","ctrlKey","metaKey","preventDefault","classList","add","setTimeout","firstInput","focus","tabName","toggle","tooltip","baDocUrl","additionalNotes","showProgress","updateProgress","baDocument","clonedTemplate","instructions","instructionPageId","instructionDoc","ba_content","template_structure","original_storage_format","additional_prompt","additional_notes","ba_content_length","template_structure_length","original_format_length","placeholders_found","placeholders_list","jobResponse","job_id","currentJobId","pollGenerationResult","hideProgress","attempts","poll","async","statusResult","resultString","handleGenerationComplete","progress_message","generatedContent","updatePreviewTab","previewTab","full_storage_format","createPageBtn","downloadBtn","handleCreatePage","handleDownload","initializeMermaid","toLocaleDateString","newPageUrl","origin","confirm","open","Blob","createObjectURL","a","download","click","removeChild","revokeObjectURL","progressSection","step","join","style","display","stepIndex","stepElement","icon","textContent","notification","cssText","opacity","transform","parentNode","loadMermaidScript","mermaid","res","getURL","eval","initialize","startOnLoad","theme","securityLevel","fontFamily","htmlLabels","flowchart","deterministicIds","deterministicIDSeed","setConfig","previewDiv","element","codeParam","mermaidCode","innerText","mermaidDiv","replaceChild","diagramId","tempContainer","position","left","top","render","renderResult","then","svgCode","contains","svg","String","catch","showMermaidError","renderError","container","isMermaidSyntax","cleanText","toLowerCase","some","keyword","includes","readyState"],"sourceRoot":""}